{
    "main_simulation.py": {
        "torch": {
            "device_11": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "possible_values": []
                }
            },
            "zeros_90": {
                "variable": {
                    "value": "simulation_loader",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "possible_values": []
                },
                "out": {
                    "value": "simulation_length",
                    "possible_values": [
                        [
                            "int(args.T / args.step)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_33": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "load_34": {
                "variable": {
                    "value": "pretrained_dict",
                    "possible_values": []
                },
                "f": {
                    "value": "model_save_name",
                    "possible_values": [
                        [
                            "args.arch + '_' + args.dataset + '_state_dict.pth'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "load_36": {
                "variable": {
                    "value": "pretrained_dict",
                    "possible_values": []
                },
                "f": {
                    "value": "model_save_name",
                    "possible_values": [
                        [
                            "args.arch + '_' + args.dataset + '_state_dict.pth'",
                            "BinOp"
                        ]
                    ]
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "possible_values": []
                }
            },
            "is_available_11": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "no_grad_62": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "no_grad_92": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "device_36": {
                "type": {
                    "value": "cpu",
                    "possible_values": []
                }
            }
        }
    },
    "main_train.py": {
        "torch": {
            "device_10": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "possible_values": []
                }
            },
            "DataLoader_58": {
                "variable": {
                    "value": "train_loader",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "possible_values": [
                        [
                            "torchvision.datasets.MNIST(root=data_path, train=True, download=True, transform=trans_train)",
                            "Call"
                        ],
                        [
                            "torchvision.datasets.CIFAR10(root=data_path, train=True, download=True, transform=trans_train)",
                            "Call"
                        ],
                        [
                            "torchvision.datasets.CIFAR100(root=data_path, train=True, download=True, transform=trans_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "possible_values": [
                        [
                            "args.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "DataLoader_59": {
                "variable": {
                    "value": "test_loader",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "possible_values": [
                        [
                            "torchvision.datasets.MNIST(root=data_path, train=False, download=True, transform=transforms.ToTensor())",
                            "Call"
                        ],
                        [
                            "torchvision.datasets.CIFAR10(root=data_path, train=False, download=True, transform=trans_test)",
                            "Call"
                        ],
                        [
                            "torchvision.datasets.CIFAR100(root=data_path, train=False, download=True, transform=trans_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "possible_values": [
                        [
                            "args.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "DataParallel_92": {
                "variable": {
                    "value": "ann",
                    "possible_values": []
                },
                "module": {
                    "value": "ann",
                    "possible_values": [
                        [
                            "VGG16(relu_th)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(ann)",
                            "Call"
                        ],
                        [
                            "ResNet20(relu_th)",
                            "Call"
                        ],
                        [
                            "CIFARNet(relu_th)",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_95": {
                "variable": {
                    "value": "criterion",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "SGD_97": {
                "variable": {
                    "value": "optimizer",
                    "possible_values": []
                },
                "params": {
                    "value": "ann.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "possible_values": [
                        [
                            "args.learning_rate",
                            "Attribute"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "possible_values": []
                }
            },
            "is_available_10": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "no_grad_123": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "save_144": {
                "obj": {
                    "value": "ann.module.state_dict()",
                    "possible_values": []
                },
                "f": {
                    "value": "model_save_name",
                    "possible_values": [
                        [
                            "args.arch + '_' + args.dataset + '_state_dict.pth'",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "models/CifarNet.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "variable": {
                    "value": "self.conv1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "AvgPool2d_20": {
                "variable": {
                    "value": "self.pool1",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv3",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "AvgPool2d_22": {
                "variable": {
                    "value": "self.pool2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.conv4",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "variable": {
                    "value": "self.conv5",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.fc1",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 8 * 8",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "variable": {
                    "value": "self.fc2",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "possible_values": []
                }
            },
            "AvgPool2d_71": {
                "variable": {
                    "value": "self.pool1",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_73": {
                "variable": {
                    "value": "self.pool2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "is_available_12": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.fc3",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "possible_values": []
                }
            },
            "Linear_30": {
                "variable": {
                    "value": "self.fc3",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "possible_values": []
                }
            },
            "zeros_84": {
                "variable": {
                    "value": "out_spike_sum",
                    "possible_values": []
                },
                "*size": {
                    "value": "input.size(0)",
                    "possible_values": []
                },
                "out": {
                    "value": "10",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_83": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            }
        }
    },
    "models/ResNet20.py": {
        "torch": {
            "device_13": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.identity",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "AvgPool2d_59": {
                "variable": {
                    "value": "self.pre_pool",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Sequential_112": {
                "variable": {
                    "value": "self.identity",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Sequential_199": {
                "variable": {
                    "value": "self.residual",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, planes, kernel_size=3, stride=stride, padding=1, bias=False)",
                    "possible_values": []
                }
            },
            "Sequential_206": {
                "variable": {
                    "value": "self.identity",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Sequential_227": {
                "variable": {
                    "value": "self.pre_process",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 64, kernel_size=3, stride=1, padding=1, bias=False)",
                    "possible_values": []
                }
            },
            "Sequential_246": {
                "variable": {
                    "value": "self.classifier",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(512 * 2 * 2, labels, bias=False)",
                    "possible_values": []
                }
            },
            "is_available_13": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Sequential_79": {
                "*args": {
                    "value": "*layers",
                    "possible_values": []
                }
            },
            "Sequential_157": {
                "*args": {
                    "value": "*layers",
                    "possible_values": []
                }
            },
            "zeros_174": {
                "variable": {
                    "value": "out_spike_sum",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.size(0)",
                    "possible_values": []
                },
                "out": {
                    "value": "10",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_208": {
                "variable": {
                    "value": "self.identity",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "possible_values": []
                }
            },
            "Sequential_275": {
                "*args": {
                    "value": "*layers",
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Sequential_149": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "no_grad_173": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Conv2d_200": {
                "in_channels": {
                    "value": "in_planes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "strides",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Dropout_203": {
                "p": {
                    "value": "dropout",
                    "possible_values": [
                        [
                            "0.2",
                            "MethodArgument"
                        ],
                        [
                            "0.2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_204": {
                "in_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Conv2d_228": {
                "in_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Dropout_231": {
                "p": {
                    "value": "self.dropout",
                    "possible_values": []
                }
            },
            "Conv2d_232": {
                "in_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Dropout_235": {
                "p": {
                    "value": "self.dropout",
                    "possible_values": []
                }
            },
            "Conv2d_236": {
                "in_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "AvgPool2d_239": {
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Linear_247": {
                "in_features": {
                    "value": "512 * 2 * 2",
                    "possible_values": []
                },
                "out_features": {
                    "value": "labels",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Sequential_268": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Conv2d_209": {
                "in_channels": {
                    "value": "in_planes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "strides",
                            "Name"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            }
        }
    },
    "models/VGG16.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv1_1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv1_2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "possible_values": []
                }
            },
            "AvgPool2d_23": {
                "variable": {
                    "value": "self.maxpool1",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "variable": {
                    "value": "self.conv2_1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "variable": {
                    "value": "self.conv2_2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "possible_values": []
                }
            },
            "AvgPool2d_29": {
                "variable": {
                    "value": "self.maxpool2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv3_1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "variable": {
                    "value": "self.conv3_2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "variable": {
                    "value": "self.conv3_3",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "AvgPool2d_36": {
                "variable": {
                    "value": "self.maxpool3",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "variable": {
                    "value": "self.conv4_1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.conv4_2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.conv4_3",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "AvgPool2d_43": {
                "variable": {
                    "value": "self.maxpool4",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Conv2d_45": {
                "variable": {
                    "value": "self.conv5_1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.conv5_2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "variable": {
                    "value": "self.conv5_3",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.fc1",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 * 2",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.fc2",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "possible_values": []
                }
            },
            "AvgPool2d_140": {
                "variable": {
                    "value": "self.pool1",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_144": {
                "variable": {
                    "value": "self.pool2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_149": {
                "variable": {
                    "value": "self.pool3",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_154": {
                "variable": {
                    "value": "self.pool4",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_210": {
                "variable": {
                    "value": "self.pool1",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_214": {
                "variable": {
                    "value": "self.pool2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_219": {
                "variable": {
                    "value": "self.pool3",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_224": {
                "variable": {
                    "value": "self.pool4",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "is_available_12": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "variable": {
                    "value": "self.fc3",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "possible_values": []
                }
            },
            "Linear_56": {
                "variable": {
                    "value": "self.fc3",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "possible_values": []
                }
            },
            "no_grad_255": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            }
        }
    },
    "models/cnn2.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_21": {
                "variable": {
                    "value": "self.pool1",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "variable": {
                    "value": "self.conv2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "6",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_24": {
                "variable": {
                    "value": "self.pool2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.fc",
                    "possible_values": []
                },
                "in_features": {
                    "value": "6 * 7 * 7",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "possible_values": []
                }
            },
            "AvgPool2d_69": {
                "variable": {
                    "value": "self.pool1",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "AvgPool2d_71": {
                "variable": {
                    "value": "self.pool2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "zeros_76": {
                "variable": {
                    "value": "out_spike_num",
                    "possible_values": []
                },
                "*size": {
                    "value": "input.size(0)",
                    "possible_values": []
                },
                "out": {
                    "value": "10",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_12": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            }
        }
    },
    "models/new_relu.py": {
        "torch": {
            "rand_51": {
                "*size": {
                    "value": "3",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "possible_values": []
                }
            }
        }
    },
    "models/spiking_layer.py": {
        "torch": {
            "floor_55": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "possible_values": [
                        [
                            "self.ops(input) + self.shift",
                            "BinOp"
                        ],
                        [
                            "self.ops(x) + self.shift",
                            "BinOp"
                        ],
                        [
                            "x / (self.thresh / self.T)",
                            "BinOp"
                        ],
                        [
                            "torch.floor(x)",
                            "Call"
                        ],
                        [
                            "torch.clamp(x, 0, self.T)",
                            "Call"
                        ],
                        [
                            "x * (self.thresh / self.T)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "clamp_56": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "possible_values": [
                        [
                            "self.ops(input) + self.shift",
                            "BinOp"
                        ],
                        [
                            "self.ops(x) + self.shift",
                            "BinOp"
                        ],
                        [
                            "x / (self.thresh / self.T)",
                            "BinOp"
                        ],
                        [
                            "torch.floor(x)",
                            "Call"
                        ],
                        [
                            "torch.clamp(x, 0, self.T)",
                            "Call"
                        ],
                        [
                            "x * (self.thresh / self.T)",
                            "BinOp"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "possible_values": []
                },
                "max": {
                    "value": "self.T",
                    "possible_values": []
                }
            }
        }
    }
}