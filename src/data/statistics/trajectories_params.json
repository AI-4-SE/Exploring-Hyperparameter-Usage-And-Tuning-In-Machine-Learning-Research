{
    "trajectories/conv_vae.py": {
        "torch": {
            "DataLoader_155": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "mnist",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.MNIST('./', download=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_165": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_167": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "vae.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_32": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1, out_channels=16, kernel_size=4, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=latent_size, out_channels=48, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self._enc_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "mu_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "800",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "mu_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "800",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self._enc_log_sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "mu_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "800",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "mu_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "800",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "exp_123": {
                "variable": {
                    "value": "sigma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_sigma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._enc_log_sigma(h_enc)",
                            "Call"
                        ],
                        [
                            "log_sigma",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_124": {
                "variable": {
                    "value": "std_z",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.random.normal(0, 1, size=sigma.size())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_143": {
                "input": {
                    "value": "mean_sq + stddev_sq - torch.log(stddev_sq) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_35": {
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_40": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "num_features": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_46": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.encoder_output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "num_features": {
                    "value": "self.encoder_output_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "in_channels": {
                    "value": "latent_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ],
                        [
                            "latent_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_76": {
                "num_features": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_78": {
                "in_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_82": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_83": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_84": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_89": {
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_90": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_91": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "D_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "D_out",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_143": {
                "input": {
                    "value": "stddev_sq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_stddev * z_stddev",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "trajectories/datasets.py": {
        "torch": {}
    },
    "trajectories/pixel_cnn.py": {
        "torch": {
            "Embedding_37": {
                "variable": {
                    "value": "self.class_cond_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "Method Argument"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "2 * dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.vert_stack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dim",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "vkernel_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(kernel // 2 + 1, kernel)",
                            "Tuple"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "vpadding_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(kernel // 2, kernel // 2)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Conv2d_51": {
                "variable": {
                    "value": "self.vert_to_horiz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "2 * dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2 * dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_52": {
                "variable": {
                    "value": "self.horiz_stack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dim",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "hkernel_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1, kernel // 2 + 1)",
                            "Tuple"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "hpadding_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(0, kernel // 2)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Conv2d_54": {
                "variable": {
                    "value": "self.horiz_resid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dim",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dim",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_112": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_118": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "self.output_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.dim, 512, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_161": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, shape[0], shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "param.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.spatial_cond_stack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "cond_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "cond_kernel_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(kernel, kernel)",
                            "Tuple"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "cond_padding_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(kernel // 2, kernel // 2)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Embedding_116": {
                "variable": {
                    "value": "self.spatial_cond_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_25": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.chunk(2, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.zeros((batch_size, shape[0], shape[1]), dtype=torch.int64, device=param.device)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sigmoid_25": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.chunk(2, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_128": {
                "in_channels": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_129": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_130": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_177": {
                "input": {
                    "value": "logits[:, :, i, j]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "trajectories/pixel_vae.py": {
        "torch": {
            "DataLoader_107": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "mnist",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.MNIST('./', download=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_117": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_119": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "vae.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "D_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "D_in",
                            "Method Argument"
                        ],
                        [
                            "D_in",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.linear4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.dout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_38": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_39": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_40": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_48": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "D_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "D_out",
                            "Method Argument"
                        ],
                        [
                            "D_out",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_53": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_54": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self._enc_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.encoder.dout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.decoder.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self._enc_log_sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.encoder.dout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.decoder.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_74": {
                "variable": {
                    "value": "sigma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_sigma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._enc_log_sigma(h_enc)",
                            "Call"
                        ],
                        [
                            "log_sigma",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_75": {
                "variable": {
                    "value": "std_z",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.random.normal(0, 1, size=sigma.size())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_41": {
                "input": {
                    "value": "self.linear4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_55": {
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_95": {
                "input": {
                    "value": "mean_sq + stddev_sq - torch.log(stddev_sq) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_95": {
                "input": {
                    "value": "stddev_sq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_stddev * z_stddev",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "trajectories/plot_conv_vae.py": {
        "torch": {}
    },
    "trajectories/plot_rnn.py": {
        "torch": {
            "manual_seed_33": {
                "seed": {
                    "value": "139",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_294": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "rnn.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                }
            },
            "stack_109": {
                "variable": {
                    "value": "gt_rnn_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "gt_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[seq[0]]",
                            "List"
                        ],
                        [
                            "gt_outputs + [seq[i + 1]]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_110": {
                "variable": {
                    "value": "rnn_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "rnn_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[seq[0]]",
                            "List"
                        ],
                        [
                            "rnn_outputs + [output]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_322": {
                "variable": {
                    "value": "test_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "EpisodicDiffFroggerDataset(test_data_path, transform=args.transform)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_325": {
                "variable": {
                    "value": "test_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "EpisodicFroggerDataset(test_data_path, transform=args.transform)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_278": {
                "variable": {
                    "value": "vae_model_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.vae_model_loadpath",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_301": {
                "variable": {
                    "value": "rnn_model_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.rnn_model_loadpath",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "trajectories/plot_vqvae.py": {
        "torch": {}
    },
    "trajectories/policy_model.py": {
        "torch": {
            "Linear_21": {
                "variable": {
                    "value": "self.layer_one",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.layer_two",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_23": {
                "variable": {
                    "value": "self.layer_three",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.action_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "variable": {
                    "value": "self.action_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_space",
                    "type": "variable",
                    "possible_values": [
                        [
                            "action_space",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.value_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_29": {
                "variable": {
                    "value": "self.value_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_32": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer_one(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_33": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer_two(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_34": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer_three(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_36": {
                "variable": {
                    "value": "ax",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.action_layer(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_37": {
                "variable": {
                    "value": "vx",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.value_layer(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_41": {
                "input": {
                    "value": "action_scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.action_head(ax)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "trajectories/rnn.py": {
        "torch": {
            "manual_seed_8": {
                "seed": {
                    "value": "139",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTMCell_15": {
                "variable": {
                    "value": "self.lstm1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "hidden_size": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LSTMCell_16": {
                "variable": {
                    "value": "self.lstm2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "hidden_size": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "normal_17": {
                "mean": {
                    "value": "self.lstm1.weight_ih",
                    "type": "Attribute",
                    "possible_values": []
                },
                "std": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "generator": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            },
            "normal_18": {
                "mean": {
                    "value": "self.lstm1.weight_hh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "std": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "generator": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            },
            "normal_19": {
                "mean": {
                    "value": "self.lstm2.weight_ih",
                    "type": "Attribute",
                    "possible_values": []
                },
                "std": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "generator": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            },
            "normal_20": {
                "mean": {
                    "value": "self.lstm2.weight_hh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "std": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "generator": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "trajectories/road.py": {
        "torch": {}
    },
    "trajectories/train_conv_vae.py": {
        "torch": {}
    },
    "trajectories/train_pixel_cnn.py": {
        "torch": {}
    },
    "trajectories/train_pixel_vae.py": {
        "torch": {}
    },
    "trajectories/train_rnn.py": {
        "torch": {
            "manual_seed_36": {
                "seed": {
                    "value": "139",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_217": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "rnn.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                }
            },
            "stack_74": {
                "variable": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "outputs + [output]",
                            "BinOp"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_131": {
                "variable": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "outputs + [output]",
                            "BinOp"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_137": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': e, 'train_loss': train_loss, 'test_loss': test_loss, 'state_dict': rnn.state_dict(), 'optimizer': optim.state_dict(), 'total_passes': total_passes}",
                            "Dict"
                        ],
                        [
                            "state",
                            "Method Argument"
                        ]
                    ]
                },
                "f": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": [
                        [
                            "open(filename, 'w')",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_259": {
                "variable": {
                    "value": "test_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "EpisodicDiffFroggerDataset(test_data_path, transform=args.transform)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_260": {
                "variable": {
                    "value": "train_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "EpisodicDiffFroggerDataset(train_data_path, transform=args.transform, limit=args.num_train_limit)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_262": {
                "variable": {
                    "value": "test_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "EpisodicFroggerDataset(test_data_path, transform=args.transform)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_263": {
                "variable": {
                    "value": "train_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "EpisodicFroggerDataset(train_data_path, transform=args.transform, limit=args.num_train_limit)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "stack_69": {
                "variable": {
                    "value": "local_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs[st:en]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_117": {
                "variable": {
                    "value": "local_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs[st:en]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_227": {
                "variable": {
                    "value": "rnn_model_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.rnn_model_loadpath",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "trajectories/train_vae.py": {
        "torch": {}
    },
    "trajectories/train_vqvae.py": {
        "torch": {}
    },
    "trajectories/utils.py": {
        "torch": {}
    },
    "trajectories/vae.py": {
        "torch": {
            "DataLoader_107": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "mnist",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.MNIST('./', download=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_117": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_119": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "vae.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "D_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "D_in",
                            "Method Argument"
                        ],
                        [
                            "D_in",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.linear4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.dout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_38": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_39": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_40": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_48": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "D_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "D_out",
                            "Method Argument"
                        ],
                        [
                            "D_out",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_53": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_54": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self._enc_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.encoder.dout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.decoder.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self._enc_log_sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.encoder.dout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.decoder.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_74": {
                "variable": {
                    "value": "sigma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_sigma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._enc_log_sigma(h_enc)",
                            "Call"
                        ],
                        [
                            "log_sigma",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_75": {
                "variable": {
                    "value": "std_z",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.random.normal(0, 1, size=sigma.size())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_41": {
                "input": {
                    "value": "self.linear4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_55": {
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_95": {
                "input": {
                    "value": "mean_sq + stddev_sq - torch.log(stddev_sq) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_95": {
                "input": {
                    "value": "stddev_sq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_stddev * z_stddev",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "trajectories/vqvae.py": {
        "torch": {
            "Sequential_29": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=data_channels_size, out_channels=16, kernel_size=4, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Embedding_55": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "num_clusters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "encoder_output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_60": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=encoder_output_size, out_channels=42, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pow_103": {
                "variable": {
                    "value": "dists",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "measure",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_e_x_transposed.unsqueeze(4) - emb[None, None, None]",
                            "BinOp"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_103": {
                "variable": {
                    "value": "dists",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "data_channels_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_34": {
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_40": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_46": {
                "num_features": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_47": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "in_channels": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "encoder_output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_52": {
                "num_features": {
                    "value": "encoder_output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_61": {
                "in_channels": {
                    "value": "encoder_output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "num_features": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_70": {
                "in_channels": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_74": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_75": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_76": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_80": {
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_81": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_82": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_mixture",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2 * self.nr_logistic_mix * data_channels_size + self.nr_logistic_mix",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_58": {
                "*size": {
                    "value": "num_clusters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "encoder_output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "trajectories/vqvae_vae.py": {
        "torch": {}
    }
}