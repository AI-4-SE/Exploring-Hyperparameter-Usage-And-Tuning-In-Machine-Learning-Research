{
    "pylightcurve_torch/_constants.py": {
        "torch": {
            "tensor_14": {
                "variable": {
                    "value": "gauss0",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.0, -0.5773502691896257], [1.0, 0.5773502691896257]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_19": {
                "variable": {
                    "value": "gauss10",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.2955242247147529, -0.1488743389816312], [0.2955242247147529, 0.1488743389816312], [0.2692667193099963, -0.4333953941292472], [0.2692667193099963, 0.4333953941292472], [0.219086362515982, -0.6794095682990244], [0.219086362515982, 0.6794095682990244], [0.1494513491505806, -0.8650633666889845], [0.1494513491505806, 0.8650633666889845], [0.0666713443086881, -0.9739065285171717], [0.0666713443086881, 0.9739065285171717]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_32": {
                "variable": {
                    "value": "gauss20",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1527533871307258, -0.0765265211334973], [0.1527533871307258, 0.0765265211334973], [0.1491729864726037, -0.2277858511416451], [0.1491729864726037, 0.2277858511416451], [0.142096109318382, -0.3737060887154195], [0.142096109318382, 0.3737060887154195], [0.1316886384491766, -0.5108670019508271], [0.1316886384491766, 0.5108670019508271], [0.1181945319615184, -0.636053680726515], [0.1181945319615184, 0.636053680726515], [0.1019301198172404, -0.7463319064601508], [0.1019301198172404, 0.7463319064601508], [0.0832767415767048, -0.8391169718222188], [0.0832767415767048, 0.8391169718222188], [0.0626720483341091, -0.912234428251326], [0.0626720483341091, 0.912234428251326], [0.0406014298003869, -0.9639719272779138], [0.0406014298003869, 0.9639719272779138], [0.0176140071391521, -0.9931285991850949], [0.0176140071391521, 0.9931285991850949]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_55": {
                "variable": {
                    "value": "gauss30",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1028526528935588, -0.0514718425553177], [0.1028526528935588, 0.0514718425553177], [0.1017623897484055, -0.1538699136085835], [0.1017623897484055, 0.1538699136085835], [0.0995934205867953, -0.2546369261678899], [0.0995934205867953, 0.2546369261678899], [0.0963687371746443, -0.3527047255308781], [0.0963687371746443, 0.3527047255308781], [0.0921225222377861, -0.4470337695380892], [0.0921225222377861, 0.4470337695380892], [0.086899787201083, -0.5366241481420199], [0.086899787201083, 0.5366241481420199], [0.0807558952294202, -0.6205261829892429], [0.0807558952294202, 0.6205261829892429], [0.0737559747377052, -0.6978504947933158], [0.0737559747377052, 0.6978504947933158], [0.0659742298821805, -0.7677774321048262], [0.0659742298821805, 0.7677774321048262], [0.0574931562176191, -0.8295657623827684], [0.0574931562176191, 0.8295657623827684], [0.0484026728305941, -0.8825605357920527], [0.0484026728305941, 0.8825605357920527], [0.0387991925696271, -0.9262000474292743], [0.0387991925696271, 0.9262000474292743], [0.0287847078833234, -0.9600218649683075], [0.0287847078833234, 0.9600218649683075], [0.018466468311091, -0.9836681232797472], [0.018466468311091, 0.9836681232797472], [0.0079681924961666, -0.9968934840746495], [0.0079681924961666, 0.9968934840746495]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_88": {
                "variable": {
                    "value": "gauss40",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0775059479784248, -0.0387724175060508], [0.0775059479784248, 0.0387724175060508], [0.077039818164248, -0.1160840706752552], [0.077039818164248, 0.1160840706752552], [0.0761103619006262, -0.1926975807013711], [0.0761103619006262, 0.1926975807013711], [0.0747231690579683, -0.2681521850072537], [0.0747231690579683, 0.2681521850072537], [0.0728865823958041, -0.3419940908257585], [0.0728865823958041, 0.3419940908257585], [0.0706116473912868, -0.413779204371605], [0.0706116473912868, 0.413779204371605], [0.0679120458152339, -0.4830758016861787], [0.0679120458152339, 0.4830758016861787], [0.064804013456601, -0.5494671250951282], [0.064804013456601, 0.5494671250951282], [0.0613062424929289, -0.6125538896679802], [0.0613062424929289, 0.6125538896679802], [0.0574397690993916, -0.6719566846141796], [0.0574397690993916, 0.6719566846141796], [0.0532278469839368, -0.7273182551899271], [0.0532278469839368, 0.7273182551899271], [0.0486958076350722, -0.7783056514265194], [0.0486958076350722, 0.7783056514265194], [0.0438709081856733, -0.8246122308333117], [0.0438709081856733, 0.8246122308333117], [0.038782167974472, -0.8659595032122595], [0.038782167974472, 0.8659595032122595], [0.0334601952825478, -0.9020988069688743], [0.0334601952825478, 0.9020988069688743], [0.0279370069800234, -0.9328128082786765], [0.0279370069800234, 0.9328128082786765], [0.022245849194167, -0.9579168192137917], [0.022245849194167, 0.9579168192137917], [0.0164210583819079, -0.9772599499837743], [0.0164210583819079, 0.9772599499837743], [0.0104982845311528, -0.990726238699457], [0.0104982845311528, 0.990726238699457], [0.0045212770985332, -0.9982377097105593], [0.0045212770985332, 0.9982377097105593]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_131": {
                "variable": {
                    "value": "gauss50",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0621766166553473, -0.0310983383271889], [0.0621766166553473, 0.0310983383271889], [0.0619360674206832, -0.0931747015600861], [0.0619360674206832, 0.0931747015600861], [0.0614558995903167, -0.1548905899981459], [0.0614558995903167, 0.1548905899981459], [0.0607379708417702, -0.2160072368760418], [0.0607379708417702, 0.2160072368760418], [0.0597850587042655, -0.276288193779532], [0.0597850587042655, 0.276288193779532], [0.0586008498132224, -0.3355002454194373], [0.0586008498132224, 0.3355002454194373], [0.0571899256477284, -0.3934143118975651], [0.0571899256477284, 0.3934143118975651], [0.0555577448062125, -0.4498063349740388], [0.0555577448062125, 0.4498063349740388], [0.0537106218889962, -0.5044581449074642], [0.0537106218889962, 0.5044581449074642], [0.0516557030695811, -0.5571583045146501], [0.0516557030695811, 0.5571583045146501], [0.0494009384494663, -0.6077029271849502], [0.0494009384494663, 0.6077029271849502], [0.0469550513039484, -0.6558964656854394], [0.0469550513039484, 0.6558964656854394], [0.0443275043388033, -0.7015524687068222], [0.0443275043388033, 0.7015524687068222], [0.0415284630901477, -0.7444943022260685], [0.0415284630901477, 0.7444943022260685], [0.0385687566125877, -0.7845558329003993], [0.0385687566125877, 0.7845558329003993], [0.0354598356151462, -0.821582070859336], [0.0354598356151462, 0.821582070859336], [0.032213728223578, -0.8554297694299461], [0.032213728223578, 0.8554297694299461], [0.0288429935805352, -0.8859679795236131], [0.0288429935805352, 0.8859679795236131], [0.0253606735700124, -0.9130785566557919], [0.0253606735700124, 0.9130785566557919], [0.0217802431701248, -0.936656618944878], [0.0217802431701248, 0.936656618944878], [0.0181155607134894, -0.9566109552428079], [0.0181155607134894, 0.9566109552428079], [0.0143808227614856, -0.972864385106692], [0.0143808227614856, 0.972864385106692], [0.010590548383651, -0.9853540840480058], [0.010590548383651, 0.9853540840480058], [0.0067597991957454, -0.9940319694320907], [0.0067597991957454, 0.9940319694320907], [0.0029086225531551, -0.998866404420071], [0.0029086225531551, 0.998866404420071]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_184": {
                "variable": {
                    "value": "gauss60",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0519078776312206, -0.0259597723012478], [0.0519078776312206, 0.0259597723012478], [0.0517679431749102, -0.0778093339495366], [0.0517679431749102, 0.0778093339495366], [0.0514884515009809, -0.129449135396945], [0.0514884515009809, 0.129449135396945], [0.0510701560698556, -0.1807399648734254], [0.0510701560698556, 0.1807399648734254], [0.0505141845325094, -0.2315435513760293], [0.0505141845325094, 0.2315435513760293], [0.0498220356905502, -0.2817229374232617], [0.0498220356905502, 0.2817229374232617], [0.0489955754557568, -0.3311428482684482], [0.0489955754557568, 0.3311428482684482], [0.0480370318199712, -0.379670056576798], [0.0480370318199712, 0.379670056576798], [0.0469489888489122, -0.4271737415830784], [0.0469489888489122, 0.4271737415830784], [0.0457343797161145, -0.4735258417617071], [0.0457343797161145, 0.4735258417617071], [0.0443964787957871, -0.5186014000585697], [0.0443964787957871, 0.5186014000585697], [0.0429388928359356, -0.5622789007539445], [0.0429388928359356, 0.5622789007539445], [0.0413655512355848, -0.6044405970485104], [0.0413655512355848, 0.6044405970485104], [0.0396806954523808, -0.644972828489477], [0.0396806954523808, 0.644972828489477], [0.0378888675692434, -0.6837663273813555], [0.0378888675692434, 0.6837663273813555], [0.0359948980510845, -0.7207165133557304], [0.0359948980510845, 0.7207165133557304], [0.0340038927249464, -0.7557237753065856], [0.0340038927249464, 0.7557237753065856], [0.0319212190192963, -0.7886937399322641], [0.0319212190192963, 0.7886937399322641], [0.0297524915007889, -0.8195375261621458], [0.0297524915007889, 0.8195375261621458], [0.0275035567499248, -0.8481719847859296], [0.0275035567499248, 0.8481719847859296], [0.0251804776215212, -0.8745199226468983], [0.0251804776215212, 0.8745199226468983], [0.0227895169439978, -0.898510310810046], [0.0227895169439978, 0.898510310810046], [0.0203371207294573, -0.9200784761776275], [0.0203371207294573, 0.9200784761776275], [0.0178299010142077, -0.9391662761164232], [0.0178299010142077, 0.9391662761164232], [0.0152746185967848, -0.9557222558399961], [0.0152746185967848, 0.9557222558399961], [0.012678166476816, -0.9697017887650528], [0.012678166476816, 0.9697017887650528], [0.010047557182288, -0.9810672017525982], [0.010047557182288, 0.9810672017525982], [0.0073899311633455, -0.9897878952222218], [0.0073899311633455, 0.9897878952222218], [0.0047127299269536, -0.9958405251188381], [0.0047127299269536, 0.9958405251188381], [0.0020268119688738, -0.9992101232274361], [0.0020268119688738, 0.9992101232274361]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_247": {
                "input": {
                    "value": "gauss20",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor([[0.1527533871307258, -0.0765265211334973], [0.1527533871307258, 0.0765265211334973], [0.1491729864726037, -0.2277858511416451], [0.1491729864726037, 0.2277858511416451], [0.142096109318382, -0.3737060887154195], [0.142096109318382, 0.3737060887154195], [0.1316886384491766, -0.5108670019508271], [0.1316886384491766, 0.5108670019508271], [0.1181945319615184, -0.636053680726515], [0.1181945319615184, 0.636053680726515], [0.1019301198172404, -0.7463319064601508], [0.1019301198172404, 0.7463319064601508], [0.0832767415767048, -0.8391169718222188], [0.0832767415767048, 0.8391169718222188], [0.0626720483341091, -0.912234428251326], [0.0626720483341091, 0.912234428251326], [0.0406014298003869, -0.9639719272779138], [0.0406014298003869, 0.9639719272779138], [0.0176140071391521, -0.9931285991850949], [0.0176140071391521, 0.9931285991850949]])",
                            "Call"
                        ]
                    ]
                },
                "dim0": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_248": {
                "input": {
                    "value": "gauss50",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor([[0.0621766166553473, -0.0310983383271889], [0.0621766166553473, 0.0310983383271889], [0.0619360674206832, -0.0931747015600861], [0.0619360674206832, 0.0931747015600861], [0.0614558995903167, -0.1548905899981459], [0.0614558995903167, 0.1548905899981459], [0.0607379708417702, -0.2160072368760418], [0.0607379708417702, 0.2160072368760418], [0.0597850587042655, -0.276288193779532], [0.0597850587042655, 0.276288193779532], [0.0586008498132224, -0.3355002454194373], [0.0586008498132224, 0.3355002454194373], [0.0571899256477284, -0.3934143118975651], [0.0571899256477284, 0.3934143118975651], [0.0555577448062125, -0.4498063349740388], [0.0555577448062125, 0.4498063349740388], [0.0537106218889962, -0.5044581449074642], [0.0537106218889962, 0.5044581449074642], [0.0516557030695811, -0.5571583045146501], [0.0516557030695811, 0.5571583045146501], [0.0494009384494663, -0.6077029271849502], [0.0494009384494663, 0.6077029271849502], [0.0469550513039484, -0.6558964656854394], [0.0469550513039484, 0.6558964656854394], [0.0443275043388033, -0.7015524687068222], [0.0443275043388033, 0.7015524687068222], [0.0415284630901477, -0.7444943022260685], [0.0415284630901477, 0.7444943022260685], [0.0385687566125877, -0.7845558329003993], [0.0385687566125877, 0.7845558329003993], [0.0354598356151462, -0.821582070859336], [0.0354598356151462, 0.821582070859336], [0.032213728223578, -0.8554297694299461], [0.032213728223578, 0.8554297694299461], [0.0288429935805352, -0.8859679795236131], [0.0288429935805352, 0.8859679795236131], [0.0253606735700124, -0.9130785566557919], [0.0253606735700124, 0.9130785566557919], [0.0217802431701248, -0.936656618944878], [0.0217802431701248, 0.936656618944878], [0.0181155607134894, -0.9566109552428079], [0.0181155607134894, 0.9566109552428079], [0.0143808227614856, -0.972864385106692], [0.0143808227614856, 0.972864385106692], [0.010590548383651, -0.9853540840480058], [0.010590548383651, 0.9853540840480058], [0.0067597991957454, -0.9940319694320907], [0.0067597991957454, 0.9940319694320907], [0.0029086225531551, -0.998866404420071], [0.0029086225531551, 0.998866404420071]])",
                            "Call"
                        ]
                    ]
                },
                "dim0": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_249": {
                "input": {
                    "value": "gauss60",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor([[0.0519078776312206, -0.0259597723012478], [0.0519078776312206, 0.0259597723012478], [0.0517679431749102, -0.0778093339495366], [0.0517679431749102, 0.0778093339495366], [0.0514884515009809, -0.129449135396945], [0.0514884515009809, 0.129449135396945], [0.0510701560698556, -0.1807399648734254], [0.0510701560698556, 0.1807399648734254], [0.0505141845325094, -0.2315435513760293], [0.0505141845325094, 0.2315435513760293], [0.0498220356905502, -0.2817229374232617], [0.0498220356905502, 0.2817229374232617], [0.0489955754557568, -0.3311428482684482], [0.0489955754557568, 0.3311428482684482], [0.0480370318199712, -0.379670056576798], [0.0480370318199712, 0.379670056576798], [0.0469489888489122, -0.4271737415830784], [0.0469489888489122, 0.4271737415830784], [0.0457343797161145, -0.4735258417617071], [0.0457343797161145, 0.4735258417617071], [0.0443964787957871, -0.5186014000585697], [0.0443964787957871, 0.5186014000585697], [0.0429388928359356, -0.5622789007539445], [0.0429388928359356, 0.5622789007539445], [0.0413655512355848, -0.6044405970485104], [0.0413655512355848, 0.6044405970485104], [0.0396806954523808, -0.644972828489477], [0.0396806954523808, 0.644972828489477], [0.0378888675692434, -0.6837663273813555], [0.0378888675692434, 0.6837663273813555], [0.0359948980510845, -0.7207165133557304], [0.0359948980510845, 0.7207165133557304], [0.0340038927249464, -0.7557237753065856], [0.0340038927249464, 0.7557237753065856], [0.0319212190192963, -0.7886937399322641], [0.0319212190192963, 0.7886937399322641], [0.0297524915007889, -0.8195375261621458], [0.0297524915007889, 0.8195375261621458], [0.0275035567499248, -0.8481719847859296], [0.0275035567499248, 0.8481719847859296], [0.0251804776215212, -0.8745199226468983], [0.0251804776215212, 0.8745199226468983], [0.0227895169439978, -0.898510310810046], [0.0227895169439978, 0.898510310810046], [0.0203371207294573, -0.9200784761776275], [0.0203371207294573, 0.9200784761776275], [0.0178299010142077, -0.9391662761164232], [0.0178299010142077, 0.9391662761164232], [0.0152746185967848, -0.9557222558399961], [0.0152746185967848, 0.9557222558399961], [0.012678166476816, -0.9697017887650528], [0.012678166476816, 0.9697017887650528], [0.010047557182288, -0.9810672017525982], [0.010047557182288, 0.9810672017525982], [0.0073899311633455, -0.9897878952222218], [0.0073899311633455, 0.9897878952222218], [0.0047127299269536, -0.9958405251188381], [0.0047127299269536, 0.9958405251188381], [0.0020268119688738, -0.9992101232274361], [0.0020268119688738, 0.9992101232274361]])",
                            "Call"
                        ]
                    ]
                },
                "dim0": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "pylightcurve_torch/functional.py": {
        "torch": {
            "where_42": {
                "variable": {
                    "value": "aa",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "periastron < PI / 2.0",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "PI / 2.0 - periastron",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "5.0 * PI / 2.0 - periastron",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cos_68": {
                "variable": {
                    "value": "aa",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "vv + periastron",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sin_69": {
                "variable": {
                    "value": "bb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "vv + periastron",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "asin_86": {
                "variable": {
                    "value": "df",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sqrt((s_ps ** 2 - b_pt ** 2) / (aa ** 2 * ro_pt ** 2 - b_pt ** 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_102": {
                "variable": {
                    "value": "mu24",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "mu44",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - r * r",
                            "BinOp"
                        ],
                        [
                            "1.0 - rsq",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_103": {
                "variable": {
                    "value": "mu14",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "mu24",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sqrt(mu44)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(mu44)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_115": {
                "variable": {
                    "value": "mu24",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "mu44",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - r * r",
                            "BinOp"
                        ],
                        [
                            "1.0 - rsq",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_116": {
                "variable": {
                    "value": "mu14",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "mu24",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sqrt(mu44)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(mu44)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_151": {
                "variable": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "musq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ],
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ],
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_173": {
                "variable": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "musq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ],
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ],
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_180": {
                "variable": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "1.0 - rsq",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_224": {
                "variable": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww1) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww1) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_226": {
                "variable": {
                    "value": "rr2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww2) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww2)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr2, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww2) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww2)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr2, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "min_227": {
                "variable": {
                    "value": "w1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "min_228": {
                "variable": {
                    "value": "r1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww1) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww1) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_229": {
                "variable": {
                    "value": "w2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "max_230": {
                "variable": {
                    "value": "r2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww1) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww1) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_242": {
                "variable": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww1) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww1) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                },
                "max": {
                    "value": "1 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_244": {
                "variable": {
                    "value": "rr2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww2) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww2)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr2, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww2) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww2)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr2, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                },
                "max": {
                    "value": "1 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "min_245": {
                "variable": {
                    "value": "w1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "min_246": {
                "variable": {
                    "value": "r1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww1) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww1) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_247": {
                "variable": {
                    "value": "w2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "max_248": {
                "variable": {
                    "value": "r2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rr1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z * torch.cos(ww1) + torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1.0 - EPS)",
                            "Call"
                        ],
                        [
                            "z * torch.cos(ww1) - torch.sqrt(torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS))",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rr1, EPS, 1 - EPS)",
                            "Call"
                        ]
                    ]
                }
            },
            "acos_304": {
                "variable": {
                    "value": "ph",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.clamp((1.0 - rp_over_rs ** 2 + zsq) / (2.0 * z_over_rs), min=-(1 - EPS), max=1 - EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "asin_308": {
                "variable": {
                    "value": "theta_2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.min(rp_over_rs / z_over_rs, torch.ones_like(z_over_rs))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "where_374": {
                "variable": {
                    "value": "projected_distance",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "x < 0.0",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "torch.ones_like(x, device=x.device, dtype=dtype) * MAX_RATIO_RADII",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "torch.sqrt(y ** 2 + z ** 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "where_385": {
                "variable": {
                    "value": "projected_distance",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "x < 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "torch.ones_like(x, dtype=dtype, device=x.device) * MAX_RATIO_RADII",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "torch.sqrt(y ** 2 + z ** 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "atan_43": {
                "input": {
                    "value": "torch.sqrt((1.0 - eccentricity) / (1.0 + eccentricity)) * torch.tan(aa / 2.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "atan_65": {
                "input": {
                    "value": "torch.sqrt((1.0 + eccentricity) / (1.0 - eccentricity)) * torch.tan(u1 / 2.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sin_70": {
                "input": {
                    "value": "inclination",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inclination * PI / 180.0",
                            "BinOp"
                        ]
                    ]
                }
            },
            "cos_82": {
                "input": {
                    "value": "ii",
                    "type": "Name",
                    "possible_values": [
                        [
                            "range(MAX_ITERATIONS)",
                            "Call"
                        ],
                        [
                            "inclination * PI / 180.0",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_86": {
                "input": {
                    "value": "(s_ps ** 2 - b_pt ** 2) / (aa ** 2 * ro_pt ** 2 - b_pt ** 2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "acos_118": {
                "input": {
                    "value": "torch.clamp((-rprs ** 2 + z * z + rsq) / (2.0 * z * r), min=-1.0 + EPS, max=1.0 - EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "acos_138": {
                "input": {
                    "value": "torch.clamp((-rprs ** 2 + z ** 2 + rsq) / (2.0 * z * r), min=-1 + EPS, max=1.0 - EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_158": {
                "input": {
                    "value": "1.0 - rsq",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "acos_160": {
                "input": {
                    "value": "torch.clamp((-rprs ** 2 + z ** 2 + rsq) / (2.0 * z * r), min=-1.0 + EPS, max=1.0 - EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "acos_182": {
                "input": {
                    "value": "torch.clamp((-rprs ** 2 + z ** 2 + rsq) / (2.0 * z * r), min=-1.0 + EPS, max=1.0 - EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_216": {
                "input": {
                    "value": "ww2 - ww1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_223": {
                "input": {
                    "value": "torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_225": {
                "input": {
                    "value": "torch.clamp(rprs ** 2 - (z * torch.sin(ww2)) ** 2, EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_241": {
                "input": {
                    "value": "torch.clamp(rprs ** 2 - (z * torch.sin(ww1)) ** 2, EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_243": {
                "input": {
                    "value": "torch.clamp(rprs ** 2 - (z * torch.sin(ww2)) ** 2, EPS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_259": {
                "input": {
                    "value": "gauss_table[precision][0][:, None].to(device=x1.device) * f(x1[None, :] * gauss_table[precision][1][:, None].to(device=x1.device) + x2[None, :], *f_args)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_304": {
                "input": {
                    "value": "(1.0 - rp_over_rs ** 2 + zsq) / (2.0 * z_over_rs)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "-(1 - EPS)",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "min_308": {
                "input": {
                    "value": "rp_over_rs / z_over_rs",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_375": {
                "input": {
                    "value": "y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_386": {
                "input": {
                    "value": "y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_67": {
                "input": {
                    "value": "vv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2.0 * torch.atan(torch.sqrt((1.0 + eccentricity) / (1.0 - eccentricity)) * torch.tan(u1 / 2.0))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "clamp_118": {
                "input": {
                    "value": "(-rprs ** 2 + z * z + rsq) / (2.0 * z * r)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "-1.0 + EPS",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_138": {
                "input": {
                    "value": "(-rprs ** 2 + z ** 2 + rsq) / (2.0 * z * r)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "-1 + EPS",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_160": {
                "input": {
                    "value": "(-rprs ** 2 + z ** 2 + rsq) / (2.0 * z * r)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "-1.0 + EPS",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_182": {
                "input": {
                    "value": "(-rprs ** 2 + z ** 2 + rsq) / (2.0 * z * r)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "-1.0 + EPS",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 - EPS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cos_223": {
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clamp_223": {
                "input": {
                    "value": "rprs ** 2 - (z * torch.sin(ww1)) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cos_225": {
                "input": {
                    "value": "ww2",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clamp_225": {
                "input": {
                    "value": "rprs ** 2 - (z * torch.sin(ww2)) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cos_241": {
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clamp_241": {
                "input": {
                    "value": "rprs ** 2 - (z * torch.sin(ww1)) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cos_243": {
                "input": {
                    "value": "ww2",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clamp_243": {
                "input": {
                    "value": "rprs ** 2 - (z * torch.sin(ww2)) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "EPS",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "ones_like_308": {
                "input": {
                    "value": "z_over_rs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "z_over_rs.repeat(n_pars, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_374": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "rr * bb * torch.sin(inclination)",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "torch.float64",
                            "MethodArgument"
                        ],
                        [
                            "torch.float64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ones_like_385": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "rr * bb * torch.sin(inclination)",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "torch.float64",
                            "MethodArgument"
                        ],
                        [
                            "torch.float64",
                            "MethodArgument"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_43": {
                "input": {
                    "value": "(1.0 - eccentricity) / (1.0 + eccentricity)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tan_43": {
                "input": {
                    "value": "aa / 2.0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_65": {
                "input": {
                    "value": "(1.0 + eccentricity) / (1.0 - eccentricity)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tan_65": {
                "input": {
                    "value": "u1 / 2.0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cos_67": {
                "input": {
                    "value": "vv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2.0 * torch.atan(torch.sqrt((1.0 + eccentricity) / (1.0 - eccentricity)) * torch.tan(u1 / 2.0))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "cos_71": {
                "input": {
                    "value": "inclination",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inclination * PI / 180.0",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sin_72": {
                "input": {
                    "value": "ww",
                    "type": "Name",
                    "possible_values": [
                        [
                            "time_array.new_zeros(n_pars, 1, requires_grad=False, dtype=dtype)",
                            "Call"
                        ],
                        [
                            "ww * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "periastron * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cos_72": {
                "input": {
                    "value": "ww",
                    "type": "Name",
                    "possible_values": [
                        [
                            "time_array.new_zeros(n_pars, 1, requires_grad=False, dtype=dtype)",
                            "Call"
                        ],
                        [
                            "ww * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "periastron * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sin_81": {
                "input": {
                    "value": "ww",
                    "type": "Name",
                    "possible_values": [
                        [
                            "time_array.new_zeros(n_pars, 1, requires_grad=False, dtype=dtype)",
                            "Call"
                        ],
                        [
                            "ww * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "periastron * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sqrt_87": {
                "input": {
                    "value": "1.0 - ee ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sin_47": {
                "input": {
                    "value": "bb",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2 * torch.atan(torch.sqrt((1.0 - eccentricity) / (1.0 + eccentricity)) * torch.tan(aa / 2.0))",
                            "BinOp"
                        ],
                        [
                            "torch.sin(vv + periastron)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_54": {
                "input": {
                    "value": "u1 - u0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sin_71": {
                "input": {
                    "value": "ww",
                    "type": "Name",
                    "possible_values": [
                        [
                            "time_array.new_zeros(n_pars, 1, requires_grad=False, dtype=dtype)",
                            "Call"
                        ],
                        [
                            "ww * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "periastron * PI / 180.0",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sqrt_174": {
                "input": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sqrt(musq)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(musq)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(1.0 - rsq)",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_53": {
                "input": {
                    "value": "u0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "m",
                            "Name"
                        ],
                        [
                            "u1.clone()",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_60": {
                "input": {
                    "value": "u0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "m",
                            "Name"
                        ],
                        [
                            "u1.clone()",
                            "Call"
                        ]
                    ]
                }
            },
            "isnan_63": {
                "input": {
                    "value": "u0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "m",
                            "Name"
                        ],
                        [
                            "u1.clone()",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sqrt_131": {
                "input": {
                    "value": "musq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ],
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ],
                        [
                            "1.0 - r ** 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_137": {
                "input": {
                    "value": "1.0 - rsq",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_181": {
                "input": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sqrt(musq)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(musq)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(1.0 - rsq)",
                            "Call"
                        ]
                    ]
                }
            },
            "sin_53": {
                "input": {
                    "value": "u0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "m",
                            "Name"
                        ],
                        [
                            "u1.clone()",
                            "Call"
                        ]
                    ]
                }
            },
            "sin_60": {
                "input": {
                    "value": "u0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "m",
                            "Name"
                        ],
                        [
                            "u1.clone()",
                            "Call"
                        ]
                    ]
                }
            },
            "sin_223": {
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "sin_225": {
                "input": {
                    "value": "ww2",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "sin_241": {
                "input": {
                    "value": "ww1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "sin_243": {
                "input": {
                    "value": "ww2",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "abs_62": {
                "input": {
                    "value": "u1 - u0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pylightcurve_torch/nn.py": {
        "torch": {
            "sqrt_417": {
                "variable": {
                    "value": "proj_dist",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_default_dtype_87": {
                "variable": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_193": {
                "variable": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._prepare_value(name, value)",
                            "Call"
                        ],
                        [
                            "torch.tensor(data)",
                            "Call"
                        ],
                        [
                            "data[None, :]",
                            "Subscript"
                        ],
                        [
                            "value.data.to(self.dtype)",
                            "Call"
                        ],
                        [
                            "value.to(self.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(value, dtype=self.dtype, requires_grad=False)",
                            "Call"
                        ],
                        [
                            "data[None, :]",
                            "Subscript"
                        ],
                        [
                            "data.view(-1, dim)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Parameter_201": {
                "data": {
                    "value": "data.detach().to(self.dtype)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_476": {
                "*size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "v.shape[0]",
                            "Subscript"
                        ],
                        [
                            "max(batch_size, proj_dist.shape[0])",
                            "Call"
                        ],
                        [
                            "max(batch_size, proj_dist.shape[0])",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "d['rp'].dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "d['rp'].device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_557": {
                "variable": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "value",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_156": {
                "data": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._prepare_value(name, value)",
                            "Call"
                        ],
                        [
                            "torch.tensor(data)",
                            "Call"
                        ],
                        [
                            "data[None, :]",
                            "Subscript"
                        ],
                        [
                            "value.data.to(self.dtype)",
                            "Call"
                        ],
                        [
                            "value.to(self.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(value, dtype=self.dtype, requires_grad=False)",
                            "Call"
                        ],
                        [
                            "data[None, :]",
                            "Subscript"
                        ],
                        [
                            "data.view(-1, dim)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_421": {
                "condition": {
                    "value": "x < 0.0",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "torch.ones_like(x, dtype=self.dtype) * MAX_RATIO_RADII",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "proj_dist",
                    "type": "Name",
                    "possible_values": [
                        [
                            "property(get_proj_dist)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(y ** 2 + z ** 2)",
                            "Call"
                        ],
                        [
                            "self.get_proj_dist(**kwargs, orbit_type='primary')",
                            "Call"
                        ],
                        [
                            "self.get_proj_dist(**kwargs, orbit_type='secondary') / d['rp']",
                            "BinOp"
                        ]
                    ]
                }
            },
            "where_423": {
                "condition": {
                    "value": "x > 0.0",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "torch.ones_like(x, dtype=self.dtype) * MAX_RATIO_RADII",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "proj_dist",
                    "type": "Name",
                    "possible_values": [
                        [
                            "property(get_proj_dist)",
                            "Call"
                        ],
                        [
                            "torch.sqrt(y ** 2 + z ** 2)",
                            "Call"
                        ],
                        [
                            "self.get_proj_dist(**kwargs, orbit_type='primary')",
                            "Call"
                        ],
                        [
                            "self.get_proj_dist(**kwargs, orbit_type='secondary') / d['rp']",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ones_like_421": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_like_423": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/performance.py": {
        "torch": {
            "is_available_213": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "arange_147": {
                "start": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_168": {
                "start": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "T",
                    "type": "Name",
                    "possible_values": [
                        [
                            "200",
                            "Constant"
                        ],
                        [
                            "dur_vect",
                            "Name"
                        ]
                    ]
                }
            },
            "linspace_50": {
                "start": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "T",
                    "type": "Name",
                    "possible_values": [
                        [
                            "200",
                            "Constant"
                        ],
                        [
                            "dur_vect",
                            "Name"
                        ]
                    ]
                }
            },
            "linspace_105": {
                "start": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "1000",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_plc_compat.py": {
        "torch": {
            "linspace_16": {
                "start": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "1000",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_42": {
                "data": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_transit_module.py": {
        "torch": {
            "tensor_34": {
                "variable": {
                    "value": "time_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "time_array",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.linspace(0, 10, 1000)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isclose_109": {
                "input": {
                    "value": "flux_1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tm()",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "flux_2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tm(**d)",
                            "Call"
                        ]
                    ]
                }
            },
            "all_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "linspace_145": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_169": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_193": {
                "variable": {
                    "value": "value",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "pars[param]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_195": {
                "variable": {
                    "value": "value",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "pars[PLC_ALIASES[param]]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_237": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "linspace_165": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_170": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "150",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_25": {
                "data": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "tensor_26": {
                "data": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "tensor_27": {
                "data": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "isnan_104": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "any_104": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isnan_187": {
                "input": {
                    "value": "g",
                    "type": "Name",
                    "possible_values": [
                        [
                            "getattr(tm, param).grad",
                            "Attribute"
                        ],
                        [
                            "getattr(tm, param).grad",
                            "Attribute"
                        ]
                    ]
                }
            },
            "isnan_202": {
                "input": {
                    "value": "g",
                    "type": "Name",
                    "possible_values": [
                        [
                            "getattr(tm, param).grad",
                            "Attribute"
                        ],
                        [
                            "getattr(tm, param).grad",
                            "Attribute"
                        ]
                    ]
                }
            },
            "linspace_148": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_153": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_159": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_152": {
                "data": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "tensor_157": {
                "data": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    }
}