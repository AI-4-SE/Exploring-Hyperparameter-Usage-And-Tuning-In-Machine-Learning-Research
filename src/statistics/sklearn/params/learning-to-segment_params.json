{
    "__experiments_readstats_pick_best_images_.py": {},
    "experiments_readstats.py": {},
    "experiments_readstats_cfs_mtx.py": {},
    "experiments_readstats_pick_best_images.py": {},
    "preprocess/mk_traindata_bach_centered.py": {
        "KMeans_170": {
            "variable": {
                "value": "kmeans",
                "possible_values": []
            },
            "n_clusters": {
                "value": "num_clusters",
                "possible_values": [
                    "np.ceil(label_patch.size / (args.tile_w * args.tile_h) + 1).astype(np.int)"
                ]
            },
            "random_state": {
                "value": "0",
                "possible_values": []
            }
        }
    },
    "preprocess/mk_traindata_sunny_no_tumors.py": {
        "KMeans_176": {
            "variable": {
                "value": "kmeans",
                "possible_values": []
            },
            "n_clusters": {
                "value": "num_clusters",
                "possible_values": [
                    "np.ceil(np.prod(label_patch.size) / (args.tile_w * args.tile_h) + 1).astype(np.int)"
                ]
            },
            "random_state": {
                "value": "0",
                "possible_values": []
            }
        }
    },
    "preprocess/mk_traindata_sunnybrook_centered.py": {
        "KMeans_138": {
            "variable": {
                "value": "kmeans",
                "possible_values": []
            },
            "n_clusters": {
                "value": "num_clusters",
                "possible_values": [
                    "np.ceil(np.prod(label_patch.size) / (args.tile_w * args.tile_h) + 1).astype(np.int)"
                ]
            },
            "random_state": {
                "value": "0",
                "possible_values": []
            }
        }
    },
    "utils/dataset.py": {
        "Dataset_15": {},
        "Dataset_onlyseg_120": {},
        "Dataset_wsis_234": {},
        "Dataset_wsi_261": {},
        "Dataset_cls_365": {}
    },
    "utils/eval.py": {},
    "utils/evaluation.py": {},
    "utils/preprocessing.py": {
        "NormalizeInverse_35": {},
        "DotDict_50": {}
    },
    "utils/regiontools.py": {}
}