{
    "cases/credit_scoring/credit_scoring_problem.py": {},
    "cases/credit_scoring/credit_scoring_problem_multiobj.py": {},
    "cases/industrial/multivariate_forecasting.py": {},
    "cases/industrial/processing.py": {},
    "cases/industrial/univariate_forecasting_simple.py": {},
    "cases/multi_modal_genre_prediction.py": {},
    "cases/multi_target_levels_forecasting.py": {},
    "cases/river_levels_prediction/river_level_case_composer.py": {
        "Pipeline_156": {
            "steps": "node_final"
        }
    },
    "cases/river_levels_prediction/river_level_case_manual.py": {
        "Pipeline_86": {
            "steps": "node_final"
        }
    },
    "cases/spam_detection.py": {
        "Pipeline_16": {
            "steps": "model_node"
        }
    },
    "cases/time_series_gapfilling_case.py": {
        "Pipeline_84": {
            "steps": "node_final"
        },
        "Pipeline_93": {
            "steps": "node_ridge"
        }
    },
    "examples/advanced/automl/h2o_example.py": {
        "Pipeline_18": {
            "steps": "node"
        },
        "Pipeline_24": {
            "steps": "node"
        },
        "Pipeline_33": {
            "steps": "node_root"
        },
        "Pipeline_44": {}
    },
    "examples/advanced/automl/pipeline_from_automl.py": {
        "Pipeline_36": {
            "steps": "node_rf"
        }
    },
    "examples/advanced/automl/tpot_example.py": {
        "Pipeline_18": {
            "steps": "node"
        },
        "Pipeline_25": {
            "steps": "node"
        },
        "Pipeline_35": {
            "steps": "node_root"
        },
        "Pipeline_56": {},
        "Pipeline_88": {},
        "Pipeline_115": {}
    },
    "examples/advanced/automl/tpot_vs_fedot.py": {
        "Pipeline_41": {
            "steps": "node_rf"
        }
    },
    "examples/advanced/decompose/classification_refinement_example.py": {
        "Pipeline_24": {
            "steps": "node_rf"
        },
        "Pipeline_34": {
            "steps": "node_rf"
        }
    },
    "examples/advanced/decompose/refinement_forecast_example.py": {
        "Pipeline_31": {
            "steps": "node_dtreg"
        },
        "Pipeline_32": {
            "steps": "node_polyfit"
        },
        "Pipeline_37": {
            "steps": "final_node"
        },
        "Pipeline_52": {
            "steps": "node_dtreg"
        },
        "Pipeline_53": {
            "steps": "node_lasso"
        },
        "Pipeline_58": {
            "steps": "final_node"
        },
        "Pipeline_72": {
            "steps": "final_node"
        }
    },
    "examples/advanced/decompose/regression_refinement_example.py": {
        "Pipeline_27": {
            "steps": "final_node"
        },
        "Pipeline_41": {
            "steps": "final_node"
        }
    },
    "examples/advanced/gpu_example.py": {
        "Pipeline_35": {
            "steps": "svc_node_with_custom_params"
        }
    },
    "examples/advanced/multi_modal_pipeline.py": {
        "Pipeline_115": {
            "steps": "logit_node"
        }
    },
    "examples/advanced/multitask_classification_regression.py": {
        "Pipeline_20": {
            "steps": "final_node"
        }
    },
    "examples/advanced/time_series_forecasting/composing_pipelines.py": {},
    "examples/advanced/time_series_forecasting/custom_model_tuning.py": {
        "Ridge_32": {
            "alpha": "alpha"
        },
        "Pipeline_56": {
            "steps": "node_final"
        },
        "Pipeline_76": {
            "steps": "node_final"
        }
    },
    "examples/advanced/time_series_forecasting/exogenous.py": {
        "Pipeline_102": {
            "steps": "node_final"
        },
        "Pipeline_116": {
            "steps": "node_final"
        }
    },
    "examples/advanced/time_series_forecasting/multi_ts_arctic_forecasting.py": {
        "Pipeline_46": {
            "steps": "node_final"
        }
    },
    "examples/advanced/time_series_forecasting/nemo.py": {
        "Pipeline_60": {
            "steps": "node_final"
        },
        "Pipeline_74": {
            "steps": "node_final"
        },
        "Pipeline_83": {
            "steps": "node_final"
        }
    },
    "examples/advanced/time_series_forecasting/nemo_multiple.py": {
        "Pipeline_59": {
            "steps": "node_final"
        },
        "Pipeline_74": {
            "steps": "node_final"
        },
        "Pipeline_94": {
            "steps": "node_final"
        },
        "Pipeline_105": {
            "steps": "node_final"
        },
        "Pipeline_116": {
            "steps": "node_final"
        },
        "Pipeline_135": {
            "steps": "node_final"
        }
    },
    "examples/advanced/time_series_forecasting/sparse_lagged_tuning.py": {},
    "examples/simple/classification/classification_with_tuning.py": {},
    "examples/simple/classification/image_classification_problem.py": {},
    "examples/simple/classification/multiclass_prediction.py": {},
    "examples/simple/classification/resample_example.py": {},
    "examples/simple/pipeline_tune.py": {},
    "examples/simple/regression/regression_with_tuning.py": {},
    "examples/simple/time_series_forecasting/clstm.py": {
        "Pipeline_60": {
            "steps": "node_root"
        },
        "Pipeline_72": {},
        "Pipeline_82": {}
    },
    "examples/simple/time_series_forecasting/tuning_pipelines.py": {},
    "fedot/api/api_utils/api_composer.py": {},
    "fedot/api/api_utils/metrics.py": {},
    "fedot/core/composer/metrics.py": {},
    "fedot/core/data/data_split.py": {},
    "fedot/core/operations/evaluation/clustering.py": {},
    "fedot/core/operations/evaluation/evaluation_interfaces.py": {},
    "fedot/core/operations/evaluation/operation_implementations/data_operations/categorical_encoders.py": {
        "LabelEncoder_174": {}
    },
    "fedot/core/operations/evaluation/operation_implementations/data_operations/decompose.py": {
        "OneHotEncoder_212": {}
    },
    "fedot/core/operations/evaluation/operation_implementations/data_operations/sklearn_filters.py": {
        "RANSACRegressor_109": {
            "base_estimator": "self.inner_model"
        },
        "RANSACRegressor_111": {
            "base_estimator": "self.inner_model"
        },
        "RANSACRegressor_127": {
            "base_estimator": "self.inner_model"
        },
        "RANSACRegressor_129": {
            "base_estimator": "self.inner_model"
        },
        "StandardScaler_105": {
            "with_mean": "False"
        }
    },
    "fedot/core/operations/evaluation/operation_implementations/data_operations/sklearn_imbalanced_class.py": {},
    "fedot/core/operations/evaluation/operation_implementations/data_operations/sklearn_selectors.py": {
        "LinearRegression_123": {
            "normalize": "True"
        },
        "RFE_127": {
            "estimator": "self.inner_model"
        },
        "RFE_132": {
            "estimator": "self.inner_model"
        },
        "RFE_149": {
            "estimator": "self.inner_model"
        },
        "RFE_154": {
            "estimator": "self.inner_model"
        },
        "RFE_171": {
            "estimator": "self.inner_model"
        },
        "RFE_176": {
            "estimator": "self.inner_model"
        },
        "RFE_193": {
            "estimator": "self.inner_model"
        },
        "RFE_198": {
            "estimator": "self.inner_model"
        }
    },
    "fedot/core/operations/evaluation/operation_implementations/data_operations/sklearn_transformations.py": {
        "PCA_113": {},
        "PolynomialFeatures_162": {
            "include_bias": "False"
        },
        "PolynomialFeatures_167": {
            "include_bias": "False"
        }
    },
    "fedot/core/operations/evaluation/operation_implementations/data_operations/ts_transformations.py": {
        "TruncatedSVD_748": {
            "n_components": "n_components",
            "n_iter": "5",
            "random_state": "42"
        }
    },
    "fedot/core/operations/evaluation/operation_implementations/models/discriminant_analysis.py": {},
    "fedot/core/operations/evaluation/operation_implementations/models/keras.py": {
        "OneHotEncoder_94": {
            "params": "default"
        }
    },
    "fedot/core/operations/evaluation/operation_implementations/models/knn.py": {},
    "fedot/core/operations/evaluation/operation_implementations/models/svc.py": {
        "OneVsRestClassifier_21": {
            "estimator": "self.inner_model"
        },
        "SVC_19": {}
    },
    "fedot/core/operations/evaluation/operation_implementations/models/ts_implementations/clstm.py": {},
    "fedot/core/operations/evaluation/text.py": {},
    "fedot/core/pipelines/tuning/tuner_interface.py": {},
    "fedot/core/utils.py": {},
    "fedot/core/validation/split.py": {
        "KFold_89": {
            "n_splits": "folds"
        }
    },
    "fedot/explainability/surrogate_explainer.py": {
        "Pipeline_100": {
            "steps": "surrogate_node"
        }
    },
    "fedot/preprocessing/categorical.py": {
        "LabelEncoder_103": {}
    },
    "fedot/preprocessing/preprocessing.py": {
        "LabelEncoder_408": {}
    },
    "fedot/sensitivity/operations_hp_sensitivity/one_operation_sensitivity.py": {},
    "fedot/utilities/define_metric_by_task.py": {},
    "fedot/utilities/synth_dataset_generator.py": {},
    "test/integration/quality/test_synthetic_tasks.py": {
        "Pipeline_22": {
            "steps": "final"
        }
    },
    "test/integration/real_applications/test_examples.py": {},
    "test/integration/real_applications/test_real_cases.py": {
        "Pipeline_75": {
            "steps": "node_final"
        }
    },
    "test/unit/api/test_main_api.py": {
        "Pipeline_167": {
            "steps": "SecondaryNode('linear', nodes_from=[node_lagged])"
        },
        "Pipeline_297": {
            "nodes": "PrimaryNode('logit')"
        },
        "Pipeline_310": {
            "nodes": "PrimaryNode('logit')"
        }
    },
    "test/unit/composer/test_composer.py": {
        "Pipeline_122": {}
    },
    "test/unit/composer/test_quality_metrics.py": {
        "Pipeline_62": {
            "steps": "final"
        },
        "Pipeline_99": {
            "steps": "PrimaryNode('linear')"
        }
    },
    "test/unit/data/test_data.py": {
        "Pipeline_202": {
            "steps": "PrimaryNode('\u0441ut')"
        },
        "Pipeline_225": {
            "steps": "PrimaryNode('\u0441ut')"
        }
    },
    "test/unit/explainability/test_pipeline_explanation.py": {},
    "test/unit/models/test_atomized_model.py": {
        "Pipeline_29": {},
        "Pipeline_54": {},
        "Pipeline_72": {},
        "Pipeline_118": {},
        "Pipeline_136": {},
        "Pipeline_176": {}
    },
    "test/unit/models/test_model.py": {
        "Pipeline_231": {
            "nodes": "[first_node, second_node]"
        },
        "Pipeline_244": {
            "nodes": "[first_node, second_node]"
        },
        "Pipeline_261": {
            "nodes": "[first_node, second_node]"
        },
        "Pipeline_217": {
            "steps": "node"
        }
    },
    "test/unit/models/test_split_train_test.py": {
        "Pipeline_23": {
            "steps": "PrimaryNode('logit')"
        }
    },
    "test/unit/models/test_strategy.py": {},
    "test/unit/pipelines/test_node.py": {
        "LogisticRegression_49": {
            "C": "10.0",
            "random_state": "1",
            "solver": "liblinear",
            "max_iter": "10000",
            "verbose": "0"
        }
    },
    "test/unit/pipelines/test_node_cache.py": {
        "Pipeline_87": {},
        "Pipeline_122": {},
        "Pipeline_203": {
            "steps": "other_pipeline.root_node.nodes_from[0]"
        },
        "Pipeline_229": {
            "steps": "other_pipeline.root_node.nodes_from[0]"
        }
    },
    "test/unit/pipelines/test_pipeline.py": {
        "Pipeline_99": {},
        "Pipeline_128": {},
        "Pipeline_150": {},
        "Pipeline_184": {},
        "Pipeline_195": {},
        "Pipeline_235": {
            "steps": "final"
        },
        "Pipeline_250": {
            "steps": "PrimaryNode('linear')"
        },
        "Pipeline_269": {},
        "Pipeline_287": {},
        "Pipeline_299": {},
        "Pipeline_317": {},
        "Pipeline_333": {
            "steps": "final"
        },
        "Pipeline_417": {
            "steps": "final"
        },
        "Pipeline_431": {
            "steps": "PrimaryNode('ridge')"
        },
        "Pipeline_440": {
            "steps": "PrimaryNode('logit')"
        },
        "Pipeline_457": {
            "steps": "ridge_node"
        }
    },
    "test/unit/pipelines/test_pipeline_ts_wrappers.py": {
        "Pipeline_47": {
            "steps": "node_final"
        },
        "Pipeline_56": {
            "steps": "node_final"
        },
        "Pipeline_60": {
            "steps": "node_final"
        },
        "Pipeline_62": {
            "steps": "PrimaryNode('arima')"
        }
    },
    "test/unit/pipelines/test_pipeline_tuning.py": {
        "Pipeline_58": {
            "steps": "final"
        },
        "Pipeline_68": {
            "steps": "final"
        },
        "Pipeline_81": {
            "steps": "final"
        },
        "Pipeline_92": {
            "steps": "final"
        },
        "Pipeline_388": {
            "steps": "PrimaryNode('ar')"
        },
        "Pipeline_487": {
            "steps": "PrimaryNode('glm')"
        }
    },
    "test/unit/tasks/test_classification.py": {
        "Pipeline_37": {
            "steps": "node_final"
        },
        "Pipeline_48": {
            "steps": "node_final"
        }
    },
    "test/unit/tasks/test_forecasting.py": {
        "Pipeline_94": {
            "steps": "node_final"
        },
        "Pipeline_104": {
            "steps": "node_root"
        },
        "Pipeline_112": {
            "steps": "node_ar"
        },
        "Pipeline_124": {
            "steps": "node_ridge"
        },
        "Pipeline_299": {
            "steps": "node_root"
        }
    },
    "test/unit/tasks/test_gapfilling.py": {},
    "test/unit/tasks/test_regression.py": {
        "Pipeline_43": {
            "steps": "node_root"
        },
        "Pipeline_96": {
            "steps": "node_root"
        }
    },
    "test/unit/utilities/test_pipeline_import_export.py": {
        "Pipeline_80": {},
        "Pipeline_113": {
            "steps": "node_knn_third"
        },
        "Pipeline_136": {
            "steps": "knn_root"
        },
        "Pipeline_155": {
            "steps": "knn_root"
        },
        "Pipeline_193": {},
        "Pipeline_205": {},
        "Pipeline_218": {},
        "Pipeline_233": {},
        "Pipeline_246": {},
        "Pipeline_260": {},
        "Pipeline_321": {},
        "Pipeline_379": {
            "steps": "root_node"
        },
        "Pipeline_390": {},
        "Pipeline_400": {},
        "Pipeline_422": {
            "steps": "SecondaryNode('ridge', nodes_from=[scaling_node])"
        },
        "Pipeline_434": {},
        "Pipeline_455": {},
        "Pipeline_470": {}
    },
    "test/unit/validation/test_table_cv.py": {
        "Pipeline_30": {
            "steps": "SecondaryNode(operation_type='logit', nodes_from=[PrimaryNode(operation_type='rf'), PrimaryNode(operation_type='scaling')])"
        }
    },
    "test/unit/validation/test_time_series_cv.py": {}
}