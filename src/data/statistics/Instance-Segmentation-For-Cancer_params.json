{
    "code/data_loader.py": {
        "torch": {
            "DataLoader_102": {
                "variable": {
                    "value": "data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ImageFolder(root=image_path, image_size=image_size, mode=mode, augmentation_prob=augmentation_prob)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "code/data_loader_cancer.py": {
        "torch": {
            "DataLoader_105": {
                "variable": {
                    "value": "data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ImageFolder(root=image_path, image_size=image_size, mode=mode, augmentation_prob=augmentation_prob)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "code/evaluation.py": {
        "torch": {
            "sum_164": {
                "variable": {
                    "value": "Inter",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR + GT == 2",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_165": {
                "variable": {
                    "value": "Union",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR + GT >= 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_190": {
                "variable": {
                    "value": "Inter",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR + GT == 2",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_19": {
                "variable": {
                    "value": "corr",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR == GT",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_24": {
                "variable": {
                    "value": "corr",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR == GT",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "max_17": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_47": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_82": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_117": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_159": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_185": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_18": {
                "input": {
                    "value": "GT + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_23": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_48": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_57": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_83": {
                "input": {
                    "value": "GT + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_91": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_118": {
                "input": {
                    "value": "GT + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_126": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_160": {
                "input": {
                    "value": "GT + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_162": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "max_186": {
                "input": {
                    "value": "GT + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_188": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            },
            "sum_64": {
                "input": {
                    "value": "TP + FN",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_55": {
                "input": {
                    "value": "TP + FN",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_89": {
                "input": {
                    "value": "TN + FP",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_98": {
                "input": {
                    "value": "TN + FP",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_124": {
                "input": {
                    "value": "TP + FP",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_132": {
                "input": {
                    "value": "TP + FP",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_192": {
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT + 1)",
                            "Compare"
                        ],
                        [
                            "GT == torch.max(GT)",
                            "Compare"
                        ]
                    ]
                }
            }
        }
    },
    "code/main.py": {
        "torch": {}
    },
    "code/mainII.py": {
        "torch": {}
    },
    "code/main_cancer.py": {
        "torch": {}
    },
    "code/network.py": {
        "torch": {
            "Sequential_32": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(ch_in, ch_out, kernel_size=3, stride=1, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_65": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(ch_out, ch_out, kernel_size=3, stride=1, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_83": {
                "variable": {
                    "value": "self.RCNN",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "Recurrent_block(ch_out, t=t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "variable": {
                    "value": "self.Conv_1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "ch_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_98": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(ch_in, ch_out, kernel_size=3, stride=1, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_111": {
                "variable": {
                    "value": "self.W_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(F_g, F_int, kernel_size=1, stride=1, padding=0, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_116": {
                "variable": {
                    "value": "self.W_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(F_l, F_int, kernel_size=1, stride=1, padding=0, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_121": {
                "variable": {
                    "value": "self.psi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(F_int, 1, kernel_size=1, stride=1, padding=0, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_127": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_142": {
                "variable": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_162": {
                "variable": {
                    "value": "self.Conv_1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_183": {
                "variable": {
                    "value": "d5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x4, d5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_188": {
                "variable": {
                    "value": "d4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x3, d4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_192": {
                "variable": {
                    "value": "d3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x2, d3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_196": {
                "variable": {
                    "value": "d2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, d2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_208": {
                "variable": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_209": {
                "variable": {
                    "value": "self.Upsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_234": {
                "variable": {
                    "value": "self.Conv_1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_255": {
                "variable": {
                    "value": "d5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x4, d5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_259": {
                "variable": {
                    "value": "d4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x3, d4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_263": {
                "variable": {
                    "value": "d3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x2, d3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_267": {
                "variable": {
                    "value": "d2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, d2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_280": {
                "variable": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_304": {
                "variable": {
                    "value": "self.Conv_1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_326": {
                "variable": {
                    "value": "d5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x4, d5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_331": {
                "variable": {
                    "value": "d4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x3, d4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_336": {
                "variable": {
                    "value": "d3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x2, d3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_341": {
                "variable": {
                    "value": "d2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, d2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_353": {
                "variable": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_354": {
                "variable": {
                    "value": "self.Upsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_383": {
                "variable": {
                    "value": "self.Conv_1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_405": {
                "variable": {
                    "value": "d5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x4, d5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_410": {
                "variable": {
                    "value": "d4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x3, d4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_415": {
                "variable": {
                    "value": "d3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x2, d3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_420": {
                "variable": {
                    "value": "d2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, d2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "ch_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_34": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "in_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_37": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_50": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "in_channels": {
                    "value": "ch_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_52": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "in_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_67": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_68": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_99": {
                "in_channels": {
                    "value": "ch_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_100": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_101": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_112": {
                "in_channels": {
                    "value": "F_g",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "F_int",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_113": {
                "num_features": {
                    "value": "F_int",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "in_channels": {
                    "value": "F_l",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "F_int",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_118": {
                "num_features": {
                    "value": "F_int",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_122": {
                "in_channels": {
                    "value": "F_int",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_123": {
                "num_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/solver.py": {
        "torch": {
            "BCELoss_82": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_104": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_121": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "list(self.unet.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "[self.beta1, self.beta2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "is_available_138": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_520": {
                "variable": {
                    "value": "GT_class",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "GT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GT.to(self.device)",
                            "Call"
                        ],
                        [
                            "GT.to(self.device)",
                            "Call"
                        ],
                        [
                            "GT.to(self.device)",
                            "Call"
                        ],
                        [
                            "GT.to(self.device)",
                            "Call"
                        ],
                        [
                            "GT.to(self.device)",
                            "Call"
                        ],
                        [
                            "GT.to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_521": {
                "variable": {
                    "value": "SR_class",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR > threshold",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "max_570": {
                "variable": {
                    "value": "SR_class",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR > threshold",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "load_490": {
                "f": {
                    "value": "unet_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_path, '%s-%d-%.4f-%d-%.4f.pkl' % (self.model_type, self.num_epochs, self.lr, self.num_epochs_decay, self.augmentation_prob))",
                            "Call"
                        ],
                        [
                            "self.model_path",
                            "Attribute"
                        ]
                    ]
                }
            },
            "load_554": {
                "f": {
                    "value": "unet_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_path, '%s-%d-%.4f-%d-%.4f.pkl' % (self.model_type, self.num_epochs, self.lr, self.num_epochs_decay, self.augmentation_prob))",
                            "Call"
                        ],
                        [
                            "self.model_path",
                            "Attribute"
                        ]
                    ]
                }
            },
            "is_available_104": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_175": {
                "f": {
                    "value": "unet_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_path, '%s-%d-%.4f-%d-%.4f.pkl' % (self.model_type, self.num_epochs, self.lr, self.num_epochs_decay, self.augmentation_prob))",
                            "Call"
                        ],
                        [
                            "self.model_path",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sigmoid_204": {
                "variable": {
                    "value": "SR_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_337": {
                "variable": {
                    "value": "SR_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "SR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ],
                        [
                            "self.unet(images)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_445": {
                "f": {
                    "value": "unet_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_path, '%s-%d-%.4f-%d-%.4f.pkl' % (self.model_type, self.num_epochs, self.lr, self.num_epochs_decay, self.augmentation_prob))",
                            "Call"
                        ],
                        [
                            "self.model_path",
                            "Attribute"
                        ]
                    ]
                }
            },
            "save_308": {
                "obj": {
                    "value": "best_unet",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.unet.state_dict()",
                            "Call"
                        ],
                        [
                            "self.unet.state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "premodel_unet_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unet_path[:-4] + '_pretrained' + '.pkl'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "save_439": {
                "obj": {
                    "value": "best_unet",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.unet.state_dict()",
                            "Call"
                        ],
                        [
                            "self.unet.state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "unet_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_path, '%s-%d-%.4f-%d-%.4f.pkl' % (self.model_type, self.num_epochs, self.lr, self.num_epochs_decay, self.augmentation_prob))",
                            "Call"
                        ],
                        [
                            "self.model_path",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    }
}