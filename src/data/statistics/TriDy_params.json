{
    "pipeline.py": {
        "sklearn": {
            "SVC_193": {
                "variable": {
                    "value": "clf_SVM",
                    "type": "variable",
                    "possible_values": []
                },
                "cache_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "StandardScaler_201": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_205": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "train_size": {
                    "value": "train_set_perc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config_dict['values']['train_set_perc']",
                            "Subscript"
                        ]
                    ]
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_val_score_210": {
                "variable": {
                    "value": "cv_scores",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "clf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "clf_SVM",
                            "variable"
                        ]
                    ]
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "StandardScaler().fit_transform(features[:, :-1])",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features[:, -1]",
                            "Subscript"
                        ]
                    ]
                },
                "cv": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "train_test_split_215": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "train_size": {
                    "value": "train_set_perc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config_dict['values']['train_set_perc']",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    }
}