{
    "generate_number.py": {
        "torch": {
            "randn_20": {
                "variable": {
                    "value": "z_noise",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(number)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "latent_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.latent_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "is_available_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_64": {
                "f": {
                    "value": "dir_to_generator",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.dir_to_generator",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "models.py": {
        "torch": {
            "Embedding_9": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "label_size",
                    "type": "variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "4 * 28 * 28",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_11": {
                "variable": {
                    "value": "self.label_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 64, kernel_size=(4, 4), stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_16": {
                "variable": {
                    "value": "self.image_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 64, kernel_size=(3, 3), stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(128, 256, kernel_size=(4, 4), stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_48": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, labels]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_57": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "label_size",
                    "type": "variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "embedding_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(latent_size + embedding_dim, 50, kernel_size=(4, 4), stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, labels]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_12": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_13": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_18": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_24": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_28": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_32": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "num_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_60": {
                "in_channels": {
                    "value": "latent_size + embedding_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_61": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_62": {
                "num_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_65": {
                "in_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_67": {
                "num_features": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_70": {
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "15",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_72": {
                "num_features": {
                    "value": "15",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_75": {
                "in_channels": {
                    "value": "15",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_77": {
                "num_features": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_80": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_81": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "DataLoader_39": {
                "variable": {
                    "value": "self.data_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.num_workers",
                            "Attribute"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Adam_55": {
                "variable": {
                    "value": "self.optimizer_d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.dis.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.lr",
                            "Attribute"
                        ],
                        [
                            "0.0002",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Adam_56": {
                "variable": {
                    "value": "self.optimizer_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.gen.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.lr",
                            "Attribute"
                        ],
                        [
                            "0.0002",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randn_111": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(gen_labels)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_79": {
                "variable": {
                    "value": "real_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(b_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "REAL_LABEL",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                }
            },
            "randn_84": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "b_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(images)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "self.latent_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_87": {
                "variable": {
                    "value": "fake_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(b_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FAKE_LABEL",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ]
                    ]
                }
            },
            "randn_99": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "b_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(images)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "self.latent_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_127": {
                "obj": {
                    "value": "self.gen.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "saved_model_directory + '/generator_{}.pt'.format(epoch)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_128": {
                "obj": {
                    "value": "self.dis.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "saved_model_directory + '/discriminator_{}.pt'.format(epoch)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}