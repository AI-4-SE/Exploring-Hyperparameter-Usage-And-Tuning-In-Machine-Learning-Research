{
    "air/Airs_ours_resnet.py": {
        "torch": {
            "CrossEntropyLoss_30": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "NLLLoss_32": {
                "variable": {
                    "value": "criterion_NLLLoss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_52": {
                "variable": {
                    "value": "trainloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(root='/data/Aircraft/train', transform=transform_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_55": {
                "variable": {
                    "value": "testloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(root='/data/Aircraft/test', transform=transform_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_149": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_310": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[{'params': net.classifier_1.parameters(), 'lr': 0.1}, {'params': net.classifier_2.parameters(), 'lr': 0.1}, {'params': net.classifier_3.parameters(), 'lr': 0.1}, {'params': net.features_1.parameters(), 'lr': 0.1}, {'params': net.features_2.parameters(), 'lr': 0.01}]",
                    "type": "List",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "float",
                    "possible_values": []
                }
            },
            "DataParallel_165": {
                "variable": {
                    "value": "net.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_166": {
                "variable": {
                    "value": "net.classifier_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_167": {
                "variable": {
                    "value": "net.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_170": {
                "variable": {
                    "value": "net.features_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.features_1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_171": {
                "variable": {
                    "value": "net.features_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.features_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.features_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(model.children())[:-2]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "MaxPool2d_69": {
                "variable": {
                    "value": "self.max",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.features_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.BatchNorm1d(self.num_ftrs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "variable": {
                    "value": "self.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size, 30)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_89": {
                "variable": {
                    "value": "self.classifier_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size // 3 * 2, 70)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_94": {
                "variable": {
                    "value": "self.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size // 3, 100)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_116": {
                "variable": {
                    "value": "order_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2.detach(), x_3.detach()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "family_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_2, x_3.detach()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_217": {
                "variable": {
                    "value": "(_, order_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "order_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_221": {
                "variable": {
                    "value": "(_, family_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "family_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_225": {
                "variable": {
                    "value": "(_, species_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "species_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_272": {
                "variable": {
                    "value": "(_, order_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "order_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_276": {
                "variable": {
                    "value": "(_, family_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "family_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_280": {
                "variable": {
                    "value": "(_, species_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "species_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm1d_73": {
                "num_features": {
                    "value": "self.num_ftrs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_75": {
                "in_features": {
                    "value": "self.num_ftrs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_76": {
                "num_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ELU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "in_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_86": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "in_features": {
                    "value": "feature_size // 3 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "70",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_91": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_95": {
                "in_features": {
                    "value": "feature_size // 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_96": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_130": {
                "input": {
                    "value": "order_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_1(order_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_136": {
                "input": {
                    "value": "family_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_2(family_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_140": {
                "input": {
                    "value": "species_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_3(species_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_258": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "air/air_get_tree_target_2.py": {
        "torch": {
            "from_numpy_265": {
                "ndarray": {
                    "value": "np.array(order_target_list)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_266": {
                "ndarray": {
                    "value": "np.array(family_target_list)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "birds/Birds_ours_resnet.py": {
        "torch": {
            "CrossEntropyLoss_30": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "NLLLoss_32": {
                "variable": {
                    "value": "criterion_NLLLoss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_52": {
                "variable": {
                    "value": "trainloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(root='/data/Birds/train', transform=transform_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_55": {
                "variable": {
                    "value": "testloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(root='/data/Birds/test', transform=transform_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_313": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[{'params': net.classifier_1.parameters(), 'lr': 0.1}, {'params': net.classifier_2.parameters(), 'lr': 0.1}, {'params': net.classifier_3.parameters(), 'lr': 0.1}, {'params': net.features_1.parameters(), 'lr': 0.1}, {'params': net.features_2.parameters(), 'lr': 0.01}]",
                    "type": "List",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "float",
                    "possible_values": []
                }
            },
            "DataParallel_170": {
                "variable": {
                    "value": "net.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_171": {
                "variable": {
                    "value": "net.classifier_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_172": {
                "variable": {
                    "value": "net.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_175": {
                "variable": {
                    "value": "net.features_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.features_1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_176": {
                "variable": {
                    "value": "net.features_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.features_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.features_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(model.children())[:-2]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "MaxPool2d_69": {
                "variable": {
                    "value": "self.max",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.features_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.BatchNorm1d(self.num_ftrs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "variable": {
                    "value": "self.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size, 13)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_89": {
                "variable": {
                    "value": "self.classifier_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size // 3 * 2, 38)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_94": {
                "variable": {
                    "value": "self.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size // 3, 200)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_120": {
                "variable": {
                    "value": "order_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2.detach(), x_3.detach()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_121": {
                "variable": {
                    "value": "family_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_2, x_3.detach()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_222": {
                "variable": {
                    "value": "(_, order_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "order_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_226": {
                "variable": {
                    "value": "(_, family_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "family_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_230": {
                "variable": {
                    "value": "(_, species_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "species_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_279": {
                "variable": {
                    "value": "(_, order_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "order_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_283": {
                "variable": {
                    "value": "(_, family_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "family_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_287": {
                "variable": {
                    "value": "(_, species_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "species_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm1d_73": {
                "num_features": {
                    "value": "self.num_ftrs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_75": {
                "in_features": {
                    "value": "self.num_ftrs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_76": {
                "num_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ELU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "in_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "13",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_86": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "in_features": {
                    "value": "feature_size // 3 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "38",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_91": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_95": {
                "in_features": {
                    "value": "feature_size // 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_96": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_134": {
                "input": {
                    "value": "order_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_1(order_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_140": {
                "input": {
                    "value": "family_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_2(family_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_144": {
                "input": {
                    "value": "species_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_3(species_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_265": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "birds/birds_get_tree_target_2.py": {
        "torch": {
            "from_numpy_326": {
                "ndarray": {
                    "value": "np.array(order_target_list)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_327": {
                "ndarray": {
                    "value": "np.array(family_target_list)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "cars/Cars_ours_resnet.py": {
        "torch": {
            "CrossEntropyLoss_30": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "NLLLoss_32": {
                "variable": {
                    "value": "criterion_NLLLoss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_55": {
                "variable": {
                    "value": "trainloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(root='/data/StandCars/train', transform=transform_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_58": {
                "variable": {
                    "value": "testloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(root='/data/StandCars/test', transform=transform_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_139": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_278": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[{'params': net.classifier_1.parameters(), 'lr': 0.1}, {'params': net.classifier_3.parameters(), 'lr': 0.1}, {'params': net.features_1.parameters(), 'lr': 0.1}, {'params': net.features_2.parameters(), 'lr': 0.01}]",
                    "type": "List",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "float",
                    "possible_values": []
                }
            },
            "DataParallel_154": {
                "variable": {
                    "value": "net.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_155": {
                "variable": {
                    "value": "net.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_158": {
                "variable": {
                    "value": "net.features_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.features_1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_159": {
                "variable": {
                    "value": "net.features_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "net.features_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.features_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(model.children())[:-2]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "MaxPool2d_72": {
                "variable": {
                    "value": "self.max",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_75": {
                "variable": {
                    "value": "self.features_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.BatchNorm1d(self.num_ftrs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_85": {
                "variable": {
                    "value": "self.classifier_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size, 9)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_91": {
                "variable": {
                    "value": "self.classifier_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(feature_size // 2, 196)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_112": {
                "variable": {
                    "value": "order_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_3.detach()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_202": {
                "variable": {
                    "value": "(_, order_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "order_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_207": {
                "variable": {
                    "value": "(_, species_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "species_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_250": {
                "variable": {
                    "value": "(_, order_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "order_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_255": {
                "variable": {
                    "value": "(_, species_predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "species_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm1d_76": {
                "num_features": {
                    "value": "self.num_ftrs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_78": {
                "in_features": {
                    "value": "self.num_ftrs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_79": {
                "num_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ELU_80": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "in_features": {
                    "value": "feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "9",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_87": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_92": {
                "in_features": {
                    "value": "feature_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "196",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_93": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_125": {
                "input": {
                    "value": "order_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_1(order_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_129": {
                "input": {
                    "value": "species_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_3(species_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_237": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "cars/cars_get_tree_target_2.py": {
        "torch": {
            "from_numpy_235": {
                "ndarray": {
                    "value": "np.array(order_target_list)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}