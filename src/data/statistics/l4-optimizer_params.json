{
    "L4/L4.py": {
        "tensorflow": {
            "add_n_21": {
                "inputs": {
                    "value": "[tf.reduce_sum(t1 * t2) for (t1, t2) in zip(list_of_tensors1, list_of_tensors2)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_40": {
                "variable": {
                    "value": "self.EMAgrad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_scale_grad",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_41": {
                "variable": {
                    "value": "self.EMAvar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_scale_var",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_63": {
                "variable": {
                    "value": "self.EMAgrad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_momentum",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_127": {
                "variable": {
                    "value": "ml_newval",
                    "type": "Variable",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(global_step, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : self.init_factor * self.loss",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.minimum(self.min_loss, self.loss)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "get_or_create_global_step_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "exp_28": {
                "x": {
                    "value": "tf.cast(global_step, tf.float32) * tf.log(decay)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_variable_99": {
                "variable": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "min_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.constant_initializer(0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_or_create_global_step_121": {
                "variable": {
                    "value": "global_step",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "trainable_variables_147": {
                "variable": {
                    "value": "var_list",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_21": {
                "input_tensor": {
                    "value": "t1 * t2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_45": {
                "x": {
                    "value": "grad",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "control_dependencies_48": {
                "control_inputs": {
                    "value": "[shadow_op_gr, shadow_op_var]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_67": {
                "control_inputs": {
                    "value": "[shadow_op_gr]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "variable_scope_98": {
                "name_or_scope": {
                    "value": "L4Optimizer",
                    "type": "Constant",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_127": {
                "x": {
                    "value": "global_step",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1 + tf.train.get_or_create_global_step()",
                            "BinOp"
                        ],
                        [
                            "tf.train.get_or_create_global_step()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_131": {
                "control_inputs": {
                    "value": "[ml_update]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "scalar_138": {
                "name": {
                    "value": "effective_learning_rate",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "l_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.fraction * (self.loss - min_loss_to_use) / (n_inner_product(directions, derivatives) + self.epsilon)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "scalar_139": {
                "name": {
                    "value": "min_loss_estimate",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_28": {
                "x": {
                    "value": "global_step",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1 + tf.train.get_or_create_global_step()",
                            "BinOp"
                        ],
                        [
                            "tf.train.get_or_create_global_step()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_28": {
                "x": {
                    "value": "decay",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - 1.0 / time_step",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_70": {
                "input": {
                    "value": "grad",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "minimum_128": {
                "x": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_142": {
                "control_inputs": {
                    "value": "[ml_update2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_initializer_100": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_54": {
                "x": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}