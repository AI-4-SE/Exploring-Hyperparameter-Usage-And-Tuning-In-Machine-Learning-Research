{
    "1d-burgers/burgersutil.py": {
        "tensorflow": {}
    },
    "1d-burgers/ide_cont_burgers.py": {
        "tensorflow": {}
    },
    "1d-burgers/ide_cont_burgers_bench.py": {
        "tensorflow": {
            "Sequential_42": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_seed_11": {
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "InputLayer_43": {
                "input_shape": {
                    "value": "(layers[0],)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Lambda_44": {
                "function": {
                    "value": "lambda X: 2.0 * (X - lb) / (ub - lb) - 1.0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_47": {
                "units": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "layers[1:]",
                            "Subscript"
                        ]
                    ]
                },
                "activation": {
                    "value": "tf.nn.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "glorot_normal",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "1d-burgers/ide_disc_burgers.py": {
        "tensorflow": {
            "set_seed_12": {
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_91": {
                "variable": {
                    "value": "l2",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "self.lambda_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_106": {
                "variable": {
                    "value": "l2",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "self.lambda_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_140": {
                "variable": {
                    "value": "l2",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "self.lambda_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_153": {
                "variable": {
                    "value": "x_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "x_0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.convert_to_tensor(x_0, dtype=self.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_154": {
                "variable": {
                    "value": "u_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "u_0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.convert_to_tensor(u_0, dtype=self.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_155": {
                "variable": {
                    "value": "x_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "x_1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.convert_to_tensor(x_1, dtype=self.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_156": {
                "variable": {
                    "value": "u_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "u_1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.convert_to_tensor(u_1, dtype=self.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_158": {
                "variable": {
                    "value": "self.lambda_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "[0.0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_159": {
                "variable": {
                    "value": "self.lambda_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "[-6.0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_199": {
                "variable": {
                    "value": "x_star",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "x_star",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.convert_to_tensor(x_star, dtype=self.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_131": {
                "value": {
                    "value": "w",
                    "type": "Name",
                    "possible_values": [
                        [
                            "super().get_weights(convert_to_tensor=False)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_146": {
                "shape": {
                    "value": "[x.shape[0], self.q]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_189": {
                "variable": {
                    "value": "grad_flat",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "grad_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "tf.concat(grad_flat, 0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_60": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_114": {
                "input_tensor": {
                    "value": "tf.square(u_0_pred - u_0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_115": {
                "input_tensor": {
                    "value": "tf.square(u_1_pred - u_1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GradientTape_118": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "matmul_93": {
                "a": {
                    "value": "N",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "l1 * U * U_x - l2 * U_xx",
                            "BinOp"
                        ],
                        [
                            "-l1 * U * U_x + l2 * U_xx",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "self.IRK_alpha.T",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_108": {
                "a": {
                    "value": "N",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "l1 * U * U_x - l2 * U_xx",
                            "BinOp"
                        ],
                        [
                            "-l1 * U * U_x + l2 * U_xx",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "(self.IRK_beta - self.IRK_alpha).T",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_114": {
                "x": {
                    "value": "u_0_pred - u_0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_115": {
                "x": {
                    "value": "u_1_pred - u_1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GradientTape_180": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_188": {
                "tensor": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "grad",
                            "Name"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "1d-burgers/inf_cont_burgers.py": {
        "tensorflow": {
            "set_seed_10": {
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_73": {
                "variable": {
                    "value": "X_f",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.x_f[:, 0], self.t_f[:, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_61": {
                "input_tensor": {
                    "value": "tf.square(u - u_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_62": {
                "input_tensor": {
                    "value": "tf.square(f_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GradientTape_68": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "square_61": {
                "x": {
                    "value": "u - u_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_62": {
                "x": {
                    "value": "f_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.f_model()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "1d-burgers/inf_cont_burgers_bench.py": {
        "tensorflow": {
            "Sequential_42": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_seed_12": {
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "InputLayer_43": {
                "input_shape": {
                    "value": "(layers[0],)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Lambda_44": {
                "function": {
                    "value": "lambda X: 2.0 * (X - lb) / (ub - lb) - 1.0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_47": {
                "units": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "layers[1:]",
                            "Subscript"
                        ]
                    ]
                },
                "activation": {
                    "value": "tf.nn.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "glorot_normal",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "1d-burgers/inf_disc_burgers.py": {
        "tensorflow": {
            "set_seed_12": {
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "convert_to_tensor_58": {
                "variable": {
                    "value": "self.x_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "x_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_120": {
                "variable": {
                    "value": "self.dummy_x0_tf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[x_0.shape[0], self.q]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_112": {
                "variable": {
                    "value": "grad_flat",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "grad_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "tf.concat(grad_flat, 0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_64": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_93": {
                "input_tensor": {
                    "value": "tf.square(u_0_pred - u_0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_94": {
                "input_tensor": {
                    "value": "tf.square(u_1_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GradientTape_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "matmul_88": {
                "a": {
                    "value": "N",
                    "type": "Name",
                    "possible_values": [
                        [
                            "U * U_x - nu * U_xx",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "self.IRK_weights.T",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_93": {
                "x": {
                    "value": "u_0_pred - u_0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_94": {
                "x": {
                    "value": "u_1_pred",
                    "type": "Call",
                    "possible_values": [
                        [
                            "pinn.predict(x_star)",
                            "Call"
                        ],
                        [
                            "self.model(self.x_1)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_111": {
                "tensor": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "grad",
                            "Name"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "1dcomplex-schrodinger/inf_cont_schrodinger.py": {
        "tensorflow": {
            "set_seed_13": {
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_164": {
                "values": {
                    "value": "[u0, v0]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_66": {
                "variable": {
                    "value": "Xtemp",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[x, t]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_87": {
                "variable": {
                    "value": "X_f",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.x_f, self.t_f]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "print_128": {
                "*inputs": {
                    "value": "f'mse_0 {mse_0}    mse_b {mse_b}    mse_f    {mse_f}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "GradientTape_63": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_82": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_118": {
                "input_tensor": {
                    "value": "tf.square(u0 - u0_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_119": {
                "input_tensor": {
                    "value": "tf.square(v0 - v0_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_123": {
                "input_tensor": {
                    "value": "tf.square(v_x_lb_pred - v_x_ub_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_125": {
                "input_tensor": {
                    "value": "tf.square(f_u_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_126": {
                "input_tensor": {
                    "value": "tf.square(f_v_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "square_118": {
                "x": {
                    "value": "u0 - u0_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_119": {
                "x": {
                    "value": "v0 - v0_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_122": {
                "input_tensor": {
                    "value": "tf.square(u_x_lb_pred - u_x_ub_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "square_123": {
                "x": {
                    "value": "v_x_lb_pred - v_x_ub_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_125": {
                "x": {
                    "value": "f_u_pred",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "square_126": {
                "x": {
                    "value": "f_v_pred",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "reduce_mean_120": {
                "input_tensor": {
                    "value": "tf.square(u_lb_pred - u_ub_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_121": {
                "input_tensor": {
                    "value": "tf.square(v_lb_pred - v_ub_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "square_122": {
                "x": {
                    "value": "u_x_lb_pred - u_x_ub_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_120": {
                "x": {
                    "value": "u_lb_pred - u_ub_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_121": {
                "x": {
                    "value": "v_lb_pred - v_ub_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "1dcomplex-schrodinger/schrodingerutil.py": {
        "tensorflow": {}
    },
    "utils/custom_lbfgs.py": {
        "tensorflow": {
            "abs_73": {
                "variable": {
                    "value": "tmp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "reduce_sum_32": {
                "input_tensor": {
                    "value": "a * b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_200": {
                "variable": {
                    "value": "tmp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "abs_206": {
                "variable": {
                    "value": "tmp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "d * t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_74": {
                "input_tensor": {
                    "value": "tmp1",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(d * t)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_160": {
                "variable": {
                    "value": "tmp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "reduce_sum_201": {
                "input_tensor": {
                    "value": "tmp1",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(d * t)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_sum_207": {
                "input_tensor": {
                    "value": "tmp1",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(d * t)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_212": {
                "x": {
                    "value": "f - f_old",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_161": {
                "input_tensor": {
                    "value": "tmp1",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(g)",
                            "Call"
                        ],
                        [
                            "tf.abs(d * t)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_214": {
                "x": {
                    "value": "f - f_old",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils/logger.py": {
        "tensorflow": {
            "executing_eagerly_14": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_gpu_available_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/neuralnetwork.py": {
        "tensorflow": {
            "Adam_19": {
                "variable": {
                    "value": "self.tf_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "hp['tf_lr']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "hp['tf_b1']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "hp['tf_eps']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_27": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_floatx_26": {
                "value": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_52": {
                "input_tensor": {
                    "value": "tf.square(u - u_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_86": {
                "variable": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "weights",
                    "type": "Call",
                    "possible_values": [
                        [
                            "weights_biases[0].flatten()",
                            "Call"
                        ],
                        [
                            "w[start_weights:end_weights]",
                            "Subscript"
                        ],
                        [
                            "tf.reshape(weights, [w_div, self.sizes_b[i]])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[w_div, self.sizes_b[i]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_100": {
                "variable": {
                    "value": "grad_flat",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "grad_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "tf.concat(grad_flat, 0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "convert_to_tensor_159": {
                "value": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "InputLayer_28": {
                "input_shape": {
                    "value": "(layers[0],)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Lambda_29": {
                "function": {
                    "value": "lambda X: 2.0 * (X - lb) / (ub - lb) - 1.0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_35": {
                "units": {
                    "value": "layers[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "glorot_normal",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "square_52": {
                "x": {
                    "value": "u - u_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GradientTape_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_32": {
                "units": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "layers[1:-1]",
                            "Subscript"
                        ]
                    ]
                },
                "activation": {
                    "value": "tf.nn.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "glorot_normal",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_93": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_99": {
                "tensor": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "grad",
                            "Name"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    }
}