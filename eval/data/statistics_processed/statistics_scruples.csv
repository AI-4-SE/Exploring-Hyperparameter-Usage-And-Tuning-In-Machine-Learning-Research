node
scruples::::src/scruples/baselines/labels.py::::file::::src/scruples/baselines/labels.py
scruples::::src/scruples/baselines/labels.py::::Pipeline::::variable::::PriorBaseline
"scruples::::src/scruples/baselines/labels.py::::Pipeline::::steps::::[('classifier', 'DummyClassifier')]"
"scruples::::src/scruples/baselines/labels.py::::Pipeline::::steps::::[('classifier', 'DummyClassifier')]"
scruples::::src/scruples/baselines/labels.py::::Pipeline::::variable::::StratifiedBaseline
scruples::::src/scruples/baselines/labels.py::::DummyClassifier::::strategy::::prior
scruples::::src/scruples/baselines/labels.py::::DummyClassifier::::strategy::::stratified
scruples::::src/scruples/baselines/linear.py::::file::::src/scruples/baselines/linear.py
scruples::::src/scruples/baselines/linear.py::::Pipeline::::variable::::LogisticRegressionBaseline
"scruples::::src/scruples/baselines/linear.py::::Pipeline::::steps::::[('concatenator', 'FunctionTransformer'), ('vectorizer', 'CountVectorizer'), ('tfidf', 'TfidfTransformer'), ('scaler', 'MaxAbsScaler'), ('classifier', 'LogisticRegression')]"
scruples::::src/scruples/baselines/linear.py::::Pipeline::::variable::::LogisticRankerBaseline
"scruples::::src/scruples/baselines/linear.py::::Pipeline::::steps::::[('featurizer',), ('classifier', 'LogisticRegression')]"
scruples::::src/scruples/baselines/linear.py::::FunctionTransformer::::validate::::False
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::input::::content
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::input::::content
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::encoding::::utf-8
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::encoding::::utf-8
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::decode_error::::strict
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::preprocessor::::None
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::preprocessor::::None
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::tokenizer::::None
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::tokenizer::::None
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::token_pattern::::(?u)\b\w\w+\b
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::token_pattern::::(?u)\b\w\w+\b
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::max_features::::None
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::max_features::::None
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::vocabulary::::None
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::vocabulary::::None
scruples::::src/scruples/baselines/linear.py::::TfidfTransformer::::smooth_idf::::True
scruples::::src/scruples/baselines/linear.py::::TfidfTransformer::::smooth_idf::::True
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::penalty::::l2
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::penalty::::l2
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::dual::::False
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::dual::::False
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::tol::::0.0001
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::tol::::0.0001
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::intercept_scaling::::1.0
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::intercept_scaling::::1.0
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::solver::::lbfgs
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::solver::::lbfgs
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::max_iter::::100
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::max_iter::::100
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::warm_start::::True
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::warm_start::::True
scruples::::src/scruples/baselines/linear.py::::LogisticRegression::::fit_intercept::::False
"scruples::::src/scruples/baselines/linear.py::::Pipeline::::steps::::[('vectorizer', 'CountVectorizer'), ('tfidf', 'TfidfTransformer'), ('scaler', 'MaxAbsScaler')]"
scruples::::src/scruples/baselines/linear.py::::CountVectorizer::::decode_error::::featurizer
scruples::::src/scruples/baselines/metrics.py::::file::::src/scruples/baselines/metrics.py
scruples::::src/scruples/baselines/naivebayes.py::::file::::src/scruples/baselines/naivebayes.py
scruples::::src/scruples/baselines/naivebayes.py::::Pipeline::::variable::::BernoulliNBBaseline
"scruples::::src/scruples/baselines/naivebayes.py::::Pipeline::::steps::::[('concatenator', 'FunctionTransformer'), ('vectorizer', 'CountVectorizer'), ('classifier', 'BernoulliNB')]"
scruples::::src/scruples/baselines/naivebayes.py::::Pipeline::::variable::::MultinomialNBBaseline
"scruples::::src/scruples/baselines/naivebayes.py::::Pipeline::::steps::::[('concatenator', 'FunctionTransformer'), ('vectorizer', 'CountVectorizer'), ('classifier', 'MultinomialNB')]"
scruples::::src/scruples/baselines/naivebayes.py::::Pipeline::::variable::::ComplementNBBaseline
"scruples::::src/scruples/baselines/naivebayes.py::::Pipeline::::steps::::[('concatenator', 'FunctionTransformer'), ('vectorizer', 'CountVectorizer'), ('classifier', 'ComplementNB')]"
scruples::::src/scruples/baselines/naivebayes.py::::FunctionTransformer::::validate::::False
scruples::::src/scruples/baselines/naivebayes.py::::FunctionTransformer::::validate::::False
scruples::::src/scruples/baselines/naivebayes.py::::FunctionTransformer::::validate::::False
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::input::::content
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::input::::content
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::input::::content
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::encoding::::utf-8
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::encoding::::utf-8
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::encoding::::utf-8
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::decode_error::::strict
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::decode_error::::strict
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::decode_error::::strict
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::preprocessor::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::preprocessor::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::preprocessor::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::tokenizer::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::tokenizer::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::tokenizer::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::token_pattern::::(?u)\b\w\w+\b
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::token_pattern::::(?u)\b\w\w+\b
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::token_pattern::::(?u)\b\w\w+\b
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::max_features::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::max_features::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::max_features::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::vocabulary::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::vocabulary::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::vocabulary::::None
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::binary::::True
scruples::::src/scruples/baselines/naivebayes.py::::BernoulliNB::::binarize::::None
scruples::::src/scruples/baselines/naivebayes.py::::BernoulliNB::::fit_prior::::True
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::binary::::False
scruples::::src/scruples/baselines/naivebayes.py::::CountVectorizer::::binary::::False
scruples::::src/scruples/baselines/naivebayes.py::::MultinomialNB::::fit_prior::::True
scruples::::src/scruples/baselines/naivebayes.py::::ComplementNB::::fit_prior::::True
scruples::::src/scruples/baselines/style.py::::file::::src/scruples/baselines/style.py
scruples::::src/scruples/baselines/style.py::::Pipeline::::variable::::StylisticXGBoostBaseline
"scruples::::src/scruples/baselines/style.py::::Pipeline::::steps::::[('featurizer', 'ColumnTransformer'), ('classifier', 'XGBClassifier')]"
scruples::::src/scruples/baselines/style.py::::Pipeline::::variable::::FewestWordsBaseline
"scruples::::src/scruples/baselines/style.py::::Pipeline::::steps::::[('classifier', 'LengthRanker')]"
"scruples::::src/scruples/baselines/style.py::::Pipeline::::steps::::[('classifier', 'LengthRanker')]"
"scruples::::src/scruples/baselines/style.py::::Pipeline::::steps::::[('classifier', 'LengthRanker')]"
"scruples::::src/scruples/baselines/style.py::::Pipeline::::steps::::[('classifier', 'LengthRanker')]"
scruples::::src/scruples/baselines/style.py::::Pipeline::::variable::::MostWordsBaseline
scruples::::src/scruples/baselines/style.py::::Pipeline::::variable::::FewestCharactersBaseline
scruples::::src/scruples/baselines/style.py::::Pipeline::::variable::::MostCharactersBaseline
scruples::::src/scruples/baselines/style.py::::Pipeline::::variable::::StyleRankerBaseline
"scruples::::src/scruples/baselines/style.py::::Pipeline::::steps::::[('featurizer',), ('classifier', 'LogisticRegression')]"
"scruples::::src/scruples/baselines/style.py::::ColumnTransformer::::transformers::::[('title_style', 'StyleFeaturizer', 'title'), ('text_style', 'StyleFeaturizer', 'text')]"
scruples::::src/scruples/baselines/style.py::::ColumnTransformer::::remainder::::drop
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::penalty::::l2
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::dual::::False
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::tol::::0.0001
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::fit_intercept::::False
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::intercept_scaling::::1.0
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::solver::::lbfgs
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::max_iter::::100
scruples::::src/scruples/baselines/style.py::::LogisticRegression::::warm_start::::True
"scruples::::src/scruples/baselines/style.py::::Pipeline::::steps::::[('featurizer', 'StyleFeaturizer'), ('scaler', 'MaxAbsScaler')]"
scruples::::src/scruples/baselines/trees.py::::file::::src/scruples/baselines/trees.py
scruples::::src/scruples/baselines/trees.py::::Pipeline::::variable::::RandomForestBaseline
"scruples::::src/scruples/baselines/trees.py::::Pipeline::::steps::::[('concatenator', 'FunctionTransformer'), ('vectorizer', 'CountVectorizer'), ('tfidf', 'TfidfTransformer'), ('classifier', 'RandomForestClassifier')]"
scruples::::src/scruples/baselines/trees.py::::FunctionTransformer::::validate::::False
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::input::::content
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::encoding::::utf-8
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::decode_error::::strict
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::preprocessor::::None
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::tokenizer::::None
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::token_pattern::::(?u)\b\w\w+\b
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::max_features::::None
scruples::::src/scruples/baselines/trees.py::::CountVectorizer::::vocabulary::::None
scruples::::src/scruples/baselines/trees.py::::TfidfTransformer::::smooth_idf::::True
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::n_estimators::::100
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::max_depth::::None
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::max_features::::auto
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::max_leaf_nodes::::None
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::max_leaf_nodes::::None
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::min_impurity_decrease::::0.0
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::oob_score::::False
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::n_jobs::::1
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::verbose::::0
scruples::::src/scruples/baselines/trees.py::::RandomForestClassifier::::warm_start::::False
scruples::::src/scruples/baselines/utils.py::::file::::src/scruples/baselines/utils.py
scruples::::src/scruples/demos/scoracle/app.py::::file::::src/scruples/demos/scoracle/app.py
scruples::::src/scruples/scripts/analyze/corpus/extractions.py::::file::::src/scruples/scripts/analyze/corpus/extractions.py
scruples::::src/scruples/scripts/analyze/corpus/predictions.py::::file::::src/scruples/scripts/analyze/corpus/predictions.py
scruples::::src/scruples/scripts/analyze/oracle_estimator.py::::file::::src/scruples/scripts/analyze/oracle_estimator.py
scruples::::src/scruples/scripts/analyze/resource/predictions.py::::file::::src/scruples/scripts/analyze/resource/predictions.py
scruples::::src/scruples/scripts/analyze/resource/topics.py::::file::::src/scruples/scripts/analyze/resource/topics.py
scruples::::src/scruples/scripts/analyze/resource/topics.py::::Pipeline::::variable::::model
"scruples::::src/scruples/scripts/analyze/resource/topics.py::::Pipeline::::steps::::[('vectorizer', 'CountVectorizer'), ('topic_model', 'LatentDirichletAllocation')]"
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::input::::content
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::encoding::::utf-8
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::decode_error::::strict
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::strip_accents::::None
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::lowercase::::True
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::preprocessor::::None
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::tokenizer::::None
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::stop_words::::english
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::token_pattern::::(?u)\b\w\w+\b
"scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::ngram_range::::(1, 1)"
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::analyzer::::word
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::max_df::::1.0
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::min_df::::2
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::max_features::::None
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::vocabulary::::None
scruples::::src/scruples/scripts/analyze/resource/topics.py::::CountVectorizer::::binary::::False
scruples::::src/scruples/scripts/analyze/resource/topics.py::::LatentDirichletAllocation::::n_components::::N_COMPONENTS
scruples::::src/scruples/scripts/evaluate/corpus/run_shallow.py::::file::::src/scruples/scripts/evaluate/corpus/run_shallow.py
scruples::::src/scruples/scripts/evaluate/resource/run_shallow.py::::file::::src/scruples/scripts/evaluate/resource/run_shallow.py
scruples::::src/scruples/utils.py::::file::::src/scruples/utils.py
scruples::::tests/scruples/baselines/utils.py::::file::::tests/scruples/baselines/utils.py
scruples::::tests/scruples/demos/scoracle/test_app.py::::file::::tests/scruples/demos/scoracle/test_app.py
