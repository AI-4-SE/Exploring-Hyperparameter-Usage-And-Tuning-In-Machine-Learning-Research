{
    "main.py": {
        "torch": {
            "Embedding_96": {
                "variable": {
                    "value": "embed_model",
                    "type": "variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "input1_lang.n_words",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "embedding_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "padding_idx": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_234": {
                "variable": {
                    "value": "embed_model",
                    "type": "variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "input1_lang.n_words",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "embedding_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "src/masked_cross_entropy.py": {
        "torch": {
            "arange_9": {
                "variable": {
                    "value": "seq_range",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "max_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sequence_length.data.max()",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "log_softmax_39": {
                "variable": {
                    "value": "log_probs_flat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logits.view(-1, logits.size(-1))",
                            "Call"
                        ],
                        [
                            "logits.view(-1, logits.size(-1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_79": {
                "variable": {
                    "value": "log_probs_flat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits_flat + 1e-12",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "gather_43": {
                "input": {
                    "value": "log_probs_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "functional.log_softmax(logits_flat, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.log(logits_flat + 1e-12)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "target_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target.view(-1, 1)",
                            "Call"
                        ],
                        [
                            "target.view(-1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_84": {
                "input": {
                    "value": "log_probs_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "functional.log_softmax(logits_flat, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.log(logits_flat + 1e-12)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "target_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target.view(-1, 1)",
                            "Call"
                        ],
                        [
                            "target.view(-1, 1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/models.py": {
        "torch": {
            "ModuleList_10": {
                "modules": {
                    "value": "[copy.deepcopy(module) for _ in range(N)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Embedding_23": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "embedding_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ]
                    ]
                },
                "padding_idx": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_24": {
                "variable": {
                    "value": "self.em_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "GRU_25": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embedding_size",
                    "type": "variable",
                    "possible_values": []
                },
                "dropout": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_31": {
                "variable": {
                    "value": "packed",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "embedded",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.embedding(input_seqs)",
                            "Call"
                        ],
                        [
                            "self.em_dropout(embedded)",
                            "Call"
                        ],
                        [
                            "self.embedding(input_seq)",
                            "Call"
                        ],
                        [
                            "self.em_dropout(embedded)",
                            "Call"
                        ],
                        [
                            "embedded.view(1, batch_size, self.embedding_size)",
                            "Call"
                        ],
                        [
                            "torch.cat((embedded1, embedded2), dim=2)",
                            "Call"
                        ],
                        [
                            "self.em_dropout(embedded)",
                            "Call"
                        ]
                    ]
                },
                "lengths": {
                    "value": "input_lengths",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_lengths",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "pad_packed_sequence_33": {
                "variable": {
                    "value": "(outputs, output_lengths)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.gru(packed, hidden)",
                            "Call"
                        ],
                        [
                            "torch.nn.utils.rnn.pad_packed_sequence(outputs)",
                            "Call"
                        ],
                        [
                            "outputs[:, :, :self.hidden_size] + outputs[:, :, self.hidden_size:]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Linear_43": {
                "variable": {
                    "value": "self.attn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_44": {
                "variable": {
                    "value": "self.score",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Softmax_45": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "energy_in",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hidden, encoder_outputs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_79": {
                "variable": {
                    "value": "self.em_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Embedding_80": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "embedding_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ]
                    ]
                },
                "padding_idx": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GRU_81": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size + embedding_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dropout": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_82": {
                "variable": {
                    "value": "self.concat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_83": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_121": {
                "variable": {
                    "value": "self.attn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size + input_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_122": {
                "variable": {
                    "value": "self.score",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_131": {
                "variable": {
                    "value": "energy_in",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hidden, num_embeddings)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_145": {
                "variable": {
                    "value": "self.attn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size + input_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_146": {
                "variable": {
                    "value": "self.score",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_156": {
                "variable": {
                    "value": "energy_in",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hidden, encoder_outputs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_158": {
                "variable": {
                    "value": "score_feature",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.attn(energy_in)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_164": {
                "variable": {
                    "value": "attn_energies",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_energies",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.score(torch.tanh(self.attn(energy_in)))",
                            "Call"
                        ],
                        [
                            "attn_energies.squeeze(1)",
                            "Call"
                        ],
                        [
                            "attn_energies.view(max_len, this_batch_size).transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "attn_energies.masked_fill_(seq_mask.bool(), -1000000000000.0)",
                            "Call"
                        ],
                        [
                            "self.softmax(attn_energies)",
                            "Call"
                        ],
                        [
                            "self.score(score_feature)",
                            "Call"
                        ],
                        [
                            "attn_energies.squeeze(1)",
                            "Call"
                        ],
                        [
                            "attn_energies.view(max_len, this_batch_size).transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "attn_energies.masked_fill_(seq_mask.bool(), -1000000000000.0)",
                            "Call"
                        ],
                        [
                            "nn.functional.softmax(attn_energies, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_184": {
                "variable": {
                    "value": "self.embedding2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "input2_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input2_size",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "embedding2_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embedding2_size",
                            "Method Argument"
                        ]
                    ]
                },
                "padding_idx": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_185": {
                "variable": {
                    "value": "self.em_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "GRU_186": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embedding1_size + embedding2_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dropout": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "embedded",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(embedded1, embedded2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_195": {
                "variable": {
                    "value": "packed",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "embedded",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.embedding(input_seqs)",
                            "Call"
                        ],
                        [
                            "self.em_dropout(embedded)",
                            "Call"
                        ],
                        [
                            "self.embedding(input_seq)",
                            "Call"
                        ],
                        [
                            "self.em_dropout(embedded)",
                            "Call"
                        ],
                        [
                            "embedded.view(1, batch_size, self.embedding_size)",
                            "Call"
                        ],
                        [
                            "torch.cat((embedded1, embedded2), dim=2)",
                            "Call"
                        ],
                        [
                            "self.em_dropout(embedded)",
                            "Call"
                        ]
                    ]
                },
                "lengths": {
                    "value": "input_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_length",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "pad_packed_sequence_198": {
                "variable": {
                    "value": "(pade_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "pade_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.gru(packed, pade_hidden)",
                            "Call"
                        ],
                        [
                            "torch.nn.utils.rnn.pad_packed_sequence(pade_outputs)",
                            "Call"
                        ],
                        [
                            "pade_outputs[:, :, :self.hidden_size] + pade_outputs[:, :, self.hidden_size:]",
                            "BinOp"
                        ],
                        [
                            "pade_outputs.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "self.parse_gnn[i](pade_outputs, parse_graph[:, 2])",
                            "Call"
                        ],
                        [
                            "pade_outputs.transpose(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_215": {
                "variable": {
                    "value": "self.node_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_216": {
                "variable": {
                    "value": "self.node_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_217": {
                "variable": {
                    "value": "self.node_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_234": {
                "variable": {
                    "value": "node_info",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node_fc1(torch.matmul(graph, node))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_235": {
                "variable": {
                    "value": "node_info",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node_fc2(torch.matmul(graph, node_info))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_237": {
                "variable": {
                    "value": "agg_node_info",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(node, node_info)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_238": {
                "variable": {
                    "value": "agg_node_info",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node_out(agg_node_info)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diagflat_263": {
                "variable": {
                    "value": "diagmat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.ones(num_embedding.size(1), dtype=torch.long, device=num_embedding.device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_275": {
                "variable": {
                    "value": "gnn_info_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, encoder_outputs.size(0) + 1, encoder_outputs.size(-1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "num_embedding.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_293": {
                "variable": {
                    "value": "self.node1_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_294": {
                "variable": {
                    "value": "self.node1_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_295": {
                "variable": {
                    "value": "self.node2_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_296": {
                "variable": {
                    "value": "self.node2_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_297": {
                "variable": {
                    "value": "self.graph_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "node_dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_298": {
                "variable": {
                    "value": "self.node_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "node_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "node_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node_dim",
                            "Method Argument"
                        ],
                        [
                            "node_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_318": {
                "variable": {
                    "value": "node_info1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node1_fc1(torch.matmul(graph1, node))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_319": {
                "variable": {
                    "value": "node_info1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node1_fc2(torch.matmul(graph1, node_info1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_320": {
                "variable": {
                    "value": "node_info2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node2_fc1(torch.matmul(graph2, node))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_321": {
                "variable": {
                    "value": "node_info2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node2_fc2(torch.matmul(graph2, node_info2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_322": {
                "variable": {
                    "value": "gate",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(node_info1, node_info2, node_info1 + node_info2, node_info1 - node_info2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_323": {
                "variable": {
                    "value": "gate",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.graph_weight(gate)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_325": {
                "variable": {
                    "value": "agg_node_info",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(node, node_info)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_326": {
                "variable": {
                    "value": "agg_node_info",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.node_out(agg_node_info)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_343": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Parameter_345": {
                "variable": {
                    "value": "self.embedding_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.randn(1, input_size, hidden_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_348": {
                "variable": {
                    "value": "self.concat_l",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_349": {
                "variable": {
                    "value": "self.concat_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_350": {
                "variable": {
                    "value": "self.concat_lg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_351": {
                "variable": {
                    "value": "self.concat_rg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_353": {
                "variable": {
                    "value": "self.ops",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "op_nums",
                    "type": "variable",
                    "possible_values": [
                        [
                            "op_nums",
                            "Method Argument"
                        ],
                        [
                            "op_nums",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "stack_382": {
                "variable": {
                    "value": "current_node",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "current_node_temp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "cat_396": {
                "variable": {
                    "value": "embedding_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(embedding_weight, num_pades)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_398": {
                "variable": {
                    "value": "leaf_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(current_node, current_context)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_423": {
                "variable": {
                    "value": "self.embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "op_nums",
                    "type": "variable",
                    "possible_values": [
                        [
                            "op_nums",
                            "Method Argument"
                        ],
                        [
                            "op_nums",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "embedding_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ],
                        [
                            "embedding_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Dropout_424": {
                "variable": {
                    "value": "self.em_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_425": {
                "variable": {
                    "value": "self.generate_l",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2 + embedding_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_426": {
                "variable": {
                    "value": "self.generate_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2 + embedding_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_427": {
                "variable": {
                    "value": "self.generate_lg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2 + embedding_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_428": {
                "variable": {
                    "value": "self.generate_rg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2 + embedding_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tanh_438": {
                "variable": {
                    "value": "l_child",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.generate_l(torch.cat((node_embedding, current_context, node_label), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_439": {
                "variable": {
                    "value": "l_child_g",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.generate_lg(torch.cat((node_embedding, current_context, node_label), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_440": {
                "variable": {
                    "value": "r_child",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.generate_r(torch.cat((node_embedding, current_context, node_label), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_441": {
                "variable": {
                    "value": "r_child_g",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.generate_rg(torch.cat((node_embedding, current_context, node_label), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_454": {
                "variable": {
                    "value": "self.em_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_455": {
                "variable": {
                    "value": "self.merge",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2 + embedding_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_456": {
                "variable": {
                    "value": "self.merge_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2 + embedding_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tanh_463": {
                "variable": {
                    "value": "sub_tree",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.merge(torch.cat((node_embedding, sub_tree_1, sub_tree_2), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_464": {
                "variable": {
                    "value": "sub_tree_g",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.merge_g(torch.cat((node_embedding, sub_tree_1, sub_tree_2), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_222": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.pow(d, -0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_225": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.pow(d, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_303": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.pow(d, -0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_306": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.pow(d, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_55": {
                "input": {
                    "value": "self.attn(energy_in)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_100": {
                "tensors": {
                    "value": "(embedded, context.transpose(0, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_104": {
                "input": {
                    "value": "self.concat(torch.cat((rnn_output.squeeze(0), context.squeeze(1)), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_132": {
                "input": {
                    "value": "self.attn(energy_in)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_263": {
                "*size": {
                    "value": "num_embedding.size(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "num_embedding.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_283": {
                "input": {
                    "value": "gnn_info_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((batch_size, encoder_outputs.size(0) + 1, encoder_outputs.size(-1)), dtype=torch.float, device=num_embedding.device)",
                            "Call"
                        ],
                        [
                            "gnn_info_vec[:, :-1, :]",
                            "Subscript"
                        ],
                        [
                            "gnn_info_vec.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "encoder_outputs + gnn_info_vec",
                            "BinOp"
                        ]
                    ]
                }
            },
            "randn_345": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ],
                        [
                            "hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tanh_372": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.concat_l(c)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_373": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.concat_lg(c)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_378": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.concat_r(torch.cat((ld, c), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_379": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.concat_rg(torch.cat((ld, c), 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pow_222": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph.sum(1)",
                            "Call"
                        ],
                        [
                            "graph.sum(1)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "-0.5",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "pow_225": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph.sum(1)",
                            "Call"
                        ],
                        [
                            "graph.sum(1)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_234": {
                "input": {
                    "value": "graph",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph.float()",
                            "Call"
                        ],
                        [
                            "graph",
                            "Method Argument"
                        ],
                        [
                            "graph",
                            "Method Argument"
                        ],
                        [
                            "graph",
                            "Method Argument"
                        ]
                    ]
                },
                "other": {
                    "value": "node",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node",
                            "Method Argument"
                        ],
                        [
                            "node",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "matmul_235": {
                "input": {
                    "value": "graph",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph.float()",
                            "Call"
                        ],
                        [
                            "graph",
                            "Method Argument"
                        ],
                        [
                            "graph",
                            "Method Argument"
                        ],
                        [
                            "graph",
                            "Method Argument"
                        ]
                    ]
                },
                "other": {
                    "value": "node_info",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.relu(self.node_fc1(torch.matmul(graph, node)))",
                            "Call"
                        ],
                        [
                            "torch.relu(self.node_fc2(torch.matmul(graph, node_info)))",
                            "Call"
                        ],
                        [
                            "gate * node_info1 + (1 - gate) * node_info2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "pow_303": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph.sum(1)",
                            "Call"
                        ],
                        [
                            "graph.sum(1)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "-0.5",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "pow_306": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph.sum(1)",
                            "Call"
                        ],
                        [
                            "graph.sum(1)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_318": {
                "input": {
                    "value": "graph1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph1.float()",
                            "Call"
                        ],
                        [
                            "graph1",
                            "Method Argument"
                        ]
                    ]
                },
                "other": {
                    "value": "node",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node",
                            "Method Argument"
                        ],
                        [
                            "node",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "matmul_319": {
                "input": {
                    "value": "graph1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph1.float()",
                            "Call"
                        ],
                        [
                            "graph1",
                            "Method Argument"
                        ]
                    ]
                },
                "other": {
                    "value": "node_info1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.relu(self.node1_fc1(torch.matmul(graph1, node)))",
                            "Call"
                        ],
                        [
                            "torch.relu(self.node1_fc2(torch.matmul(graph1, node_info1)))",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_320": {
                "input": {
                    "value": "graph2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph2.float()",
                            "Call"
                        ],
                        [
                            "graph2",
                            "Method Argument"
                        ]
                    ]
                },
                "other": {
                    "value": "node",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node",
                            "Method Argument"
                        ],
                        [
                            "node",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "matmul_321": {
                "input": {
                    "value": "graph2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph2.float()",
                            "Call"
                        ],
                        [
                            "graph2",
                            "Method Argument"
                        ]
                    ]
                },
                "other": {
                    "value": "node_info2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.relu(self.node2_fc1(torch.matmul(graph2, node)))",
                            "Call"
                        ],
                        [
                            "torch.relu(self.node2_fc2(torch.matmul(graph2, node_info2)))",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_438": {
                "tensors": {
                    "value": "(node_embedding, current_context, node_label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_439": {
                "tensors": {
                    "value": "(node_embedding, current_context, node_label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_440": {
                "tensors": {
                    "value": "(node_embedding, current_context, node_label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_441": {
                "tensors": {
                    "value": "(node_embedding, current_context, node_label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_463": {
                "tensors": {
                    "value": "(node_embedding, sub_tree_1, sub_tree_2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_464": {
                "tensors": {
                    "value": "(node_embedding, sub_tree_1, sub_tree_2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_104": {
                "tensors": {
                    "value": "(rnn_output.squeeze(0), context.squeeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_378": {
                "tensors": {
                    "value": "(ld, c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_379": {
                "tensors": {
                    "value": "(ld, c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/train_and_evaluate.py": {
        "torch": {
            "is_available_13": {
                "variable": {
                    "value": "USE_CUDA",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_218": {
                "variable": {
                    "value": "all_node_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "all_node_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(all_node_outputs, dim=1)",
                            "Call"
                        ],
                        [
                            "all_node_outputs.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_241": {
                "variable": {
                    "value": "all_decoder_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "max_target_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "max(target_length)",
                            "Call"
                        ],
                        [
                            "max(target_length)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(input_length)",
                            "Call"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "decoder.output_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_383": {
                "variable": {
                    "value": "input1_var",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "transpose_384": {
                "variable": {
                    "value": "input2_var",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "transpose_385": {
                "variable": {
                    "value": "target1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "transpose_386": {
                "variable": {
                    "value": "target2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_389": {
                "variable": {
                    "value": "padding_hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_611": {
                "variable": {
                    "value": "input1_var",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_612": {
                "variable": {
                    "value": "input2_var",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_624": {
                "variable": {
                    "value": "padding_hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_184": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(op, num_score)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_261": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(input_length)",
                            "Call"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_549": {
                "variable": {
                    "value": "beam_scores",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "decoder.output_size * beam_len",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_552": {
                "variable": {
                    "value": "all_hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "beam_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(beam_list)",
                            "Call"
                        ],
                        [
                            "len(beam_list)",
                            "Call"
                        ],
                        [
                            "beam_len - 1",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "hidden_size_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "decoder_hidden.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "hidden_size_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "decoder_hidden.size(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_268": {
                "variable": {
                    "value": "beam_scores",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(input_length)",
                            "Call"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "decoder.output_size * beam_len",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_269": {
                "variable": {
                    "value": "all_hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "decoder_hidden.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_size * beam_len",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "decoder_hidden.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_270": {
                "variable": {
                    "value": "all_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "max_target_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "max(target_length)",
                            "Call"
                        ],
                        [
                            "max(target_length)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "batch_size * beam_len",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "decoder.output_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_575": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoder_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "decoder_output.cpu()",
                            "Call"
                        ],
                        [
                            "decoder(decoder_input, decoder_hidden, encoder_outputs, seq_mask)",
                            "Call"
                        ],
                        [
                            "decoder(decoder_input, decoder_hidden, encoder_outputs, seq_mask)",
                            "Call"
                        ],
                        [
                            "decoder(decoder_input, decoder_hidden, encoder_outputs, seq_mask)",
                            "Call"
                        ],
                        [
                            "decoder_output",
                            "Method Argument"
                        ],
                        [
                            "decoder_output",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_290": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoder_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "decoder_output.cpu()",
                            "Call"
                        ],
                        [
                            "decoder(decoder_input, decoder_hidden, encoder_outputs, seq_mask)",
                            "Call"
                        ],
                        [
                            "decoder(decoder_input, decoder_hidden, encoder_outputs, seq_mask)",
                            "Call"
                        ],
                        [
                            "decoder(decoder_input, decoder_hidden, encoder_outputs, seq_mask)",
                            "Call"
                        ],
                        [
                            "decoder_output",
                            "Method Argument"
                        ],
                        [
                            "decoder_output",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_479": {
                "tensors": {
                    "value": "(op, num_score)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}