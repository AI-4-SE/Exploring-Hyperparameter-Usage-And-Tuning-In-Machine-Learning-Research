{
    "interpolate.py": {
        "tensorflow": {
            "Graph_30": {
                "variable": {
                    "value": "graph",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_32": {
                "variable": {
                    "value": "tf_i0",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, height, width, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_33": {
                "variable": {
                    "value": "tf_i1",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, height, width, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "concat_35": {
                "variable": {
                    "value": "flow_comp_input",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf_i0, tf_i1]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Saver_70": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "concat_52": {
                "variable": {
                    "value": "flow_interp_input",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "concat_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[tf_i0, tf_i1, f_01, f_10, f_t0, f_t1, g_0, g_1]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Session_72": {
                "graph": {
                    "value": "graph",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Graph()",
                            "Call"
                        ]
                    ]
                }
            },
            "global_variables_initializer_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "tensorflow": {
            "cast_42": {
                "variable": {
                    "value": "v_00",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.concat([v_y0, v_x0], axis=3)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_43": {
                "variable": {
                    "value": "v_01",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.concat([v_y1, v_x0], axis=3)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_44": {
                "variable": {
                    "value": "v_10",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.concat([v_y0, v_x1], axis=3)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_45": {
                "variable": {
                    "value": "v_11",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.concat([v_y1, v_x1], axis=3)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_47": {
                "variable": {
                    "value": "img_00",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.gather_nd(img, v_00, batch_dims=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_48": {
                "variable": {
                    "value": "img_01",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.gather_nd(img, v_01, batch_dims=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_49": {
                "variable": {
                    "value": "img_10",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.gather_nd(img, v_10, batch_dims=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_50": {
                "variable": {
                    "value": "img_11",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.gather_nd(img, v_11, batch_dims=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "add_n_57": {
                "variable": {
                    "value": "o",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[w_00 * img_00, w_01 * img_01, w_10 * img_10, w_11 * img_11]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "maximum_18": {
                "x": {
                    "value": "min_value",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.math.minimum(max_value, x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_78": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[7, 7]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv1_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_80": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_81": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[7, 7]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv_1_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_83": {
                "variable": {
                    "value": "enc_1",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "avg_pool2d_84": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "enc_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "conv2d_87": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[5, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv2_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_89": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_90": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[5, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv_2_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_92": {
                "variable": {
                    "value": "enc_2",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "avg_pool2d_93": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "enc_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "conv2d_96": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv3_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_98": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_99": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv_3_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_101": {
                "variable": {
                    "value": "enc_3",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "avg_pool2d_102": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "enc_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "conv2d_105": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv4_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_107": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_108": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv_4_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_110": {
                "variable": {
                    "value": "enc_4",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "avg_pool2d_111": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "enc_4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "conv2d_114": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv5_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_116": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_117": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv_5_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_119": {
                "variable": {
                    "value": "enc_5",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "avg_pool2d_120": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "enc_5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "conv2d_123": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv6_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_125": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_126": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_enc_conv_6_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_128": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "resize_bilinear_132": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "images": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.shape(enc_5)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_4)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_3)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_2)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_1)[1:3]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "concat_133": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[enc_5, net]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_134": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv1_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_136": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_137": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv1_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_139": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "resize_bilinear_143": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "images": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.shape(enc_5)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_4)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_3)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_2)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_1)[1:3]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "concat_144": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[enc_4, net]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_145": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv2_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_147": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_148": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv2_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_150": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "resize_bilinear_154": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "images": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.shape(enc_5)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_4)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_3)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_2)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_1)[1:3]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "concat_155": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[enc_3, net]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_156": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv3_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_158": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_159": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv3_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_161": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "resize_bilinear_165": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "images": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.shape(enc_5)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_4)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_3)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_2)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_1)[1:3]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "concat_166": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[enc_2, net]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_167": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv4_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_169": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_170": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv4_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_172": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "resize_bilinear_176": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "images": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.shape(enc_5)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_4)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_3)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_2)[1:3]",
                            "Subscript"
                        ],
                        [
                            "tf.shape(enc_1)[1:3]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "concat_177": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[enc_1, net]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_178": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv5_1'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_180": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "conv2d_181": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "output_feature_maps",
                    "type": "variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "activation_fn": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope_prefix + '_dec_conv5_2'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_184": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "slim.conv2d(x, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [7, 7], activation_fn=None, scope=scope_prefix + '_enc_conv_1_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_1, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [5, 5], activation_fn=None, scope=scope_prefix + '_enc_conv_2_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_2, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_3_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_3, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_4_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_4, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_5_2')",
                            "Call"
                        ],
                        [
                            "slim.avg_pool2d(enc_5, [2, 2])",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv6_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_enc_conv_6_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_5, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 512, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv1_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_4, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 256, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv2_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_3, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 128, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv3_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_2, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 64, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv4_2')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "tf.image.resize_bilinear(net, shape)",
                            "Call"
                        ],
                        [
                            "tf.concat([enc_1, net], axis=3)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, 32, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_1')",
                            "Call"
                        ],
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ],
                        [
                            "slim.conv2d(net, output_feature_maps, [3, 3], activation_fn=None, scope=scope_prefix + '_dec_conv5_2')",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_sum_221": {
                "input_tensor": {
                    "value": "tf.sqrt(tf.square(ground_truth - prediction) + e ** 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_232": {
                "input_tensor": {
                    "value": "tf.square(ground_truth - prediction)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "minimum_18": {
                "x": {
                    "value": "max_value",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "floor_37": {
                "x": {
                    "value": "v_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(f_x + 1) / 2 * (width - 1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "floor_39": {
                "x": {
                    "value": "v_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(f_y + 1) / 2 * (height - 1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "concat_42": {
                "values": {
                    "value": "[v_y0, v_x0]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_43": {
                "values": {
                    "value": "[v_y1, v_x0]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_44": {
                "values": {
                    "value": "[v_y0, v_x1]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_45": {
                "values": {
                    "value": "[v_y1, v_x1]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_nd_47": {
                "params": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "v_00",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.concat([v_y0, v_x0], axis=3), dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "batch_dims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_nd_48": {
                "params": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "v_01",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.concat([v_y1, v_x0], axis=3), dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "batch_dims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_nd_49": {
                "params": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "v_10",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.concat([v_y0, v_x1], axis=3), dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "batch_dims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_nd_50": {
                "params": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "v_11",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.concat([v_y1, v_x1], axis=3), dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "batch_dims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_221": {
                "x": {
                    "value": "tf.square(ground_truth - prediction) + e ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_232": {
                "x": {
                    "value": "ground_truth - prediction",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "shape_131": {
                "input": {
                    "value": "enc_5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_142": {
                "input": {
                    "value": "enc_4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_153": {
                "input": {
                    "value": "enc_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_164": {
                "input": {
                    "value": "enc_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_175": {
                "input": {
                    "value": "enc_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.leaky_relu(net, alpha=0.1)",
                            "Call"
                        ]
                    ]
                }
            },
            "square_222": {
                "x": {
                    "value": "ground_truth - prediction",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "tensorflow": {
            "Graph_51": {
                "variable": {
                    "value": "graph",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_53": {
                "variable": {
                    "value": "tf_i0",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(args.batch_size, 720, 1280, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_55": {
                "variable": {
                    "value": "tf_i1",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(args.batch_size, 720, 1280, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "concat_63": {
                "variable": {
                    "value": "flow_comp_input",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf_i0, tf_i1]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Variable_114": {
                "variable": {
                    "value": "global_step",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "exponential_decay_116": {
                "variable": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "global_step": {
                    "value": "global_step",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(0)",
                            "Call"
                        ]
                    ]
                },
                "decay_steps": {
                    "value": "decay_iter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.decay_epochs * data.num_train_batches(args.batch_size)",
                            "BinOp"
                        ]
                    ]
                },
                "decay_rate": {
                    "value": "args.decay_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "staircase": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AdamOptimizer_119": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.train.exponential_decay(args.learning_rate, global_step, decay_iter, args.decay_factor, staircase=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "Saver_122": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "concat_85": {
                "variable": {
                    "value": "flow_interp_input",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "concat_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[tf_i0, tf_i1, f_01, f_10, f_t0, f_t1, g_0, g_1]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Session_124": {
                "graph": {
                    "value": "graph",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Graph()",
                            "Call"
                        ]
                    ]
                }
            },
            "global_variables_initializer_125": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_60": {
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(args.batch_size, 720, 1280, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "vgg16.py": {
        "tensorflow": {
            "constant_21": {
                "variable": {
                    "value": "self._conv1_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv1_1_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_22": {
                "variable": {
                    "value": "self._conv1_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv1_1_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_23": {
                "variable": {
                    "value": "self._conv1_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv1_2_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_24": {
                "variable": {
                    "value": "self._conv1_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv1_2_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_25": {
                "variable": {
                    "value": "self._conv2_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv2_1_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_26": {
                "variable": {
                    "value": "self._conv2_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv2_1_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_27": {
                "variable": {
                    "value": "self._conv2_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv2_2_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_28": {
                "variable": {
                    "value": "self._conv2_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv2_2_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_29": {
                "variable": {
                    "value": "self._conv3_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv3_1_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_30": {
                "variable": {
                    "value": "self._conv3_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv3_1_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_31": {
                "variable": {
                    "value": "self._conv3_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv3_2_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_32": {
                "variable": {
                    "value": "self._conv3_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv3_2_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_33": {
                "variable": {
                    "value": "self._conv3_3_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv3_3_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_34": {
                "variable": {
                    "value": "self._conv3_3_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv3_3_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_35": {
                "variable": {
                    "value": "self._conv4_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv4_1_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_36": {
                "variable": {
                    "value": "self._conv4_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv4_1_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_37": {
                "variable": {
                    "value": "self._conv4_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv4_2_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_38": {
                "variable": {
                    "value": "self._conv4_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv4_2_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_39": {
                "variable": {
                    "value": "self._conv4_3_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv4_3_W']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_40": {
                "variable": {
                    "value": "self._conv4_3_biases",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights['conv4_3_b']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "constant_42": {
                "variable": {
                    "value": "self._mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "[123.68, 116.779, 103.939]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1, 1, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "conv2d_58": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv1_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_60": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv1_1_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_63": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv1_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_65": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv1_2_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool_67": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "conv2d_71": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv2_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_73": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv2_1_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_76": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv2_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_78": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv2_2_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool_80": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "conv2d_84": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv3_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_86": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv3_1_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_89": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv3_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_91": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv3_2_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_94": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv3_3_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_96": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv3_3_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool_98": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "conv2d_102": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv4_1_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_104": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv4_1_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_107": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv4_2_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_109": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv4_2_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_112": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self._conv4_3_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_114": {
                "variable": {
                    "value": "conv_4_3",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(net, self._conv4_3_biases)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "bias_add_60": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv1_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_65": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv1_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_73": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv2_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_78": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv2_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_86": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv3_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_91": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv3_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_96": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv3_3_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_104": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv4_1_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_109": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv4_2_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_114": {
                "value": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x - self._mean",
                            "BinOp"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv1_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv1_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv2_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv2_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv3_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv3_3_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.avg_pool(net, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_1_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_1_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_2_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(net, self._conv4_2_biases))",
                            "Call"
                        ],
                        [
                            "tf.nn.conv2d(net, self._conv4_3_kernel, [1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self._conv4_3_biases",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}