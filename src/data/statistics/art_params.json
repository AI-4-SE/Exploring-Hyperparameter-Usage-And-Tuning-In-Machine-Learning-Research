{
    "data_prep/featurize_and_match.py": {
        "torch": {
            "device_18": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_57": {
                "variable": {
                    "value": "data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ArtDataset(metadata_fn, data_dir, data_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_65": {
                "variable": {
                    "value": "cut_model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(model.children())[:-1]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "squeeze_71": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cut_model(inputs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_85": {
                "variable": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "all_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "np.concatenate(all_outputs, axis=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_88": {
                "variable": {
                    "value": "indicies",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "features.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_101": {
                "variable": {
                    "value": "masks[culture][culture]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "culture_arr == culture",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "from_numpy_103": {
                "variable": {
                    "value": "masks[medium][medium]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "media_arr == medium",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_110": {
                "variable": {
                    "value": "all_dists",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features * feature",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_tensor_43": {
                "obj": {
                    "value": "idx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "idx.tolist()",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_86": {
                "input": {
                    "value": "torch.sum(features ** 2, dim=1, keepdim=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "topk_114": {
                "variable": {
                    "value": "(dists, inds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "all_dists[selected_indicies]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "k": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "min(10, selected_indicies.shape[0])",
                            "Call"
                        ],
                        [
                            "min(10, selected_indicies.shape[0])",
                            "Call"
                        ]
                    ]
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "topk_119": {
                "variable": {
                    "value": "(dists, inds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "all_dists[selected_indicies]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "k": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "min(10, selected_indicies.shape[0])",
                            "Call"
                        ],
                        [
                            "min(10, selected_indicies.shape[0])",
                            "Call"
                        ]
                    ]
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_86": {
                "input": {
                    "value": "features ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}