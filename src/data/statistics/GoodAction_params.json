{
    "good_action/GP.py": {
        "sklearn": {
            "MinMaxScaler_47": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "euclidean_distances_90": {
                "variable": {
                    "value": "Euc_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.reshape(x1, (-1, x2.shape[1]))",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "good_action/GPBO.py": {
        "sklearn": {
            "MinMaxScaler_27": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "good_action/functions.py": {
        "sklearn": {
            "load_boston_406": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "good_action/BO_methods.py": {
        "torch": {
            "SobolEngine_25": {
                "variable": {
                    "value": "self.sobol",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dimension": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scramble": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}