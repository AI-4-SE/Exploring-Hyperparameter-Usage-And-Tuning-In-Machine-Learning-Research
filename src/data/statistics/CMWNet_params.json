{
    "dataset.py": {
        "torch": {
            "DataLoader_194": {
                "variable": {
                    "value": "loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "RGBDTrainDataset(root=dataset_info, shape=shape)",
                            "Call"
                        ],
                        [
                            "RGBDTestDataset(root=(te_data_name, te_data_path), shape=shape)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "partial(customized_worker_init_fn, base_seed=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_211": {
                "variable": {
                    "value": "loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "RGBDTrainDataset(root=dataset_info, shape=shape)",
                            "Call"
                        ],
                        [
                            "RGBDTestDataset(root=(te_data_name, te_data_path), shape=shape)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "partial(customized_worker_init_fn, base_seed=0)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "no_grad_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_198": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[{'params': [param for (name, param) in model.named_parameters() if name[-4:] == 'bias'], 'lr': 2 * lr, 'weight_decay': 0}, {'params': [param for (name, param) in model.named_parameters() if name[-4:] != 'bias'], 'lr': lr, 'weight_decay': weight_decay}]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.005",
                            "float"
                        ]
                    ]
                },
                "momentum": {
                    "value": "momentum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.9",
                            "float"
                        ]
                    ]
                }
            },
            "GradScaler_225": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "enabled": {
                    "value": "use_amp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "bool"
                        ]
                    ]
                }
            },
            "load_196": {
                "f": {
                    "value": "load_from",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''",
                            "str"
                        ]
                    ]
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "autocast_103": {
                "enabled": {
                    "value": "use_amp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "bool"
                        ]
                    ]
                }
            },
            "save_134": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "final_state_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(pth_path, 'state_final.pth')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Sequential_18": {
                "variable": {
                    "value": "rgb_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*head_convs[:3]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_19": {
                "variable": {
                    "value": "shared_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*head_convs[3:-1]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_20": {
                "variable": {
                    "value": "depth_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 64, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleDict_29": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "modules": {
                    "value": "dict(rgb_head=rgb_head, depth_head=depth_head, shared_head=shared_head, layer1=nn.Sequential(*list(net.children())[0][6:13]), layer2=nn.Sequential(*list(net.children())[0][13:23]), layer3=nn.Sequential(*list(net.children())[0][23:33]), layer4=nn.Sequential(*list(net.children())[0][33:43]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_101": {
                "variable": {
                    "value": "fd",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.loc_3x3_1(fd), self.loc_3x3_2(fd), self.glo_3x3(fd), self.glo_7x7(fd)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_117": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_dim, out_dim, 3, 1, 1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_144": {
                "variable": {
                    "value": "self.up_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(max(out_dims), min(out_dims), 2, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_165": {
                "variable": {
                    "value": "f_cmw",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[f_de_l, self.up_conv(f_de_h)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_195": {
                "variable": {
                    "value": "self.d_12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "ConvBNReLU(256 + 64 * 2, 64, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_200": {
                "variable": {
                    "value": "self.d_34",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "ConvBNReLU(512 + 256 * 2, 256, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_207": {
                "variable": {
                    "value": "self.d_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "ConvBNReLU(512, 512, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_215": {
                "variable": {
                    "value": "self.sal_head_12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_216": {
                "variable": {
                    "value": "self.sal_head_34",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_217": {
                "variable": {
                    "value": "self.sal_head_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_22": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_82": {
                "variable": {
                    "value": "self.fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(4 * mid_dim, out_dim, 2, 2, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_268": {
                "variable": {
                    "value": "sod_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "preds",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "cus_sample(gts, mode='size', factors=preds.shape[2:])",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(4 * mid_dim, out_dim, 2, 2, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_94": {
                "variable": {
                    "value": "self.fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(4 * mid_dim, out_dim, 3, 1, 1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "in_channels": {
                    "value": "in_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_119": {
                "num_features": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sigmoid_120": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_145": {
                "in_channels": {
                    "value": "max(out_dims)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "min(out_dims)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_146": {
                "num_features": {
                    "value": "min(out_dims)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_147": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_148": {
                "in_channels": {
                    "value": "min(out_dims)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "min(out_dims)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_149": {
                "num_features": {
                    "value": "min(out_dims)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_150": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_204": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_205": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_211": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_212": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_240": {
                "tensors": {
                    "value": "[d_34, d_5]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_241": {
                "tensors": {
                    "value": "[d_12, d_34]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_34": {
                "*args": {
                    "value": "*list(net.children())[0][6:13]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_35": {
                "*args": {
                    "value": "*list(net.children())[0][13:23]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "*args": {
                    "value": "*list(net.children())[0][23:33]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_37": {
                "*args": {
                    "value": "*list(net.children())[0][33:43]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_69": {
                "num_features": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_83": {
                "in_channels": {
                    "value": "4 * mid_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_84": {
                "num_features": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sigmoid_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_89": {
                "in_channels": {
                    "value": "4 * mid_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_90": {
                "num_features": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sigmoid_91": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "in_channels": {
                    "value": "4 * mid_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_96": {
                "num_features": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sigmoid_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "Parameter_29": {
                "variable": {
                    "value": "new_conv_layer.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "new_weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ori_weight[:, :in_dim]",
                            "Subscript"
                        ],
                        [
                            "torch.repeat_interleave(ori_weight, repeats=in_dim // i + 1, dim=1)[:, :in_dim]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "no_grad_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "interpolate_86": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feat",
                    "type": "variable",
                    "possible_values": []
                },
                "mode": {
                    "value": "interpolation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'bilinear'",
                            "Method Argument"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "align_corners",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "manual_seed_283": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_284": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_all_285": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "repeat_interleave_26": {
                "input": {
                    "value": "ori_weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "conv_layer.weight",
                            "Attribute"
                        ]
                    ]
                },
                "repeats": {
                    "value": "in_dim // i + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}