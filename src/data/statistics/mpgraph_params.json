{
    "test_utils/test_scipy_comparison.py": {
        "sklearn": {
            "lars_path_78": {
                "variable": {
                    "value": "(alphas, active, coefs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "X": {
                    "value": "B_beta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.sqrt(y_beta.shape[0]) * B_beta",
                            "BinOp"
                        ],
                        [
                            "np.sqrt(y_beta.shape[0]) * B_beta",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "y_beta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.sqrt(y_beta.shape[0]) * y_beta",
                            "BinOp"
                        ],
                        [
                            "np.sqrt(y_beta.shape[0]) * y_beta",
                            "BinOp"
                        ]
                    ]
                },
                "method": {
                    "value": "lar",
                    "type": "str",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "self.problem['upper_bound_tilingcreation']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "lars_path_150": {
                "variable": {
                    "value": "(alphas, active, coefs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "X": {
                    "value": "B_beta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.sqrt(y_beta.shape[0]) * B_beta",
                            "BinOp"
                        ],
                        [
                            "np.sqrt(y_beta.shape[0]) * B_beta",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "y_beta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.sqrt(y_beta.shape[0]) * y_beta",
                            "BinOp"
                        ],
                        [
                            "np.sqrt(y_beta.shape[0]) * y_beta",
                            "BinOp"
                        ]
                    ]
                },
                "method": {
                    "value": "lasso",
                    "type": "str",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "self.problem['upper_bound_tilingcreation']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}