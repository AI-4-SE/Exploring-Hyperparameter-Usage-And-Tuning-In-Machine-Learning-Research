{
    "commonsense/tune.py": {
        "sklearn": {
            "roc_auc_score_56": {
                "variable": {
                    "value": "auc",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "all_y",
                    "type": "Name",
                    "possible_values": []
                },
                "y_score": {
                    "value": "all_probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "DataLoader_31": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'cm', 'train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_32": {
                "variable": {
                    "value": "test_hard_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_hard_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'cm', 'test_hard')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_33": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'cm', 'test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_34": {
                "variable": {
                    "value": "ambig_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ambig_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'cm', 'ambig')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_35": {
                "variable": {
                    "value": "long_test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "long_test_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'cm', 'long_test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "deontology/tune.py": {
        "torch": {
            "DataLoader_27": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'deontology', 'train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_28": {
                "variable": {
                    "value": "test_hard_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_hard_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'deontology', 'test_hard')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_29": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'deontology', 'test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "justice/tune.py": {
        "torch": {
            "DataLoader_27": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'justice', 'train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_28": {
                "variable": {
                    "value": "test_hard_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_hard_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'justice', 'test_hard')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_29": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'justice', 'test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "probe.py": {
        "torch": {
            "tensor_34": {
                "variable": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "ids",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[tokenizer.convert_tokens_to_ids(t) for t in tokenized]",
                            "ListComp"
                        ],
                        [
                            "np.array([np.pad(i, (0, max_length - len(i)), mode='constant') for i in ids])",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_35": {
                "variable": {
                    "value": "masks",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "amasks",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "DataParallel_14": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "AutoModelForSequenceClassification.from_pretrained(model, config=config)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, device_ids=[i for i in range(ngpus)])",
                            "Call"
                        ],
                        [
                            "load_model(args.model, args.ngpus, load_path)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[i for i in range(ngpus)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "load_11": {
                "f": {
                    "value": "load_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'{}_{}.pt'.format(args.data, args.model)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_49": {
                "input": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model(input_ids, attention_mask=input_mask)[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_49": {
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "utilitarianism/tune.py": {
        "torch": {
            "DataLoader_22": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'util', 'train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_23": {
                "variable": {
                    "value": "test_hard_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_hard_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'util', 'test_hard')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_24": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'util', 'test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "DataParallel_37": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "AutoModelForSequenceClassification.from_pretrained(args.model, config=config)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, device_ids=[i for i in range(args.ngpus)])",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[i for i in range(args.ngpus)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Subset_62": {
                "variable": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TensorDataset(inputs, masks, labels)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "train_idxs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "all_idxs[train_mask]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Subset_63": {
                "variable": {
                    "value": "test_data",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TensorDataset(inputs, masks, labels)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "test_idxs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "all_idxs[test_mask]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "TensorDataset_138": {
                "variable": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "inputs",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_134": {
                "variable": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[even_inputs, odd_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_135": {
                "variable": {
                    "value": "labels",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[even_labels, odd_labels]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_136": {
                "variable": {
                    "value": "masks",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[even_masks, odd_masks]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_126": {
                "data": {
                    "value": "amasks",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "load_34": {
                "f": {
                    "value": "load_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "virtue/tune.py": {
        "torch": {
            "DataLoader_27": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'virtue', 'train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_28": {
                "variable": {
                    "value": "test_hard_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_hard_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'virtue', 'test_hard')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_29": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "load_process_data(args, data_dir, 'virtue', 'test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}