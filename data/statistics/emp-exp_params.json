{
    "evaluate.py": {
        "sklearn": {
            "f1_score_78": {
                "variable": {
                    "value": "f1",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[label.item() for label in labels]",
                            "ListComp"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[torch.argmax(logits).item() for logits in predictions]",
                            "ListComp"
                        ]
                    ]
                },
                "average": {
                    "value": "weighted",
                    "type": "str",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "DataLoader_21": {
                "variable": {
                    "value": "dataloader_target",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_dataset(name=name_target, config=config_target)",
                            "Call"
                        ],
                        [
                            "get_dataset(name=name_target, config=config_target)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_70": {
                "variable": {
                    "value": "dataloader_target",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_dataset(name=name_target, config=config_target)",
                            "Call"
                        ],
                        [
                            "get_dataset(name=name_target, config=config_target)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_31": {
                "variable": {
                    "value": "dataloader_approximation",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_approximation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_dataset(name=name_approximation, config=config_approximation)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mse_loss_41": {
                "variable": {
                    "value": "mse",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attributions_approximation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "approximation['attributions']",
                            "Subscript"
                        ]
                    ]
                },
                "target": {
                    "value": "attributions_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target['attributions']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "argmax_76": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "all_35": {
                "input": {
                    "value": "target['input_ids'] == approximation['input_ids']",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "sklearn": {
            "f1_score_54": {
                "variable": {
                    "value": "res",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self._y_pred.cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self._y_true.cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "self.average",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "DataLoader_264": {
                "variable": {
                    "value": "loader_train",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_reader_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_dataset(name=name_dataset_reader_train, config=config_dataset_reader_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['batch_size_train']",
                            "Subscript"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_268": {
                "variable": {
                    "value": "loader_validation",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_reader_validation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_dataset(name=name_dataset_reader_test, config=config_dataset_reader_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size_validation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['batch_size_validation']",
                            "Subscript"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_273": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "argmax_43": {
                "variable": {
                    "value": "y_pred_max_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(**batch).logits",
                            "Attribute"
                        ],
                        [
                            "model(inputs)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_128": {
                "variable": {
                    "value": "res.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "res.seq_len * res.dim_embedding",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "res.seq_len",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_169": {
                "seed": {
                    "value": "123",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_49": {
                "variable": {
                    "value": "self._y_true",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self._y_true, y)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_50": {
                "variable": {
                    "value": "self._y_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self._y_pred, y_pred_max_indices)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_like_134": {
                "variable": {
                    "value": "attention_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "batch['input_ids']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MSELoss_192": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_258": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_113": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "read_path(config['downstream'])",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_138": {
                "variable": {
                    "value": "attention_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "batch['input_ids']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_210": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_218": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "explain.py": {
        "torch": {
            "DataLoader_340": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_dataset(name=config_dataset['name'], config=config_dataset['config'])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['batch_size']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "argmax_206": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "explainer.explain(batch)",
                            "Call"
                        ],
                        [
                            "self.forward_func(inputs, *additional_forward_args)",
                            "Call"
                        ],
                        [
                            "self.forward_func(inputs, *additional_forward_args)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_214": {
                "variable": {
                    "value": "attributions",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attributions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "explainer.explain(batch)",
                            "Call"
                        ],
                        [
                            "self.explainer.attribute(inputs=inputs, n_steps=self.n_samples, additional_forward_args=additional_forward_args, target=target, baselines=base_line, internal_batch_size=self.internal_batch_size)",
                            "Call"
                        ],
                        [
                            "torch.sum(attributions, dim=2)",
                            "Call"
                        ],
                        [
                            "attributions.T",
                            "Attribute"
                        ],
                        [
                            "self.explainer.attribute(inputs=inputs, n_samples=self.n_samples, additional_forward_args=additional_forward_args, target=target, baselines=base_line, feature_mask=feature_mask)",
                            "Call"
                        ],
                        [
                            "self.explainer(inputs)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_240": {
                "variable": {
                    "value": "feature_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "special_tokens_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "special_tokens_mask",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "argmax_255": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "explainer.explain(batch)",
                            "Call"
                        ],
                        [
                            "self.forward_func(inputs, *additional_forward_args)",
                            "Call"
                        ],
                        [
                            "self.forward_func(inputs, *additional_forward_args)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_288": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "read_path(config['path_model'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_334": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_136": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "res.path_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "run_job.py": {
        "torch": {
            "manual_seed_21": {
                "seed": {
                    "value": "123",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils_and_base_types.py": {
        "torch": {}
    },
    "visualize.py": {
        "torch": {
            "argmax_135": {
                "input": {
                    "value": "instance['predictions']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}