{
    "GAN.py": {
        "torch": {
            "randn_214": {
                "variable": {
                    "value": "z0",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "seq.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "z0_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "10",
                            "Constant"
                        ]
                    ]
                }
            },
            "randn_215": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "seq.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "z_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "20",
                            "Constant"
                        ]
                    ]
                }
            },
            "Sequential_23": {
                "variable": {
                    "value": "self.block1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*linear_block(in_dim, 1024, batch_norm)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_30": {
                "variable": {
                    "value": "self.block2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*l",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_32": {
                "variable": {
                    "value": "self.block3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*output_block(1024, out_dim)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_86": {
                "variable": {
                    "value": "z_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z0, z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_88": {
                "variable": {
                    "value": "o1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z0, o0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LSTM_105": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "KEYPOINTS * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "randn_111": {
                "variable": {
                    "value": "h0",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "seq.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_112": {
                "variable": {
                    "value": "c0",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "seq.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_126": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "in_out_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "self.l",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*output_block(hidden_dim, in_out_dim)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "randn_133": {
                "variable": {
                    "value": "h0",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "seq.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_134": {
                "variable": {
                    "value": "c0",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "seq.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_155": {
                "variable": {
                    "value": "self.encoding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*l",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_157": {
                "variable": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*output_block(hidden_dim[-1], z0_dim)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_160": {
                "variable": {
                    "value": "self.logvar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*output_block(hidden_dim[-1], z0_dim)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_171": {
                "variable": {
                    "value": "self.decoding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*l",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "in_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_9": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_16": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_16": {
                "in_features": {
                    "value": "in_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "exp_183": {
                "variable": {
                    "value": "std",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logvar / 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_234": {
                "input": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "g0(s)",
                            "Call"
                        ],
                        [
                            "g0(s, separate_xy=True)",
                            "Call"
                        ],
                        [
                            "super(Gen0, self).forward(z.reshape((-1, self.z0_dim)))",
                            "Call"
                        ],
                        [
                            "super(Gen0, self).forward(z)",
                            "Call"
                        ],
                        [
                            "self.l(o0.reshape((-1, self.hidden_dim)))",
                            "Call"
                        ]
                    ]
                }
            },
            "any_234": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm1d_11": {
                "num_features": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "randn_like_185": {
                "input": {
                    "value": "mu",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.mu(h)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "dataset.py": {
        "torch": {}
    },
    "generate_human_actions_wgan.py": {
        "torch": {
            "DataLoader_40": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "NTUSkeletonDataset(root_dir=dataroot, pinpoint=21, pin_body=1)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RMSprop_116": {
                "variable": {
                    "value": "optimizer_G",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "generator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5e-05",
                            "Constant"
                        ]
                    ]
                }
            },
            "RMSprop_117": {
                "variable": {
                    "value": "optimizer_D",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "discriminator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5e-05",
                            "Constant"
                        ]
                    ]
                }
            },
            "device_110": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() and ngpu > 0 else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_113": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*block(latent_dim, 128, normalize=True)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_85": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(int(np.prod(img_shape)), 512)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_186": {
                "variable": {
                    "value": "input_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "input_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "valid_data(data)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(input_x)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_240": {
                "obj": {
                    "value": "{'generator_state_dict': generator.state_dict(), 'discriminator_state_dict': discriminator.state_dict(), 'optimizer_G_state_dict': optimizer_G.state_dict(), 'optimizer_D_state_dict': optimizer_D.state_dict(), 'epoch': epoch, 'loss_D': loss_D.item(), 'loss_G': loss_G.item(), 'total_invalid_frame': total_invalid_frame}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "model_saving_dir",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'simple_wgan_exp/model_checkpoint/cp_epoch_%d_.tar' % epoch",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Linear_72": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "PERSON * KEYPOINTS * DIM",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "in_features": {
                    "value": "int(np.prod(img_shape))",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_88": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_89": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_90": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_91": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_92": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_93": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_94": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_198": {
                "input": {
                    "value": "discriminator(fake_skeleton)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "in_features": {
                    "value": "in_feat",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_feat",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_111": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mean_197": {
                "input": {
                    "value": "discriminator(real_skeleton)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_220": {
                "input": {
                    "value": "discriminator(gen_skeleton)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm1d_61": {
                "num_features": {
                    "value": "out_feat",
                    "type": "Variable",
                    "possible_values": []
                },
                "eps": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "generation.py": {
        "torch": {
            "is_available_5": {
                "variable": {
                    "value": "cuda",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_6": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "load_7": {
                "variable": {
                    "value": "m",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "fname",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'samples_sf'",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.device('cuda:0' if cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_14": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "max_frames[0] * max_frames[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "in_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "vae0_train.py": {
        "torch": {
            "DataLoader_38": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "NTUSkeletonDataset(root_dir=dataroot, pinpoint=1, merge=2)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_41": {
                "variable": {
                    "value": "cuda",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_42": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "RMSprop_48": {
                "variable": {
                    "value": "optimizer_G",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "generator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lrG",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5e-05",
                            "Constant"
                        ]
                    ]
                }
            },
            "RMSprop_49": {
                "variable": {
                    "value": "optimizer_D",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "discriminator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lrD",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5e-05",
                            "Constant"
                        ]
                    ]
                }
            },
            "MSELoss_53": {
                "variable": {
                    "value": "mse",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_123": {
                "obj": {
                    "value": "m",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "copy.deepcopy(generator.state_dict())",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "'vae0_%d.pt' % epoch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_66": {
                "input": {
                    "value": "discriminator(real_skeleton)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_76": {
                "input": {
                    "value": "discriminator(fake_rec)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_77": {
                "input": {
                    "value": "discriminator(fake_stn)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_98": {
                "input": {
                    "value": "logvar - std ** 2 - mu ** 2 + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_101": {
                "input": {
                    "value": "discriminator(fake_rec)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_102": {
                "input": {
                    "value": "discriminator(fake_stn)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}