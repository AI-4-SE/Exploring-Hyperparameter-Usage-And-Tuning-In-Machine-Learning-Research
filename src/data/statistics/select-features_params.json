{
    "utility/classifier.py": {
        "sklearn": {
            "train_test_split_42": {
                "variable": {
                    "value": "(x_train, x_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "label",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_54": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "accuracy_score_83": {
                "variable": {
                    "value": "result",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_predict",
                    "type": "Name",
                    "possible_values": [
                        [
                            "classifier.predict(x_test)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}