{
    "MNIST/LASSO-DCT.py": {
        "sklearn": {
            "Lasso_47": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "alpha": {
                    "value": "2e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "mean_squared_error_51": {
                "variable": {
                    "value": "MSE",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Variable(b_xx).data.numpy()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model.coef_.reshape(1, 784)",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "DataLoader_16": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.MNIST(root='./mnist/', train=False, transform=torchvision.transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_32": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "A1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "M",
                            "Name"
                        ]
                    ]
                }
            },
            "from_numpy_33": {
                "variable": {
                    "value": "At",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.transpose(A1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_41": {
                "variable": {
                    "value": "Noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "data2['Noise']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "X-ray Images/LASSO-DCT.py": {
        "sklearn": {
            "Lasso_60": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "alpha": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "mean_squared_error_65": {
                "variable": {
                    "value": "MSE",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Variable(b_xx).data.numpy()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "idctpredicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "idctOutput(predicted).reshape(1, 128 * 128)",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "DataLoader_14": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Testing_set', transform=transforms.Compose([transforms.Grayscale(num_output_channels=1), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "Facial Images/AE-PGD_celeba.py": {
        "torch": {
            "DataLoader_12": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Testing_set', transform=transforms.Compose([transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_50": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "A1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "M",
                            "Name"
                        ]
                    ]
                }
            },
            "MSELoss_51": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(64 * 64 * 3, 12000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3000, 12000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_37": {
                "f": {
                    "value": "AE-trained.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "mm_62": {
                "variable": {
                    "value": "y1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(b_x1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_63": {
                "variable": {
                    "value": "y2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(b_x2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_64": {
                "variable": {
                    "value": "y3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(b_x3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_65": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y1, y2, y3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mm_66": {
                "variable": {
                    "value": "s_hat1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "y1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mm(A, torch.t(b_x1)).detach()",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_67": {
                "variable": {
                    "value": "s_hat2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "y2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mm(A, torch.t(b_x2)).detach()",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_68": {
                "variable": {
                    "value": "s_hat3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "y3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mm(A, torch.t(b_x3)).detach()",
                            "Call"
                        ]
                    ]
                }
            },
            "t_69": {
                "variable": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([s_hat1, s_hat2, s_hat3], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "narrow_82": {
                "variable": {
                    "value": "x_hat1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decoded.view(64 * 64 * 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "64 * 64",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "narrow_83": {
                "variable": {
                    "value": "x_hat2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decoded.view(64 * 64 * 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "64 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "length": {
                    "value": "64 * 64",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "narrow_84": {
                "variable": {
                    "value": "x_hat3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decoded.view(64 * 64 * 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "64 * 64 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "length": {
                    "value": "64 * 64",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mm_89": {
                "variable": {
                    "value": "gradient1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "tem1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "y1 - torch.mm(A, x_hat1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mm_90": {
                "variable": {
                    "value": "gradient2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "tem2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "y2 - torch.mm(A, x_hat2)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mm_91": {
                "variable": {
                    "value": "gradient3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "tem3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "y3 - torch.mm(A, x_hat3)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "t_92": {
                "variable": {
                    "value": "compare1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_hat1 + umin * gradient1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "t_93": {
                "variable": {
                    "value": "compare2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_hat2 + umin * gradient2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "t_94": {
                "variable": {
                    "value": "compare3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_hat3 + umin * gradient3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_95": {
                "variable": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[compare1, compare2, compare3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "in_features": {
                    "value": "64 * 64 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_21": {
                "in_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_25": {
                "in_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_27": {
                "in_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64 * 64 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_66": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "t_67": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "t_68": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_69": {
                "tensors": {
                    "value": "[s_hat1, s_hat2, s_hat3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log10_108": {
                "input": {
                    "value": "xxx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.max(b_x) ** 2 / MSE",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mm_86": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "x_hat1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.narrow(x_hat, 0, 0, 64 * 64)",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_87": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "x_hat2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.narrow(x_hat, 0, 64 * 64, 64 * 64)",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_88": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "x_hat3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.narrow(x_hat, 0, 64 * 64 * 2, 64 * 64)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_89": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "t_90": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "t_91": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_96": {
                "tensors": {
                    "value": "[torch.mm(A, torch.t(compare1)).detach(), torch.mm(A, torch.t(compare2)).detach(), torch.mm(A, torch.t(compare2)).detach()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_107": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 64 * 64 * 3)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_62": {
                "input": {
                    "value": "b_x1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x1.view(-1, 64 * 64)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_63": {
                "input": {
                    "value": "b_x2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x2.view(-1, 64 * 64)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_64": {
                "input": {
                    "value": "b_x3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x3.view(-1, 64 * 64)",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_96": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(compare1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_97": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(compare2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_98": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(compare2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "t_96": {
                "input": {
                    "value": "compare1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.t(x_hat1 + umin * gradient1)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_97": {
                "input": {
                    "value": "compare2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.t(x_hat2 + umin * gradient2)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_98": {
                "input": {
                    "value": "compare2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.t(x_hat2 + umin * gradient2)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Facial Images/AE-UNET_train.py": {
        "torch": {
            "DataLoader_19": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Training_set', transform=transforms.Compose([transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_86": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "unet.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Constant"
                        ]
                    ]
                }
            },
            "MSELoss_87": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_133": {
                "obj": {
                    "value": "unet.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "Unet-trained.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_ch, out_ch, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MaxPool2d_41": {
                "variable": {
                    "value": "self.pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_43": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_45": {
                "variable": {
                    "value": "self.pool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_47": {
                "variable": {
                    "value": "self.pool4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_49": {
                "variable": {
                    "value": "self.up6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_51": {
                "variable": {
                    "value": "self.up7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_53": {
                "variable": {
                    "value": "self.up8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_55": {
                "variable": {
                    "value": "self.up9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "variable": {
                    "value": "self.conv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_70": {
                "variable": {
                    "value": "merge6",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_6, c4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_73": {
                "variable": {
                    "value": "merge7",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_7, c3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_76": {
                "variable": {
                    "value": "merge8",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_8, c2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_79": {
                "variable": {
                    "value": "merge9",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_9, c1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_92": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(64 * 64 * 3, 12000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_99": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3000, 12000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_113": {
                "f": {
                    "value": "AE-trained.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_93": {
                "in_features": {
                    "value": "64 * 64 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_96": {
                "in_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_101": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_102": {
                "in_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64 * 64 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Facial Images/Unet-refine.py": {
        "torch": {
            "Sequential_9": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_ch, out_ch, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MaxPool2d_25": {
                "variable": {
                    "value": "self.pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_27": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "self.pool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_31": {
                "variable": {
                    "value": "self.pool4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_33": {
                "variable": {
                    "value": "self.up6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_35": {
                "variable": {
                    "value": "self.up7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_37": {
                "variable": {
                    "value": "self.up8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_39": {
                "variable": {
                    "value": "self.up9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "variable": {
                    "value": "self.conv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "merge6",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_6, c4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_57": {
                "variable": {
                    "value": "merge7",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_7, c3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_60": {
                "variable": {
                    "value": "merge8",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_8, c2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "merge9",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_9, c1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_69": {
                "f": {
                    "value": "Unet-trained.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "from_numpy_77": {
                "variable": {
                    "value": "output1",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.loadtxt('./Reconstructed Images/NN-PGD/%s/imageoutput%s.txt' % (file, j))",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_10": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_11": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_12": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "in_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_14": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Facial Images/autoencoder-celeba.py": {
        "torch": {
            "DataLoader_19": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Training_set', transform=transforms.Compose([transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_45": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "autoencoder.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "Constant"
                        ]
                    ]
                }
            },
            "MSELoss_47": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_64": {
                "obj": {
                    "value": "autoencoder.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "AE-trained.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(64 * 64 * 3, 12000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_32": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3000, 12000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "64 * 64 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_29": {
                "in_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_33": {
                "in_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_35": {
                "in_features": {
                    "value": "12000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64 * 64 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "MNIST/AE-PGD_mnist.py": {
        "torch": {
            "DataLoader_14": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.MNIST(root='./mnist/', train=False, download=True, transform=torchvision.transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_53": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "A1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "M",
                            "Name"
                        ]
                    ]
                }
            },
            "from_numpy_54": {
                "variable": {
                    "value": "At",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.transpose(A1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MSELoss_55": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(784, 1500)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(100, 1500)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_36": {
                "f": {
                    "value": "Autoencoder(Sigmoid).pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mm_59": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(b_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_66": {
                "variable": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "test_y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "y + Noise / 255",
                            "BinOp"
                        ],
                        [
                            "y",
                            "Name"
                        ]
                    ]
                }
            },
            "t_67": {
                "variable": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mm(torch.t(A), test_y)",
                            "Call"
                        ],
                        [
                            "torch.t(s_hat)",
                            "Call"
                        ],
                        [
                            "compare",
                            "Name"
                        ],
                        [
                            "compare",
                            "Name"
                        ]
                    ]
                }
            },
            "from_numpy_62": {
                "variable": {
                    "value": "Noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "data2['Noise']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mm_77": {
                "variable": {
                    "value": "gradient",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "tem",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "test_y - torch.mm(A, decodedtemp)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "t_79": {
                "variable": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decodedtemp + umin * gradient",
                            "BinOp"
                        ],
                        [
                            "torch.t(compare)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_19": {
                "in_features": {
                    "value": "784",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_21": {
                "in_features": {
                    "value": "1500",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_25": {
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_27": {
                "in_features": {
                    "value": "1500",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "784",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_66": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "log10_95": {
                "input": {
                    "value": "xxx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.max(b_x) ** 2 / MSE",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mm_75": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "decodedtemp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decoded.view(28 * 28, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_77": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_80": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(compare)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_94": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 28 * 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_59": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 28 * 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_80": {
                "input": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decodedtemp + umin * gradient",
                            "BinOp"
                        ],
                        [
                            "torch.t(compare)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "X-ray Images/AE-PGD-NN1.py": {
        "torch": {
            "DataLoader_13": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Testing_set', transform=transforms.Compose([transforms.Grayscale(num_output_channels=1), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_55": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "A1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "M",
                            "Name"
                        ]
                    ]
                }
            },
            "MSELoss_57": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_19": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(128 * 128, 5000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(2000, 5000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_38": {
                "f": {
                    "value": "NN1-Xray.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "mm_62": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(b_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_72": {
                "variable": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "test_y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "y + Noise / 255",
                            "BinOp"
                        ],
                        [
                            "y",
                            "Name"
                        ]
                    ]
                }
            },
            "t_73": {
                "variable": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mm(torch.t(A), test_y)",
                            "Call"
                        ],
                        [
                            "torch.t(s_hat)",
                            "Call"
                        ],
                        [
                            "compare",
                            "Name"
                        ]
                    ]
                }
            },
            "from_numpy_68": {
                "variable": {
                    "value": "Noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "data2['Noise']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mm_82": {
                "variable": {
                    "value": "gradient",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "tem",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "test_y - torch.mm(A, x_hat)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "t_85": {
                "variable": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x_hat + umin * gradient",
                            "BinOp"
                        ],
                        [
                            "torch.t(compare)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "5000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "in_features": {
                    "value": "5000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "2000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "5000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "5000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_72": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "log10_95": {
                "input": {
                    "value": "xxx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.max(b_x) ** 2 / MSE",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mm_81": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "x_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decoded.view(128 * 128, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_82": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_86": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(compare)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_94": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 128 * 128)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_62": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 128 * 128)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_86": {
                "input": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x_hat + umin * gradient",
                            "BinOp"
                        ],
                        [
                            "torch.t(compare)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "X-ray Images/AE-PGD-NN2.py": {
        "torch": {
            "DataLoader_13": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Testing_set', transform=transforms.Compose([transforms.Grayscale(num_output_channels=1), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_55": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "A1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "M",
                            "Name"
                        ]
                    ]
                }
            },
            "MSELoss_57": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_19": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(128 * 128, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_38": {
                "f": {
                    "value": "NN2-Xray.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "mm_62": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(b_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_72": {
                "variable": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "test_y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "y + Noise / 255",
                            "BinOp"
                        ],
                        [
                            "y",
                            "Name"
                        ]
                    ]
                }
            },
            "t_73": {
                "variable": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "s_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mm(torch.t(A), test_y)",
                            "Call"
                        ],
                        [
                            "torch.t(s_hat)",
                            "Call"
                        ],
                        [
                            "compare",
                            "Name"
                        ]
                    ]
                }
            },
            "from_numpy_68": {
                "variable": {
                    "value": "Noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "data2['Noise']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mm_82": {
                "variable": {
                    "value": "gradient",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.t(A)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "tem",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "test_y - torch.mm(A, x_hat)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "t_85": {
                "variable": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x_hat + umin * gradient",
                            "BinOp"
                        ],
                        [
                            "torch.t(compare)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_72": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "log10_95": {
                "input": {
                    "value": "xxx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.max(b_x) ** 2 / MSE",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mm_81": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "x_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "decoded.view(128 * 128, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_82": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_86": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(A1).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(compare)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_94": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 128 * 128)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_62": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 128 * 128)",
                            "Call"
                        ]
                    ]
                }
            },
            "t_86": {
                "input": {
                    "value": "compare",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x_hat + umin * gradient",
                            "BinOp"
                        ],
                        [
                            "torch.t(compare)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "X-ray Images/AE-Unet_train.py": {
        "torch": {
            "DataLoader_20": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Training_set', transform=transforms.Compose([transforms.Grayscale(num_output_channels=1), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataParallel_86": {
                "variable": {
                    "value": "unet",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "UNet(in_ch=1, out_ch=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_87": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "unet.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Constant"
                        ]
                    ]
                }
            },
            "MSELoss_88": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_231": {
                "obj": {
                    "value": "unet.module.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "Unet-refine-Xray.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_ch, out_ch, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MaxPool2d_41": {
                "variable": {
                    "value": "self.pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_43": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_45": {
                "variable": {
                    "value": "self.pool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_47": {
                "variable": {
                    "value": "self.pool4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_49": {
                "variable": {
                    "value": "self.up6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_51": {
                "variable": {
                    "value": "self.up7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_53": {
                "variable": {
                    "value": "self.up8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_55": {
                "variable": {
                    "value": "self.up9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "variable": {
                    "value": "self.conv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_70": {
                "variable": {
                    "value": "merge6",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_6, c4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_73": {
                "variable": {
                    "value": "merge7",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_7, c3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_76": {
                "variable": {
                    "value": "merge8",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_8, c2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_79": {
                "variable": {
                    "value": "merge9",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_9, c1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_93": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_99": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_114": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_135": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_141": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_157": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_163": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_177": {
                "f": {
                    "value": "4NNs-part1.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_179": {
                "f": {
                    "value": "4NNs-part2.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_181": {
                "f": {
                    "value": "4NNs-part3.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_183": {
                "f": {
                    "value": "4NNs-part4.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "narrow_192": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(batch_size, 128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_193": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(batch_size, 128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_194": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(batch_size, 128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_195": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(batch_size, 128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_203": {
                "variable": {
                    "value": "decoded1_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder1(b_x1).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_204": {
                "variable": {
                    "value": "decoded1_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder1(b_x1).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_205": {
                "variable": {
                    "value": "decoded2_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder2(b_x2).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_206": {
                "variable": {
                    "value": "decoded2_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder2(b_x2).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_207": {
                "variable": {
                    "value": "decoded3_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder3(b_x3).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_208": {
                "variable": {
                    "value": "decoded3_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder3(b_x3).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_209": {
                "variable": {
                    "value": "decoded4_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder4(b_x4).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_210": {
                "variable": {
                    "value": "decoded4_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder4(b_x4).view(batch_size, 74, 74)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_213": {
                "variable": {
                    "value": "up_part",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[decoded1_se, decoded12_ave, decoded2_se]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_214": {
                "variable": {
                    "value": "down_part",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[decoded3_se, decoded34_ave, decoded4_se]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_215": {
                "variable": {
                    "value": "up_part_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "up_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded1_se, decoded12_ave, decoded2_se], dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_216": {
                "variable": {
                    "value": "up_part_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "up_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded1_se, decoded12_ave, decoded2_se], dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_217": {
                "variable": {
                    "value": "down_part_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "down_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded3_se, decoded34_ave, decoded4_se], dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_218": {
                "variable": {
                    "value": "down_part_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "down_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded3_se, decoded34_ave, decoded4_se], dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_220": {
                "variable": {
                    "value": "decoded",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_part_se, updown_ave, down_part_se]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_27": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "in_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_94": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_95": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_96": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_97": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_101": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_102": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_115": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_116": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_117": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_118": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_121": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_122": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_123": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_136": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_137": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_138": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_139": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_142": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_143": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_144": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_145": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_158": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_159": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_160": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_161": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_164": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_165": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_166": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_167": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "X-ray Images/NNcapacity.py": {
        "torch": {
            "DataLoader_11": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Testing_set', transform=transforms.Compose([transforms.Grayscale(num_output_channels=1), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MSELoss_42": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_17": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(128 * 128, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_23": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_36": {
                "f": {
                    "value": "NN2-Xray.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "in_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log10_52": {
                "input": {
                    "value": "xxx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.max(b_x) ** 2 / MSE",
                            "BinOp"
                        ]
                    ]
                }
            },
            "max_51": {
                "input": {
                    "value": "b_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 128 * 128)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "X-ray Images/Unet-refine-Xray.py": {
        "torch": {
            "Sequential_9": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_ch, out_ch, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MaxPool2d_25": {
                "variable": {
                    "value": "self.pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_27": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "self.pool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_31": {
                "variable": {
                    "value": "self.pool4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_33": {
                "variable": {
                    "value": "self.up6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_35": {
                "variable": {
                    "value": "self.up7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_37": {
                "variable": {
                    "value": "self.up8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_39": {
                "variable": {
                    "value": "self.up9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "variable": {
                    "value": "self.conv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "merge6",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_6, c4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_57": {
                "variable": {
                    "value": "merge7",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_7, c3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_60": {
                "variable": {
                    "value": "merge8",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_8, c2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "merge9",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_9, c1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_69": {
                "f": {
                    "value": "Unet-refine-Xray.pkl",
                    "type": "str",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "from_numpy_78": {
                "variable": {
                    "value": "output1",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.loadtxt('./Reconstructed Images/4NNs-PGD/%s/imageoutput%s.txt' % (file, j))",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_10": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_11": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_12": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "in_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_14": {
                "num_features": {
                    "value": "out_ch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "X-ray Images/autoencoder-1NN.py": {
        "torch": {
            "DataLoader_19": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Training_set', transform=transforms.Compose([transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_43": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "autoencoder.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0005",
                            "Constant"
                        ]
                    ]
                }
            },
            "MSELoss_44": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_59": {
                "obj": {
                    "value": "autoencoder.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "NN2-Xray.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(128 * 128, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "in_features": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_33": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128 * 128",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "X-ray Images/autoencoder-4NNs.py": {
        "torch": {
            "DataLoader_19": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder('./Training_set', transform=transforms.Compose([transforms.Grayscale(num_output_channels=1), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataParallel_109": {
                "variable": {
                    "value": "autoencoder1",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "Autoencoder1()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_110": {
                "variable": {
                    "value": "autoencoder2",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "Autoencoder2()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_111": {
                "variable": {
                    "value": "autoencoder3",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "Autoencoder3()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_112": {
                "variable": {
                    "value": "autoencoder4",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "Autoencoder4()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_113": {
                "variable": {
                    "value": "optimizer1",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "autoencoder1.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0005",
                            "Constant"
                        ]
                    ]
                }
            },
            "Adam_115": {
                "variable": {
                    "value": "optimizer2",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "autoencoder2.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0005",
                            "Constant"
                        ]
                    ]
                }
            },
            "Adam_116": {
                "variable": {
                    "value": "optimizer3",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "autoencoder3.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0005",
                            "Constant"
                        ]
                    ]
                }
            },
            "Adam_117": {
                "variable": {
                    "value": "optimizer4",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "autoencoder4.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0005",
                            "Constant"
                        ]
                    ]
                }
            },
            "MSELoss_118": {
                "variable": {
                    "value": "loss_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_168": {
                "obj": {
                    "value": "autoencoder1.module.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "4NNs-part1.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_169": {
                "obj": {
                    "value": "autoencoder2.module.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "4NNs-part2.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_170": {
                "obj": {
                    "value": "autoencoder3.module.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "4NNs-part3.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_171": {
                "obj": {
                    "value": "autoencoder4.module.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "4NNs-part4.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_47": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_75": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_91": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(74 * 74, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_97": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1000, 8000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "narrow_125": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_126": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_127": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_128": {
                "input": {
                    "value": "b_xx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b_x.view(128, 128)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "54",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_135": {
                "variable": {
                    "value": "decoded1_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder1(b_x1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_136": {
                "variable": {
                    "value": "decoded1_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder1(b_x1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_137": {
                "variable": {
                    "value": "decoded2_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder2(b_x2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_138": {
                "variable": {
                    "value": "decoded2_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder2(b_x2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_139": {
                "variable": {
                    "value": "decoded3_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder3(b_x3)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_140": {
                "variable": {
                    "value": "decoded3_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder3(b_x3)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_141": {
                "variable": {
                    "value": "decoded4_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder4(b_x4)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_142": {
                "variable": {
                    "value": "decoded4_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "decoded4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "autoencoder4(b_x4)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_145": {
                "variable": {
                    "value": "up_part",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[decoded1_se, decoded12_ave, decoded2_se]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_146": {
                "variable": {
                    "value": "down_part",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[decoded3_se, decoded34_ave, decoded4_se]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_147": {
                "variable": {
                    "value": "up_part_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "up_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded1_se, decoded12_ave, decoded2_se], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_148": {
                "variable": {
                    "value": "up_part_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "up_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded1_se, decoded12_ave, decoded2_se], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_149": {
                "variable": {
                    "value": "down_part_se",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "down_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded3_se, decoded34_ave, decoded4_se], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "74",
                    "type": "int",
                    "possible_values": []
                }
            },
            "narrow_150": {
                "variable": {
                    "value": "down_part_co",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "down_part",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([decoded3_se, decoded34_ave, decoded4_se], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "length": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_152": {
                "variable": {
                    "value": "decoded",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[up_part_se, updown_ave, down_part_se]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_33": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_56": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_70": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_73": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_76": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_78": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_92": {
                "in_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_93": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_94": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_95": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "8000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "74 * 74",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_101": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}