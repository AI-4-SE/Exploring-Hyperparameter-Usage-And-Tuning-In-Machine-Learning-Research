{
    "data/data.py": {
        "sklearn": {
            "PCA_41": {
                "variable": {
                    "value": "pca",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_111": {
                "variable": {
                    "value": "(x_t, x_v, y_t, y_v)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "utils/functions.py": {
        "sklearn": {
            "MiniBatchKMeans_23": {
                "variable": {
                    "value": "kmeans",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "k_centers",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "k_centers * 10",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "bayesianOpt.py": {
        "tensorflow": {
            "Session_26": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_34": {
                "variable": {
                    "value": "self.X_ph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[None, self.num_dims]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "x",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_35": {
                "variable": {
                    "value": "self.y_ph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[None, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_36": {
                "variable": {
                    "value": "self.X_pred_ph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[None, self.num_dims]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "x_pred",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_37": {
                "variable": {
                    "value": "self.X_query_ph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[None, self.num_dims]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "x_query",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_38": {
                "variable": {
                    "value": "self.y_mu_ph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "y_mu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_39": {
                "variable": {
                    "value": "self.y_std_ph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "y_std",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_40": {
                "variable": {
                    "value": "self.best_y_ph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "best_y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_48": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_90": {
                "variable": {
                    "value": "sigma",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "sigma2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "sigma2 * self.y_std_ph ** 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "cast_91": {
                "variable": {
                    "value": "u",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "(self.best_y_ph - mu) / sigma",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_92": {
                "variable": {
                    "value": "sigma",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "sigma",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.sqrt(sigma2)",
                            "Call"
                        ],
                        [
                            "tf.cast(sigma, tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Normal_93": {
                "variable": {
                    "value": "dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "scale": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "bo_functions.py": {
        "tensorflow": {
            "constant_19": {
                "variable": {
                    "value": "indx",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "list(range(1, 1 + int(x.shape[1])))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                }
            },
            "expand_dims_20": {
                "variable": {
                    "value": "indx",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "indx",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(list(range(1, 1 + int(x.shape[1]))), dtype=FLOAT_TYPE)",
                            "Call"
                        ],
                        [
                            "tf.expand_dims(indx, 0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_26": {
                "variable": {
                    "value": "indx",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "list(range(1, 1 + int(x.shape[1])))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                }
            },
            "expand_dims_27": {
                "variable": {
                    "value": "indx",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "indx",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(list(range(1, 1 + int(x.shape[1]))), dtype=FLOAT_TYPE)",
                            "Call"
                        ],
                        [
                            "tf.expand_dims(indx, 0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_21": {
                "input_tensor": {
                    "value": "tf.sin(x) * tf.sin(x * indx / np.pi) ** (2 * 10)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_sum_28": {
                "input_tensor": {
                    "value": "tf.sin(x) * tf.sin(x ** 2 * indx / np.pi) ** (2 * 10)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_sum_12": {
                "input_tensor": {
                    "value": "tf.pow(x, 4) - 16 * tf.pow(x, 2) + 5 * x",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_14": {
                "input_tensor": {
                    "value": "tf.pow(x, 4) - 16 * tf.pow(x, 2) + 5 * x",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_114": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.transpose(self.Q)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sin_21": {
                "x": {
                    "value": "x * indx / np.pi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sin_28": {
                "x": {
                    "value": "x ** 2 * indx / np.pi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "transpose_114": {
                "a": {
                    "value": "self.Q",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_12": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_14": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "exp/bayes-opt.py": {
        "tensorflow": {
            "reset_default_graph_65": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "exp/regression.py": {
        "tensorflow": {
            "placeholder_118": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[None, nx]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_119": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gfs.settings.float_type",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "AdamOptimizer_136": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reset_default_graph_110": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_random_seed_174": {
                "seed": {
                    "value": "123",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_143": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "expand_dims_130": {
                "input": {
                    "value": "y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.placeholder(FLOAT_TYPE, shape=[None])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_133": {
                "input": {
                    "value": "y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.placeholder(FLOAT_TYPE, shape=[None])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_144": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "exp/texture.py": {
        "tensorflow": {
            "AdamOptimizer_112": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_120": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "exp/time-series.py": {
        "tensorflow": {
            "concat_46": {
                "variable": {
                    "value": "x_train_extended",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[inputs, inputs - np.min(normalized_x_train) + np.max(normalized_x_train)]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_95": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_112": {
                "variable": {
                    "value": "sess",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_random_seed_26": {
                "seed": {
                    "value": "123",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_45": {
                "value": {
                    "value": "normalized_y_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(y_train - mean_y) / std_y",
                            "BinOp"
                        ]
                    ]
                }
            },
            "global_variables_initializer_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "squeeze_114": {
                "input": {
                    "value": "x_train_extended",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.concat([inputs, inputs - np.min(normalized_x_train) + np.max(normalized_x_train)], axis=0)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "kernels.py": {
        "tensorflow": {
            "variable_scope_17": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Variable",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_52": {
                "name_or_scope": {
                    "value": "KernelWrapper",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}