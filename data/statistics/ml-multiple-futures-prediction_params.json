{
    "multiple_futures_prediction/dataset_ngsim.py": {
        "torch": {
            "zeros_275": {
                "variable": {
                    "value": "nbr_inds_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "num_samples + len(nbrs)",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "self.grid_size[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.grid_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.enc_size * self.enc_fac",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_278": {
                "variable": {
                    "value": "hist_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "maxlen",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.t_h // self.d_s + 1",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "num_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "num_samples + len(nbrs)",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_279": {
                "variable": {
                    "value": "fut_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.t_f // self.d_s",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "num_samples + len(nbrs)",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_280": {
                "variable": {
                    "value": "mask_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.t_f // self.d_s",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "num_samples + len(nbrs)",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_270": {
                "variable": {
                    "value": "nbrs_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "maxlen",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.t_h // self.d_s + 1",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_272": {
                "variable": {
                    "value": "nbrs_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "maxlen",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.t_h // self.d_s + 1",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "nbr_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "nbr_batch_size + sum([len(nbr) for nbr in nbrs.values()])",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_282": {
                "variable": {
                    "value": "context_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "num_samples + len(nbrs)",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "im_crop.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "im_crop.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "layout": {
                    "value": "im_crop.shape[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_292": {
                "variable": {
                    "value": "hist_batch[0:len(hist[j]), samples_so_far + j, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "hist[j]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_293": {
                "variable": {
                    "value": "fut_batch[0:len(fut[j]), samples_so_far + j, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "fut[j]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_300": {
                "variable": {
                    "value": "context_batch[sampleId, :, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "from_numpy_307": {
                "variable": {
                    "value": "nbrs_batch[0:len(nbr_hist), count, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "nbr_hist",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hist[batch_id]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ones_310": {
                "variable": {
                    "value": "nbr_inds_batch[batch_ind, pos[1], pos[0], :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.enc_size * self.enc_fac",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "multiple_futures_prediction/model_ngsim.py": {
        "torch": {
            "Linear_41": {
                "variable": {
                    "value": "self.ip_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.input_embedding_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.dyn_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.encoder_size * self.hidden_fac",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.dyn_embedding_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_71": {
                "variable": {
                    "value": "self.dec_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "self.dec_lstm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_72": {
                "variable": {
                    "value": "self.op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "self.op",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_74": {
                "variable": {
                    "value": "self.op_modes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.nbr_atten_embedding_size + self.dyn_embedding_size + context_feat_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.modes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LeakyReLU_77": {
                "variable": {
                    "value": "self.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_78": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax_79": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_107": {
                "variable": {
                    "value": "self.sec_key_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(self.sec_in_dim + self.extra_pos_dim, self.sec_key_hidden_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ParameterList_115": {
                "variable": {
                    "value": "self.slot_keys",
                    "type": "Attribute",
                    "possible_values": []
                },
                "parameters": {
                    "value": "self.slot_keys",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_118": {
                "variable": {
                    "value": "self.sec_hist_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(self.sec_in_dim * self.num_slots, self.sec_hidden_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "self.sec_pos_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(self.sec_in_pos_dim * self.num_slots, self.sec_hidden_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_159": {
                "variable": {
                    "value": "Atten",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "attens0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_191": {
                "variable": {
                    "value": "st_enc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "self.dec_lstm[k](enc_large, hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "index_select_203": {
                "variable": {
                    "value": "nbr_feat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fut",
                    "type": "variable",
                    "possible_values": [
                        [
                            "fut_t + ref_pos",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "flatten_inds",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "split_204": {
                "variable": {
                    "value": "splits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "nbr_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nbrs_enc[counter:counter2, :]",
                            "Subscript"
                        ],
                        [
                            "torch.index_select(fut, 0, flatten_inds)",
                            "Call"
                        ],
                        [
                            "nbr_feat in enumerate(splits)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "chunks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_208": {
                "variable": {
                    "value": "pos_enc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "self.dec_lstm[k](enc_large, hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTM_45": {
                "variable": {
                    "value": "self.enc_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.input_embedding_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRU_48": {
                "variable": {
                    "value": "self.enc_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.input_embedding_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "variable": {
                    "value": "self.context_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_83": {
                "variable": {
                    "value": "self.context_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_84": {
                "variable": {
                    "value": "self.context_maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_85": {
                "variable": {
                    "value": "self.context_conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.context_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "16 * 20 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "context_feat_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64 if self.use_context else 0",
                            "IfExp"
                        ]
                    ]
                }
            },
            "zeros_144": {
                "variable": {
                    "value": "pos_enc",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nbrs_enc.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "nbrs_enc.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_273": {
                "variable": {
                    "value": "nbr_atten_enc",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.nbr_atten_embedding_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "masks.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_281": {
                "variable": {
                    "value": "enc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(nbr_atten_enc, hist_enc, context_enc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_283": {
                "variable": {
                    "value": "enc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(nbr_atten_enc, hist_enc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_311": {
                "variable": {
                    "value": "pos_enc",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.out_length",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "enc.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.posi_enc_dim + self.posi_enc_ego_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "enc.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_312": {
                "variable": {
                    "value": "enc2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(enc, pos_enc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_108": {
                "in_features": {
                    "value": "self.sec_in_dim + self.extra_pos_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.sec_key_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_110": {
                "in_features": {
                    "value": "self.sec_key_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.sec_key_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_119": {
                "in_features": {
                    "value": "self.sec_in_dim * self.num_slots",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_120": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_121": {
                "in_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_123": {
                "in_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.st_enc_hist_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_128": {
                "in_features": {
                    "value": "self.sec_in_pos_dim * self.num_slots",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_129": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_130": {
                "in_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_131": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_132": {
                "in_features": {
                    "value": "self.sec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.st_enc_pos_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_336": {
                "variable": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_layers * direc",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "enc.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.decoder_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_372": {
                "variable": {
                    "value": "fut_pred_k",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "preds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "in_features": {
                    "value": "self.decoder_size * self.dec_fac",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_114": {
                "data": {
                    "value": "self.slot_key_scale * torch.randn(self.sec_key_dim, 1, dtype=torch.float32)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_150": {
                "tensors": {
                    "value": "(nbrs_enc, pos_enc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "exp_157": {
                "input": {
                    "value": "-self.scale * (Key - torch.t(slot)).norm(dim=1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mm_207": {
                "input": {
                    "value": "attens[n]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "mat2": {
                    "value": "nbr_feat - ref_pos[n, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_365": {
                "variable": {
                    "value": "enc_large",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(enc.view(1, enc.shape[0], enc.shape[1]), pos_enc.view(1, batch_sz, self.posi_enc_dim), ego_fut_t.view(1, batch_sz, self.posi_enc_ego_dim))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTM_59": {
                "*args": {
                    "value": "self.nbr_atten_embedding_size + self.dyn_embedding_size + context_feat_size + self.posi_enc_dim + self.posi_enc_ego_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GRU_63": {
                "*args": {
                    "value": "self.nbr_atten_embedding_size + self.dyn_embedding_size + context_feat_size + self.posi_enc_dim + self.posi_enc_ego_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "self.bi_direc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mm_186": {
                "input": {
                    "value": "attens[n]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "mat2": {
                    "value": "nbr_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nbrs_enc[counter:counter2, :]",
                            "Subscript"
                        ],
                        [
                            "torch.index_select(fut, 0, flatten_inds)",
                            "Call"
                        ],
                        [
                            "nbr_feat in enumerate(splits)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_189": {
                "*size": {
                    "value": "self.num_slots",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "nbrs_enc.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_361": {
                "variable": {
                    "value": "pos_enc",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "enc.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "self.posi_enc_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "enc.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_114": {
                "*size": {
                    "value": "self.sec_key_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_341": {
                "variable": {
                    "value": "pred_fut_t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fut[t, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_like_348": {
                "variable": {
                    "value": "ego_fut_t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_fut_t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(fut[t, :, :])",
                            "Call"
                        ],
                        [
                            "preds[-1][:, :, :2].squeeze()",
                            "Call"
                        ],
                        [
                            "fut[t, :, :]",
                            "Subscript"
                        ],
                        [
                            "fut[t, :, :]",
                            "Subscript"
                        ],
                        [
                            "fut[t, :, :]",
                            "Subscript"
                        ],
                        [
                            "fut[t, :, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "t_157": {
                "input": {
                    "value": "slot",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.slot_keys",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "multiple_futures_prediction/my_utils.py": {
        "torch": {
            "exp_21": {
                "variable": {
                    "value": "sigma_x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x[:, :, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "exp_22": {
                "variable": {
                    "value": "sigma_y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x[:, :, 3]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tanh_23": {
                "variable": {
                    "value": "rho",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x[:, :, 4]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pow_33": {
                "input": {
                    "value": "rho",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tanh(x[:, :, 4])",
                            "Call"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 4]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_49": {
                "input": {
                    "value": "rho",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tanh(x[:, :, 4])",
                            "Call"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 4]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_63": {
                "input": {
                    "value": "rho",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tanh(x[:, :, 4])",
                            "Call"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 4]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_69": {
                "variable": {
                    "value": "counts",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_90": {
                "variable": {
                    "value": "counts",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_91": {
                "variable": {
                    "value": "lossVal",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.pow(ohr, 2) * (torch.pow(x_sigma, 2) * torch.pow(x - x_mean, 2) + torch.pow(y_sigma, 2) * torch.pow(y - y_mean, 2) - 2 * rho * torch.pow(x_sigma, 1) * torch.pow(y_sigma, 1) * (x - x_mean) * (y - y_mean)) - torch.log(x_sigma * y_sigma * ohr)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(ohr, 2) * (torch.pow(x_sigma, 2) * torch.pow(x - x_mean, 2) + torch.pow(y_sigma, 2) * torch.pow(y - y_mean, 2) - 2 * rho * torch.pow(x_sigma, 1) * torch.pow(y_sigma, 1) * (x - x_mean) * (y - y_mean)) - torch.log(x_sigma * y_sigma * ohr)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(ohr, 2) * (torch.pow(x_sigma, 2) * torch.pow(x - x_mean, 2) + torch.pow(y_sigma, 2) * torch.pow(y - y_mean, 2) - 2 * rho * torch.pow(x_sigma, 1) * torch.pow(y_sigma, 1) * (x - x_mean) * (y - y_mean)) - torch.log(x_sigma * y_sigma * ohr)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(x - x_mean, 2) + torch.pow(y - y_mean, 2)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(x - x_mean, 2) + torch.pow(y - y_mean, 2)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_98": {
                "variable": {
                    "value": "(s, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.view(-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ]
                    ]
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_108": {
                "variable": {
                    "value": "total",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "mask.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "mask.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "modes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(pred)",
                            "Call"
                        ],
                        [
                            "len(pred)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_132": {
                "variable": {
                    "value": "lossVal",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "total",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(mask.shape[0], mask.shape[1], modes).to(y_mean.device)",
                            "Call"
                        ],
                        [
                            "-logsumexp(total, dim=2)",
                            "UnaryOp"
                        ],
                        [
                            "total * mask[:, :, 0]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_133": {
                "variable": {
                    "value": "counts",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_158": {
                "variable": {
                    "value": "post_pr",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "post_pr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.exp(log_posterior)",
                            "Call"
                        ],
                        [
                            "torch.tensor(post_pr).float().to(data.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "KLDivLoss_164": {
                "variable": {
                    "value": "kl_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "batchmean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_24": {
                "tensors": {
                    "value": "[x_mean, y_mean, sigma_x, sigma_y, rho]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_123": {
                "input": {
                    "value": "rho",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tanh(x[:, :, 4])",
                            "Call"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 4]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 4]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_36": {
                "input": {
                    "value": "x_sigma * y_sigma * ohr",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_39": {
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_40": {
                "input": {
                    "value": "mask[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "log_52": {
                "input": {
                    "value": "x_sigma * y_sigma * ohr",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_54": {
                "input": {
                    "value": "mask[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_66": {
                "input": {
                    "value": "x_sigma * y_sigma * ohr",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_68": {
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_70": {
                "input": {
                    "value": "results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.pow(ohr, 2) * (torch.pow(x_sigma, 2) * torch.pow(x - x_mean, 2) + torch.pow(y_sigma, 2) * torch.pow(y - y_mean, 2) - 2 * rho * torch.pow(x_sigma, 1) * torch.pow(y_sigma, 1) * (x - x_mean) * (y - y_mean)) - torch.log(x_sigma * y_sigma * ohr)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(ohr, 2) * (torch.pow(x_sigma, 2) * torch.pow(x - x_mean, 2) + torch.pow(y_sigma, 2) * torch.pow(y - y_mean, 2) - 2 * rho * torch.pow(x_sigma, 1) * torch.pow(y_sigma, 1) * (x - x_mean) * (y - y_mean)) - torch.log(x_sigma * y_sigma * ohr)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(ohr, 2) * (torch.pow(x_sigma, 2) * torch.pow(x - x_mean, 2) + torch.pow(y_sigma, 2) * torch.pow(y - y_mean, 2) - 2 * rho * torch.pow(x_sigma, 1) * torch.pow(y_sigma, 1) * (x - x_mean) * (y - y_mean)) - torch.log(x_sigma * y_sigma * ohr)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(x - x_mean, 2) + torch.pow(y - y_mean, 2)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ],
                        [
                            "torch.pow(x - x_mean, 2) + torch.pow(y - y_mean, 2)",
                            "BinOp"
                        ],
                        [
                            "results * mask[:, :, 0]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_78": {
                "input": {
                    "value": "y - y_mean",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_80": {
                "input": {
                    "value": "mask[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pow_88": {
                "input": {
                    "value": "y - y_mean",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_165": {
                "input": {
                    "value": "modes_pred",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "pow_35": {
                "input": {
                    "value": "y - y_mean",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_51": {
                "input": {
                    "value": "y - y_mean",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_65": {
                "input": {
                    "value": "y - y_mean",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_128": {
                "input": {
                    "value": "wts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "modes_pred[:, k]",
                            "Subscript"
                        ],
                        [
                            "wts.repeat(nSteps, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_127": {
                "input": {
                    "value": "x_sigma * y_sigma * ohr",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_126": {
                "input": {
                    "value": "y - y_pred_mean",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_36": {
                "input": {
                    "value": "x_sigma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 2]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_52": {
                "input": {
                    "value": "x_sigma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 2]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_66": {
                "input": {
                    "value": "x_sigma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 2]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_127": {
                "input": {
                    "value": "x_sigma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "pred[:, :, 2]",
                            "Subscript"
                        ],
                        [
                            "y_pred[:, :, 2]",
                            "Subscript"
                        ]
                    ]
                },
                "exponent": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "multiple_futures_prediction/train_ngsim.py": {
        "torch": {
            "zeros_28": {
                "variable": {
                    "value": "lossVals",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params.fut_len_orig_hz // params.subsampling",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_29": {
                "variable": {
                    "value": "counts",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params.fut_len_orig_hz // params.subsampling",
                            "BinOp"
                        ]
                    ]
                }
            },
            "DataLoader_172": {
                "variable": {
                    "value": "train_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "NgsimDataset(DATA_PATH + 'ngsim_data/TrainSet.mat', t_h, t_f, d_s, params.encoder_size, params.use_gru, params.self_norm, params.data_aug, params.use_context, params.nbr_search_depth)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "NUM_WORKERS",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "collate_fn": {
                    "value": "train_set.collate_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_173": {
                "variable": {
                    "value": "val_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "NgsimDataset(DATA_PATH + 'ngsim_data/ValSet.mat', t_h, t_f, d_s, params.encoder_size, params.use_gru, params.self_norm, params.data_aug, params.use_context, params.nbr_search_depth)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "NUM_WORKERS",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "collate_fn": {
                    "value": "val_set.collate_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_174": {
                "variable": {
                    "value": "test_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "NgsimDataset(DATA_PATH + 'ngsim_data/TestSet.mat', t_h, t_f, d_s, params.encoder_size, params.use_gru, params.self_norm, params.data_aug, params.use_context, params.nbr_search_depth)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "NUM_WORKERS",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "collate_fn": {
                    "value": "test_set.collate_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tensor_189": {
                "variable": {
                    "value": "y_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "net.y_mean",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_151": {
                "seed": {
                    "value": "params.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_67": {
                "input": {
                    "value": "lossVals / counts",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_223": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "max(params.min_lr, params.lr_init * lr_fac)",
                            "Call"
                        ]
                    ]
                }
            },
            "clip_grad_norm__252": {
                "parameters": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_225": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "max(params.min_lr, params.lr_init * lr_fac)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_289": {
                "obj": {
                    "value": "net.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "logging_dir + '/checkpoints/ngsim_%06d' % num_updates + '.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}