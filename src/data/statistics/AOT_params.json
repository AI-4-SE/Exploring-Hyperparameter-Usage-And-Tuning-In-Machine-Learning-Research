{
    "baselines/pgnet.py": {
        "sklearn": {},
        "torch": {
            "manual_seed_25": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTM_54": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "variable": {
                    "value": "self.W_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_61": {
                "variable": {
                    "value": "packed",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "lengths": {
                    "value": "lengths",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pad_packed_sequence_64": {
                "variable": {
                    "value": "(encoder_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat((lstm_out.view(-1, config.rnn_hidden_dim), c_t), 1)",
                            "Call"
                        ],
                        [
                            "self.out(output)",
                            "Call"
                        ]
                    ]
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_76": {
                "variable": {
                    "value": "self.reduce_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_79": {
                "variable": {
                    "value": "self.reduce_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_90": {
                "variable": {
                    "value": "hidden_reduced_h",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.reduce_h(h_in)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_92": {
                "variable": {
                    "value": "hidden_reduced_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.reduce_c(c_in)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_101": {
                "variable": {
                    "value": "self.decode_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_102": {
                "variable": {
                    "value": "self.v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tanh_127": {
                "variable": {
                    "value": "e",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_features",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "encoder_feature + dec_fea_expanded",
                            "BinOp"
                        ],
                        [
                            "att_features + coverage_feature",
                            "BinOp"
                        ]
                    ]
                }
            },
            "bmm_137": {
                "variable": {
                    "value": "c_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "attn_dist_ / normalization_factor",
                            "BinOp"
                        ],
                        [
                            "attn_dist.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "attn_dist.view(-1, t_k)",
                            "Call"
                        ],
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "mat2": {
                    "value": "encoder_outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "encoder_outputs.contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_153": {
                "variable": {
                    "value": "self.x_context",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2 + config.emb_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_155": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_161": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_179": {
                "variable": {
                    "value": "s_t_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(h_decoder.view(-1, config.rnn_hidden_dim), c_decoder.view(-1, config.rnn_hidden_dim))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_194": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(lstm_out.view(-1, config.rnn_hidden_dim), c_t)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_204": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "NLLLoss_244": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_249": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_317": {
                "variable": {
                    "value": "sos_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_318": {
                "variable": {
                    "value": "dec_batch_shift",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_token, dec_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_397": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "variable": {
                    "value": "self.W_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_159": {
                "variable": {
                    "value": "self.p_gen_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 4 + config.emb_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_166": {
                "variable": {
                    "value": "s_t_hat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(h_decoder.view(-1, config.rnn_hidden_dim), c_decoder.view(-1, config.rnn_hidden_dim))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_190": {
                "variable": {
                    "value": "p_gen_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(c_t, s_t_hat, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_192": {
                "variable": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "self.p_gen_linear(p_gen_input)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(p_gen)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_210": {
                "variable": {
                    "value": "vocab_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit / temp",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_218": {
                "variable": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vocab_dist_.scatter_add(1, enc_batch_extend_vocab, attn_dist_) + 1e-18",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_247": {
                "variable": {
                    "value": "self.criterion_ppl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_256": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, location: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_285": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.load(model_file_path, map_location=lambda storage, location: storage)",
                            "Call"
                        ],
                        [
                            "{'iter': iter, 'encoder_state_dict': self.encoder.state_dict(), 'decoder_state_dict': self.decoder.state_dict(), 'generator_dict': self.generator.state_dict(), 'embedding_dict': self.embedding.state_dict(), 'optimizer': self.optimizer.state_dict(), 'current_loss': running_avg_ppl}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "model_save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, 'model_{}_{:.4f}_{:.4f}_{:.4f}_{:.4f}_{:.4f}'.format(iter, running_avg_ppl, f1_g, f1_b, ent_g, ent_b))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_354": {
                "variable": {
                    "value": "sum_losses",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.stack(step_losses, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_356": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "batch_avg_loss",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "sum_losses / batch['tags_length'].float()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "max_409": {
                "variable": {
                    "value": "(_, next_word)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "prob",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.generator(logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros, 1, p_gen)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_424": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_132": {
                "input": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.v(e)",
                            "Call"
                        ],
                        [
                            "scores.view(-1, t_k)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_175": {
                "tensors": {
                    "value": "(c_t_1, y_t_1_embd)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_216": {
                "variable": {
                    "value": "vocab_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vocab_dist_, extra_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_221": {
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.proj(x)",
                            "Call"
                        ],
                        [
                            "torch.log(vocab_dist_.scatter_add(1, enc_batch_extend_vocab, attn_dist_) + 1e-18)",
                            "Call"
                        ],
                        [
                            "self.generator(logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros, 1, p_gen)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_346": {
                "variable": {
                    "value": "step_coverage_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.min(attn_dist, coverage)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_422": {
                "variable": {
                    "value": "next_word",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "config.UNK_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_252": {
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "float",
                    "possible_values": []
                }
            },
            "stack_354": {
                "tensors": {
                    "value": "step_losses",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_313": {
                "*size": {
                    "value": "(enc_batch.size(0), 2 * config.rnn_hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_314": {
                "*size": {
                    "value": "enc_batch.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_315": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "min_346": {
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "attn_dist_ / normalization_factor",
                            "BinOp"
                        ],
                        [
                            "attn_dist.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "attn_dist.view(-1, t_k)",
                            "Call"
                        ],
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "zeros_392": {
                "*size": {
                    "value": "(enc_batch.size(0), 2 * config.rnn_hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_393": {
                "*size": {
                    "value": "enc_batch.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_394": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "baselines/rnn.py": {
        "sklearn": {},
        "torch": {
            "manual_seed_25": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GRU_54": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "variable": {
                    "value": "self.W_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_60": {
                "variable": {
                    "value": "packed",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "lengths": {
                    "value": "lengths",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pad_packed_sequence_63": {
                "variable": {
                    "value": "(encoder_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat((gru_out.view(-1, config.rnn_hidden_dim), c_t), 1)",
                            "Call"
                        ],
                        [
                            "self.out(output)",
                            "Call"
                        ]
                    ]
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_74": {
                "variable": {
                    "value": "self.reduce_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_78": {
                "variable": {
                    "value": "hidden_reduced_h",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.reduce_h(h_in)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.decode_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_87": {
                "variable": {
                    "value": "self.v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tanh_112": {
                "variable": {
                    "value": "e",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_features",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "encoder_feature + dec_fea_expanded",
                            "BinOp"
                        ],
                        [
                            "att_features + coverage_feature",
                            "BinOp"
                        ]
                    ]
                }
            },
            "bmm_122": {
                "variable": {
                    "value": "c_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "attn_dist_ / normalization_factor",
                            "BinOp"
                        ],
                        [
                            "attn_dist.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "attn_dist.view(-1, t_k)",
                            "Call"
                        ],
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "mat2": {
                    "value": "encoder_outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "encoder_outputs.contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_138": {
                "variable": {
                    "value": "self.x_context",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 2 + config.emb_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRU_140": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_146": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(gru_out.view(-1, config.rnn_hidden_dim), c_t)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_182": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "NLLLoss_219": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_224": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_291": {
                "variable": {
                    "value": "sos_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_293": {
                "variable": {
                    "value": "dec_batch_shift",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_token, dec_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_374": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "variable": {
                    "value": "self.W_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.rnn_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_144": {
                "variable": {
                    "value": "self.p_gen_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.rnn_hidden_dim * 4 + config.emb_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_168": {
                "variable": {
                    "value": "p_gen_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(c_t, s_t_hat, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_170": {
                "variable": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "self.p_gen_linear(p_gen_input)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(p_gen)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_188": {
                "variable": {
                    "value": "vocab_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit / temp",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_196": {
                "variable": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vocab_dist_.scatter_add(1, enc_batch_extend_vocab, attn_dist_) + 1e-18",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_222": {
                "variable": {
                    "value": "self.criterion_ppl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_231": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, location: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_260": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.load(model_file_path, map_location=lambda storage, location: storage)",
                            "Call"
                        ],
                        [
                            "{'iter': iter, 'encoder_state_dict': self.encoder.state_dict(), 'decoder_state_dict': self.decoder.state_dict(), 'generator_dict': self.generator.state_dict(), 'embedding_dict': self.embedding.state_dict(), 'optimizer': self.optimizer.state_dict(), 'current_loss': running_avg_ppl}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "model_save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, 'model_{}_{:.4f}_{:.4f}_{:.4f}_{:.4f}_{:.4f}'.format(iter, running_avg_ppl, f1_g, f1_b, ent_g, ent_b))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_330": {
                "variable": {
                    "value": "sum_losses",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.stack(step_losses, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_332": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "batch_avg_loss",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "sum_losses / batch['tags_length'].float()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "max_387": {
                "variable": {
                    "value": "(_, next_word)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "prob",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.generator(logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros, 1, p_gen)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_402": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_117": {
                "input": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.v(e)",
                            "Call"
                        ],
                        [
                            "scores.view(-1, t_k)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_156": {
                "tensors": {
                    "value": "(c_t_1, y_t_1_embd)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_194": {
                "variable": {
                    "value": "vocab_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vocab_dist_, extra_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_199": {
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.proj(x)",
                            "Call"
                        ],
                        [
                            "torch.log(vocab_dist_.scatter_add(1, enc_batch_extend_vocab, attn_dist_) + 1e-18)",
                            "Call"
                        ],
                        [
                            "self.generator(logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros, 1, p_gen)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_321": {
                "variable": {
                    "value": "step_coverage_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.min(attn_dist, coverage)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_400": {
                "variable": {
                    "value": "next_word",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "config.UNK_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_227": {
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "float",
                    "possible_values": []
                }
            },
            "stack_330": {
                "tensors": {
                    "value": "step_losses",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_287": {
                "*size": {
                    "value": "(enc_batch.size(0), 2 * config.rnn_hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_288": {
                "*size": {
                    "value": "enc_batch.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_289": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "min_321": {
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "attn_dist_ / normalization_factor",
                            "BinOp"
                        ],
                        [
                            "attn_dist.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "attn_dist.view(-1, t_k)",
                            "Call"
                        ],
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "zeros_369": {
                "*size": {
                    "value": "(enc_batch.size(0), 2 * config.rnn_hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_370": {
                "*size": {
                    "value": "enc_batch.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_371": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "baselines/transformer.py": {
        "sklearn": {},
        "torch": {
            "manual_seed_23": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_76": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_83": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_167": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_169": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "gt_174": {
                "variable": {
                    "value": "dec_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask_trg.bool() + self.mask[:, :mask_trg.size(-1), :mask_trg.size(-1)].bool()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "other": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_206": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_207": {
                "variable": {
                    "value": "self.p_gen_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "NLLLoss_261": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_266": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_324": {
                "variable": {
                    "value": "sos_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_325": {
                "variable": {
                    "value": "dec_batch_shift",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_token, dec_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_380": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_80": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[EncoderLayer(*params) for _ in range(num_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Sequential_165": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[DecoderLayer(*params) for l in range(num_layers)]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "sigmoid_213": {
                "variable": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.p_gen_linear(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_217": {
                "variable": {
                    "value": "vocab_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit / temp",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_222": {
                "variable": {
                    "value": "enc_batch_extend_vocab_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_batch_extend_vocab.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_230": {
                "variable": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_264": {
                "variable": {
                    "value": "self.criterion_ppl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_272": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, location: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_299": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.load(model_file_path, map_location=lambda storage, location: storage)",
                            "Call"
                        ],
                        [
                            "{'iter': iter, 'encoder_state_dict': self.encoder.state_dict(), 'decoder_state_dict': self.decoder.state_dict(), 'generator_dict': self.generator.state_dict(), 'embedding_dict': self.embedding.state_dict(), 'optimizer': self.optimizer.state_dict(), 'current_loss': running_avg_ppl}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "model_save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, 'model_{}_{:.4f}_{:.4f}_{:.4f}_{:.4f}_{:.4f}'.format(iter, running_avg_ppl, f1_g, f1_b, ent_g, ent_b))",
                            "Call"
                        ]
                    ]
                }
            },
            "max_390": {
                "variable": {
                    "value": "(_, next_word)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "prob[:, -1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_405": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys, torch.zeros(enc_batch.size(0), 1).long().fill_(next_word).to(config.device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_227": {
                "variable": {
                    "value": "extra_zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[extra_zeros.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_228": {
                "variable": {
                    "value": "vocab_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vocab_dist_, extra_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_234": {
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.proj(x)",
                            "Call"
                        ],
                        [
                            "torch.log(vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18)",
                            "Call"
                        ],
                        [
                            "self.generator(pre_logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_358": {
                "input": {
                    "value": "p_t",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "R_t + N_t",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_403": {
                "variable": {
                    "value": "next_word",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "config.UNK_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_268": {
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_307": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_347": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_347": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_347": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_368": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_405": {
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "model/AOTNet.py": {
        "sklearn": {},
        "torch": {
            "manual_seed_32": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_93": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_183": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_185": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "softmax_193": {
                "variable": {
                    "value": "p",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_194": {
                "variable": {
                    "value": "_kl",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p * (torch.log_softmax(p_logit, dim=-1) - torch.log(q_logit + 1e-24))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gt_199": {
                "variable": {
                    "value": "dec_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask_trg.bool() + self.mask[:, :mask_trg.size(-1), :mask_trg.size(-1)].bool()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "other": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_262": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_263": {
                "variable": {
                    "value": "self.p_gen_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "NLLLoss_321": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_326": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_432": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_434": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_553": {
                "variable": {
                    "value": "sos_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_554": {
                "variable": {
                    "value": "dec_batch_shift",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_token, dec_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_557": {
                "variable": {
                    "value": "sos_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_558": {
                "variable": {
                    "value": "dec_rank_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_rank, dec_rank_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_671": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_673": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_674": {
                "variable": {
                    "value": "last_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_90": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[EncoderLayer(*params) for _ in range(num_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_174": {
                "variable": {
                    "value": "self.align_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_175": {
                "variable": {
                    "value": "self.alignment_feature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_181": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[DecoderLayer(*params) for l in range(num_layers)]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "mean_195": {
                "input": {
                    "value": "_kl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.sum(p * (torch.log_softmax(p_logit, dim=-1) - torch.log(q_logit + 1e-24)), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_269": {
                "variable": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.p_gen_linear(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_274": {
                "variable": {
                    "value": "vocab_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit / temp",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_279": {
                "variable": {
                    "value": "enc_batch_extend_vocab_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_batch_extend_vocab.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_289": {
                "variable": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_324": {
                "variable": {
                    "value": "self.criterion_ppl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_333": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, location: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_362": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.load(model_file_path, map_location=lambda storage, location: storage)",
                            "Call"
                        ],
                        [
                            "{'iter': iter, 'encoder_state_dict': self.encoder.state_dict(), 'decoder_state_dict': self.decoder.state_dict(), 'generator_dict': self.generator.state_dict(), 'embedding_dict': self.embedding.state_dict(), 'optimizer': self.optimizer.state_dict(), 'current_loss': running_avg_ppl}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "model_save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, 'model_{}_{:.4f}_{:.4f}_{:.4f}_{:.4f}_{:.4f}'.format(iter, running_avg_ppl, f1_g, f1_b, ent_g, ent_b))",
                            "Call"
                        ]
                    ]
                }
            },
            "split_402": {
                "variable": {
                    "value": "reviews",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_outputs[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_403": {
                "variable": {
                    "value": "reviews_ext",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "enc_batch_extend_vocab[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_423": {
                "variable": {
                    "value": "src_enc_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_enc_rank, rs_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_424": {
                "variable": {
                    "value": "src_ext_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_ext_rank, ext_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_425": {
                "variable": {
                    "value": "aln_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_rank, srctgt_aln.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_426": {
                "variable": {
                    "value": "aln_mask_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_mask_rank, srctgt_aln_mask.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_429": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_466": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ys, dec_batch[:, t].unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_468": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ys_rank, dec_rank_batch[:, t].unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_523": {
                "variable": {
                    "value": "reviews",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_outputs[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_524": {
                "variable": {
                    "value": "reviews_ext",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "enc_batch_extend_vocab[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_544": {
                "variable": {
                    "value": "src_enc_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_enc_rank, rs_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_545": {
                "variable": {
                    "value": "src_ext_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_ext_rank, ext_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_546": {
                "variable": {
                    "value": "aln_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_rank, srctgt_aln.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_547": {
                "variable": {
                    "value": "aln_mask_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_mask_rank, srctgt_aln_mask.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_550": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "split_635": {
                "variable": {
                    "value": "reviews",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_outputs[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_636": {
                "variable": {
                    "value": "reviews_ext",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "enc_batch_extend_vocab[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_661": {
                "variable": {
                    "value": "src_enc_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_enc_rank, rs_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_662": {
                "variable": {
                    "value": "src_ext_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_ext_rank, ext_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_663": {
                "variable": {
                    "value": "aln_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_rank, srctgt_aln.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_664": {
                "variable": {
                    "value": "aln_mask_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_mask_rank, srctgt_aln_mask.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_667": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_697": {
                "variable": {
                    "value": "(_, next_word)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "prob[:, -1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_717": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys, next_word.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_718": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys_rank, last_rank]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "masked_select_747": {
                "variable": {
                    "value": "good_attn_sum",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_attn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_attn_dist[:, 1:, :].view(bsz * tgt_len, src_len)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "tgt_attn.bool()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_747": {
                "variable": {
                    "value": "good_attn_sum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "masked_select_748": {
                "variable": {
                    "value": "bad_attn_sum",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_attn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_attn_dist[:, 1:, :].view(bsz * tgt_len, src_len)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "~tgt_attn.bool()",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_748": {
                "variable": {
                    "value": "bad_attn_sum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_284": {
                "variable": {
                    "value": "extra_zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[extra_zeros.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_285": {
                "variable": {
                    "value": "vocab_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vocab_dist_, extra_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_287": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_softmax_293": {
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.proj(x)",
                            "Call"
                        ],
                        [
                            "torch.log(vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18)",
                            "Call"
                        ],
                        [
                            "self.generator(pre_logit, attn_dist.unsqueeze(1), enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros)",
                            "Call"
                        ],
                        [
                            "self.generator(pre_logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_601": {
                "input": {
                    "value": "p_t",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "R_t + N_t",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_731": {
                "variable": {
                    "value": "pred_attn_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(pred_attn_dist, attn_dist.unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_235": {
                "variable": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mean(attn_dist, dim=1)",
                            "Call"
                        ],
                        [
                            "attn_dist[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_329": {
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "float",
                    "possible_values": []
                }
            },
            "log_softmax_194": {
                "input": {
                    "value": "p_logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_194": {
                "input": {
                    "value": "q_logit + 1e-24",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_374": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_478": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_478": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_478": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_495": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_590": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_590": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_590": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_615": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "model/AOT_woRCR.py": {
        "sklearn": {},
        "torch": {
            "manual_seed_25": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_78": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_85": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_174": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_176": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "softmax_184": {
                "variable": {
                    "value": "p",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_185": {
                "variable": {
                    "value": "_kl",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p * (F.log_softmax(p_logit) - torch.log(q_logit + 1e-24))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gt_190": {
                "variable": {
                    "value": "dec_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask_trg.bool() + self.mask[:, :mask_trg.size(-1), :mask_trg.size(-1)].bool()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "other": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_236": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_237": {
                "variable": {
                    "value": "self.p_gen_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "NLLLoss_291": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_296": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_364": {
                "variable": {
                    "value": "sos_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_365": {
                "variable": {
                    "value": "dec_batch_shift",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_token, dec_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_419": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_422": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_423": {
                "variable": {
                    "value": "last_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_82": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[EncoderLayer(*params) for _ in range(num_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_165": {
                "variable": {
                    "value": "self.align_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_166": {
                "variable": {
                    "value": "self.alignment_feature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_172": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[DecoderLayer(*params) for l in range(num_layers)]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "mean_186": {
                "input": {
                    "value": "_kl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.sum(p * (F.log_softmax(p_logit) - torch.log(q_logit + 1e-24)), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_243": {
                "variable": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.p_gen_linear(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_247": {
                "variable": {
                    "value": "vocab_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit / temp",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_252": {
                "variable": {
                    "value": "enc_batch_extend_vocab_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_batch_extend_vocab.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_260": {
                "variable": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_294": {
                "variable": {
                    "value": "self.criterion_ppl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_302": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, location: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_329": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.load(model_file_path, map_location=lambda storage, location: storage)",
                            "Call"
                        ],
                        [
                            "{'iter': iter, 'encoder_state_dict': self.encoder.state_dict(), 'decoder_state_dict': self.decoder.state_dict(), 'generator_dict': self.generator.state_dict(), 'embedding_dict': self.embedding.state_dict(), 'optimizer': self.optimizer.state_dict(), 'current_loss': running_avg_ppl}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "model_save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, 'model_{}_{:.4f}_{:.4f}_{:.4f}_{:.4f}_{:.4f}'.format(iter, running_avg_ppl, f1_g, f1_b, ent_g, ent_b))",
                            "Call"
                        ]
                    ]
                }
            },
            "max_441": {
                "variable": {
                    "value": "(_, next_word)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "prob[:, -1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_459": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys, torch.zeros(enc_batch.size(0), 1).long().fill_(next_word).to(config.device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_460": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys_rank, last_rank]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_221": {
                "variable": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mean(attn_dist, dim=1)",
                            "Call"
                        ],
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_257": {
                "variable": {
                    "value": "extra_zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[extra_zeros.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_258": {
                "variable": {
                    "value": "vocab_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vocab_dist_, extra_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_264": {
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.proj(x)",
                            "Call"
                        ],
                        [
                            "torch.log(vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18)",
                            "Call"
                        ],
                        [
                            "self.generator(pre_logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_457": {
                "variable": {
                    "value": "next_word",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "config.UNK_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_298": {
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "float",
                    "possible_values": []
                }
            },
            "isnan_383": {
                "input": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.criterion(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1))",
                            "Call"
                        ],
                        [
                            "self.criterion(logit.contiguous().view(-1, logit.size(-1)), dec_batch.contiguous().view(-1))",
                            "Call"
                        ],
                        [
                            "loss + cla_loss",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_383": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_383": {
                "input": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.criterion(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1))",
                            "Call"
                        ],
                        [
                            "self.criterion(logit.contiguous().view(-1, logit.size(-1)), dec_batch.contiguous().view(-1))",
                            "Call"
                        ],
                        [
                            "loss + cla_loss",
                            "BinOp"
                        ]
                    ]
                }
            },
            "log_softmax_185": {
                "input": {
                    "value": "p_logit",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_185": {
                "input": {
                    "value": "q_logit + 1e-24",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_344": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_411": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_459": {
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "model/AOT_woSSE.py": {
        "sklearn": {},
        "torch": {
            "manual_seed_32": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_93": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_183": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_185": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "softmax_193": {
                "variable": {
                    "value": "p",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_194": {
                "variable": {
                    "value": "_kl",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p * (torch.log_softmax(p_logit, dim=-1) - torch.log(q_logit + 1e-24))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gt_209": {
                "variable": {
                    "value": "dec_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask_trg.bool() + self.mask[:, :mask_trg.size(-1), :mask_trg.size(-1)].bool()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "other": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_270": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_271": {
                "variable": {
                    "value": "self.p_gen_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "NLLLoss_327": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_332": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_432": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_434": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_541": {
                "variable": {
                    "value": "sos_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_542": {
                "variable": {
                    "value": "dec_batch_shift",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_token, dec_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_545": {
                "variable": {
                    "value": "sos_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_546": {
                "variable": {
                    "value": "dec_rank_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sos_rank, dec_rank_batch[:, :-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_646": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_648": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_649": {
                "variable": {
                    "value": "last_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_90": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[EncoderLayer(*params) for _ in range(num_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_174": {
                "variable": {
                    "value": "self.align_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_175": {
                "variable": {
                    "value": "self.alignment_feature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_181": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[DecoderLayer(*params) for l in range(num_layers)]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "mean_195": {
                "input": {
                    "value": "_kl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.sum(p * (torch.log_softmax(p_logit, dim=-1) - torch.log(q_logit + 1e-24)), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_277": {
                "variable": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.p_gen_linear(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_281": {
                "variable": {
                    "value": "vocab_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit / temp",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_286": {
                "variable": {
                    "value": "enc_batch_extend_vocab_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_batch_extend_vocab.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_295": {
                "variable": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_330": {
                "variable": {
                    "value": "self.criterion_ppl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_339": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, location: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_368": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.load(model_file_path, map_location=lambda storage, location: storage)",
                            "Call"
                        ],
                        [
                            "{'iter': iter, 'encoder_state_dict': self.encoder.state_dict(), 'decoder_state_dict': self.decoder.state_dict(), 'generator_dict': self.generator.state_dict(), 'embedding_dict': self.embedding.state_dict(), 'optimizer': self.optimizer.state_dict(), 'current_loss': running_avg_ppl}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "model_save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, 'model_{}_{:.4f}_{:.4f}_{:.4f}_{:.4f}_{:.4f}'.format(iter, running_avg_ppl, f1_g, f1_b, ent_g, ent_b))",
                            "Call"
                        ]
                    ]
                }
            },
            "split_401": {
                "variable": {
                    "value": "reviews",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_outputs[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_402": {
                "variable": {
                    "value": "reviews_ext",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "enc_batch_extend_vocab[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_422": {
                "variable": {
                    "value": "src_enc_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_enc_rank, rs_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_423": {
                "variable": {
                    "value": "src_ext_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_ext_rank, ext_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_424": {
                "variable": {
                    "value": "aln_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_rank, srctgt_aln.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_425": {
                "variable": {
                    "value": "aln_mask_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_mask_rank, srctgt_aln_mask.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_428": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_462": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ys, dec_batch[:, t].unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_464": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ys_rank, dec_rank_batch[:, t].unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_511": {
                "variable": {
                    "value": "reviews",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_outputs[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_512": {
                "variable": {
                    "value": "reviews_ext",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "enc_batch_extend_vocab[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_532": {
                "variable": {
                    "value": "src_enc_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_enc_rank, rs_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_533": {
                "variable": {
                    "value": "src_ext_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_ext_rank, ext_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_534": {
                "variable": {
                    "value": "aln_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_rank, srctgt_aln.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_535": {
                "variable": {
                    "value": "aln_mask_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_mask_rank, srctgt_aln_mask.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_538": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "split_614": {
                "variable": {
                    "value": "reviews",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_outputs[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_615": {
                "variable": {
                    "value": "reviews_ext",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "enc_batch_extend_vocab[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "item_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ],
                        [
                            "enc_length_batch[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_640": {
                "variable": {
                    "value": "src_enc_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_enc_rank, rs_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_641": {
                "variable": {
                    "value": "src_ext_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(src_ext_rank, ext_repr.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_642": {
                "variable": {
                    "value": "aln_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_rank, srctgt_aln.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_643": {
                "variable": {
                    "value": "aln_mask_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aln_mask_rank, srctgt_aln_mask.unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_671": {
                "variable": {
                    "value": "(_, next_word)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "prob[:, -1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_690": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys, next_word.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_691": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys_rank, last_rank]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_292": {
                "variable": {
                    "value": "extra_zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[extra_zeros.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_293": {
                "variable": {
                    "value": "vocab_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vocab_dist_, extra_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_299": {
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.proj(x)",
                            "Call"
                        ],
                        [
                            "torch.log(vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18)",
                            "Call"
                        ],
                        [
                            "self.generator(pre_logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros)",
                            "Call"
                        ],
                        [
                            "self.generator(pre_logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_585": {
                "input": {
                    "value": "p_t",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "R_t + N_t",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_245": {
                "variable": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mean(attn_dist, dim=1)",
                            "Call"
                        ],
                        [
                            "attn_dist[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_335": {
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "float",
                    "possible_values": []
                }
            },
            "log_softmax_194": {
                "input": {
                    "value": "p_logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_194": {
                "input": {
                    "value": "q_logit + 1e-24",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_376": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_473": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_473": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_473": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_486": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_574": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_574": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_574": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit[:, -1, :].contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, t].contiguous().view(-1) if config.pointer_gen else dec_batch[:, t].contiguous().view(-1))",
                            "BinOp"
                        ],
                        [
                            "self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch.contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_596": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "model/RCR.py": {
        "sklearn": {
            "KMeans_205": {
                "variable": {
                    "value": "kmeans_tool",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "cluster_num",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "15",
                            "Constant"
                        ],
                        [
                            "math.ceil(self.r_num / 20)",
                            "Call"
                        ],
                        [
                            "20",
                            "Constant"
                        ],
                        [
                            "4",
                            "Constant"
                        ]
                    ]
                },
                "init": {
                    "value": "k-means++",
                    "type": "str",
                    "possible_values": []
                },
                "n_init": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "tol": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "copy_x": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "algorithm": {
                    "value": "auto",
                    "type": "str",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "ReLU_18": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_52": {
                "variable": {
                    "value": "sent_embed",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "pooled_ngram_embeddings",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[inp.mean(dim=1)]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_52": {
                "variable": {
                    "value": "sent_embed",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "variable": {
                    "value": "srctgt_aln",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "tid.size()[0] + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "max_rs_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_132": {
                "variable": {
                    "value": "rs_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rs_repr, r_pad_vec)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_133": {
                "variable": {
                    "value": "ext_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ext_repr, r_ext_pad)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_148": {
                "variable": {
                    "value": "srctgt_aln",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "26",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "max_rs_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_174": {
                "variable": {
                    "value": "rs_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rs_repr, r_pad_vec)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_175": {
                "variable": {
                    "value": "ext_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ext_repr, r_ext_pad)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_49": {
                "variable": {
                    "value": "ngram_embedding",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "ngram_embedding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ngram_embeddings",
                            "Name"
                        ],
                        [
                            "torch.stack(ngram_embedding, dim=1).mean(dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_49": {
                "variable": {
                    "value": "ngram_embedding",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_114": {
                "variable": {
                    "value": "rs_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rs_repr, rs_vecs[rid])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_115": {
                "variable": {
                    "value": "ext_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ext_repr, r_ext[rid])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_160": {
                "variable": {
                    "value": "rs_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rs_repr, rs_vecs[rid])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_161": {
                "variable": {
                    "value": "ext_repr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ext_repr, r_ext[rid])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_101": {
                "*size": {
                    "value": "tid.size()[0] + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "max_rs_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "zeros_147": {
                "*size": {
                    "value": "26",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "max_rs_length",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "model/SSE.py": {
        "sklearn": {
            "accuracy_score_116": {
                "variable": {
                    "value": "acc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "src_score.cpu().numpy()",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.decoder(final_hidden, src_mask)",
                            "Call"
                        ],
                        [
                            "pred.view(bsz * src_num, 3)",
                            "Call"
                        ],
                        [
                            "np.argmax(pred.detach().cpu().numpy(), axis=1)",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "Dropout_19": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "GRU_21": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "embed_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "num_layer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "bidirectional": {
                    "value": "bidirection",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dropout": {
                    "value": "0 if self.num_layer == 1 else dropout",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Linear_30": {
                "variable": {
                    "value": "self.linear_keys",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_31": {
                "variable": {
                    "value": "self.linear_values",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.linear_query",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Softmax_34": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.w_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "embed_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embed_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_39": {
                "variable": {
                    "value": "self.criteria",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_55": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "src.index_select(0, indices)",
                            "Call"
                        ],
                        [
                            "self.embedding(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "nn.utils.rnn.pack_padded_sequence(x, src_lengths, batch_first=True)",
                            "Call"
                        ]
                    ]
                },
                "lengths": {
                    "value": "src_lengths",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pad_packed_sequence_58": {
                "variable": {
                    "value": "(_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "_outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "_outputs[:, :, :self.hidden_dim] + _outputs[:, :, self.hidden_dim:]",
                            "BinOp"
                        ],
                        [
                            "_outputs.index_select(0, reverse_indices)",
                            "Call"
                        ]
                    ]
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "matmul_87": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.linear_query(src)",
                            "Call"
                        ],
                        [
                            "query / math.sqrt(self.embed_dim)",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "key.transpose(1, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "bmm_95": {
                "variable": {
                    "value": "context",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "drop_attn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.dropout(attn)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "value",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.linear_values(src)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_113": {
                "input": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.decoder(final_hidden, src_mask)",
                            "Call"
                        ],
                        [
                            "pred.view(bsz * src_num, 3)",
                            "Call"
                        ],
                        [
                            "np.argmax(pred.detach().cpu().numpy(), axis=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "model/test.py": {
        "sklearn": {},
        "torch": {
            "manual_seed_24": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_77": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_84": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_168": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_170": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "gt_175": {
                "variable": {
                    "value": "dec_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask_trg.bool() + self.mask[:, :mask_trg.size(-1), :mask_trg.size(-1)].bool()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "other": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_227": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_228": {
                "variable": {
                    "value": "self.p_gen_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "NLLLoss_282": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_287": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_345": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_349": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_415": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_81": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[EncoderLayer(*params) for _ in range(num_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Sequential_166": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[DecoderLayer(*params) for l in range(num_layers)]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "sigmoid_234": {
                "variable": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_gen",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.p_gen_linear(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_238": {
                "variable": {
                    "value": "vocab_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit / temp",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_243": {
                "variable": {
                    "value": "enc_batch_extend_vocab_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_batch_extend_vocab.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_251": {
                "variable": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_285": {
                "variable": {
                    "value": "self.criterion_ppl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_293": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, location: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_320": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.load(model_file_path, map_location=lambda storage, location: storage)",
                            "Call"
                        ],
                        [
                            "{'iter': iter, 'encoder_state_dict': self.encoder.state_dict(), 'decoder_state_dict': self.decoder.state_dict(), 'generator_dict': self.generator.state_dict(), 'embedding_dict': self.embedding.state_dict(), 'optimizer': self.optimizer.state_dict(), 'current_loss': running_avg_ppl}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "model_save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, 'model_{}_{:.4f}_{:.4f}_{:.4f}_{:.4f}_{:.4f}'.format(iter, running_avg_ppl, f1_g, f1_b, ent_g, ent_b))",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_371": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ys, dec_batch[:, t].unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_373": {
                "variable": {
                    "value": "ys_rank",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ys_rank, dec_rank_batch[:, t].unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_429": {
                "variable": {
                    "value": "(_, next_word)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "prob[:, -1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_210": {
                "variable": {
                    "value": "attn_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "attn_dist / temp",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_248": {
                "variable": {
                    "value": "extra_zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[extra_zeros.unsqueeze(1)] * x.size(1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_249": {
                "variable": {
                    "value": "vocab_dist_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vocab_dist_, extra_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_255": {
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.proj(x)",
                            "Call"
                        ],
                        [
                            "torch.log(vocab_dist_.scatter_add(2, enc_batch_extend_vocab_, attn_dist_) + 1e-18)",
                            "Call"
                        ],
                        [
                            "self.generator(pre_logit, attn_dist, enc_batch_extend_vocab if config.pointer_gen else None, extra_zeros)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_393": {
                "input": {
                    "value": "p_t",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "R_t + N_t",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_442": {
                "variable": {
                    "value": "next_word",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "config.UNK_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_445": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys, torch.zeros(enc_batch.size(0), 1).long().fill_(next_word).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_448": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ys, torch.zeros(enc_batch.size(0), 1).long().fill_(next_word)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_289": {
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_328": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_382": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, :t + 1].contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_382": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_382": {
                "input": {
                    "value": "loss_ppl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "loss_ppl + self.criterion_ppl(logit.contiguous().view(-1, logit.size(-1)), dec_ext_batch[:, :t + 1].contiguous().view(-1) if config.pointer_gen else dec_batch.contiguous().view(-1))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_403": {
                "*size": {
                    "value": "(enc_batch.size(0), max_oov_length)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_445": {
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_448": {
                "*size": {
                    "value": "enc_batch.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils/common.py": {
        "sklearn": {
            "cosine_similarity_150": {
                "X": {
                    "value": "[predv, tgtv]",
                    "type": "List",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "arange_32": {
                "variable": {
                    "value": "seq_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "max_len",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "sequence_length.data.max()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "KLDivLoss_746": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "nonzero_759": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target.data == self.padding_idx",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "Embedding_780": {
                "variable": {
                    "value": "self.lut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "padding_idx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "erf_766": {
                "input": {
                    "value": "x / math.sqrt(2.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "model/common_layer.py": {
        "torch": {
            "manual_seed_21": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_618": {
                "variable": {
                    "value": "torch_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np_mask",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.triu(np.full([max_length, max_length], -np.inf), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_653": {
                "variable": {
                    "value": "subsequent_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "subsequent_mask",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.triu(np.ones(attn_shape), k=1).astype('uint8')",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(subsequent_mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dropout_57": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "layer_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_118": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "layer_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Embedding_194": {
                "variable": {
                    "value": "self.embed_rank",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_195": {
                "variable": {
                    "value": "self.rank_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_197": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "layer_dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_201": {
                "variable": {
                    "value": "self.align_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_202": {
                "variable": {
                    "value": "self.alignment_feature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "config.PAD_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_297": {
                "variable": {
                    "value": "self.query_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_key_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_298": {
                "variable": {
                    "value": "self.key_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_key_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_299": {
                "variable": {
                    "value": "self.value_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_value_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_300": {
                "variable": {
                    "value": "self.output_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "total_value_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_302": {
                "variable": {
                    "value": "self.emotion_output_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * output_depth",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_305": {
                "variable": {
                    "value": "self.W_vad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.FloatTensor(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_307": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "matmul_351": {
                "variable": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "queries",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.query_linear(queries)",
                            "Call"
                        ],
                        [
                            "self._split_heads(queries)",
                            "Call"
                        ],
                        [
                            "queries * self.query_scale",
                            "BinOp"
                        ],
                        [
                            "queries.view(bsz * tgt_len, emb_dim).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "self.query_linear(queries)",
                            "Call"
                        ],
                        [
                            "self._split_heads(queries)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "keys.permute(0, 1, 3, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_361": {
                "variable": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.matmul(queries, keys.permute(0, 1, 3, 2))",
                            "Call"
                        ],
                        [
                            "logits.masked_fill(mask, -1e+18)",
                            "Call"
                        ],
                        [
                            "torch.matmul(queries, keys.permute(0, 1, 3, 2))",
                            "Call"
                        ],
                        [
                            "logits.masked_fill(mask, -1e+18)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_367": {
                "variable": {
                    "value": "contexts",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nn.functional.softmax(logits, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.dropout(weights)",
                            "Call"
                        ],
                        [
                            "nn.functional.softmax(logits, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.dropout(weights)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.value_linear(values)",
                            "Call"
                        ],
                        [
                            "self._split_heads(values)",
                            "Call"
                        ],
                        [
                            "values.view(bsz * tgt_len, src_len, emb_dim)",
                            "Call"
                        ],
                        [
                            "self.value_linear(values)",
                            "Call"
                        ],
                        [
                            "self._split_heads(values)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_424": {
                "variable": {
                    "value": "self.query_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_key_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_425": {
                "variable": {
                    "value": "self.key_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_key_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_key_depth - total_key_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_426": {
                "variable": {
                    "value": "self.value_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_value_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_427": {
                "variable": {
                    "value": "self.output_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "total_value_depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ],
                        [
                            "total_value_depth - total_value_depth % num_heads",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_429": {
                "variable": {
                    "value": "self.emotion_output_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * output_depth",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_432": {
                "variable": {
                    "value": "self.W_vad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.FloatTensor(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_434": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "matmul_490": {
                "variable": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "queries",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.query_linear(queries)",
                            "Call"
                        ],
                        [
                            "self._split_heads(queries)",
                            "Call"
                        ],
                        [
                            "queries * self.query_scale",
                            "BinOp"
                        ],
                        [
                            "queries.view(bsz * tgt_len, emb_dim).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "self.query_linear(queries)",
                            "Call"
                        ],
                        [
                            "self._split_heads(queries)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "keys.permute(0, 1, 3, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_502": {
                "variable": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.matmul(queries, keys.permute(0, 1, 3, 2))",
                            "Call"
                        ],
                        [
                            "logits.masked_fill(mask, -1e+18)",
                            "Call"
                        ],
                        [
                            "torch.matmul(queries, keys.permute(0, 1, 3, 2))",
                            "Call"
                        ],
                        [
                            "logits.masked_fill(mask, -1e+18)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_508": {
                "variable": {
                    "value": "contexts",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nn.functional.softmax(logits, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.dropout(weights)",
                            "Call"
                        ],
                        [
                            "nn.functional.softmax(logits, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.dropout(weights)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.value_linear(values)",
                            "Call"
                        ],
                        [
                            "self._split_heads(values)",
                            "Call"
                        ],
                        [
                            "values.view(bsz * tgt_len, src_len, emb_dim)",
                            "Call"
                        ],
                        [
                            "self.value_linear(values)",
                            "Call"
                        ],
                        [
                            "self._split_heads(values)",
                            "Call"
                        ]
                    ]
                }
            },
            "ConstantPad1d_541": {
                "variable": {
                    "value": "self.pad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(kernel_size - 1, 0) if pad_type == 'left' else (kernel_size // 2, (kernel_size - 1) // 2)",
                            "IfExp"
                        ],
                        [
                            "'left'",
                            "MethodArgument"
                        ]
                    ]
                },
                "value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1d_542": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_583": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "layers",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ReLU_584": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_585": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Parameter_603": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_604": {
                "variable": {
                    "value": "self.beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_639": {
                "ndarray": {
                    "value": "signal",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.concatenate([np.sin(scaled_time), np.cos(scaled_time)], axis=1)",
                            "Call"
                        ],
                        [
                            "np.pad(signal, [[0, 0], [0, channels % 2]], 'constant', constant_values=[0.0, 0.0])",
                            "Call"
                        ],
                        [
                            "signal.reshape([1, length, channels])",
                            "Call"
                        ]
                    ]
                }
            },
            "Embedding_686": {
                "variable": {
                    "value": "self.lut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab",
                    "type": "Variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "d_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "padding_idx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "KLDivLoss_705": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "nonzero_718": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target.data == self.padding_idx",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "log_733": {
                "variable": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_pred.clamp(min=1e-08)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_233": {
                "variable": {
                    "value": "attention_weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(attention_weight_prev.unsqueeze(1), attention_weight.unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_tensor_232": {
                "obj": {
                    "value": "attention_weight_prev",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_379": {
                "input": {
                    "value": "attetion_weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "logits.sum(dim=1) / self.num_heads",
                            "BinOp"
                        ],
                        [
                            "logits.sum(dim=1) / self.num_heads",
                            "BinOp"
                        ],
                        [
                            "attetion_weights.squeeze(1).view(bsz, tgt_len, src_len)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_521": {
                "input": {
                    "value": "attetion_weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "logits.sum(dim=1) / self.num_heads",
                            "BinOp"
                        ],
                        [
                            "logits.sum(dim=1) / self.num_heads",
                            "BinOp"
                        ],
                        [
                            "attetion_weights.squeeze(1).view(bsz, tgt_len, src_len)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "ones_603": {
                "*size": {
                    "value": "features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_604": {
                "*size": {
                    "value": "features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sum_737": {
                "input": {
                    "value": "y_mask",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_577": {
                "in_features": {
                    "value": "*s",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {}
    },
    "utils/config.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "is_available_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/data_loader.py": {
        "torch": {
            "manual_seed_20": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_235": {
                "variable": {
                    "value": "data_loader_tra",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_train",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dataset(pairs_tra, vocab)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "collate_fn",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_240": {
                "variable": {
                    "value": "data_loader_val",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_valid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dataset(pairs_val, vocab)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "collate_fn",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_245": {
                "variable": {
                    "value": "data_loader_tst",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dataset(pairs_tst, vocab)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "collate_fn",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_143": {
                "variable": {
                    "value": "padded_seqs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(r_seqs)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max_r_num",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "max(nums)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "max_r_len",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "max(lens)",
                            "Call"
                        ],
                        [
                            "max((len(r) for r in reviews)) + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_145": {
                "variable": {
                    "value": "num_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(r_seqs)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max_r_num",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "max(nums)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_146": {
                "variable": {
                    "value": "padded_len",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(r_seqs)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max_r_num",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "max(nums)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_147": {
                "variable": {
                    "value": "padded_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(r_seqs)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max_r_num",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "max(nums)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_118": {
                "variable": {
                    "value": "padded_seqs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(seqs)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max(lengths)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_119": {
                "variable": {
                    "value": "padded_seq_exts",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(seqs)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max(lengths)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_120": {
                "variable": {
                    "value": "padded_seq_aln",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(seqs)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max(lengths)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_133": {
                "variable": {
                    "value": "padded_seqs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(sequences)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max(lengths)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utils/data_reader.py": {
        "torch": {}
    }
}