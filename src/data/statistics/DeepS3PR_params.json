{
    "DeepS3PR_Demo.py": {
        "torch": {
            "MSELoss_73": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(opt.latent_dim, 128 * self.init_size ** 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_51": {
                "variable": {
                    "value": "self.conv_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.BatchNorm2d(128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_75": {
                "variable": {
                    "value": "generator",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "./Generators/FashionMNIST_DCGAN_generator_epoch199.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_77": {
                "variable": {
                    "value": "generator",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "./Generators/MNIST_DCGAN_generator_epoch199.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_84": {
                "variable": {
                    "value": "dataloader1",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.FashionMNIST('./data/fashion_mnist', train=False, download=True, transform=transforms.Compose([transforms.Resize(opt.img_size), transforms.ToTensor(), transforms.Normalize([0.5], [0.5])]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_98": {
                "variable": {
                    "value": "dataloader1",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.MNIST('./data/mnist', train=False, download=True, transform=transforms.Compose([transforms.Resize(opt.img_size), transforms.ToTensor(), transforms.Normalize([0.5], [0.5])]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "in_features": {
                    "value": "opt.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128 * self.init_size ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_52": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_53": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_55": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            },
            "LeakyReLU_56": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_57": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_59": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            },
            "LeakyReLU_60": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "opt.channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_123": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(n_batch, n_c, 2 * ha - 1, 2 * wa - 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "randn_200": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "r.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_131": {
                "variable": {
                    "value": "Ax",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(n_batch, n_c, 2 * ha - 1, 2 * wa - 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_132": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(n_batch, n_c, 2 * ha - 1, 2 * wa - 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "variable": {
                    "value": "Ax",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(n_batch, n_c, num_patterns * opt.img_size ** 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_151": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(n_batch, n_c, num_patterns * opt.img_size ** 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_173": {
                "variable": {
                    "value": "Ax",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(n_batch, n_c, int(np.sqrt(m)), int(np.sqrt(m)), 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_174": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(n_batch, n_c, int(np.sqrt(m)), int(np.sqrt(m)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_218": {
                "params": {
                    "value": "[z_variables[-1]]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.b1, opt.b2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_267": {
                "variable": {
                    "value": "noGAN_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[x_sum_variable]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.b1, opt.b2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_156": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tmp_r, tmp_i]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "mm_176": {
                "variable": {
                    "value": "Ax[:, i, :, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "A[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "mat2": {
                    "value": "x[:, i, :, :].reshape(n_batch, ha * wa).transpose(1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "transpose_176": {
                "variable": {
                    "value": "Ax[:, i, :, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_176": {
                "variable": {
                    "value": "Ax[:, i, :, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "int(np.sqrt(m))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_177": {
                "variable": {
                    "value": "Ax[:, i, :, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "A[:, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "mat2": {
                    "value": "x[:, i, :, :].reshape(n_batch, ha * wa).transpose(1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "transpose_177": {
                "variable": {
                    "value": "Ax[:, i, :, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_177": {
                "variable": {
                    "value": "Ax[:, i, :, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "int(np.sqrt(m))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_325": {
                "tensors": {
                    "value": "x_noGAN",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "clone_325": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_227": {
                "params": {
                    "value": "[z_variables[l]]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.b1, opt.b2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_294": {
                "params": {
                    "value": "[alpha_DCT_variables[l]]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.b1, opt.b2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "abs_178": {
                "input": {
                    "value": "Ax[:, i, :, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "xcorr2.py": {
        "torch": {
            "arange_10": {
                "variable": {
                    "value": "indices[dim]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "start": {
                    "value": "x.size(dim) - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "step": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rfft_91": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.view(n_batch, ha, wa)",
                            "Call"
                        ],
                        [
                            "a.view(n_batch, ha, wa, 2)",
                            "Call"
                        ],
                        [
                            "np.zeros((2, 1, 5, 5))",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "fft_102": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.view(n_batch, ha, wa)",
                            "Call"
                        ],
                        [
                            "a.view(n_batch, ha, wa, 2)",
                            "Call"
                        ],
                        [
                            "np.zeros((2, 1, 5, 5))",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_112": {
                "variable": {
                    "value": "a_pad",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "2 * ha - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "rfft_114": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_124": {
                "variable": {
                    "value": "a_pad",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "2 * ha - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "rfft_126": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tensor_138": {
                "variable": {
                    "value": "a_torch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.view(n_batch, ha, wa)",
                            "Call"
                        ],
                        [
                            "a.view(n_batch, ha, wa, 2)",
                            "Call"
                        ],
                        [
                            "np.zeros((2, 1, 5, 5))",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tensor_147": {
                "variable": {
                    "value": "astara_3",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "astara_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "xcorr2_torch(a_torch).to(device='cuda')",
                            "Call"
                        ],
                        [
                            "np.array(astara_3.cpu())",
                            "Call"
                        ],
                        [
                            "np.fft.fftshift(astara_3, (2, 3))",
                            "Call"
                        ],
                        [
                            "torch.tensor(astara_3, dtype=torch.float32, device='cuda')",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "variable": {
                    "value": "absFa2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, n_c, 2 * ha - 1, 2 * wa - 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "irfft_152": {
                "variable": {
                    "value": "astara_4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "absFa2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, n_c, 2 * ha - 1, 2 * wa - 1, 2))",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tensor_157": {
                "variable": {
                    "value": "astara_4",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "astara_4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.irfft(absFa2, signal_ndim=2, onesided=False, normalized=False)",
                            "Call"
                        ],
                        [
                            "np.array(astara_4)",
                            "Call"
                        ],
                        [
                            "np.fft.fftshift(astara_4, (2, 3))",
                            "Call"
                        ],
                        [
                            "torch.tensor(astara_4, dtype=torch.float32, device='cuda')",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "norm_159": {
                "variable": {
                    "value": "diff_12",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "astara_1 - astara_2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_160": {
                "variable": {
                    "value": "diff_13",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "astara_1 - astara_3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_161": {
                "variable": {
                    "value": "diff_14",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "astara_1 - astara_4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_15": {
                "data": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_21": {
                "variable": {
                    "value": "astarb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "n_c",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "wa + wb - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_22": {
                "variable": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, ha + hb - 1, wa + wb - 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_23": {
                "variable": {
                    "value": "b_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, ha + hb - 1, wa + wb - 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "rfft_26": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "rfft_27": {
                "variable": {
                    "value": "B",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "b_full",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_28": {
                "variable": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, ha + hb - 1, wa + wb - 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "irfft_35": {
                "variable": {
                    "value": "astarb[:, 0, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "n": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_38": {
                "variable": {
                    "value": "astara",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "n_c",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "2 * wa - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "2 * ha - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "rfft_41": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_44": {
                "variable": {
                    "value": "Aabs2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, 2 * ha - 1, 2 * wa - 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "irfft_46": {
                "variable": {
                    "value": "astara[:, 0, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "Aabs2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, 2 * ha - 1, 2 * wa - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, 2 * ha - 1, 2 * wa - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tensor_51": {
                "data": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_57": {
                "variable": {
                    "value": "astarb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "n_c",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "wa + wb - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_58": {
                "variable": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, ha + hb - 1, wa + wb - 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_59": {
                "variable": {
                    "value": "b_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, ha + hb - 1, wa + wb - 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "rfft_62": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "rfft_63": {
                "variable": {
                    "value": "B",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "b_full",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, ha + hb - 1, wa + wb - 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "irfft_71": {
                "variable": {
                    "value": "astarb[:, 0, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "n": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_74": {
                "variable": {
                    "value": "astara",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "n_c",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "2 * wa - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_75": {
                "variable": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "2 * ha - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "rfft_77": {
                "variable": {
                    "value": "A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_full",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, ha + hb - 1, wa + wb - 1), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros(n_batch, 2 * ha - 1, 2 * wa - 1, dtype=a.dtype, device=mydevice)",
                            "Call"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_80": {
                "variable": {
                    "value": "Aabs2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_batch, 2 * ha - 1, 2 * wa - 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "a.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "mydevice",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "a.device",
                            "Attribute"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "irfft_82": {
                "variable": {
                    "value": "astara[:, 0, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "Aabs2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros((n_batch, 2 * ha - 1, 2 * wa - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "torch.zeros((n_batch, 2 * ha - 1, 2 * wa - 1, 2), dtype=a.dtype, device=mydevice)",
                            "Call"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ],
                        [
                            "Ar.abs() ** 2 + Ai.abs() ** 2",
                            "BinOp"
                        ]
                    ]
                },
                "signal_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "onesided": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "normalized": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}