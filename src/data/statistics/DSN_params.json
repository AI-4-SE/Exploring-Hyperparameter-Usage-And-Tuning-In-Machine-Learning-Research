{
    "src/ResnetModel.py": {
        "torch": {
            "Sequential_17": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(original_model.children())[:-3]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self.last_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(original_model.children())[-3:-1]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(original_model.children())[:-3]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_89": {
                "variable": {
                    "value": "self.last_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(original_model.children())[-3:-1]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_125": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(original_model.children())[:-3]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_126": {
                "variable": {
                    "value": "self.last_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(original_model.children())[-3:-1]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "self.original_output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(original_model.children())[-1:]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Parameter_237": {
                "variable": {
                    "value": "self.cpars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.randn(num_classes, num_dimension)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_238": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_310": {
                "variable": {
                    "value": "self.en1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "one_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_311": {
                "variable": {
                    "value": "self.en2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "one_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hash_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_312": {
                "variable": {
                    "value": "self.de1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hash_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "one_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_313": {
                "variable": {
                    "value": "self.de2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "one_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_315": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MSELoss_362": {
                "variable": {
                    "value": "self.mse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hashing_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_95": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_133": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_171": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_208": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hashing_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_182": {
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_237": {
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_dimension",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mm_262": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "torch.transpose(y, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_343": {
                "input": {
                    "value": "torch.sum(torch.mul(e, e), dim=1, keepdim=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sign_365": {
                "input": {
                    "value": "e",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.en1(x)",
                            "Call"
                        ],
                        [
                            "self.en2(self.relu(e))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_262": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim0": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim1": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_343": {
                "input": {
                    "value": "torch.mul(e, e)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mul_343": {
                "input": {
                    "value": "e",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.en1(x)",
                            "Call"
                        ],
                        [
                            "self.en2(self.relu(e))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "e",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.en1(x)",
                            "Call"
                        ],
                        [
                            "self.en2(self.relu(e))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_354": {
                "input": {
                    "value": "torch.mul(e1, e2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mul_354": {
                "input": {
                    "value": "e1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "e_norm[i1]",
                            "Subscript"
                        ]
                    ]
                },
                "other": {
                    "value": "e2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "e_norm[i2]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "src/Sketchy.py": {
        "torch": {}
    },
    "src/TUBerlin.py": {
        "torch": {}
    },
    "src/resnet.py": {
        "torch": {
            "from_numpy_302": {
                "variable": {
                    "value": "resume_dict[second_last_linear.weight]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "new_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.dot(s_new, vh[:hashing_dim, :])",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_303": {
                "variable": {
                    "value": "resume_dict[last_linear.weight]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "new_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "u[:, :hashing_dim]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Conv2d_21": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_37": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_40": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_70": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_72": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_74": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_75": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_109": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_110": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_111": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_116": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_117": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_175": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_177": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_178": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_179": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_184": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_204": {
                "variable": {
                    "value": "self.second_last_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hashing_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_205": {
                "variable": {
                    "value": "self.last_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hashing_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_139": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_150": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_210": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_221": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "BatchNorm2d_141": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_212": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "src/senet.py": {
        "torch": {
            "from_numpy_895": {
                "variable": {
                    "value": "resume_dict[second_last_linear.weight]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "new_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.dot(s_new, vh[:hashing_dim, :])",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_896": {
                "variable": {
                    "value": "resume_dict[last_linear.weight]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "new_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "u[:, :hashing_dim]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Parameter_20": {
                "variable": {
                    "value": "self.cpars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.randn(num_classes, num_dimension)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_149": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_151": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_155": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_156": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channels // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_157": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "channels // reduction + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_159": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_160": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mean_165": {
                "variable": {
                    "value": "avg",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv1(avg)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y.view(y.size(0), 1, 1, 1).expand(y.size(0), 1, x.size(2), x.size(3))), 1)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "module_input",
                            "Name"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size()[0], -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y), 1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.sigmoid(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y.view(y.size(0), 1, 1, 1).expand(y.size(0), 1, x.size(2), x.size(3))), 1)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "self.sigmoid(x)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size()[0], -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y), 1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.sigmoid(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size()[0], -1, 1, 1)",
                            "Call"
                        ],
                        [
                            "self.layer0(x)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.last_linear(x)",
                            "Call"
                        ],
                        [
                            "self.features(x, y)",
                            "Call"
                        ],
                        [
                            "self.logits(x)",
                            "Call"
                        ],
                        [
                            "self.layer0(x)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.second_last_linear(x)",
                            "Call"
                        ],
                        [
                            "self.last_linear(x)",
                            "Call"
                        ],
                        [
                            "self.features(x, y)",
                            "Call"
                        ],
                        [
                            "self.hashing(x)",
                            "Call"
                        ],
                        [
                            "self.logits(x)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_165": {
                "variable": {
                    "value": "avg",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, y.view(y.size(0), 1, 1, 1).expand(y.size(0), 1, x.size(2), x.size(3)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_212": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channels // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_213": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_214": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channels // reduction + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_215": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_221": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, y.view(y.size(0), 1, 1, 1).expand(y.size(0), 1, x.size(2), x.size(3)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_230": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_232": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channels // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_233": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_234": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "channels // reduction + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_235": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_244": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_338": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_340": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_341": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "groups",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_343": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_344": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_345": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_346": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_384": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_386": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_387": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "groups",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_389": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_390": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_391": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_392": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_431": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_433": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_434": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "groups",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_436": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_437": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_438": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_439": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_545": {
                "variable": {
                    "value": "self.layer0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict(layer0_modules)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AvgPool2d_585": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_719": {
                "variable": {
                    "value": "self.layer0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict(layer0_modules)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AvgPool2d_759": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_762": {
                "variable": {
                    "value": "self.second_last_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hashing_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_591": {
                "variable": {
                    "value": "self.last_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_597": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=downsample_kernel_size, stride=stride, padding=downsample_padding, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_611": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_766": {
                "variable": {
                    "value": "self.last_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hashing_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_772": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=downsample_kernel_size, stride=stride, padding=downsample_padding, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_786": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "squeeze_841": {
                "variable": {
                    "value": "pretrained_state_dict[kk]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "vv",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_843": {
                "variable": {
                    "value": "pretrained_state_dict[kk]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.squeeze(vv), torch.zeros(vv.size()[0], 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_870": {
                "variable": {
                    "value": "pretrained_state_dict[kk]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "vv",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_872": {
                "variable": {
                    "value": "pretrained_state_dict[kk]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.squeeze(vv), torch.zeros(vv.size()[0], 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_20": {
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                },
                "out": {
                    "value": "num_dimension",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mm_43": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv1(avg)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y.view(y.size(0), 1, 1, 1).expand(y.size(0), 1, x.size(2), x.size(3))), 1)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "module_input",
                            "Name"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size()[0], -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y), 1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.sigmoid(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y.view(y.size(0), 1, 1, 1).expand(y.size(0), 1, x.size(2), x.size(3))), 1)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "self.sigmoid(x)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size()[0], -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, y), 1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.sigmoid(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size()[0], -1, 1, 1)",
                            "Call"
                        ],
                        [
                            "self.layer0(x)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.last_linear(x)",
                            "Call"
                        ],
                        [
                            "self.features(x, y)",
                            "Call"
                        ],
                        [
                            "self.logits(x)",
                            "Call"
                        ],
                        [
                            "self.layer0(x)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "m(x, y)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.second_last_linear(x)",
                            "Call"
                        ],
                        [
                            "self.last_linear(x)",
                            "Call"
                        ],
                        [
                            "self.features(x, y)",
                            "Call"
                        ],
                        [
                            "self.hashing(x)",
                            "Call"
                        ],
                        [
                            "self.logits(x)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.transpose(y, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_586": {
                "p": {
                    "value": "dropout_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "MethodArgument"
                        ],
                        [
                            "0.2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_760": {
                "p": {
                    "value": "dropout_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "MethodArgument"
                        ],
                        [
                            "0.2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "transpose_43": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim0": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim1": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_543": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_598": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "downsample_kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "downsample_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_601": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MaxPool2d_717": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_773": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "downsample_kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "downsample_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_776": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_521": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_523": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_524": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_525": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_527": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_528": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_529": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_531": {
                "num_features": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_532": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_536": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_538": {
                "num_features": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_539": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_695": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_697": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_698": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_699": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_701": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_702": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_703": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_705": {
                "num_features": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_706": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_710": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_712": {
                "num_features": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_713": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "squeeze_843": {
                "input": {
                    "value": "vv",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_843": {
                "*size": {
                    "value": "vv.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_872": {
                "input": {
                    "value": "vv",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_872": {
                "*size": {
                    "value": "vv.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/test_cse_resnet_sketchy_zeroshot.py": {
        "torch": {
            "DataParallel_213": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "CSEResnetModel_KDHashing(args.arch, args.num_hashing, args.num_classes)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_217": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_264": {
                "variable": {
                    "value": "zero_loader_ext",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "sketchy_zero_ext",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SketchyDataset(split='zero', version='all_photo', zero_version=args.zero_version, transform=transformations, aug=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_269": {
                "variable": {
                    "value": "zero_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "sketchy_zero",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SketchyDataset(split='zero', zero_version=args.zero_version, transform=transformations, aug=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_302": {
                "variable": {
                    "value": "avgpool",
                    "type": "variable",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_227": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "resume",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(savedir, args.resume_file)",
                            "Call"
                        ],
                        [
                            "os.path.join(savedir, 'model_best.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "normalize_321": {
                "variable": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.module.original_model.features(input, tag_input)",
                            "Call"
                        ],
                        [
                            "model.module.original_model.avg_pool(features)",
                            "Call"
                        ],
                        [
                            "features.view(features.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.normalize(features)",
                            "Call"
                        ],
                        [
                            "features.cpu().detach().numpy()",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_308": {
                "*size": {
                    "value": "input.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/test_cse_resnet_tuberlin_zeroshot.py": {
        "torch": {
            "DataParallel_177": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "CSEResnetModel_KDHashing(args.arch, args.num_hashing, args.num_classes)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_181": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_228": {
                "variable": {
                    "value": "zero_loader_ext",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "tuberlin_zero_ext",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TUBerlinDataset(split='zero', version='ImageResized_ready', zero_version=args.zero_version, transform=transformations, aug=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_233": {
                "variable": {
                    "value": "zero_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "tuberlin_zero",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TUBerlinDataset(split='zero', zero_version=args.zero_version, transform=transformations, aug=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_264": {
                "variable": {
                    "value": "avgpool",
                    "type": "variable",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_191": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "resume",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(savedir, args.resume_file)",
                            "Call"
                        ],
                        [
                            "os.path.join(savedir, 'model_best.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "normalize_283": {
                "variable": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.module.original_model.features(input, tag_input)",
                            "Call"
                        ],
                        [
                            "model.module.original_model.avg_pool(features)",
                            "Call"
                        ],
                        [
                            "features.view(features.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.normalize(features)",
                            "Call"
                        ],
                        [
                            "features.cpu().detach().numpy()",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_270": {
                "*size": {
                    "value": "input.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/tool.py": {
        "torch": {
            "cat_59": {
                "variable": {
                    "value": "contrast_feature",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "torch.unbind(features, dim=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "div_70": {
                "variable": {
                    "value": "anchor_dot_contrast",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.matmul(anchor_feature, contrast_feature.T)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.temperature",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_74": {
                "variable": {
                    "value": "(logits_max, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "anchor_dot_contrast",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.div(torch.matmul(anchor_feature, contrast_feature.T), self.temperature)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "scatter_80": {
                "variable": {
                    "value": "logits_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.ones_like(mask)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "torch.arange(batch_size * anchor_count).view(-1, 1).to(device)",
                    "type": "Call",
                    "possible_values": []
                },
                "src": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "normalize_190": {
                "variable": {
                    "value": "hash_code",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hash_code",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.normalize(hash_code).cpu().detach().numpy()",
                            "Call"
                        ]
                    ]
                }
            },
            "device_284": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_287": {
                "variable": {
                    "value": "self.memory_embeds",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_classes, self.topk, self.embed_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_289": {
                "variable": {
                    "value": "self.memory_full_flag",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cosine_similarity_343": {
                "variable": {
                    "value": "scores",
                    "type": "variable",
                    "possible_values": []
                },
                "x1": {
                    "value": "self.memory_embeds[label]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "x2": {
                    "value": "query.view(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "min_344": {
                "variable": {
                    "value": "(score, idx)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-cdist(binary_sketch_hash, binary_image_hash)",
                            "UnaryOp"
                        ],
                        [
                            "F.cosine_similarity(self.memory_embeds[label], query.view(1, -1))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_358": {
                "variable": {
                    "value": "self.memory_embeds",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_classes, self.topk, self.embed_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_360": {
                "variable": {
                    "value": "self.memory_full_flag",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_35": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_37": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "eye_49": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unbind_59": {
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features.view(features.shape[0], features.shape[1], -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "matmul_71": {
                "input": {
                    "value": "anchor_feature",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features[:, 0]",
                            "Subscript"
                        ],
                        [
                            "contrast_feature",
                            "Name"
                        ]
                    ]
                },
                "other": {
                    "value": "contrast_feature.T",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_like_81": {
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.eye(batch_size, dtype=torch.float32).to(device)",
                            "Call"
                        ],
                        [
                            "mask.float().to(device)",
                            "Call"
                        ],
                        [
                            "torch.eq(labels, labels.T).float().to(device)",
                            "Call"
                        ],
                        [
                            "mask.repeat(anchor_count, contrast_count)",
                            "Call"
                        ],
                        [
                            "mask * logits_mask",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "arange_83": {
                "start": {
                    "value": "batch_size * anchor_count",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "exp_89": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "anchor_dot_contrast - logits_max.detach()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "log_90": {
                "input": {
                    "value": "exp_logits.sum(1, keepdim=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_183": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_187": {
                "tensors": {
                    "value": "[target, target]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "mean_301": {
                "input": {
                    "value": "self.memory_embeds[label][:self.memory_full_flag[label], :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nonzero_317": {
                "variable": {
                    "value": "corresponding_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query_labels == labels[idx]",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "eq_54": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "labels.contiguous().view(-1, 1)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "other": {
                    "value": "labels.T",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_184": {
                "tensors": {
                    "value": "[sketch, image]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_185": {
                "tensors": {
                    "value": "[torch.zeros(sketch.size()[0], 1), torch.ones(image.size()[0], 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_325": {
                "variable": {
                    "value": "query",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "queries[corresponding_idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cosine_similarity_329": {
                "x1": {
                    "value": "query.view(1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "x2": {
                    "value": "embed.view(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cosine_similarity_352": {
                "x1": {
                    "value": "query.view(1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "x2": {
                    "value": "center.view(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_294": {
                "input": {
                    "value": "self.memory_full_flag",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_185": {
                "*size": {
                    "value": "sketch.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_185": {
                "*size": {
                    "value": "image.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/train_cse_resnet_sketchy_ext.py": {
        "torch": {
            "manual_seed_87": {
                "seed": {
                    "value": "SEED",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "manual_seed_all_88": {
                "seed": {
                    "value": "SEED",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "DataParallel_118": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "CSEResnetModel_KDHashing(args.arch, args.num_hashing, args.num_classes, freeze_features=args.freeze_features, ems=args.ems_loss, module='CSE')",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_122": {
                "variable": {
                    "value": "model_t",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cse_resnet50()",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model_t).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_135": {
                "variable": {
                    "value": "criterion_test",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_137": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_163": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "sketchy_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SketchyDataset(split='train', zero_version=args.zero_version, transform=transformations, aug=True, cid_mask=True, contrastive_transform=contrastive_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_168": {
                "variable": {
                    "value": "train_loader_ext",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "sketchy_train_ext",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SketchyDataset(split='train', version='all_photo', zero_version=args.zero_version, transform=transformations, aug=True, cid_mask=True, contrastive_transform=contrastive_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 3 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_172": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "sketchy_val",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SketchImagePairedDataset(zero_version=args.zero_version, transform=transformations)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_96": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_100": {
                "variable": {
                    "value": "mmatrix",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mul_104": {
                "variable": {
                    "value": "inputs_m",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "other": {
                    "value": "mmatrix",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones_like(inputs)",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_131": {
                "variable": {
                    "value": "criterion_train",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_278": {
                "variable": {
                    "value": "tag_zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "sketch.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_279": {
                "variable": {
                    "value": "tag_ones",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "image.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_280": {
                "variable": {
                    "value": "tag_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tag_zeros, tag_ones]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randperm_282": {
                "variable": {
                    "value": "sketch_shuffle_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "sketch.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randperm_283": {
                "variable": {
                    "value": "image_shuffle_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "image.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_296": {
                "variable": {
                    "value": "target_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[label_s, label_i]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_297": {
                "variable": {
                    "value": "cid_mask_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[sketch_cid_mask, image_cid_mask]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "normalize_308": {
                "variable": {
                    "value": "contrastive_feature",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hash_code[tag_all.size(0):]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "unsqueeze_310": {
                "variable": {
                    "value": "contrastive_feature1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "contrastive_feature[:tag_all.size(0)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_311": {
                "variable": {
                    "value": "contrastive_feature2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "contrastive_feature[tag_all.size(0):]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_404": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "load_203": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "resume",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.savedir, savedir, 'checkpoint.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_276": {
                "tensors": {
                    "value": "[sketch_cid_mask]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_277": {
                "tensors": {
                    "value": "[image_cid_mask]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_299": {
                "tensors": {
                    "value": "[sketch, image, sketch1, image1, sketch2, image2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_300": {
                "tensors": {
                    "value": "[tag_all, tag_all, tag_all]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_313": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_317": {
                "tensors": {
                    "value": "[contrastive_feature1, contrastive_feature2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_370": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_314": {
                "tensors": {
                    "value": "[sketch, image]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_371": {
                "*size": {
                    "value": "input.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_372": {
                "*size": {
                    "value": "input.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/train_cse_resnet_tuberlin_ext.py": {
        "torch": {
            "manual_seed_87": {
                "seed": {
                    "value": "SEED",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2021",
                            "Constant"
                        ]
                    ]
                }
            },
            "manual_seed_all_88": {
                "seed": {
                    "value": "SEED",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2021",
                            "Constant"
                        ]
                    ]
                }
            },
            "DataParallel_147": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "CSEResnetModel_KDHashing(args.arch, args.num_hashing, args.num_classes, freeze_features=args.freeze_features, ems=args.ems_loss)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_152": {
                "variable": {
                    "value": "model_t",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cse_resnet50()",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model_t).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_165": {
                "variable": {
                    "value": "criterion_test",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_167": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_194": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "tuberlin_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TUBerlinDataset(split='train', zero_version=args.zero_version, transform=transformations, contrastive_transform=contrastive_transform, aug=True, cid_mask=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 10",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "worker_init_fn_seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_200": {
                "variable": {
                    "value": "train_loader_ext",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "tuberlin_train_ext",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TUBerlinDataset(split='train', zero_version=args.zero_version, version='ImageResized_ready', transform=transformations, contrastive_transform=contrastive_transform, aug=True, cid_mask=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 10 * 9",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "worker_init_fn_seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_205": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "tuberlin_val",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SketchImagePairedDataset(dataset='tuberlin', zero_version=args.zero_version, transform=transformations)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_95": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_99": {
                "variable": {
                    "value": "mmatrix",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mul_103": {
                "variable": {
                    "value": "inputs_m",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "other": {
                    "value": "mmatrix",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones_like(inputs)",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_161": {
                "variable": {
                    "value": "criterion_train",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_274": {
                "variable": {
                    "value": "tag_zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "sketch.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_275": {
                "variable": {
                    "value": "tag_ones",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "image.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_276": {
                "variable": {
                    "value": "tag_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tag_zeros, tag_ones]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randperm_278": {
                "variable": {
                    "value": "sketch_shuffle_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "sketch.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randperm_279": {
                "variable": {
                    "value": "image_shuffle_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "image.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_292": {
                "variable": {
                    "value": "target_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[label_s, label_i]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_293": {
                "variable": {
                    "value": "cid_mask_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[sketch_cid_mask, image_cid_mask]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "normalize_304": {
                "variable": {
                    "value": "contrastive_feature",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hash_code[tag_all.size(0):]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "unsqueeze_306": {
                "variable": {
                    "value": "contrastive_feature1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "contrastive_feature[:tag_all.size(0)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_307": {
                "variable": {
                    "value": "contrastive_feature2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "contrastive_feature[tag_all.size(0):]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_400": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_131": {
                "variable": {
                    "value": "sample_num",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "log_softmax_122": {
                "input": {
                    "value": "input_logits",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_272": {
                "tensors": {
                    "value": "[sketch_cid_mask]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_273": {
                "tensors": {
                    "value": "[image_cid_mask]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_295": {
                "tensors": {
                    "value": "[sketch, image, sketch1, image1, sketch2, image2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_296": {
                "tensors": {
                    "value": "[tag_all, tag_all, tag_all]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_309": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_313": {
                "tensors": {
                    "value": "[contrastive_feature1, contrastive_feature2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_365": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_129": {
                "input": {
                    "value": "torch.mul(log_likelihood, F.softmax(target_logits, dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_132": {
                "input": {
                    "value": "torch.mul(torch.mul(log_likelihood, F.softmax(target_logits, dim=1)), mask)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_310": {
                "tensors": {
                    "value": "[sketch, image]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_366": {
                "*size": {
                    "value": "input.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_367": {
                "*size": {
                    "value": "input.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mul_129": {
                "input": {
                    "value": "log_likelihood",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-F.log_softmax(input_logits, dim=1)",
                            "UnaryOp"
                        ]
                    ]
                },
                "other": {
                    "value": "F.softmax(target_logits, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mul_132": {
                "input": {
                    "value": "log_likelihood",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-F.log_softmax(input_logits, dim=1)",
                            "UnaryOp"
                        ]
                    ]
                },
                "other": {
                    "value": "F.softmax(target_logits, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_129": {
                "input": {
                    "value": "target_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target_logits + mask_pos",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_132": {
                "input": {
                    "value": "target_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target_logits + mask_pos",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}