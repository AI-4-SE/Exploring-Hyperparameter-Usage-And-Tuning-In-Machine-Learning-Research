{
    "blocks/compact_pyramid.py": {
        "torch": {
            "Conv2d_10": {
                "variable": {
                    "value": "self.input_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_channels * M",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self.norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.BatchNorm2d(num_features=in_channels * M)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "variable": {
                    "value": "self.out_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "variable": {
                    "value": "self.out_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "in_channels * M",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels * M",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "blocks/depthwise_seperable.py": {
        "torch": {
            "Conv2d_25": {
                "variable": {
                    "value": "self.depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "dilation",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.point",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "blocks/implicit_depth.py": {
        "torch": {
            "Conv2d_17": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "chan1",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "chan2",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "chan3",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "chan4",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "chan5",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.concat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1280",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_37": {
                "variable": {
                    "value": "self.irb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "InvertedResidual(inp=256, oup=256, stride=1, expand_ratio=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_44": {
                "variable": {
                    "value": "self.sig",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "interpolate_48": {
                "variable": {
                    "value": "c1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(c1)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[40, 40]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_51": {
                "variable": {
                    "value": "c2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(c2)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[40, 40]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_54": {
                "variable": {
                    "value": "c3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(c3)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[40, 40]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_57": {
                "variable": {
                    "value": "c4",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(c4)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[40, 40]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_60": {
                "variable": {
                    "value": "c5",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(c5D)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[40, 40]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_67": {
                "input": {
                    "value": "self.sig(inv)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[320, 320]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_64": {
                "tensors": {
                    "value": "(c1, c2, c3, c4, c5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "blocks/mobilenet.py": {
        "torch": {
            "Sequential_116": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_240": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*self.features",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "s if i == 0 else 1",
                            "IfExp"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(kernel_size - 1) // 2",
                            "BinOp"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_239": {
                "*args": {
                    "value": "*features",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_112": {
                "in_channels": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(round(inp * expand_ratio))",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "oup",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_220": {
                "in_channels": {
                    "value": "input_channel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "Constant"
                        ],
                        [
                            "_make_divisible(input_channel * width_mult, round_nearest)",
                            "Call"
                        ],
                        [
                            "output_channel",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "output_channel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "_make_divisible(c * width_mult, round_nearest)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_229": {
                "*args": {
                    "value": "*features",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "blocks/modality_fusion.py": {
        "torch": {}
    },
    "blocks/rgb_attention.py": {
        "torch": {
            "Sequential_13": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AvgPool3d(kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_37": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AvgPool3d(kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool3d_14": {
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "in_channels": {
                    "value": "in_channel",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_channel",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "in_channels": {
                    "value": "in_channel",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_channel",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sigmoid_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool3d_38": {
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "in_features": {
                    "value": "size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_41": {
                "in_features": {
                    "value": "size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sigmoid_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "device_37": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_35": {
                "seed": {
                    "value": "seed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1234823",
                            "Constant"
                        ]
                    ]
                }
            },
            "load_165": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'/home/epiphyte/Documents/Research/efficient_3d_Det/finetune/model0900'",
                            "Constant"
                        ]
                    ]
                }
            },
            "DataLoader_181": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "nju2k_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "utils.NJU2K_Dataset(rgb_dir='./data/sanity_check/RGB/', depth_dir='./data/sanity_check/depth/', ground_truth_dir='./data/sanity_check/GT/')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_197": {
                "variable": {
                    "value": "solver.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "solver.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "5e-05",
                    "type": "Constant",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.99)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "manual_seed_16": {
                "seed": {
                    "value": "seed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1234823",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.in_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_42": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "InvertedResidual(inp=in_channels, oup=int(out_channels / M), expand_ratio=M, stride=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sigmoid_101": {
                "variable": {
                    "value": "self.activ",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCELoss_199": {
                "variable": {
                    "value": "self.loss_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_220": {
                "variable": {
                    "value": "self.convT1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "96",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_221": {
                "variable": {
                    "value": "self.convT2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_222": {
                "variable": {
                    "value": "self.convT3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_223": {
                "variable": {
                    "value": "self.convT4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_105": {
                "input": {
                    "value": "hid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.activ(self.conv(x))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "[320, 320]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_162": {
                "tensors": {
                    "value": "(F.interpolate(pass1, [20, 20]), c4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_165": {
                "tensors": {
                    "value": "(F.interpolate(pass2, [40, 40]), c3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_168": {
                "tensors": {
                    "value": "(F.interpolate(pass3, [80, 80]), c2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_238": {
                "tensors": {
                    "value": "(self.convT1(pass1), c4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_241": {
                "tensors": {
                    "value": "(self.convT2(pass2), c3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_244": {
                "tensors": {
                    "value": "(self.convT3(pass3), c2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_162": {
                "input": {
                    "value": "pass1",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cpr1(c5D)",
                            "Call"
                        ],
                        [
                            "self.cpr1(c5D)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "[20, 20]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "interpolate_165": {
                "input": {
                    "value": "pass2",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cpr2(torch.cat((F.interpolate(pass1, [20, 20]), c4), 1))",
                            "Call"
                        ],
                        [
                            "self.cpr2(torch.cat((self.convT1(pass1), c4), 1))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "[40, 40]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "interpolate_168": {
                "input": {
                    "value": "pass3",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cpr3(torch.cat((F.interpolate(pass2, [40, 40]), c3), 1))",
                            "Call"
                        ],
                        [
                            "self.cpr3(torch.cat((self.convT2(pass2), c3), 1))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "[80, 80]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "utils/dataset.py": {
        "torch": {
            "Tensor_74": {
                "variable": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_75": {
                "variable": {
                    "value": "dep",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_80": {
                "variable": {
                    "value": "gt",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_127": {
                "variable": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_130": {
                "variable": {
                    "value": "dep",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_131": {
                "variable": {
                    "value": "gt",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_180": {
                "variable": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_181": {
                "variable": {
                    "value": "dep",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_186": {
                "variable": {
                    "value": "gt",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "utils/function_solver.py": {
        "torch": {
            "device_21": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_172": {
                "variable": {
                    "value": "optim",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                },
                "lr": {
                    "value": "config['lr']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "betas": {
                    "value": "(config['beta1'], config['beta2'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "StepLR_179": {
                "variable": {
                    "value": "lr_schedule",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), weight_decay=0.001, lr=config['lr'], betas=(config['beta1'], config['beta2']))",
                            "Call"
                        ]
                    ]
                },
                "step_size": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BCELoss_183": {
                "variable": {
                    "value": "loss_fn",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_72": {
                "obj": {
                    "value": "{'epoch': ep, 'model_state_dict': model.state_dict(), 'optimizer_state_dict': config['optim'].state_dict(), 'loss': loss}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "'./checkpoints/model{}{}'.format(run_iter, ep)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/pytorch_msssim.py": {
        "torch": {
            "Tensor_9": {
                "variable": {
                    "value": "gauss",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "conv2d_28": {
                "variable": {
                    "value": "mu1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "img1",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "window",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Variable(_2D_window.expand(channel, 1, window_size, window_size).contiguous())",
                            "Call"
                        ],
                        [
                            "create_window(window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ],
                        [
                            "self.window",
                            "Attribute"
                        ],
                        [
                            "create_window(self.window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ]
                    ]
                },
                "padding": {
                    "value": "window_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "groups": {
                    "value": "channel",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "conv2d_29": {
                "variable": {
                    "value": "mu2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "img2",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "window",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Variable(_2D_window.expand(channel, 1, window_size, window_size).contiguous())",
                            "Call"
                        ],
                        [
                            "create_window(window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ],
                        [
                            "self.window",
                            "Attribute"
                        ],
                        [
                            "create_window(self.window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ]
                    ]
                },
                "padding": {
                    "value": "window_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "groups": {
                    "value": "channel",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "conv2d_36": {
                "input": {
                    "value": "img1 * img1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight": {
                    "value": "window",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Variable(_2D_window.expand(channel, 1, window_size, window_size).contiguous())",
                            "Call"
                        ],
                        [
                            "create_window(window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ],
                        [
                            "self.window",
                            "Attribute"
                        ],
                        [
                            "create_window(self.window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ]
                    ]
                },
                "padding": {
                    "value": "window_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "groups": {
                    "value": "channel",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "conv2d_39": {
                "input": {
                    "value": "img2 * img2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight": {
                    "value": "window",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Variable(_2D_window.expand(channel, 1, window_size, window_size).contiguous())",
                            "Call"
                        ],
                        [
                            "create_window(window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ],
                        [
                            "self.window",
                            "Attribute"
                        ],
                        [
                            "create_window(self.window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ]
                    ]
                },
                "padding": {
                    "value": "window_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "groups": {
                    "value": "channel",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "conv2d_42": {
                "input": {
                    "value": "img1 * img2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight": {
                    "value": "window",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Variable(_2D_window.expand(channel, 1, window_size, window_size).contiguous())",
                            "Call"
                        ],
                        [
                            "create_window(window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ],
                        [
                            "self.window",
                            "Attribute"
                        ],
                        [
                            "create_window(self.window_size, channel)",
                            "Call"
                        ],
                        [
                            "window.cuda(img1.get_device())",
                            "Call"
                        ],
                        [
                            "window.type_as(img1)",
                            "Call"
                        ]
                    ]
                },
                "padding": {
                    "value": "window_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "groups": {
                    "value": "channel",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "utils/solver.py": {
        "torch": {
            "device_20": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "BCELoss_73": {
                "variable": {
                    "value": "self.loss_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_77": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "Constant",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.99)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "StepLR_83": {
                "variable": {
                    "value": "self.lr_schedule",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "step_size": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_102": {
                "obj": {
                    "value": "{'epoch': ep, 'model_state_dict': self.model.state_dict(), 'optimizer_state_dict': self.optim.state_dict(), 'loss': loss}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "'./checkpoints/model{}{}'.format(self.run_iter, ep)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/viz.py": {
        "torch": {}
    }
}