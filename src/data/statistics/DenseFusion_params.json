{
    "datasets/linemod/dataset.py": {
        "torch": {
            "from_numpy_190": {
                "ndarray": {
                    "value": "cloud.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_193": {
                "ndarray": {
                    "value": "target.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_194": {
                "ndarray": {
                    "value": "model_points.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_192": {
                "ndarray": {
                    "value": "img_masked.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "datasets/ycb/dataset.py": {
        "torch": {
            "from_numpy_227": {
                "ndarray": {
                    "value": "cloud.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_230": {
                "ndarray": {
                    "value": "target.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_231": {
                "ndarray": {
                    "value": "model_points.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_229": {
                "ndarray": {
                    "value": "img_masked.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "lib/extractors.py": {
        "torch": {
            "Conv2d_15": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_85": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_102": {
                "variable": {
                    "value": "downsample",
                    "type": "Name",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_112": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_103": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "lib/knn/__init__.py": {
        "torch": {
            "empty_19": {
                "variable": {
                    "value": "inds",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "query.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "self.k",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "query.shape[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "rand_32": {
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "D",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "N",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "rand_33": {
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "D",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "M",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "is_tensor_37": {
                "obj": {
                    "value": "obj",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gc.get_objects()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "lib/knn/build_ffi.py": {
        "torch": {
            "is_available_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "lib/knn/knn_pytorch/__init__.py": {
        "torch": {}
    },
    "lib/loss.py": {
        "torch": {
            "cat_18": {
                "variable": {
                    "value": "base",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "((1.0 - 2.0 * (pred_r[:, :, 2] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] - 2.0 * pred_r[:, :, 0] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 3] * pred_r[:, :, 0]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 2] ** 2)).view(bs, num_p, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "add_38": {
                "variable": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.bmm(model_points, base)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "points + pred_t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_49": {
                "variable": {
                    "value": "dis",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.norm(pred - target, dim=2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_50": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dis * pred_c - w * torch.log(pred_c)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_54": {
                "variable": {
                    "value": "(how_max, which_max)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_c.contiguous().view(bs * num_p)",
                            "Call"
                        ],
                        [
                            "pred_c.view(bs, num_p)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_63": {
                "variable": {
                    "value": "new_points",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "points - ori_t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mat2": {
                    "value": "ori_base",
                    "type": "Name",
                    "possible_values": [
                        [
                            "base",
                            "Name"
                        ],
                        [
                            "ori_base[which_max[0]].view(1, 3, 3).contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_67": {
                "variable": {
                    "value": "new_target",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "new_target - ori_t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mat2": {
                    "value": "ori_base",
                    "type": "Name",
                    "possible_values": [
                        [
                            "base",
                            "Name"
                        ],
                        [
                            "ori_base[which_max[0]].view(1, 3, 3).contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "norm_16": {
                "input": {
                    "value": "pred_r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(bs, num_p, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bmm_38": {
                "input": {
                    "value": "model_points",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model_points.view(bs, 1, num_point_mesh, 3).repeat(1, num_p, 1, 1).view(bs * num_p, num_point_mesh, 3)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "base",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.cat(((1.0 - 2.0 * (pred_r[:, :, 2] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] - 2.0 * pred_r[:, :, 0] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 3] * pred_r[:, :, 0]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 2] ** 2)).view(bs, num_p, 1)), dim=2).contiguous().view(bs * num_p, 3, 3)",
                            "Call"
                        ],
                        [
                            "base.contiguous().transpose(2, 1).contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "index_select_45": {
                "variable": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "target.view(bs, 1, num_point_mesh, 3).repeat(1, num_p, 1, 1).view(bs * num_p, num_point_mesh, 3)",
                            "Call"
                        ],
                        [
                            "target[0].transpose(1, 0).contiguous().view(3, -1)",
                            "Call"
                        ],
                        [
                            "torch.index_select(target, 1, inds.view(-1) - 1)",
                            "Call"
                        ],
                        [
                            "target.view(3, bs * num_p, num_point_mesh).permute(1, 2, 0).contiguous()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "inds.view(-1) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_49": {
                "input": {
                    "value": "pred - target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_50": {
                "input": {
                    "value": "pred_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_c.contiguous().view(bs * num_p)",
                            "Call"
                        ],
                        [
                            "pred_c.view(bs, num_p)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "lib/loss_refiner.py": {
        "torch": {
            "cat_21": {
                "variable": {
                    "value": "base",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "((1.0 - 2.0 * (pred_r[:, :, 2] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] - 2.0 * pred_r[:, :, 0] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 3] * pred_r[:, :, 0]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 2] ** 2)).view(bs, num_p, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "add_39": {
                "variable": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.bmm(model_points, base)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "pred_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_t.view(1, 1, -1)",
                            "Call"
                        ],
                        [
                            "pred_t.contiguous().view(bs * num_p, 1, 3)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_49": {
                "variable": {
                    "value": "dis",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.norm(pred - target, dim=2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bmm_56": {
                "variable": {
                    "value": "new_points",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "points - ori_t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mat2": {
                    "value": "ori_base",
                    "type": "Name",
                    "possible_values": [
                        [
                            "base",
                            "Name"
                        ],
                        [
                            "ori_base[0].view(1, 3, 3).contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_60": {
                "variable": {
                    "value": "new_target",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "new_target - ori_t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mat2": {
                    "value": "ori_base",
                    "type": "Name",
                    "possible_values": [
                        [
                            "base",
                            "Name"
                        ],
                        [
                            "ori_base[0].view(1, 3, 3).contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "index_select_45": {
                "variable": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "target.view(bs, 1, num_point_mesh, 3).repeat(1, num_p, 1, 1).view(bs * num_p, num_point_mesh, 3)",
                            "Call"
                        ],
                        [
                            "target[0].transpose(1, 0).contiguous().view(3, -1)",
                            "Call"
                        ],
                        [
                            "torch.index_select(target, 1, inds.view(-1) - 1)",
                            "Call"
                        ],
                        [
                            "target.view(3, bs * num_p, num_point_mesh).permute(1, 2, 0).contiguous()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "inds.view(-1) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_19": {
                "input": {
                    "value": "pred_r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_r.view(1, 1, -1)",
                            "Call"
                        ],
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(bs, num_p, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bmm_39": {
                "input": {
                    "value": "model_points",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model_points.view(bs, 1, num_point_mesh, 3).repeat(1, num_p, 1, 1).view(bs * num_p, num_point_mesh, 3)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "base",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.cat(((1.0 - 2.0 * (pred_r[:, :, 2] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] - 2.0 * pred_r[:, :, 0] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 1] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 3] * pred_r[:, :, 0]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 3] ** 2)).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (-2.0 * pred_r[:, :, 0] * pred_r[:, :, 2] + 2.0 * pred_r[:, :, 1] * pred_r[:, :, 3]).view(bs, num_p, 1), (2.0 * pred_r[:, :, 0] * pred_r[:, :, 1] + 2.0 * pred_r[:, :, 2] * pred_r[:, :, 3]).view(bs, num_p, 1), (1.0 - 2.0 * (pred_r[:, :, 1] ** 2 + pred_r[:, :, 2] ** 2)).view(bs, num_p, 1)), dim=2).contiguous().view(bs * num_p, 3, 3)",
                            "Call"
                        ],
                        [
                            "base.contiguous().transpose(2, 1).contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "norm_49": {
                "input": {
                    "value": "pred - target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "lib/network.py": {
        "torch": {
            "DataParallel_33": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv1d_42": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_43": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_45": {
                "variable": {
                    "value": "self.e_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_46": {
                "variable": {
                    "value": "self.e_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_48": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_49": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool1d_51": {
                "variable": {
                    "value": "self.ap1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "num_points",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "relu_54": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_55": {
                "variable": {
                    "value": "emb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.e_conv1(emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_56": {
                "variable": {
                    "value": "pointfeat_1",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, emb)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_58": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_59": {
                "variable": {
                    "value": "emb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.e_conv2(emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_60": {
                "variable": {
                    "value": "pointfeat_2",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, emb)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_62": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(pointfeat_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_63": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv1d_77": {
                "variable": {
                    "value": "self.conv1_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1408",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "640",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_78": {
                "variable": {
                    "value": "self.conv1_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1408",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "640",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_79": {
                "variable": {
                    "value": "self.conv1_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1408",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "640",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_81": {
                "variable": {
                    "value": "self.conv2_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "640",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_82": {
                "variable": {
                    "value": "self.conv2_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "640",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_83": {
                "variable": {
                    "value": "self.conv2_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "640",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_85": {
                "variable": {
                    "value": "self.conv3_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_86": {
                "variable": {
                    "value": "self.conv3_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_87": {
                "variable": {
                    "value": "self.conv3_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_89": {
                "variable": {
                    "value": "self.conv4_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_obj * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_90": {
                "variable": {
                    "value": "self.conv4_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_obj * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_91": {
                "variable": {
                    "value": "self.conv4_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_obj * 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gather_102": {
                "variable": {
                    "value": "emb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "emb",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.e_conv1(emb))",
                            "Call"
                        ],
                        [
                            "F.relu(self.e_conv2(emb))",
                            "Call"
                        ],
                        [
                            "out_img.view(bs, di, -1)",
                            "Call"
                        ],
                        [
                            "torch.gather(emb, 2, choose).contiguous()",
                            "Call"
                        ],
                        [
                            "F.relu(self.e_conv1(emb))",
                            "Call"
                        ],
                        [
                            "F.relu(self.e_conv2(emb))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "choose",
                    "type": "Name",
                    "possible_values": [
                        [
                            "choose.repeat(1, di, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_107": {
                "variable": {
                    "value": "rx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_r(ap_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_108": {
                "variable": {
                    "value": "tx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_t(ap_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_109": {
                "variable": {
                    "value": "cx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_c(ap_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_111": {
                "variable": {
                    "value": "rx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_r(rx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_112": {
                "variable": {
                    "value": "tx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_t(tx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_113": {
                "variable": {
                    "value": "cx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_c(cx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_115": {
                "variable": {
                    "value": "rx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_r(rx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_116": {
                "variable": {
                    "value": "tx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_t(tx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_117": {
                "variable": {
                    "value": "cx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_c(cx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_121": {
                "variable": {
                    "value": "cx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_c(cx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "index_select_124": {
                "variable": {
                    "value": "out_rx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rx[b]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "obj[b]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "index_select_125": {
                "variable": {
                    "value": "out_tx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tx[b]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "obj[b]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "index_select_126": {
                "variable": {
                    "value": "out_cx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "cx[b]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "obj[b]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Conv1d_139": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_140": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_142": {
                "variable": {
                    "value": "self.e_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_143": {
                "variable": {
                    "value": "self.e_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_145": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "384",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_146": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool1d_148": {
                "variable": {
                    "value": "self.ap1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "num_points",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "relu_152": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_153": {
                "variable": {
                    "value": "emb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.e_conv1(emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_154": {
                "variable": {
                    "value": "pointfeat_1",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, emb]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_156": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_157": {
                "variable": {
                    "value": "emb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.e_conv2(emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_158": {
                "variable": {
                    "value": "pointfeat_2",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, emb]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_160": {
                "variable": {
                    "value": "pointfeat_3",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pointfeat_1, pointfeat_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_162": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(pointfeat_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_163": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_176": {
                "variable": {
                    "value": "self.conv1_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_177": {
                "variable": {
                    "value": "self.conv1_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_179": {
                "variable": {
                    "value": "self.conv2_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_180": {
                "variable": {
                    "value": "self.conv2_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_182": {
                "variable": {
                    "value": "self.conv3_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_obj * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_183": {
                "variable": {
                    "value": "self.conv3_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_obj * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_193": {
                "variable": {
                    "value": "rx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_r(ap_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_194": {
                "variable": {
                    "value": "tx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_t(ap_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_196": {
                "variable": {
                    "value": "rx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_r(rx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_197": {
                "variable": {
                    "value": "tx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_t(tx)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "index_select_203": {
                "variable": {
                    "value": "out_rx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rx[b]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "obj[b]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "index_select_204": {
                "variable": {
                    "value": "out_tx",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tx[b]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "obj[b]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_68": {
                "tensors": {
                    "value": "[pointfeat_1, pointfeat_2, ap_x]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "lib/pspnet.py": {
        "torch": {
            "ModuleList_11": {
                "variable": {
                    "value": "self.stages",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[self._make_stage(features, size) for size in sizes]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Conv2d_12": {
                "variable": {
                    "value": "self.bottleneck",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "features * (len(sizes) + 1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_13": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_16": {
                "variable": {
                    "value": "prior",
                    "type": "Name",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(size, size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "conv",
                    "type": "Name",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "features",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "features",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_30": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout2d_46": {
                "variable": {
                    "value": "self.drop_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_52": {
                "variable": {
                    "value": "self.drop_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.15",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 32, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(deep_features_size, 256)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "*args": {
                    "value": "prior",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_23": {
                "tensors": {
                    "value": "priors",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[F.upsample(input=stage(feats), size=(h, w), mode='bilinear') for stage in self.stages] + [feats]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Upsample_31": {
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LogSoftmax_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_59": {
                "in_features": {
                    "value": "deep_features_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_61": {
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "21",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "upsample_22": {
                "input": {
                    "value": "stage(feats)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(h, w)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tools/eval_linemod.py": {
        "torch": {
            "DataLoader_50": {
                "variable": {
                    "value": "testdataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testdataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "PoseDataset_linemod('eval', num_points, False, opt.dataset_root, 0.0, True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_84": {
                "variable": {
                    "value": "(how_max, which_max)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_c.view(bs, num_points)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_44": {
                "f": {
                    "value": "opt.model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_45": {
                "f": {
                    "value": "opt.refine_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bmm_97": {
                "variable": {
                    "value": "new_points",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "points - T",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mat2": {
                    "value": "R",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(my_mat[:3, :3].astype(np.float32))).cuda().view(1, 3, 3)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_124": {
                "variable": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pred.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "transpose_124": {
                "variable": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim0": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_125": {
                "variable": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "target.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "transpose_125": {
                "variable": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim0": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "index_select_127": {
                "variable": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "target[0].cpu().detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(target.astype(np.float32)).cuda().transpose(1, 0).contiguous()",
                            "Call"
                        ],
                        [
                            "torch.index_select(target, 1, inds.view(-1) - 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "inds.view(-1) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_128": {
                "variable": {
                    "value": "dis",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.norm(pred.transpose(1, 0) - target.transpose(1, 0), dim=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_82": {
                "input": {
                    "value": "pred_r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, num_points, 1)",
                            "BinOp"
                        ],
                        [
                            "pred_r.view(1, 1, -1)",
                            "Call"
                        ],
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, 1, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_100": {
                "input": {
                    "value": "pred_r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, num_points, 1)",
                            "BinOp"
                        ],
                        [
                            "pred_r.view(1, 1, -1)",
                            "Call"
                        ],
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, 1, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_128": {
                "input": {
                    "value": "pred.transpose(1, 0) - target.transpose(1, 0)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_94": {
                "ndarray": {
                    "value": "my_mat[:3, :3].astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_92": {
                "ndarray": {
                    "value": "my_t.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tools/eval_ycb.py": {
        "torch": {
            "load_94": {
                "f": {
                    "value": "opt.model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_99": {
                "f": {
                    "value": "opt.refine_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_179": {
                "variable": {
                    "value": "cloud",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "cloud.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_196": {
                "variable": {
                    "value": "(how_max, which_max)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_c.view(bs, num_points)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_211": {
                "variable": {
                    "value": "new_cloud",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "cloud - T",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mat2": {
                    "value": "R",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(my_mat[:3, :3].astype(np.float32))).cuda().view(1, 3, 3)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_181": {
                "ndarray": {
                    "value": "img_masked.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "norm_193": {
                "input": {
                    "value": "pred_r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, num_points, 1)",
                            "BinOp"
                        ],
                        [
                            "pred_r.view(1, 1, -1)",
                            "Call"
                        ],
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, 1, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_214": {
                "input": {
                    "value": "pred_r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, num_points, 1)",
                            "BinOp"
                        ],
                        [
                            "pred_r.view(1, 1, -1)",
                            "Call"
                        ],
                        [
                            "pred_r / torch.norm(pred_r, dim=2).view(1, 1, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_208": {
                "ndarray": {
                    "value": "my_mat[:3, :3].astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_206": {
                "ndarray": {
                    "value": "my_t.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tools/train.py": {
        "torch": {
            "DataLoader_96": {
                "variable": {
                    "value": "dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "PoseDataset_ycb('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_ycb('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_101": {
                "variable": {
                    "value": "testdataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "PoseDataset_ycb('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_ycb('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_53": {
                "seed": {
                    "value": "opt.manualSeed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_86": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "refiner.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_90": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "estimator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_210": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "estimator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_215": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "refiner.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_221": {
                "variable": {
                    "value": "dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "PoseDataset_ycb('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_ycb('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('train', opt.num_points, True, opt.dataset_root, opt.noise_trans, opt.refine_start)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_226": {
                "variable": {
                    "value": "testdataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "PoseDataset_ycb('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_ycb('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ],
                        [
                            "PoseDataset_linemod('test', opt.num_points, False, opt.dataset_root, 0.0, opt.refine_start)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_77": {
                "f": {
                    "value": "'{0}/{1}'.format(opt.outf, opt.resume_posenet)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_80": {
                "f": {
                    "value": "'{0}/{1}'.format(opt.outf, opt.resume_refinenet)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_201": {
                "obj": {
                    "value": "refiner.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{0}/pose_refine_model_{1}_{2}.pth'.format(opt.outf, epoch, test_dis)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_203": {
                "obj": {
                    "value": "estimator.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{0}/pose_model_{1}_{2}.pth'.format(opt.outf, epoch, test_dis)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_161": {
                "obj": {
                    "value": "refiner.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{0}/pose_refine_model_current.pth'.format(opt.outf)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_163": {
                "obj": {
                    "value": "estimator.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{0}/pose_model_current.pth'.format(opt.outf)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "vanilla_segmentation/data_controller.py": {
        "torch": {
            "from_numpy_91": {
                "variable": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "target.astype(np.int64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_90": {
                "ndarray": {
                    "value": "rgb.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "vanilla_segmentation/loss.py": {
        "torch": {
            "CrossEntropyLoss_11": {
                "variable": {
                    "value": "CEloss",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "vanilla_segmentation/segnet.py": {
        "torch": {
            "Conv2d_12": {
                "variable": {
                    "value": "self.conv11",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_nbr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_13": {
                "variable": {
                    "value": "self.bn11",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_14": {
                "variable": {
                    "value": "self.conv12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_15": {
                "variable": {
                    "value": "self.bn12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.conv21",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn21",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv22",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "variable": {
                    "value": "self.bn22",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_22": {
                "variable": {
                    "value": "self.conv31",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_23": {
                "variable": {
                    "value": "self.bn31",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_24": {
                "variable": {
                    "value": "self.conv32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "variable": {
                    "value": "self.bn32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_26": {
                "variable": {
                    "value": "self.conv33",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_27": {
                "variable": {
                    "value": "self.bn33",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_29": {
                "variable": {
                    "value": "self.conv41",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "variable": {
                    "value": "self.bn41",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv42",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_32": {
                "variable": {
                    "value": "self.bn42",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_33": {
                "variable": {
                    "value": "self.conv43",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_34": {
                "variable": {
                    "value": "self.bn43",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_36": {
                "variable": {
                    "value": "self.conv51",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_37": {
                "variable": {
                    "value": "self.bn51",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_38": {
                "variable": {
                    "value": "self.conv52",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_39": {
                "variable": {
                    "value": "self.bn52",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.conv53",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "variable": {
                    "value": "self.bn53",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_43": {
                "variable": {
                    "value": "self.conv53d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_44": {
                "variable": {
                    "value": "self.bn53d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_45": {
                "variable": {
                    "value": "self.conv52d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_46": {
                "variable": {
                    "value": "self.bn52d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.conv51d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_48": {
                "variable": {
                    "value": "self.bn51d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.conv43d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_51": {
                "variable": {
                    "value": "self.bn43d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_52": {
                "variable": {
                    "value": "self.conv42d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_53": {
                "variable": {
                    "value": "self.bn42d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_54": {
                "variable": {
                    "value": "self.conv41d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_55": {
                "variable": {
                    "value": "self.bn41d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_57": {
                "variable": {
                    "value": "self.conv33d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_58": {
                "variable": {
                    "value": "self.bn33d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_59": {
                "variable": {
                    "value": "self.conv32d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_60": {
                "variable": {
                    "value": "self.bn32d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "self.conv31d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_62": {
                "variable": {
                    "value": "self.bn31d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.conv22d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn22d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_66": {
                "variable": {
                    "value": "self.conv21d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_67": {
                "variable": {
                    "value": "self.bn21d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_69": {
                "variable": {
                    "value": "self.conv12d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_70": {
                "variable": {
                    "value": "self.bn12d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "momentum": {
                    "value": "batchNorm_momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_71": {
                "variable": {
                    "value": "self.conv11d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "label_nbr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "22",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_75": {
                "variable": {
                    "value": "x11",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn11(self.conv11(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_76": {
                "variable": {
                    "value": "x12",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn12(self.conv12(x11))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_77": {
                "variable": {
                    "value": "(x1p, id1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "x12",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn12(self.conv12(x11)))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_indices": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_79": {
                "variable": {
                    "value": "x21",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn21(self.conv21(x1p))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "x22",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn22(self.conv22(x21))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_81": {
                "variable": {
                    "value": "(x2p, id2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "x22",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn22(self.conv22(x21)))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_indices": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_83": {
                "variable": {
                    "value": "x31",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn31(self.conv31(x2p))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_84": {
                "variable": {
                    "value": "x32",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn32(self.conv32(x31))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "x33",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn33(self.conv33(x32))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_86": {
                "variable": {
                    "value": "(x3p, id3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "x33",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn33(self.conv33(x32)))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_indices": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_88": {
                "variable": {
                    "value": "x41",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn41(self.conv41(x3p))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_89": {
                "variable": {
                    "value": "x42",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn42(self.conv42(x41))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_90": {
                "variable": {
                    "value": "x43",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn43(self.conv43(x42))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_91": {
                "variable": {
                    "value": "(x4p, id4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "x43",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn43(self.conv43(x42)))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_indices": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_93": {
                "variable": {
                    "value": "x51",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn51(self.conv51(x4p))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_94": {
                "variable": {
                    "value": "x52",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn52(self.conv52(x51))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "x53",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn53(self.conv53(x52))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_96": {
                "variable": {
                    "value": "(x5p, id5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "x53",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn53(self.conv53(x52)))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_indices": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_unpool2d_98": {
                "variable": {
                    "value": "x5d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x5p",
                    "type": "Name",
                    "possible_values": []
                },
                "indices": {
                    "value": "id5",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_99": {
                "variable": {
                    "value": "x53d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn53d(self.conv53d(x5d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_100": {
                "variable": {
                    "value": "x52d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn52d(self.conv52d(x53d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_101": {
                "variable": {
                    "value": "x51d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn51d(self.conv51d(x52d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_unpool2d_103": {
                "variable": {
                    "value": "x4d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x51d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn51d(self.conv51d(x52d)))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "id4",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_104": {
                "variable": {
                    "value": "x43d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn43d(self.conv43d(x4d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_105": {
                "variable": {
                    "value": "x42d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn42d(self.conv42d(x43d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_106": {
                "variable": {
                    "value": "x41d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn41d(self.conv41d(x42d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_unpool2d_108": {
                "variable": {
                    "value": "x3d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x41d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn41d(self.conv41d(x42d)))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "id3",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_109": {
                "variable": {
                    "value": "x33d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn33d(self.conv33d(x3d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_110": {
                "variable": {
                    "value": "x32d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn32d(self.conv32d(x33d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_111": {
                "variable": {
                    "value": "x31d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn31d(self.conv31d(x32d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_unpool2d_113": {
                "variable": {
                    "value": "x2d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x31d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn31d(self.conv31d(x32d)))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "id2",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_114": {
                "variable": {
                    "value": "x22d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn22d(self.conv22d(x2d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_115": {
                "variable": {
                    "value": "x21d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn21d(self.conv21d(x22d))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_unpool2d_117": {
                "variable": {
                    "value": "x1d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x21d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.bn21d(self.conv21d(x22d)))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "id1",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_118": {
                "variable": {
                    "value": "x12d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn12d(self.conv12d(x1d))",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "vanilla_segmentation/train.py": {
        "torch": {
            "DataLoader_42": {
                "variable": {
                    "value": "dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "SegDataset(opt.dataset_root, '../datasets/ycb/dataset_config/train_data_list.txt', True, 5000)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_44": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "SegDataset(opt.dataset_root, '../datasets/ycb/dataset_config/test_data_list.txt', False, 1000)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_57": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_39": {
                "seed": {
                    "value": "opt.manualSeed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_52": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "'{0}/{1}'.format(opt.model_save_path, opt.resume_model)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_105": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(opt.model_save_path, 'model_{}_{}.pth'.format(epoch, test_all_cost))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_80": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(opt.model_save_path, 'model_current.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}