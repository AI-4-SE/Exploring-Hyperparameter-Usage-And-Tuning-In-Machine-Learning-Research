{
    "adversarialLogistic.py": {
        "sklearn": {}
    },
    "cat_non-cat.py": {
        "sklearn": {
            "train_test_split_126": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "stratify": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((1, n))",
                            "Call"
                        ],
                        [
                            "y.T",
                            "Attribute"
                        ],
                        [
                            "[int(x[0] == 'cat') for x in IDS_TEST2_EXAMPLES]",
                            "ListComp"
                        ],
                        [
                            "np.matrix(y)",
                            "Call"
                        ],
                        [
                            "y.T",
                            "Attribute"
                        ]
                    ]
                }
            },
            "LogisticRegressionCV_150": {
                "variable": {
                    "value": "lr_l2_CV",
                    "type": "variable",
                    "possible_values": []
                },
                "penalty": {
                    "value": "l2",
                    "type": "str",
                    "possible_values": []
                },
                "solver": {
                    "value": "sag",
                    "type": "str",
                    "possible_values": []
                },
                "Cs": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LogisticRegression_161": {
                "variable": {
                    "value": "lr_l2",
                    "type": "variable",
                    "possible_values": []
                },
                "penalty": {
                    "value": "l2",
                    "type": "str",
                    "possible_values": []
                },
                "solver": {
                    "value": "sag",
                    "type": "str",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "C": {
                    "value": "bestC",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lr_l2_CV.C_[0]",
                            "Subscript"
                        ]
                    ]
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "old/plot_cluster_iris.py": {
        "sklearn": {
            "load_iris_42": {
                "variable": {
                    "value": "iris",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KMeans_47": {
                "variable": {
                    "value": "estimator",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "verbose": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KMeans_93": {
                "n_clusters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "KMeans_94": {
                "n_clusters": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "KMeans_95": {
                "n_clusters": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "n_init": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "init": {
                    "value": "random",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "old/transfer_logistic_clean.py": {
        "sklearn": {
            "LogisticRegression_36": {
                "variable": {
                    "value": "clf",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "spam.py": {
        "sklearn": {
            "train_test_split_35": {
                "variable": {
                    "value": "(X_train, X_test, X_train_with_const, X_test_with_const, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "X_with_const",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_2": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "stratify": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.pop('spam')",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_54": {
                "variable": {
                    "value": "glm_acc_is",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "res.predict(exog=X_train_with_const) > 0.5",
                            "Compare"
                        ],
                        [
                            "res.predict(exog=X_test_with_const) > 0.5",
                            "Compare"
                        ]
                    ]
                }
            },
            "accuracy_score_56": {
                "variable": {
                    "value": "glm_acc_oos",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "res.predict(exog=X_train_with_const) > 0.5",
                            "Compare"
                        ],
                        [
                            "res.predict(exog=X_test_with_const) > 0.5",
                            "Compare"
                        ]
                    ]
                }
            },
            "LogisticRegression_85": {
                "variable": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "1000000000000.0",
                    "type": "float",
                    "possible_values": []
                },
                "solver": {
                    "value": "liblinear",
                    "type": "str",
                    "possible_values": []
                },
                "random_state": {
                    "value": "1234",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LogisticRegressionCV_113": {
                "variable": {
                    "value": "lr_l2_CV",
                    "type": "variable",
                    "possible_values": []
                },
                "penalty": {
                    "value": "l2",
                    "type": "str",
                    "possible_values": []
                },
                "solver": {
                    "value": "liblinear",
                    "type": "str",
                    "possible_values": []
                },
                "Cs": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LogisticRegression_122": {
                "variable": {
                    "value": "lr_l2",
                    "type": "variable",
                    "possible_values": []
                },
                "penalty": {
                    "value": "l2",
                    "type": "str",
                    "possible_values": []
                },
                "solver": {
                    "value": "liblinear",
                    "type": "str",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                },
                "C": {
                    "value": "bestC",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lr_l2_CV.C_[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "LogisticRegression_268": {
                "variable": {
                    "value": "lr_l2_C",
                    "type": "variable",
                    "possible_values": []
                },
                "penalty": {
                    "value": "l2",
                    "type": "str",
                    "possible_values": []
                },
                "solver": {
                    "value": "liblinear",
                    "type": "str",
                    "possible_values": []
                },
                "C": {
                    "value": "C_",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}