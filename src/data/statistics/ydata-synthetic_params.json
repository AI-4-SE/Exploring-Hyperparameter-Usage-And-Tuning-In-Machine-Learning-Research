{
    "examples/regular/cgan_example.py": {
        "sklearn": {}
    },
    "examples/regular/cramergan_example.py": {
        "sklearn": {}
    },
    "examples/regular/cwgangp_example.py": {
        "sklearn": {}
    },
    "examples/regular/wgan_example.py": {
        "sklearn": {}
    },
    "src/ydata_synthetic/postprocessing/regular/inverse_preprocesser.py": {
        "sklearn": {}
    },
    "src/ydata_synthetic/preprocessing/base_processor.py": {
        "sklearn": {}
    },
    "src/ydata_synthetic/preprocessing/regular/processor.py": {
        "sklearn": {
            "Pipeline_61": {
                "variable": {
                    "value": "self._num_pipeline",
                    "type": "Attribute",
                    "possible_values": []
                },
                "steps": {
                    "value": "[('scaler', MinMaxScaler())]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Pipeline_64": {
                "variable": {
                    "value": "self._cat_pipeline",
                    "type": "Attribute",
                    "possible_values": []
                },
                "steps": {
                    "value": "[('encoder', OneHotEncoder(sparse=False, handle_unknown='ignore'))]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "MinMaxScaler_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "OneHotEncoder_65": {
                "sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "handle_unknown": {
                    "value": "ignore",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/preprocessing/timeseries/utils.py": {
        "sklearn": {
            "MinMaxScaler_21": {
                "variable": {
                    "value": "scaler",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/tests/preprocessing/test_regular_data_processor.py": {
        "sklearn": {}
    },
    "src/ydata_synthetic/synthesizers/gan.py": {
        "tensorflow": {
            "list_physical_devices_46": {
                "variable": {
                    "value": "gpu_devices",
                    "type": "Variable",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "str",
                    "possible_values": []
                }
            },
            "list_physical_devices_142": {
                "variable": {
                    "value": "gpu_devices",
                    "type": "Variable",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "str",
                    "possible_values": []
                }
            },
            "uniform_126": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.noise_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_memory_growth_49": {
                "device": {
                    "value": "gpu_devices[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "enable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "set_memory_growth_145": {
                "device": {
                    "value": "gpu_devices[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "enable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/loss.py": {
        "tensorflow": {
            "reduce_mean_32": {
                "variable": {
                    "value": "gp",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(norm - 1.0) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "uniform_36": {
                "variable": {
                    "value": "epsilon",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[real.shape[0], 1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "uniform_21": {
                "variable": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[shape(a)[0]] + [1] * (a.shape.ndims - 1)",
                            "BinOp"
                        ]
                    ]
                },
                "minval": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "uniform_18": {
                "variable": {
                    "value": "beta",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape(a)",
                    "type": "Call",
                    "possible_values": []
                },
                "minval": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "GradientTape_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_31": {
                "tensor": {
                    "value": "grad",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "t.gradient(pred, x)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[shape(grad)[0], -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "GradientTape_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_42": {
                "tensor": {
                    "value": "gradients",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "t.gradient(f_x_hat, x_hat)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[shape(gradients)[0], -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "shape_18": {
                "input": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "shape_20": {
                "input": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "shape_31": {
                "input": {
                    "value": "grad",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "t.gradient(pred, x)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_42": {
                "input": {
                    "value": "gradients",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "t.gradient(f_x_hat, x_hat)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_std_19": {
                "input_tensor": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/regular/cgan/model.py": {
        "tensorflow": {
            "Adam_54": {
                "variable": {
                    "value": "g_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_55": {
                "variable": {
                    "value": "d_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_63": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.noise_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_64": {
                "variable": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_75": {
                "variable": {
                    "value": "self._model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "[noise, label]",
                    "type": "List",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "validity",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator([record, label])",
                            "Call"
                        ]
                    ]
                }
            },
            "expand_dims_179": {
                "variable": {
                    "value": "cond_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convert_to_tensor(condition, dtypes.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tile_180": {
                "variable": {
                    "value": "cond_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cond_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "expand_dims(convert_to_tensor(condition, dtypes.float32), axis=0)",
                            "Call"
                        ],
                        [
                            "tile(cond_seq, multiples=[self.batch_size, 1])",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[self.batch_size, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_211": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_212": {
                "variable": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "multiply_214": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "[noise, label_embedding]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_233": {
                "variable": {
                    "value": "events",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_234": {
                "variable": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "multiply_237": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "[events_flat, label_embedding]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Model_222": {
                "inputs": {
                    "value": "[noise, label]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='sigmoid')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_245": {
                "inputs": {
                    "value": "[events, label]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='sigmoid')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "batch_85": {
                "tensors": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "repeat_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "expand_dims_114": {
                "input": {
                    "value": "data[label_col]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "convert_to_tensor_179": {
                "value": {
                    "value": "condition",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Flatten_213": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_216": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_217": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_218": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_219": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Flatten_235": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Flatten_236": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_239": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_240": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_241": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_242": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_243": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_244": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Embedding_213": {
                "input_dim": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_235": {
                "input_dim": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/regular/cramergan/model.py": {
        "tensorflow": {
            "Adam_38": {
                "variable": {
                    "value": "g_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_39": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_42": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.noise_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "normal_61": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[x.shape[0], self.noise_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "normal_62": {
                "variable": {
                    "value": "noise2",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[x.shape[0], self.noise_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "create_file_writer_157": {
                "variable": {
                    "value": "train_summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "path.join('..\\\\cramergan_test', 'summaries', 'train')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Input_182": {
                "variable": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_197": {
                "variable": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_99": {
                "input_tensor": {
                    "value": "g_loss",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.g_lossfn(x, fake, fake2)",
                            "Call"
                        ],
                        [
                            "tf.norm(self.critic(real, training=True) - self.critic(fake, training=True), axis=1) + tf.norm(self.critic(real, training=True) - self.critic(fake2, training=True), axis=1) - tf.norm(self.critic(fake, training=True) - self.critic(fake2, training=True), axis=1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_mean_121": {
                "input_tensor": {
                    "value": "-loss_surrogate + self.gradient_penalty_weight * gp",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Model_189": {
                "inputs": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_204": {
                "inputs": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "norm_98": {
                "tensor": {
                    "value": "self.critic(fake, training=True) - self.critic(fake2, training=True)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_108": {
                "tensor": {
                    "value": "self.critic(real, training=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dense_183": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_184": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_185": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_186": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dense_198": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_199": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_200": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_201": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_202": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_203": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_96": {
                "tensor": {
                    "value": "self.critic(real, training=True) - self.critic(fake, training=True)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_97": {
                "tensor": {
                    "value": "self.critic(real, training=True) - self.critic(fake2, training=True)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/regular/cwgangp/model.py": {
        "tensorflow": {
            "Adam_48": {
                "variable": {
                    "value": "g_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_49": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "uniform_53": {
                "variable": {
                    "value": "epsilon",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[real.shape[0], 1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_59": {
                "variable": {
                    "value": "ddx",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "reduce_sum(gradients ** 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_60": {
                "variable": {
                    "value": "d_regularizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(ddx - 1.0) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "normal_78": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[real.shape[0], self.noise_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "normal_103": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[real.shape[0], self.noise_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_180": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_181": {
                "variable": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "multiply_183": {
                "variable": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "[noise, label_embedding]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_204": {
                "variable": {
                    "value": "events",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_205": {
                "variable": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "multiply_208": {
                "variable": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "[events_flat, label_embedding]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cast_71": {
                "x": {
                    "value": "data[data_ix[start_i:stop_i]]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Model_191": {
                "inputs": {
                    "value": "[noise, label]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_216": {
                "inputs": {
                    "value": "[events, label]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_59": {
                "input_tensor": {
                    "value": "gradients ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_107": {
                "input_tensor": {
                    "value": "logits_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic([fake, label])",
                            "Call"
                        ],
                        [
                            "self.critic([fake, label])",
                            "Call"
                        ]
                    ]
                }
            },
            "expand_dims_128": {
                "input": {
                    "value": "data[label_col]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Flatten_182": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_185": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_186": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_187": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_188": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Flatten_206": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Flatten_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_210": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_211": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_212": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_213": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_214": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_215": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_88": {
                "input_tensor": {
                    "value": "logits_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic([fake, label])",
                            "Call"
                        ],
                        [
                            "self.critic([fake, label])",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_89": {
                "input_tensor": {
                    "value": "logits_real",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic([real, label])",
                            "Call"
                        ]
                    ]
                }
            },
            "Embedding_182": {
                "input_dim": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_206": {
                "input_dim": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/regular/dragan/model.py": {
        "tensorflow": {
            "Adam_35": {
                "variable": {
                    "value": "g_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clipvalue": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_36": {
                "variable": {
                    "value": "d_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clipvalue": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "normal_79": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.batch_size, self.noise_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "normal_103": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(real.shape[0], self.noise_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "batch_113": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "shuffle_113": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "buffer_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "len(train)",
                            "Call"
                        ]
                    ]
                }
            },
            "create_file_writer_138": {
                "variable": {
                    "value": "train_summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "path.join('..\\\\dragan_test', 'summaries', 'train')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Input_166": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_180": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Model_173": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim * 4, kernel_initializer=initializers.TruncatedNormal(mean=0.0, stddev=0.5), activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, kernel_initializer=initializers.TruncatedNormal(mean=0.0, stddev=0.5), activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_187": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim * 4, kernel_initializer=initializers.TruncatedNormal(mean=0.0, stddev=0.5), activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, kernel_initializer=initializers.TruncatedNormal(mean=0.0, stddev=0.5), activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_107": {
                "input_tensor": {
                    "value": "logits_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator(fake, training=True)",
                            "Call"
                        ],
                        [
                            "self.discriminator(fake, training=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dense_167": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.TruncatedNormal(mean=0.0, stddev=0.5)",
                    "type": "Call",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_168": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_169": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_170": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_171": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_172": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_181": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.TruncatedNormal(mean=0.0, stddev=0.5)",
                    "type": "Call",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_182": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_183": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_184": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "GradientTape_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_90": {
                "input_tensor": {
                    "value": "logits_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator(fake, training=True)",
                            "Call"
                        ],
                        [
                            "self.discriminator(fake, training=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_91": {
                "input_tensor": {
                    "value": "logits_real",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator(real, training=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_143": {
                "variable": {
                    "value": "batch_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "batch_data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "train_loader",
                            "Name"
                        ],
                        [
                            "tf.cast(batch_data, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TruncatedNormal_167": {
                "mean": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "TruncatedNormal_181": {
                "mean": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/regular/vanillagan/model.py": {
        "tensorflow": {
            "Adam_31": {
                "variable": {
                    "value": "g_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_32": {
                "variable": {
                    "value": "d_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_40": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.noise_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_51": {
                "variable": {
                    "value": "self._model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(self.noise_dim,))",
                            "Call"
                        ],
                        [
                            "tf.random.normal((432, self.noise_dim))",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "validity",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator(record)",
                            "Call"
                        ]
                    ]
                }
            },
            "Input_135": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_149": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Model_142": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='sigmoid')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_156": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='sigmoid')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "normal_94": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.batch_size, self.noise_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "normal_107": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.batch_size, self.noise_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "normal_125": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(432, self.noise_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dense_136": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_137": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_138": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_139": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dense_150": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_151": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_152": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_153": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_154": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_155": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/regular/wgan/model.py": {
        "tensorflow": {
            "Adam_53": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_54": {
                "variable": {
                    "value": "critic_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_62": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.noise_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_73": {
                "variable": {
                    "value": "self._model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(self.noise_dim,))",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "validity",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic(record)",
                            "Call"
                        ]
                    ]
                }
            },
            "create_file_writer_105": {
                "variable": {
                    "value": "train_summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "path.join('.', 'summaries', 'train')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Input_159": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_173": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_43": {
                "a": {
                    "value": "y_true * y_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Model_166": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_180": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dense_160": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_161": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_162": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_163": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dense_174": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_175": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_176": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_177": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_178": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_179": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "normal_137": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.batch_size, self.noise_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "normal_119": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.batch_size, self.noise_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/regular/wgangp/model.py": {
        "tensorflow": {
            "Adam_36": {
                "variable": {
                    "value": "g_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_37": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "self.beta_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "self.beta_2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "uniform_41": {
                "variable": {
                    "value": "epsilon",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[real.shape[0], 1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_47": {
                "variable": {
                    "value": "ddx",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reduce_sum(gradients ** 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_48": {
                "variable": {
                    "value": "d_regularizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(ddx - 1.0) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "normal_87": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[real.shape[0], self.noise_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "normal_108": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[real.shape[0], self.noise_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "create_file_writer_149": {
                "variable": {
                    "value": "train_summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "path.join('..\\\\wgan_gp_test', 'summaries', 'train')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Input_177": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_191": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Model_184": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_198": {
                "inputs": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape, batch_size=self.batch_size)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info, tau=tau)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(input)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dropout(0.1)(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(1)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_47": {
                "input_tensor": {
                    "value": "gradients ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GradientTape_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_112": {
                "input_tensor": {
                    "value": "logits_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic(fake)",
                            "Call"
                        ],
                        [
                            "self.critic(fake)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dense_178": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_179": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_180": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_181": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dense_192": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_193": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_194": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_195": {
                "rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_196": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_197": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GradientTape_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_97": {
                "input_tensor": {
                    "value": "logits_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic(fake)",
                            "Call"
                        ],
                        [
                            "self.critic(fake)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_98": {
                "input_tensor": {
                    "value": "logits_real",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic(real)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/saving_keras.py": {
        "tensorflow": {
            "deserialize_6": {
                "variable": {
                    "value": "restored_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "serialize(self)",
                            "Call"
                        ]
                    ]
                }
            },
            "serialize_16": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/synthesizers/timeseries/timegan/model.py": {
        "tensorflow": {
            "Input_54": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.seq_len, self.n_seq]",
                    "type": "List",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "RealData",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_55": {
                "variable": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.seq_len, self.n_seq]",
                    "type": "List",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "RandomNoise",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_63": {
                "variable": {
                    "value": "self.autoencoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=[self.seq_len, self.n_seq], batch_size=self.batch_size, name='RealData')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "X_tilde",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.recovery(H)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_72": {
                "variable": {
                    "value": "self.adversarial_supervised",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=[self.seq_len, self.n_seq], batch_size=self.batch_size, name='RandomNoise')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "Y_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator(H_hat)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "AdversarialSupervised",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_81": {
                "variable": {
                    "value": "self.adversarial_embedded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=[self.seq_len, self.n_seq], batch_size=self.batch_size, name='RandomNoise')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "Y_fake_e",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator(E_Hat)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "AdversarialEmbedded",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_88": {
                "variable": {
                    "value": "self.generator",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=[self.seq_len, self.n_seq], batch_size=self.batch_size, name='RandomNoise')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "X_hat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.recovery(H_hat)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "FinalGenerator",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_96": {
                "variable": {
                    "value": "self.discriminator_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=[self.seq_len, self.n_seq], batch_size=self.batch_size, name='RealData')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "Y_real",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator(H)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "RealDiscriminator",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MeanSquaredError_103": {
                "variable": {
                    "value": "self._mse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BinaryCrossentropy_104": {
                "variable": {
                    "value": "self._bce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "moments_170": {
                "variable": {
                    "value": "(y_true_mean, y_true_var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "moments_171": {
                "variable": {
                    "value": "(y_pred_mean, y_pred_var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_172": {
                "variable": {
                    "value": "g_loss_mean",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "abs(y_true_mean - y_pred_mean)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_173": {
                "variable": {
                    "value": "g_loss_var",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "abs(sqrt(y_true_var + 1e-06) - sqrt(y_pred_var + 1e-06))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "convert_to_tensor_214": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "convert_to_tensor(data, dtype=float32)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float32",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_233": {
                "variable": {
                    "value": "autoencoder_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_239": {
                "variable": {
                    "value": "supervisor_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_245": {
                "variable": {
                    "value": "generator_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_246": {
                "variable": {
                    "value": "embedder_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_247": {
                "variable": {
                    "value": "discriminator_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_289": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Generator",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_303": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Discriminator",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_318": {
                "variable": {
                    "value": "recovery",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Recovery",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_332": {
                "variable": {
                    "value": "embedder",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Embedder",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_344": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Supervisor",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_30": {
                "units": {
                    "value": "output_units",
                    "type": "Variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "OUT",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sqrt_117": {
                "x": {
                    "value": "embedding_loss_t0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ],
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_148": {
                "x": {
                    "value": "embedding_loss_t0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ],
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_121": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_134": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_172": {
                "x": {
                    "value": "y_true_mean - y_pred_mean",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_173": {
                "x": {
                    "value": "sqrt(y_true_var + 1e-06) - sqrt(y_pred_var + 1e-06)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GradientTape_178": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_205": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "shuffle_215": {
                "buffer_size": {
                    "value": "n_windows",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "batch_215": {
                "tensors": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "repeat_215": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "batch_224": {
                "tensors": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "repeat_224": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GRU_21": {
                "units": {
                    "value": "hidden_units",
                    "type": "Variable",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "name": {
                    "value": "f'GRU_{i + 1}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "LSTM_26": {
                "units": {
                    "value": "hidden_units",
                    "type": "Variable",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "name": {
                    "value": "f'LSTM_{i + 1}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "sqrt_112": {
                "x": {
                    "value": "embedding_loss_t0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ],
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_153": {
                "input": {
                    "value": "y_real",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.discriminator_model(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_158": {
                "input": {
                    "value": "y_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.adversarial_supervised(z)",
                            "Call"
                        ],
                        [
                            "self.adversarial_supervised(z)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_162": {
                "input": {
                    "value": "y_fake_e",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.adversarial_embedded(z)",
                            "Call"
                        ],
                        [
                            "self.adversarial_embedded(z)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_143": {
                "x": {
                    "value": "embedding_loss_t0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ],
                        [
                            "self._mse(x, x_tilde)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_173": {
                "x": {
                    "value": "y_pred_var + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_180": {
                "input": {
                    "value": "y_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.adversarial_supervised(z)",
                            "Call"
                        ],
                        [
                            "self.adversarial_supervised(z)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_184": {
                "input": {
                    "value": "y_fake_e",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.adversarial_embedded(z)",
                            "Call"
                        ],
                        [
                            "self.adversarial_embedded(z)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_195": {
                "x": {
                    "value": "generator_loss_supervised",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self._mse(h[:, 1:, :], h_hat_supervised[:, :-1, :])",
                            "Call"
                        ],
                        [
                            "self._mse(h[:, 1:, :], h_hat_supervised[:, :-1, :])",
                            "Call"
                        ],
                        [
                            "self._mse(h[:, 1:, :], h_hat_supervised[:, :-1, :])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/ydata_synthetic/tests/custom_layers/test_gumbel_softmax_activation.py": {
        "tensorflow": {
            "Input_43": {
                "variable": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "noise_batch.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "10",
                            "Constant"
                        ]
                    ]
                }
            },
            "Model_51": {
                "inputs": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=noise_batch.shape[1], batch_size=BATCH_SIZE)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(dim, activation='relu')(input_)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 2, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(dim * 4, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(data_dim)(x)",
                            "Call"
                        ],
                        [
                            "GumbelSoftmaxActivation(activation_info=mock_processor.col_transform_info, name='act_itf')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dense_46": {
                "units": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "15",
                            "Constant"
                        ]
                    ]
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_47": {
                "units": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_48": {
                "units": {
                    "value": "dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_49": {
                "units": {
                    "value": "data_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    },
    "src/ydata_synthetic/tests/custom_layers/test_gumbel_softmax_layer.py": {
        "tensorflow": {
            "constant_14": {
                "value": {
                    "value": "ones((5, 5))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.dtypes.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_19": {
                "value": {
                    "value": "tf.random.normal([4, 5], seed=42)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "normal_19": {
                "shape": {
                    "value": "[4, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "seed": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dense_24": {
                "units": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "custom_initializer",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dense_32": {
                "units": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "custom_initializer",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "GradientTape_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_42": {
                "units": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "custom_initializer",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/ydata_synthetic/utils/gumbel_softmax.py": {
        "tensorflow": {
            "uniform_20": {
                "variable": {
                    "value": "uniform_sample",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "register_keras_serializable_23": {
                "package": {
                    "value": "Synthetic Data",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "GumbelSoftmaxLayer",
                    "type": "str",
                    "possible_values": []
                }
            },
            "register_keras_serializable_50": {
                "package": {
                    "value": "Synthetic Data",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "GumbelSoftmaxActivation",
                    "type": "str",
                    "possible_values": []
                }
            },
            "softmax_40": {
                "variable": {
                    "value": "soft_sample",
                    "type": "Variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "noised_input / self.tau",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stop_gradient_41": {
                "variable": {
                    "value": "hard_sample",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "squeeze(one_hot(categorical(log(soft_sample), 1), _input.shape[-1]), 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "split_82": {
                "variable": {
                    "value": "(num_cols, cat_cols)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "[self._num_lens, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "split_num_cats",
                    "type": "str",
                    "possible_values": []
                }
            },
            "split_83": {
                "variable": {
                    "value": "cat_cols",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "cat_cols",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "split(cat_cols, self._cat_lens if self._cat_lens else [0], 1, name='split_cats')",
                            "Call"
                        ],
                        [
                            "[GumbelSoftmaxLayer(tau=self.tau, name=name)(col)[0] for (name, col) in zip(self.cat_feats.feat_names_in, cat_cols)]",
                            "ListComp"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "self._cat_lens if self._cat_lens else [0]",
                    "type": "IfExp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "split_cats",
                    "type": "str",
                    "possible_values": []
                }
            },
            "log_21": {
                "x": {
                    "value": "uniform_sample + TOL",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_88": {
                "values": {
                    "value": "num_cols + cat_cols",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_41": {
                "input": {
                    "value": "one_hot(categorical(log(soft_sample), 1), _input.shape[-1])",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "one_hot_41": {
                "indices": {
                    "value": "categorical(log(soft_sample), 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "depth": {
                    "value": "_input.shape[-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Activation_85": {
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "num_cols_activation",
                    "type": "str",
                    "possible_values": []
                }
            },
            "categorical_41": {
                "logits": {
                    "value": "log(soft_sample)",
                    "type": "Call",
                    "possible_values": []
                },
                "num_samples": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_41": {
                "x": {
                    "value": "soft_sample",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "softmax(noised_input / self.tau, -1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}