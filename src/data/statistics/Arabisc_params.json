{
    "spelling-checker.py": {
        "tensorflow": {
            "load_model_25": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "model",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Tokenizer_38": {
                "variable": {
                    "value": "tokenizer",
                    "type": "variable",
                    "possible_values": []
                },
                "num_words": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100000",
                            "int"
                        ]
                    ]
                },
                "oov_token": {
                    "value": "out_of_vocab",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'<unk>'",
                            "str"
                        ]
                    ]
                }
            },
            "pad_sequences_127": {
                "variable": {
                    "value": "token_list",
                    "type": "variable",
                    "possible_values": []
                },
                "sequences": {
                    "value": "[token_list]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "max_sequence_len - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "padding": {
                    "value": "pre",
                    "type": "str",
                    "possible_values": []
                }
            },
            "pad_sequences_130": {
                "variable": {
                    "value": "token_list_rev",
                    "type": "variable",
                    "possible_values": []
                },
                "sequences": {
                    "value": "[token_list_rev]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "max_sequence_len - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "padding": {
                    "value": "pre",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "train-dual-input.py": {
        "tensorflow": {
            "Tokenizer_36": {
                "variable": {
                    "value": "tokenizer",
                    "type": "variable",
                    "possible_values": []
                },
                "num_words": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100000",
                            "int"
                        ]
                    ]
                },
                "oov_token": {
                    "value": "out_of_vocab",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'<unk>'",
                            "str"
                        ]
                    ]
                }
            },
            "Input_71": {
                "variable": {
                    "value": "left_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_sequence_len - 1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "left_in",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_72": {
                "variable": {
                    "value": "right_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_sequence_len - 1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "right_in",
                    "type": "str",
                    "possible_values": []
                }
            },
            "concatenate_87": {
                "variable": {
                    "value": "concat",
                    "type": "variable",
                    "possible_values": []
                },
                "arys": {
                    "value": "[left_features, right_features]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "concatenate",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_94": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[left_input, right_input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(vocab_size, activation='softmax', name='pred')(concat)",
                            "Call"
                        ]
                    ]
                }
            },
            "pad_sequences_55": {
                "sequences": {
                    "value": "input_sequences",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "np.array(pad_sequences(input_sequences, maxlen=max_sequence_len, padding='pre'))",
                            "Call"
                        ]
                    ]
                },
                "maxlen": {
                    "value": "max_sequence_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "15",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "pre",
                    "type": "str",
                    "possible_values": []
                }
            },
            "pad_sequences_56": {
                "sequences": {
                    "value": "input_sequences_reversed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "np.array(pad_sequences(input_sequences_reversed, maxlen=max_sequence_len, padding='pre'))",
                            "Call"
                        ]
                    ]
                },
                "maxlen": {
                    "value": "max_sequence_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "15",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "pre",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Embedding_75": {
                "input_dim": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100000",
                            "int"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_76": {
                "input_dim": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100000",
                            "int"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Bidirectional_79": {
                "layer": {
                    "value": "LSTM(512, return_sequences=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Bidirectional_80": {
                "layer": {
                    "value": "LSTM(512, return_sequences=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LSTM_83": {
                "units": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTM_84": {
                "units": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dense_90": {
                "units": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100000",
                            "int"
                        ]
                    ]
                },
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "pred",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LSTM_79": {
                "units": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_80": {
                "units": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_101": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}