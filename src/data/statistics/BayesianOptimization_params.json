{
    "bayes_opt/bayesian_optimization.py": {
        "sklearn": {
            "GaussianProcessRegressor_115": {
                "variable": {
                    "value": "self._gp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel": {
                    "value": "Matern(nu=2.5)",
                    "type": "Call",
                    "possible_values": []
                },
                "alpha": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                },
                "normalize_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "n_restarts_optimizer": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "self._random_state",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Matern_116": {
                "nu": {
                    "value": "2.5",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "examples/sklearn_example.py": {
        "sklearn": {
            "make_classification_11": {
                "variable": {
                    "value": "(data, targets)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "n_features": {
                    "value": "45",
                    "type": "int",
                    "possible_values": []
                },
                "n_informative": {
                    "value": "12",
                    "type": "int",
                    "possible_values": []
                },
                "n_redundant": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "134985745",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVC_31": {
                "variable": {
                    "value": "estimator",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10 ** expC",
                            "BinOp"
                        ]
                    ]
                },
                "gamma": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10 ** expGamma",
                            "BinOp"
                        ]
                    ]
                },
                "random_state": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_val_score_32": {
                "variable": {
                    "value": "cval",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "estimator",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SVC(C=C, gamma=gamma, random_state=2)",
                            "Call"
                        ],
                        [
                            "RFC(n_estimators=n_estimators, min_samples_split=min_samples_split, max_features=max_features, random_state=2)",
                            "Call"
                        ]
                    ]
                },
                "X": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": []
                },
                "scoring": {
                    "value": "roc_auc",
                    "type": "str",
                    "possible_values": []
                },
                "cv": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_val_score_53": {
                "variable": {
                    "value": "cval",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "estimator",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SVC(C=C, gamma=gamma, random_state=2)",
                            "Call"
                        ],
                        [
                            "RFC(n_estimators=n_estimators, min_samples_split=min_samples_split, max_features=max_features, random_state=2)",
                            "Call"
                        ]
                    ]
                },
                "X": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": []
                },
                "scoring": {
                    "value": "neg_log_loss",
                    "type": "str",
                    "possible_values": []
                },
                "cv": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_bayesian_optimization.py": {
        "sklearn": {}
    },
    "tests/test_util.py": {
        "sklearn": {
            "GaussianProcessRegressor_33": {
                "variable": {
                    "value": "GP",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "Matern()",
                    "type": "Call",
                    "possible_values": []
                },
                "n_restarts_optimizer": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Matern_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}