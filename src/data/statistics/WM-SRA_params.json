{
    "main.py": {
        "sklearn": {
            "classification_report_133": {
                "variable": {
                    "value": "clf_report",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "target_names": {
                    "value": "arg.CLASS_NAMES_clf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "f1_score_134": {
                "variable": {
                    "value": "_f1_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_139": {
                "variable": {
                    "value": "_urgent_f1_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "urgent_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "change_label_predict_list_stype(labels, 'urgent')",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "urgent_predicts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "change_label_predict_list_stype(predictions, 'urgent')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_140": {
                "variable": {
                    "value": "_flagged_f1_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "flagged_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "change_label_predict_list_stype(labels)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "flagged_predicts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "change_label_predict_list_stype(predictions)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "confusion_matrix_141": {
                "variable": {
                    "value": "_confusion_matrix",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "argmax_34": {
                "variable": {
                    "value": "predicted_label",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits.squeeze()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "KLDivLoss_97": {
                "variable": {
                    "value": "kl_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "batchmean",
                    "type": "str",
                    "possible_values": []
                },
                "log_target": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LogSoftmax_98": {
                "variable": {
                    "value": "log_softmax",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_170": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "classifier.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "2e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_79": {
                "variable": {
                    "value": "all_contrastive_logits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[logits[0][_label].view(1)] + all_neg_logits_at_label",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_79": {
                "variable": {
                    "value": "all_contrastive_logits",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_161": {
                "seed": {
                    "value": "arg.SEED",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_cache_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_110": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model({'input_ids': batch_inputs['input_ids'].cuda(), 'attention_mask': batch_inputs['attention_mask'].cuda()})",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "stack_46": {
                "variable": {
                    "value": "new_batch_inputs[input_ids]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['input_ids'] for x in batch_inputs]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_47": {
                "variable": {
                    "value": "new_batch_inputs[attention_mask]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['attention_mask'] for x in batch_inputs]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_label",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_10": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_11": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sigmoid_12": {
                "variable": {
                    "value": "self.transfer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_22": {
                "variable": {
                    "value": "hiddens",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "hiddens",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(hiddens, dim=0)",
                            "Call"
                        ],
                        [
                            "hiddens.mean(dim=0, keepdim=True)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_49": {
                "variable": {
                    "value": "new_batch_inputs[token_type_ids]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['token_type_ids'] for x in batch_inputs]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "save_28": {
                "obj": {
                    "value": "self.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "path + '/{}_model.pt'.format(self.arg.instance_name)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_31": {
                "f": {
                    "value": "path + '/{}_model.pt'.format(self.arg.instance_name)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}