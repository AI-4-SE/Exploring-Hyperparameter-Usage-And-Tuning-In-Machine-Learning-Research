{
    "models/.ipynb_checkpoints/train_eval-checkpoint.py": {
        "sklearn": {
            "f1_score_49": {
                "variable": {
                    "value": "testf1",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "true_labels + list(label_ids.flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pred_labels + list(np.argmax(logits, axis=1).flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_50": {
                "variable": {
                    "value": "testacc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "true_labels + list(label_ids.flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pred_labels + list(np.argmax(logits, axis=1).flatten())",
                            "BinOp"
                        ]
                    ]
                }
            },
            "StratifiedKFold_70": {
                "variable": {
                    "value": "skf",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "2020",
                    "type": "int",
                    "possible_values": []
                }
            },
            "compute_class_weight_63": {
                "class_weight": {
                    "value": "balanced",
                    "type": "str",
                    "possible_values": []
                },
                "classes": {
                    "value": "np.unique(y_0)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "y_0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array(annotated_df['one_fear_speech'])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/tokenization.py": {
        "sklearn": {},
        "torch": {
            "zeros_94": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(len(documents), params['max_sentences_per_doc'], 3, 1024)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_387": {
                "variable": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorDataset_393": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "token_ids",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_399": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "params['batch_size']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{'remove_numbers': True, 'remove_emoji': False, 'remove_stop_words': True, 'tokenize': True}",
                            "Dict"
                        ]
                    ]
                }
            },
            "tensor_404": {
                "variable": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_406": {
                "variable": {
                    "value": "token_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "inputs_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_407": {
                "variable": {
                    "value": "attentions_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "att_masks",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_408": {
                "variable": {
                    "value": "tokens_types",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(token_ids.shape[0], token_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorDataset_410": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "token_ids",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_416": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "params['batch_size']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{'remove_numbers': True, 'remove_emoji': False, 'remove_stop_words': True, 'tokenize': True}",
                            "Dict"
                        ]
                    ]
                }
            },
            "tensor_422": {
                "variable": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_423": {
                "variable": {
                    "value": "token_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "inputs_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_424": {
                "variable": {
                    "value": "extra_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "extra_features",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(extra_features, dtype=torch.float)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_425": {
                "variable": {
                    "value": "attentions_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "att_masks",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_426": {
                "variable": {
                    "value": "tokens_types",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(token_ids.shape[0], token_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorDataset_428": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "token_ids",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_434": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "params['batch_size']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{'remove_numbers': True, 'remove_emoji': False, 'remove_stop_words': True, 'tokenize': True}",
                            "Dict"
                        ]
                    ]
                }
            },
            "zeros_37": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(len(documents), max_sequences_per_document, 2, max_input_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_38": {
                "variable": {
                    "value": "output_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(len(documents), max_sequences_per_document, 1, max_input_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_39": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(output_2, output)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SequentialSampler_395": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "RandomSampler_397": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "SequentialSampler_412": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "RandomSampler_414": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "SequentialSampler_430": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "RandomSampler_432": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, tokens_types, labels)",
                            "Call"
                        ],
                        [
                            "TensorDataset(token_ids, attentions_mask, extra_features, tokens_types, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_44": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(len(documents), max_sequences_per_document, 3, max_input_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_80": {
                "variable": {
                    "value": "output[doc_index][seq_index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.LongTensor(input_ids).unsqueeze(0), torch.LongTensor(input_type_ids).unsqueeze(0), torch.LongTensor(attention_masks).unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_80": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_81": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_82": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/train_eval.py": {
        "sklearn": {
            "precision_recall_fscore_support_24": {
                "variable": {
                    "value": "metrics_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "confusion_matrix_27": {
                "variable": {
                    "value": "cm",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "f1_score_109": {
                "variable": {
                    "value": "testf1",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "true_labels + list(label_ids.flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pred_labels + list(np.argmax(logits, axis=1).flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_110": {
                "variable": {
                    "value": "testacc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "true_labels + list(label_ids.flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pred_labels + list(np.argmax(logits, axis=1).flatten())",
                            "BinOp"
                        ]
                    ]
                }
            },
            "roc_auc_score_111": {
                "variable": {
                    "value": "testrocauc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "true_labels + list(label_ids.flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "y_score": {
                    "value": "logits_all_final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "precision_score_112": {
                "variable": {
                    "value": "testprecision",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "true_labels + list(label_ids.flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pred_labels + list(np.argmax(logits, axis=1).flatten())",
                            "BinOp"
                        ]
                    ]
                },
                "average": {
                    "value": "binary",
                    "type": "str",
                    "possible_values": []
                }
            },
            "StratifiedKFold_151": {
                "variable": {
                    "value": "skf",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "2020",
                    "type": "int",
                    "possible_values": []
                }
            },
            "precision_recall_fscore_support_31": {
                "y_true": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_35": {
                "y_true": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "normalize": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "compute_class_weight_126": {
                "class_weight": {
                    "value": "balanced",
                    "type": "str",
                    "possible_values": []
                },
                "classes": {
                    "value": "np.unique(y_0)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "y_0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array(annotated_df['one_fear_speech'])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "training_caller.py": {
        "sklearn": {}
    },
    "models/.ipynb_checkpoints/model_architecture-checkpoint.py": {
        "torch": {
            "Dropout_40": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_41": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_42": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(p=config.hidden_dropout_prob)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_53": {
                "variable": {
                    "value": "bert_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(document_batch.shape[0], min(document_batch.shape[1], self.bert_batch_size), self.bert.config.hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "MethodArgument"
                        ],
                        [
                            "'cuda'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_93": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_94": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(p=config.hidden_dropout_prob)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_107": {
                "variable": {
                    "value": "bert_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(document_batch.shape[0], min(document_batch.shape[1], self.bert_batch_size), self.roberta.config.hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "MethodArgument"
                        ],
                        [
                            "'cuda'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_43": {
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_96": {
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_97": {
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_75": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_131": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/.ipynb_checkpoints/model_utils-checkpoint.py": {
        "torch": {
            "manual_seed_22": {
                "seed": {
                    "value": "seed_val",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "42",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "manual_seed_all_23": {
                "seed": {
                    "value": "seed_val",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "42",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "device_count_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_device_name_59": {
                "device": {
                    "value": "tempID[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "models/.ipynb_checkpoints/tokenization-checkpoint.py": {
        "torch": {
            "tensor_71": {
                "variable": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(labels, dtype=torch.long)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorDataset_73": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "document_tensors",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_79": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(document_tensors, labels)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "SequentialSampler(data)",
                            "Call"
                        ],
                        [
                            "RandomSampler(data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "params['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_20": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(len(documents), max_sequences_per_document, 3, max_input_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SequentialSampler_75": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(document_tensors, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "RandomSampler_77": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TensorDataset(document_tensors, labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_24": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(len(documents), max_sequences_per_document, 3, max_input_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_59": {
                "variable": {
                    "value": "output[doc_index][seq_index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.LongTensor(input_ids).unsqueeze(0), torch.LongTensor(input_type_ids).unsqueeze(0), torch.LongTensor(attention_masks).unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_59": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_60": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_61": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/model_architecture.py": {
        "torch": {
            "Dropout_70": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_71": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(p=config.hidden_dropout_prob)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_136": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_137": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(p=config.hidden_dropout_prob)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_195": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_196": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_262": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_263": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_330": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_331": {
                "variable": {
                    "value": "self.converter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.extra_feature_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_332": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size + 100",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_360": {
                "variable": {
                    "value": "pooled_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pooled_output, extra_output]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_407": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * self.hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_408": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout2d_409": {
                "variable": {
                    "value": "self.dropout_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_410": {
                "variable": {
                    "value": "self.dropout_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "relu_423": {
                "variable": {
                    "value": "hidden",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(hidden)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LSTM_404": {
                "variable": {
                    "value": "self.seq_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_427": {
                "variable": {
                    "value": "loss_funct",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "torch.tensor(self.weights).to(device)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_73": {
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_74": {
                "in_features": {
                    "value": "params['hidden_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_138": {
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_139": {
                "in_features": {
                    "value": "params['hidden_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_140": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GRU_406": {
                "variable": {
                    "value": "self.seq_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tensor_98": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_163": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_228": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_295": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_367": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_427": {
                "data": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/model_utils.py": {
        "torch": {
            "manual_seed_22": {
                "seed": {
                    "value": "seed_val",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "42",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "manual_seed_all_23": {
                "seed": {
                    "value": "seed_val",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "42",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "device_count_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_device_name_59": {
                "device": {
                    "value": "tempID[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}