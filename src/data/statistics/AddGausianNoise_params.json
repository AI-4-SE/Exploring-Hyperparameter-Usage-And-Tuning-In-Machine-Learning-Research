{
    "TestLoader.py": {
        "torch": {
            "DataLoader_27": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torchvision.datasets.CIFAR10(root='./data/cifar10', train=True, download=True, transform=train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_29": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torchvision.datasets.CIFAR10(root='./data/cifar10', train=False, download=True, transform=test_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch * 10",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_34": {
                "variable": {
                    "value": "trainloader_plain",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset_plain",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torchvision.datasets.CIFAR10(root='./data/cifar10', train=True, download=True, transform=test_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_38": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_69": {
                "variable": {
                    "value": "central_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "central_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_157": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "model_0_data_0_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_162": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "model_0_data_1_out.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_59": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_61": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "subsets[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_78": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_90": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_102": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Generator_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_46": {
                "seed": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Generator_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_47": {
                "seed": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "laplaceGaussian.py": {
        "torch": {
            "randn_2": {
                "variable": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "DataLoader_46": {
                "variable": {
                    "value": "imageDataBatchLoad",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dst",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10('~/.torch', download=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "parameters_to_vector_76": {
                "variable": {
                    "value": "param_vector",
                    "type": "Variable",
                    "possible_values": []
                },
                "parameters": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Normal_78": {
                "variable": {
                    "value": "noise",
                    "type": "Variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "torch.tensor([0.0])",
                    "type": "Call",
                    "possible_values": []
                },
                "scale": {
                    "value": "torch.tensor(standardDeviation)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_84": {
                "variable": {
                    "value": "noiseExtracted",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "noiseExtracted",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.append(noiseExtracted, value)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(noiseExtracted)",
                            "Call"
                        ]
                    ]
                }
            },
            "Tensor_92": {
                "variable": {
                    "value": "gt_label",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "grad_113": {
                "variable": {
                    "value": "dy_dx",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "criterion(pred, gt_onehot_label)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randn_118": {
                "variable": {
                    "value": "dummy_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "gt_data.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randn_119": {
                "variable": {
                    "value": "dummy_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "gt_onehot_label.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LBFGS_123": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[dummy_data, dummy_label]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "vector_to_parameters_87": {
                "vec": {
                    "value": "param_vector",
                    "type": "Name",
                    "possible_values": [
                        [
                            "parameters_to_vector(net.parameters())",
                            "Call"
                        ]
                    ]
                },
                "parameters": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "manual_seed_101": {
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_63": {
                "input": {
                    "value": "gt_oneshot_label[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "argmax_64": {
                "input": {
                    "value": "dummy_onehot_label_copy[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "softmax_144": {
                "variable": {
                    "value": "dummy_onehot_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dummy_label",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "grad_146": {
                "variable": {
                    "value": "dummy_dy_dx",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "dummy_loss",
                    "type": "Name",
                    "possible_values": [
                        [
                            "criterion(dummy_pred, dummy_onehot_label)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_78": {
                "data": {
                    "value": "standardDeviation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[1.0]",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "models/vision.py": {
        "torch": {
            "Sequential_19": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 12, kernel_size=5, padding=5 // 2, stride=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_27": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(768, 100)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_64": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_66": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_76": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sigmoid_79": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_88": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_89": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_90": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_91": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_92": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_93": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_103": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sigmoid_104": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sigmoid_107": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_117": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_122": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sigmoid_133": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "avg_pool2d_138": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.body(x)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc(out)",
                            "Call"
                        ],
                        [
                            "F.Sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.Sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.Sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.Sigmoid(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.Sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.Sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_97": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_130": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "5 // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "5 // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "5 // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "768",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_72": {
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_99": {
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "unsqueeze_6": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.unsqueeze(target, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_7": {
                "variable": {
                    "value": "onehot_target",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "target.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "100",
                            "MethodArgument"
                        ]
                    ]
                },
                "device": {
                    "value": "target.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_12": {
                "input": {
                    "value": "torch.sum(-target * F.log_softmax(pred, dim=-1), 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_12": {
                "input": {
                    "value": "-target * F.log_softmax(pred, dim=-1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_softmax_12": {
                "input": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    }
}