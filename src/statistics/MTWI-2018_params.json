{
    "evaluate.py": {
        "torch": {}
    },
    "handler.py": {
        "torch": {
            "LMDB_dataset_219": {
                "base_class_0": {
                    "value": "torch.utils.data.Dataset",
                    "possible_values": []
                },
                "self.transformer": {
                    "value": "transformer",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "lib/utils.py": {
        "torch": {}
    },
    "model.py": {
        "torch": {
            "save_39": {
                "obj": {
                    "value": "model_dict",
                    "possible_values": [
                        [
                            "net.state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "output_path",
                    "possible_values": []
                }
            },
            "load_22": {
                "f": {
                    "value": "./model/vgg16-397923af.pth",
                    "possible_values": []
                }
            }
        }
    },
    "net/loss.py": {
        "torch": {
            "CTPN_Loss_10": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "CrossEntropyLoss_17": {
                    "variable": {
                        "value": "self.Ls_cls",
                        "possible_values": []
                    },
                    "params": {
                        "value": "default",
                        "possible_values": []
                    }
                },
                "SmoothL1Loss_18": {
                    "variable": {
                        "value": "self.Lv_reg",
                        "possible_values": []
                    },
                    "params": {
                        "value": "default",
                        "possible_values": []
                    }
                },
                "SmoothL1Loss_19": {
                    "variable": {
                        "value": "self.Lo_reg",
                        "possible_values": []
                    },
                    "params": {
                        "value": "default",
                        "possible_values": []
                    }
                },
                "self.using_cuda": {
                    "value": "using_cuda",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "unsqueeze_66": {
                "input": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "unsqueeze_70": {
                "input": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "unsqueeze_79": {
                "input": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "unsqueeze_83": {
                "input": {
                    "value": "0",
                    "possible_values": []
                }
            }
        }
    },
    "net/network.py": {
        "torch": {
            "VGG_16_12": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "Conv2d_20": {
                    "variable": {
                        "value": "self.convolution1_1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "3",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "64",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_21": {
                    "variable": {
                        "value": "self.convolution1_2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "64",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "64",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "MaxPool2d_23": {
                    "variable": {
                        "value": "self.pooling1",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "2",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "2",
                        "possible_values": []
                    }
                },
                "Conv2d_25": {
                    "variable": {
                        "value": "self.convolution2_1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "64",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "128",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_26": {
                    "variable": {
                        "value": "self.convolution2_2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "128",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "128",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "MaxPool2d_28": {
                    "variable": {
                        "value": "self.pooling2",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "2",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "2",
                        "possible_values": []
                    }
                },
                "Conv2d_30": {
                    "variable": {
                        "value": "self.convolution3_1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "128",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_31": {
                    "variable": {
                        "value": "self.convolution3_2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_32": {
                    "variable": {
                        "value": "self.convolution3_3",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "MaxPool2d_34": {
                    "variable": {
                        "value": "self.pooling3",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "2",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "2",
                        "possible_values": []
                    }
                },
                "Conv2d_36": {
                    "variable": {
                        "value": "self.convolution4_1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_37": {
                    "variable": {
                        "value": "self.convolution4_2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_38": {
                    "variable": {
                        "value": "self.convolution4_3",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "MaxPool2d_40": {
                    "variable": {
                        "value": "self.pooling4",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "2",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "2",
                        "possible_values": []
                    }
                },
                "Conv2d_42": {
                    "variable": {
                        "value": "self.convolution5_1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_43": {
                    "variable": {
                        "value": "self.convolution5_2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_44": {
                    "variable": {
                        "value": "self.convolution5_3",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                }
            },
            "Im2col_67": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "self.kernel_size": {
                    "value": "kernel_size",
                    "possible_values": []
                },
                "self.stride": {
                    "value": "stride",
                    "possible_values": []
                },
                "self.padding": {
                    "value": "padding",
                    "possible_values": []
                }
            },
            "BLSTM_85": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "LSTM_90": {
                    "variable": {
                        "value": "self.lstm",
                        "possible_values": []
                    },
                    "*args": {
                        "value": "channel",
                        "possible_values": []
                    },
                    "bidirectional": {
                        "value": "bidirectional",
                        "possible_values": [
                            [
                                "True",
                                "MethodArgument"
                            ]
                        ]
                    }
                }
            },
            "CTPN_100": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "Sequential_113": {
                    "variable": {
                        "value": "self.cnn",
                        "possible_values": []
                    },
                    "params": {
                        "value": "default",
                        "possible_values": []
                    }
                },
                "Sequential_116": {
                    "variable": {
                        "value": "self.rnn",
                        "possible_values": []
                    },
                    "params": {
                        "value": "default",
                        "possible_values": []
                    }
                },
                "Conv2d_120": {
                    "variable": {
                        "value": "self.FC",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_122": {
                    "variable": {
                        "value": "self.vertical_coordinate",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "2 * 10",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_124": {
                    "variable": {
                        "value": "self.score",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "2 * 10",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_126": {
                    "variable": {
                        "value": "self.side_refinement",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "512",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "10",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    }
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution1_1(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_48": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution1_2(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_50": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution2_1(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_51": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution2_2(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_53": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution3_1(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_54": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution3_2(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_55": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution3_3(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_57": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution4_1(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_58": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution4_2(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_59": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution4_3(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_61": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution5_1(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_62": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution5_2(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "relu_63": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.convolution5_3(x)",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "unfold_80": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "possible_values": [
                        [
                            "F.relu(self.convolution1_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution1_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution2_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution2_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution3_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution3_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution3_3(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling3(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution4_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution4_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution4_3(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling4(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution5_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution5_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution5_3(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.unfold(x, self.kernel_size, padding=self.padding, stride=self.stride)",
                            "Call"
                        ],
                        [
                            "x.reshape((x.shape[0], x.shape[1], height, -1))",
                            "Call"
                        ],
                        [
                            "x.transpose(1, 3)",
                            "Call"
                        ],
                        [
                            "self.cnn(x)",
                            "Call"
                        ],
                        [
                            "self.rnn(x)",
                            "Call"
                        ],
                        [
                            "self.FC(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "possible_values": []
                }
            },
            "relu_132": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "possible_values": [
                        [
                            "F.relu(self.convolution1_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution1_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution2_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution2_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution3_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution3_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution3_3(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling3(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution4_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution4_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution4_3(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.pooling4(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution5_1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution5_2(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.relu(self.convolution5_3(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.unfold(x, self.kernel_size, padding=self.padding, stride=self.stride)",
                            "Call"
                        ],
                        [
                            "x.reshape((x.shape[0], x.shape[1], height, -1))",
                            "Call"
                        ],
                        [
                            "x.transpose(1, 3)",
                            "Call"
                        ],
                        [
                            "self.cnn(x)",
                            "Call"
                        ],
                        [
                            "self.rnn(x)",
                            "Call"
                        ],
                        [
                            "self.FC(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            }
        }
    },
    "predict.py": {
        "torch": {
            "Tensor_231": {
                "variable": {
                    "value": "image",
                    "possible_values": []
                }
            },
            "Tensor_291": {
                "variable": {
                    "value": "image",
                    "possible_values": []
                }
            },
            "load_338": {
                "f": {
                    "value": "MODEL",
                    "possible_values": [
                        [
                            "''",
                            "Constant"
                        ]
                    ]
                },
                "map_location": {
                    "value": "running_mode",
                    "possible_values": [
                        [
                            "sys.argv[2]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "load_340": {
                "f": {
                    "value": "MODEL",
                    "possible_values": [
                        [
                            "''",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "SGD_156": {
                "variable": {
                    "value": "optimizer",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "possible_values": [
                        [
                            "lr_behind",
                            "Name"
                        ],
                        [
                            "lr_front",
                            "Name"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "possible_values": []
                }
            },
            "load_133": {
                "f": {
                    "value": "./model/vgg16.model",
                    "possible_values": []
                }
            },
            "save_263": {
                "obj": {
                    "value": "net.state_dict()",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(MODEL_SAVE_PATH, 'ctpn-{0}-end.model'.format(i))",
                    "possible_values": []
                }
            },
            "save_261": {
                "obj": {
                    "value": "net.state_dict()",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(MODEL_SAVE_PATH, 'ctpn-{0}-{1}.model'.format(i, iterator))",
                    "possible_values": []
                }
            }
        }
    }
}