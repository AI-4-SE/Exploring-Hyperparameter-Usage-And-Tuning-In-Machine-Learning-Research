{
    "dataset/nuscenes_dataset_torch_new.py": {
        "torch": {
            "zeros_214": {
                "variable": {
                    "value": "sparse_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "input_depth.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_211": {
                "variable": {
                    "value": "mask_keep",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "mask_keep[..., None].transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_375": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, radar_depth)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_517": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, radar_depth)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_381": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, radar_depth_filtered)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_522": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, radar_depth_filtered)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_387": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, radar_depth_filtered2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_390": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, s_depth)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_528": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, radar_depth_filtered2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_531": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(rgb, s_depth)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "dataset/transforms.py": {
        "torch": {
            "cat_533": {
                "tensors": {
                    "value": "tuple(tensor_list)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_tensor_43": {
                "obj": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "enhancer.enhance(brightness_factor)",
                            "Call"
                        ],
                        [
                            "enhancer.enhance(contrast_factor)",
                            "Call"
                        ],
                        [
                            "enhancer.enhance(saturation_factor)",
                            "Call"
                        ],
                        [
                            "Image.merge('HSV', (h, s, v)).convert(input_mode)",
                            "Call"
                        ],
                        [
                            "img.convert('RGB')",
                            "Call"
                        ],
                        [
                            "Image.fromarray(np_img, 'RGB').convert(input_mode)",
                            "Call"
                        ],
                        [
                            "t(img)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img.transpose((2, 0, 1)).copy())",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img.copy())",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_208": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img.transpose((2, 0, 1)).copy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_531": {
                "input": {
                    "value": "denormalization_imagenet(inputs[i, :, :, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_210": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img.copy()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "evaluation/criteria.py": {
        "torch": {
            "abs_47": {
                "variable": {
                    "value": "diff",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target - pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_55": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "part1 + part2",
                            "BinOp"
                        ],
                        [
                            "torch.mean(loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_48": {
                "input": {
                    "value": "diff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target - pred",
                            "BinOp"
                        ],
                        [
                            "diff[valid_mask]",
                            "Subscript"
                        ],
                        [
                            "target - pred",
                            "BinOp"
                        ],
                        [
                            "diff[valid_mask]",
                            "Subscript"
                        ],
                        [
                            "torch.abs(target - pred)",
                            "Call"
                        ]
                    ]
                }
            },
            "threshold_50": {
                "input": {
                    "value": "-diff",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "threshold": {
                    "value": "-delta",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "threshold_51": {
                "input": {
                    "value": "diff ** 2 - delta ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "threshold": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "value": {
                    "value": "-delta ** 2.0",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "evaluation/criteria_new.py": {
        "torch": {
            "abs_18": {
                "variable": {
                    "value": "grad_depth_x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_depth_normalized[:, :, :, :-1] - pred_depth_normalized[:, :, :, 1:]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_19": {
                "variable": {
                    "value": "grad_depth_y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_depth_normalized[:, :, :-1, :] - pred_depth_normalized[:, :, 1:, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_22": {
                "variable": {
                    "value": "grad_image_x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(image[:, :, :, :-1] - image[:, :, :, 1:])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mean_23": {
                "variable": {
                    "value": "grad_image_y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(image[:, :, :-1, :] - image[:, :, 1:, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "abs_71": {
                "variable": {
                    "value": "diff",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target - pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_79": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "part1 + part2",
                            "BinOp"
                        ],
                        [
                            "torch.mean(loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_87": {
                "variable": {
                    "value": "self.cross_entropy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "squeeze_91": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask.to(torch.bool)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_93": {
                "variable": {
                    "value": "masked_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target[mask, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "exp_25": {
                "input": {
                    "value": "-grad_image_x",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_26": {
                "input": {
                    "value": "-grad_image_y",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "abs_22": {
                "input": {
                    "value": "image[:, :, :, :-1] - image[:, :, :, 1:]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_23": {
                "input": {
                    "value": "image[:, :, :-1, :] - image[:, :, 1:, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_72": {
                "input": {
                    "value": "diff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target - pred",
                            "BinOp"
                        ],
                        [
                            "diff[valid_mask]",
                            "Subscript"
                        ],
                        [
                            "target - pred",
                            "BinOp"
                        ],
                        [
                            "diff[valid_mask]",
                            "Subscript"
                        ],
                        [
                            "torch.abs(target - pred)",
                            "Call"
                        ]
                    ]
                }
            },
            "threshold_74": {
                "input": {
                    "value": "-diff",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "threshold": {
                    "value": "-delta",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "threshold_75": {
                "input": {
                    "value": "diff ** 2 - delta ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "threshold": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "value": {
                    "value": "-delta ** 2.0",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "evaluation/metrics.py": {
        "torch": {
            "max_47": {
                "variable": {
                    "value": "maxRatio",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output / target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_8": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_129": {
                "variable": {
                    "value": "maxRatio",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output_masked / target_masked",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_41": {
                "input": {
                    "value": "abs_diff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(output - target).abs()",
                            "Call"
                        ],
                        [
                            "(output_masked - target_masked).abs()",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "pow_57": {
                "input": {
                    "value": "abs_inv_diff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(inv_output - inv_target).abs()",
                            "Call"
                        ],
                        [
                            "(inv_output - inv_target).abs()",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_115": {
                "input": {
                    "value": "valid_mask_final",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dist_valid_mask & valid_mask",
                            "BinOp"
                        ]
                    ]
                }
            },
            "pow_123": {
                "input": {
                    "value": "abs_diff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(output - target).abs()",
                            "Call"
                        ],
                        [
                            "(output_masked - target_masked).abs()",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_123": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "pow_137": {
                "input": {
                    "value": "abs_inv_diff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(inv_output - inv_target).abs()",
                            "Call"
                        ],
                        [
                            "(inv_output - inv_target).abs()",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_137": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "empty_cache_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_97": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nuscenes_dataset_torch('val', transform_mode='sparse-to-dense', modality=args.modality, sparsifier=args.sparsifier, num_samples=args.num_samples, max_depth=max_depth)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "customized_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_104": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nuscenes_dataset_torch('train', transform_mode='sparse-to-dense', modality=args.modality, sparsifier=args.sparsifier, num_samples=args.num_samples, max_depth=max_depth)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "sampler": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "lambda work_id: np.random.seed(work_id)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_198": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.evaluate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_224": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "chkpt_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.resume",
                            "Attribute"
                        ]
                    ]
                }
            },
            "SGD_257": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_285": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "synchronize_396": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_446": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_580": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_594": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_519": {
                "variable": {
                    "value": "input_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs[:, 3, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_585": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "exp_426": {
                "input": {
                    "value": "-loss_weights['w_stage1']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_427": {
                "input": {
                    "value": "-loss_weights['w_stage2']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_482": {
                "input": {
                    "value": "-loss_weights['w_stage1']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_483": {
                "input": {
                    "value": "-loss_weights['w_stage2']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_484": {
                "input": {
                    "value": "-loss_weights['w_smooth']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_493": {
                "input": {
                    "value": "-loss_weights['w_stage1']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_494": {
                "input": {
                    "value": "-loss_weights['w_stage2']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_413": {
                "input": {
                    "value": "-loss_weights['w_smooth']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Parameter_144": {
                "variable": {
                    "value": "w_stage1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.tensor(1.0, dtype=torch.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_145": {
                "variable": {
                    "value": "w_stage2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.tensor(1.0, dtype=torch.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_146": {
                "variable": {
                    "value": "w_smooth",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.tensor(0.1, dtype=torch.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "exp_411": {
                "input": {
                    "value": "-loss_weights['w_stage1']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_412": {
                "input": {
                    "value": "-loss_weights['w_stage2']",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Parameter_166": {
                "variable": {
                    "value": "w_stage1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.tensor(1.0, dtype=torch.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_167": {
                "variable": {
                    "value": "w_stage2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.tensor(1.0, dtype=torch.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tensor_144": {
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_145": {
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_146": {
                "data": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_166": {
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_167": {
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "model/models.py": {
        "torch": {
            "Sequential_978": {
                "variable": {
                    "value": "layers",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "ReLU_90": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_163": {
                "variable": {
                    "value": "upconv",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "collections.OrderedDict([('unpool', Unpool(in_channels)), ('conv', nn.Conv2d(in_channels, in_channels // 2, kernel_size=5, stride=1, padding=2, bias=False)), ('batchnorm', nn.BatchNorm2d(in_channels // 2)), ('relu', nn.ReLU())])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_269": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_270": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_274": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels // 32",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_275": {
                "variable": {
                    "value": "self.bilinear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_342": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_343": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_347": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels // 32",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_348": {
                "variable": {
                    "value": "self.bilinear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_438": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_439": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_443": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels // 32",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_444": {
                "variable": {
                    "value": "self.bilinear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_539": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_540": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_559": {
                "variable": {
                    "value": "self.conv1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_560": {
                "variable": {
                    "value": "self.bn1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_564": {
                "variable": {
                    "value": "self.relu_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_565": {
                "variable": {
                    "value": "self.maxpool_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_573": {
                "variable": {
                    "value": "self.conv_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512 + 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_574": {
                "variable": {
                    "value": "self.bn_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_582": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_583": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_587": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels // 32",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_588": {
                "variable": {
                    "value": "self.bilinear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_619": {
                "variable": {
                    "value": "layers",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_652": {
                "variable": {
                    "value": "x_fused",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_693": {
                "variable": {
                    "value": "x_fused",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_730": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_731": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_750": {
                "variable": {
                    "value": "self.conv1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_751": {
                "variable": {
                    "value": "self.bn1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_755": {
                "variable": {
                    "value": "self.relu_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_756": {
                "variable": {
                    "value": "self.maxpool_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_764": {
                "variable": {
                    "value": "self.conv_fusion1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64 + 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_765": {
                "variable": {
                    "value": "self.bn_fusion1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_767": {
                "variable": {
                    "value": "self.conv_fusion2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128 + 32",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_768": {
                "variable": {
                    "value": "self.bn_fusion2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_770": {
                "variable": {
                    "value": "self.conv_fusion3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256 + 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_771": {
                "variable": {
                    "value": "self.bn_fusion3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_773": {
                "variable": {
                    "value": "self.conv_fusion4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512 + 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_774": {
                "variable": {
                    "value": "self.bn_fusion4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_782": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_783": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_787": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels // 32",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_788": {
                "variable": {
                    "value": "self.bilinear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_829": {
                "variable": {
                    "value": "layers",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_858": {
                "variable": {
                    "value": "x_fused1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_867": {
                "variable": {
                    "value": "x_fused2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_876": {
                "variable": {
                    "value": "x_fused3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_886": {
                "variable": {
                    "value": "x_fused4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_924": {
                "variable": {
                    "value": "x_fused1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_933": {
                "variable": {
                    "value": "x_fused2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_942": {
                "variable": {
                    "value": "x_fused3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_952": {
                "variable": {
                    "value": "x_fused4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv_transpose2d_27": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.unpool(x)",
                            "Call"
                        ],
                        [
                            "x1 + x2",
                            "BinOp"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(x)",
                            "Call"
                        ],
                        [
                            "self.decoder(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "self.bilinear(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(x)",
                            "Call"
                        ],
                        [
                            "self.decoder(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "self.bilinear(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(x)",
                            "Call"
                        ],
                        [
                            "self.decoder(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "self.bilinear(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_img, x_d), 1)",
                            "Call"
                        ],
                        [
                            "self.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(x)",
                            "Call"
                        ],
                        [
                            "self.decoder(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "self.bilinear(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_img, x_d), 1)",
                            "Call"
                        ],
                        [
                            "self.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(x)",
                            "Call"
                        ],
                        [
                            "self.decoder(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "self.bilinear(x)",
                            "Call"
                        ],
                        [
                            "self.decoder(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "self.bilinear(x)",
                            "Call"
                        ],
                        [
                            "self.decoder(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "self.bilinear(x)",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.num_channels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_190": {
                "variable": {
                    "value": "self.upper_branch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "collections.OrderedDict([('conv1', nn.Conv2d(in_channels, out_channels, kernel_size=5, stride=1, padding=2, bias=False)), ('batchnorm1', nn.BatchNorm2d(out_channels)), ('relu', nn.ReLU()), ('conv2', nn.Conv2d(out_channels, out_channels, kernel_size=3, stride=1, padding=1, bias=False)), ('batchnorm2', nn.BatchNorm2d(out_channels))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_197": {
                "variable": {
                    "value": "self.bottom_branch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "collections.OrderedDict([('conv', nn.Conv2d(in_channels, out_channels, kernel_size=5, stride=1, padding=2, bias=False)), ('batchnorm', nn.BatchNorm2d(out_channels))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_201": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_246": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_247": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_319": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_320": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_462": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_496": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_605": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_815": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_972": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(decoder[6])",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(kernel_size - 1) // 2",
                            "BinOp"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "not bn",
                            "UnaryOp"
                        ]
                    ]
                }
            },
            "zeros_23": {
                "*size": {
                    "value": "num_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "layout": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_147": {
                "*args": {
                    "value": "collections.OrderedDict([(module_name, nn.ConvTranspose2d(in_channels, in_channels // 2, kernel_size, stride, padding, output_padding, bias=False)), ('batchnorm', nn.BatchNorm2d(in_channels // 2)), ('relu', nn.ReLU(inplace=True))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_975": {
                "num_features": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "LeakyReLU_977": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_165": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_166": {
                "num_features": {
                    "value": "in_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_167": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_148": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(decoder[6])",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(kernel_size - 1) // 2",
                            "BinOp"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "output_padding": {
                    "value": "output_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "kernel_size % 2",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_150": {
                "num_features": {
                    "value": "in_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_151": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_191": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_192": {
                "num_features": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ReLU_193": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_194": {
                "in_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_195": {
                "num_features": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_198": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_199": {
                "num_features": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "model/multistage_model.py": {
        "torch": {
            "rand_281": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[16, 4, 450, 800]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_75": {
                "variable": {
                    "value": "x_stage2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d_filtered, depth_stage1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_91": {
                "variable": {
                    "value": "self.alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "5.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_92": {
                "variable": {
                    "value": "self.beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "18.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_93": {
                "variable": {
                    "value": "self.K",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "100.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "exp_98": {
                "variable": {
                    "value": "depth_thresh",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_depth * torch.log(self.beta / self.alpha) / self.K + torch.log(self.alpha)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_105": {
                "variable": {
                    "value": "diff",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dense_depth - sparse_depth",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_143": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_144": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_164": {
                "variable": {
                    "value": "self.conv1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "depth_input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.in_channels - 3",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_165": {
                "variable": {
                    "value": "self.bn1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_169": {
                "variable": {
                    "value": "self.relu_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_170": {
                "variable": {
                    "value": "self.maxpool_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_178": {
                "variable": {
                    "value": "self.conv_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512 + 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_179": {
                "variable": {
                    "value": "self.bn_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_187": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "2048",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_188": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_192": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_channels // 32",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_193": {
                "variable": {
                    "value": "self.bilinear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_224": {
                "variable": {
                    "value": "layers",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_264": {
                "variable": {
                    "value": "x_fused",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_img, x_d)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_40": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "pretrained_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(cfg.PROJECT_ROOT, 'pretrained/resnet18_latefusion.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_210": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_241": {
                "variable": {
                    "value": "x_d",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_d_sparse, x_d_dense)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_98": {
                "input": {
                    "value": "self.beta / self.alpha",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "model/utils.py": {
        "torch": {
            "squeeze_30": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.squeeze(mask, dim=-1).cpu().numpy().astype(np.bool)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "save_79": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(output_directory, 'checkpoint-' + str(epoch) + '.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}