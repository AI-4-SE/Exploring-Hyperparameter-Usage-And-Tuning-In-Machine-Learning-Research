{
    "src_reject/kg_vector_generation.py": {
        "sklearn": {}
    },
    "src_reject/playground.py": {
        "sklearn": {
            "TSNE_630": {
                "variable": {
                    "value": "y",
                    "type": "Name",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src_reject/train_base.py": {
        "sklearn": {},
        "tensorflow": {
            "Saver_33": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "max_to_keep": {
                    "value": "200",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_35": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_37": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "config": {
                    "value": "gpu_config",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "get_collection_86": {
                "variable": {
                    "value": "varlist",
                    "type": "Name",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "key",
                    "type": "Name",
                    "possible_values": [
                        [
                            "params.keys()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src_reject/train_reject.py": {
        "sklearn": {},
        "tensorflow": {
            "Graph_569": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src_reject/train_reject_augmented.py": {
        "sklearn": {},
        "tensorflow": {
            "Graph_736": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src_reject/train_seen.py": {
        "sklearn": {},
        "tensorflow": {
            "ConfigProto_486": {
                "variable": {
                    "value": "gpu_config",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConfigProto_603": {
                "variable": {
                    "value": "gpu_config",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_473": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_589": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_679": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src_reject/train_unseen.py": {
        "sklearn": {},
        "tensorflow": {
            "ConfigProto_961": {
                "variable": {
                    "value": "gpu_config",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConfigProto_1132": {
                "variable": {
                    "value": "gpu_config",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConfigProto_1416": {
                "variable": {
                    "value": "gpu_config",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_943": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_1113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_1238": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_1397": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src_reject/dataloader.py": {
        "tensorflow": {}
    },
    "src_reject/model_base.py": {
        "tensorflow": {}
    },
    "src_reject/model_reject.py": {
        "tensorflow": {
            "placeholder_52": {
                "variable": {
                    "value": "self.encode_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.max_length, self.word_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "encode_seqs",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_53": {
                "variable": {
                    "value": "self.label_logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "label_logits",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_149": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exponential_decay_155": {
                "variable": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.start_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "global_step": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_steps": {
                    "value": "self.decay_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_rate": {
                    "value": "self.decay_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "staircase": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_165": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta1": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "variable_scope_76": {
                "name_or_scope": {
                    "value": "model_name",
                    "type": "Name",
                    "possible_values": []
                },
                "reuse": {
                    "value": "reuse",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "reduce_max_95": {
                "variable": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'global_maxpool%d' % fsz",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "src_reject/model_seen.py": {
        "tensorflow": {
            "placeholder_41": {
                "variable": {
                    "value": "self.encode_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, self.max_length, self.word_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "encode_seqs",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_42": {
                "variable": {
                    "value": "self.category_target_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "category_target_index",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_152": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exponential_decay_157": {
                "variable": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.start_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "global_step": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_steps": {
                    "value": "self.decay_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_rate": {
                    "value": "self.decay_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "staircase": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_165": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta1": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "variable_scope_49": {
                "name_or_scope": {
                    "value": "model_name",
                    "type": "Name",
                    "possible_values": []
                },
                "reuse": {
                    "value": "reuse",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "reduce_max_80": {
                "variable": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'global_maxpool%d' % fsz",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "src_reject/model_unseen.py": {
        "tensorflow": {
            "placeholder_43": {
                "variable": {
                    "value": "self.target_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, self.max_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "target_seqs",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_44": {
                "variable": {
                    "value": "self.target_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, self.max_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "target_mask",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_45": {
                "variable": {
                    "value": "self.decode_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, self.max_length, self.word_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "decode_seqs",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_47": {
                "variable": {
                    "value": "self.encode_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, self.max_length, self.word_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "encode_seqs",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_48": {
                "variable": {
                    "value": "self.class_label_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, self.max_length, self.word_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "class_label_seqs",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_49": {
                "variable": {
                    "value": "self.kg_vector",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, self.max_length, self.kg_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "kg_score",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_50": {
                "variable": {
                    "value": "self.category_logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[config.batch_size, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "category_logits",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_426": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exponential_decay_431": {
                "variable": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.start_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "global_step": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_steps": {
                    "value": "self.decay_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_rate": {
                    "value": "self.decay_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "staircase": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_439": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "beta1": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_67": {
                "variable": {
                    "value": "self.train_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.train_net.outputs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_68": {
                "variable": {
                    "value": "self.test_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.test_net.outputs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "slice_228": {
                "variable": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "size": {
                    "value": "[config.batch_size, 1, self.word_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "slice_word",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_235": {
                "variable": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "squeeze_word",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "slice_310": {
                "variable": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "size": {
                    "value": "[config.batch_size, 1, self.word_embedding_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "slice_word",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_317": {
                "variable": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "net_class_label_embed.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "squeeze_word",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "variable_scope_84": {
                "name_or_scope": {
                    "value": "model_name",
                    "type": "Name",
                    "possible_values": []
                },
                "reuse": {
                    "value": "reuse",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "reduce_max_165": {
                "variable": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'global_maxpool%d' % fsz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "variable_scope_215": {
                "name_or_scope": {
                    "value": "model_name",
                    "type": "Name",
                    "possible_values": []
                },
                "reuse": {
                    "value": "reuse",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "reduce_max_263": {
                "variable": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "net_cnn.outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'global_maxpool%d' % fsz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "variable_scope_297": {
                "name_or_scope": {
                    "value": "model_name",
                    "type": "Name",
                    "possible_values": []
                },
                "reuse": {
                    "value": "reuse",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "variable_scope_368": {
                "name_or_scope": {
                    "value": "model_name",
                    "type": "Name",
                    "possible_values": []
                },
                "reuse": {
                    "value": "reuse",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "random_uniform_initializer_384": {
                "minval": {
                    "value": "-0.1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}