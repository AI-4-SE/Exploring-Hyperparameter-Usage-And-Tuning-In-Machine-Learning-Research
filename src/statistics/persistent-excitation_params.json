{
    "ce-vs-sq.py": {
        "torch": {
            "cat_147": {
                "variable": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[Y1, Y2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TensorDataset_149": {
                "variable": {
                    "value": "train_dataset_a",
                    "type": "Name",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_150": {
                "variable": {
                    "value": "train_dataset_b",
                    "type": "Name",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "Y",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_159": {
                "variable": {
                    "value": "train_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "2 * N",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SGD_171": {
                "variable": {
                    "value": "optimizer_ce",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model_ce.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_253": {
                "variable": {
                    "value": "optimizer_stan",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model_sq.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "meshgrid_269": {
                "variable": {
                    "value": "(xv, yv)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[torch.linspace(X_Mi, X_Ma, L), torch.linspace(Y_Mi, Y_Ma, L)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_270": {
                "variable": {
                    "value": "xy",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xv.flatten(), yv.flatten())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_60": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "variable": {
                    "value": "self.fc_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_189": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output.squeeze() / scaling",
                    "type": "BinOp",
                    "possible_values": []
                },
                "target": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "target.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "target.type(torch.FloatTensor)",
                            "Call"
                        ]
                    ]
                }
            },
            "mse_loss_238": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output.squeeze() / scaling",
                    "type": "BinOp",
                    "possible_values": []
                },
                "target": {
                    "value": "target - 0.5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ModuleList_75": {
                "variable": {
                    "value": "layers",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_81": {
                "variable": {
                    "value": "self.blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_144": {
                "*size": {
                    "value": "N",
                    "type": "Name",
                    "possible_values": [
                        [
                            "8",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_145": {
                "*size": {
                    "value": "N // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_146": {
                "*size": {
                    "value": "N // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_269": {
                "start": {
                    "value": "Y_Mi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-5",
                            "UnaryOp"
                        ]
                    ]
                },
                "end": {
                    "value": "Y_Ma",
                    "type": "Name",
                    "possible_values": [
                        [
                            "70",
                            "Constant"
                        ]
                    ]
                },
                "steps": {
                    "value": "L",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2500",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_78": {
                "in_features": {
                    "value": "last_hidden_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "ourmodel.py": {
        "torch": {
            "Parameter_18": {
                "variable": {
                    "value": "self.perturb_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(3, 32, 32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "round(6 * net_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_21": {
                "variable": {
                    "value": "self.perturb_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(round(6 * net_size), 14, 14)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "round(6 * net_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "round(16 * net_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_24": {
                "variable": {
                    "value": "self.perturb_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(round(16 * net_size) * 5 * 5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "round(16 * net_size) * 5 * 5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "round(120 * net_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_27": {
                "variable": {
                    "value": "self.perturb_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(round(120 * net_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "round(120 * net_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "round(96 * net_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_30": {
                "variable": {
                    "value": "self.perturb_fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(round(96 * net_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_31": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "round(96 * net_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "ParameterList_33": {
                "variable": {
                    "value": "self.params_regular",
                    "type": "Attribute",
                    "possible_values": []
                },
                "parameters": {
                    "value": "[self.conv1.weight, self.conv1.bias, self.conv2.weight, self.conv2.bias, self.fc1.weight, self.fc1.bias, self.fc2.weight, self.fc2.bias, self.fc3.weight, self.fc3.bias]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ParameterList_40": {
                "variable": {
                    "value": "self.params_perturb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "parameters": {
                    "value": "[self.perturb_conv1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ParameterList_42": {
                "variable": {
                    "value": "self.params_perturb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "parameters": {
                    "value": "[self.perturb_conv1, self.perturb_conv2, self.perturb_fc1, self.perturb_fc2, self.perturb_fc3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "max_pool2d_51": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "F.leaky_relu(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_52": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "F.leaky_relu(self.conv2(x))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_54": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_55": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_58": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "F.leaky_relu(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_60": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "F.leaky_relu(self.conv2(x))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_63": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_65": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_18": {
                "*size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_21": {
                "*size": {
                    "value": "round(6 * net_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "14",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "14",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_24": {
                "*size": {
                    "value": "round(16 * net_size) * 5 * 5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_27": {
                "*size": {
                    "value": "round(120 * net_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_30": {
                "*size": {
                    "value": "round(96 * net_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_51": {
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_52": {
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_58": {
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_60": {
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "poor-margins-of-ce.py": {
        "torch": {
            "stack_150": {
                "variable": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(y_vals, y_f)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_151": {
                "variable": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_vals, x_f)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TensorDataset_153": {
                "variable": {
                    "value": "train_dataset_a",
                    "type": "Name",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_154": {
                "variable": {
                    "value": "train_dataset_b",
                    "type": "Name",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "Y",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_161": {
                "variable": {
                    "value": "train_loader_1",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset_1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "2 * N",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_166": {
                "variable": {
                    "value": "model_1",
                    "type": "Name",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SGD_169": {
                "variable": {
                    "value": "optimizer_1",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model_1.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "meshgrid_189": {
                "variable": {
                    "value": "(xv, yv)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[torch.linspace(X_Mi, X_Ma, L), torch.linspace(Y_Mi, Y_Ma, L)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_190": {
                "variable": {
                    "value": "xy",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xv.flatten(), yv.flatten())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_246": {
                "variable": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(y_vals, y_f)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_247": {
                "variable": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_vals, x_f)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TensorDataset_249": {
                "variable": {
                    "value": "train_dataset_a",
                    "type": "Name",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_250": {
                "variable": {
                    "value": "train_dataset_b",
                    "type": "Name",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "Y",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_254": {
                "variable": {
                    "value": "train_loader_2",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset_2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "2 * N",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_259": {
                "variable": {
                    "value": "model_2",
                    "type": "Name",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SGD_261": {
                "variable": {
                    "value": "optimizer_2",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model_2.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "meshgrid_276": {
                "variable": {
                    "value": "(xv, yv)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[torch.linspace(X_Mi, X_Ma, L), torch.linspace(Y_Mi, Y_Ma, L)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_277": {
                "variable": {
                    "value": "xy",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xv.flatten(), yv.flatten())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_52": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_110": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output.squeeze() / scaling",
                    "type": "BinOp",
                    "possible_values": []
                },
                "target": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "target.type(torch.FloatTensor)",
                            "Call"
                        ]
                    ]
                }
            },
            "linspace_189": {
                "start": {
                    "value": "Y_Mi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-200",
                            "UnaryOp"
                        ],
                        [
                            "10",
                            "Constant"
                        ]
                    ]
                },
                "end": {
                    "value": "Y_Ma",
                    "type": "Name",
                    "possible_values": [
                        [
                            "200",
                            "Constant"
                        ],
                        [
                            "110",
                            "Constant"
                        ]
                    ]
                },
                "steps": {
                    "value": "L",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2500",
                            "Constant"
                        ],
                        [
                            "2500",
                            "Constant"
                        ]
                    ]
                }
            },
            "linspace_276": {
                "start": {
                    "value": "Y_Mi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-200",
                            "UnaryOp"
                        ],
                        [
                            "10",
                            "Constant"
                        ]
                    ]
                },
                "end": {
                    "value": "Y_Ma",
                    "type": "Name",
                    "possible_values": [
                        [
                            "200",
                            "Constant"
                        ],
                        [
                            "110",
                            "Constant"
                        ]
                    ]
                },
                "steps": {
                    "value": "L",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2500",
                            "Constant"
                        ],
                        [
                            "2500",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    },
    "train-ce.py": {
        "torch": {
            "Subset_100": {
                "variable": {
                    "value": "train_dataset_a",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=True, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "idx_class_a",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(train_dataset, class_a_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_101": {
                "variable": {
                    "value": "train_dataset_b",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=True, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "idx_class_b",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(train_dataset, class_b_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_105": {
                "variable": {
                    "value": "test_dataset_a",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(test_dataset_a, test_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "test_idx_class_a",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(test_dataset, class_a_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_106": {
                "variable": {
                    "value": "test_dataset_b",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(test_dataset_a, test_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "test_idx_class_b",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(test_dataset, class_b_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_147": {
                "variable": {
                    "value": "train_loader_a",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset_a",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.Subset(train_dataset, idx_class_a)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_151": {
                "variable": {
                    "value": "train_loader_b",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset_b",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.Subset(train_dataset, idx_class_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_155": {
                "variable": {
                    "value": "train_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=True, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_159": {
                "variable": {
                    "value": "test_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(test_dataset_a, test_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_65": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_216": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model.params_regular",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cross_entropy_187": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model(data1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "label1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "save_274": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "fout_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join('persistently-excited-weights', out_filename + '.pt')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_211": {
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_232": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_235": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "train-persist.py": {
        "torch": {
            "Subset_113": {
                "variable": {
                    "value": "train_dataset_a",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=True, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "idx_class_a",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(train_dataset, class_a_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_114": {
                "variable": {
                    "value": "train_dataset_b",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=True, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "idx_class_b",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(train_dataset, class_b_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_118": {
                "variable": {
                    "value": "test_dataset_a",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(test_dataset_a, test_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "test_idx_class_a",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(test_dataset, class_a_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_119": {
                "variable": {
                    "value": "test_dataset_b",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(test_dataset_a, test_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "test_idx_class_b",
                    "type": "Name",
                    "possible_values": [
                        [
                            "find_class_idx(test_dataset, class_b_label)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_160": {
                "variable": {
                    "value": "train_loader_a",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset_a",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.Subset(train_dataset, idx_class_a)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_164": {
                "variable": {
                    "value": "train_loader_b",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset_b",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.Subset(train_dataset, idx_class_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_168": {
                "variable": {
                    "value": "train_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=True, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(train_dataset_a, train_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_172": {
                "variable": {
                    "value": "test_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "TwoClassDataset(test_dataset_a, test_dataset_b)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_78": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_179": {
                "variable": {
                    "value": "loss_module",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_268": {
                "variable": {
                    "value": "loss_module",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_252": {
                "variable": {
                    "value": "par.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "par.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_311": {
                "variable": {
                    "value": "par.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "par.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_367": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "fout_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join('persistently-excited-weights', out_filename + '.pt')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_300": {
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_318": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_199": {
                "variable": {
                    "value": "par.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "par.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_379": {
                "input": {
                    "value": "param[1].data[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sign_212": {
                "input": {
                    "value": "par.grad.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}