{
    "contrib/torch_utils.py": {
        "torch": {
            "current_device_82": {
                "variable": {
                    "value": "prior_dev",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "current_stream_76": {
                "variable": {
                    "value": "pytorch_stream",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_298": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_332": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_401": {
                "variable": {
                    "value": "lims",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "faiss.rev_swig_ptr(res.lims, n + 1).copy().astype('int64')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_403": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "faiss.rev_swig_ptr(res.distances, nd).copy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_404": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "faiss.rev_swig_ptr(res.labels, nd).copy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "empty_536": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "xq.size()",
                            "Call"
                        ],
                        [
                            "xq.size()",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "xb.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_543": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "xq.size()",
                            "Call"
                        ],
                        [
                            "xq.size()",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "xb.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_625": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "xq.size()",
                            "Call"
                        ],
                        [
                            "xq.size()",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "nb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "xb.size()",
                            "Call"
                        ],
                        [
                            "xb.size()",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "xb.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "current_device_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "current_device_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_166": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_215": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_222": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_251": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_258": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_265": {
                "variable": {
                    "value": "R",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ],
                        [
                            "k",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_301": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "self.getDevice()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "empty_304": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cpu')",
                            "Call"
                        ],
                        [
                            "torch.device('cuda', self.getDevice())",
                            "Call"
                        ],
                        [
                            "torch.device('cpu')",
                            "Call"
                        ],
                        [
                            "torch.device('cuda', self.getDevice())",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_335": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "self.getDevice()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "empty_338": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "ni",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ni",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cpu')",
                            "Call"
                        ],
                        [
                            "torch.device('cuda', self.getDevice())",
                            "Call"
                        ],
                        [
                            "torch.device('cpu')",
                            "Call"
                        ],
                        [
                            "torch.device('cuda', self.getDevice())",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_419": {
                "variable": {
                    "value": "codes",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.sa_code_size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_447": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "faiss/gpu/test/torch_test_contrib_gpu.py": {
        "torch": {
            "rand_28": {
                "variable": {
                    "value": "xb_torch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_32": {
                "variable": {
                    "value": "xb_torch_gpu",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_42": {
                "variable": {
                    "value": "xq_torch_cpu",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "new_d_torch_gpu",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_57": {
                "variable": {
                    "value": "new_i_torch_gpu",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_80": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_83": {
                "variable": {
                    "value": "ids",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "1000 + xb.shape[0]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_117": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_131": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_136": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_151": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_156": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_167": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_175": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "torch.device('cuda', 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_192": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "xq.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_227": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "int"
                        ],
                        [
                            "1024",
                            "int"
                        ],
                        [
                            "k",
                            "variable"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_228": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Stream_235": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_309": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "int"
                        ],
                        [
                            "1024",
                            "int"
                        ],
                        [
                            "k",
                            "variable"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_310": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_320": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "xb_c.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_321": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "xb_c.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_351": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "int"
                        ],
                        [
                            "1024",
                            "int"
                        ],
                        [
                            "k",
                            "variable"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_352": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Stream_359": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_219": {
                "seed": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_301": {
                "seed": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_342": {
                "seed": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "equal_52": {
                "input": {
                    "value": "d_torch_cpu.cuda()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "d_torch_gpu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpu_index.search(xq_torch_gpu, 10)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_53": {
                "input": {
                    "value": "i_torch_cpu.cuda()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "i_torch_gpu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpu_index.search(xq_torch_gpu, 10)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_60": {
                "input": {
                    "value": "d_torch_cpu.cuda()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "new_d_torch_gpu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(10, 10, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_61": {
                "input": {
                    "value": "i_torch_cpu.cuda()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "new_i_torch_gpu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(10, 10, device=torch.device('cuda', 0), dtype=torch.int64)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_88": {
                "input": {
                    "value": "I.view(10)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "ids[10:20]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "equal_98": {
                "input": {
                    "value": "I.view(10)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "ids_cpu[10:20]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "equal_123": {
                "input": {
                    "value": "xb[7]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_133": {
                "input": {
                    "value": "xb[12].cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_138": {
                "input": {
                    "value": "xb[13]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_143": {
                "input": {
                    "value": "xb[10:20]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_153": {
                "input": {
                    "value": "xb[40:50].cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_158": {
                "input": {
                    "value": "xb[50:60]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype='float32')",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, device=torch.device('cuda', 0), dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_179": {
                "input": {
                    "value": "labels.cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "labels_cpu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index_cpu.assign(xq.cpu(), 5)",
                            "Call"
                        ],
                        [
                            "index_cpu.assign(xq.cpu().numpy(), 5)",
                            "Call"
                        ],
                        [
                            "index_cpu.assign(xq.cpu(), 5)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_195": {
                "input": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.assign(xq, 5)",
                            "Call"
                        ],
                        [
                            "index.assign(xq.cpu().numpy(), 5)",
                            "Call"
                        ],
                        [
                            "np.empty((xq.shape[0], 5), dtype='int64')",
                            "Call"
                        ],
                        [
                            "torch.empty(xq.shape[0], 5, dtype=torch.int64)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "labels_cpu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index_cpu.assign(xq.cpu(), 5)",
                            "Call"
                        ],
                        [
                            "index_cpu.assign(xq.cpu().numpy(), 5)",
                            "Call"
                        ],
                        [
                            "index_cpu.assign(xq.cpu(), 5)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_325": {
                "input": {
                    "value": "I.long().cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "gt_I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search(xq, k)",
                            "Call"
                        ],
                        [
                            "index.search(xq, k)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_337": {
                "input": {
                    "value": "torch.from_numpy(I).long()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "gt_I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search(xq, k)",
                            "Call"
                        ],
                        [
                            "index.search(xq, k)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_32": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_56": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_57": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_80": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_83": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_117": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_136": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_156": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_167": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_175": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_337": {
                "ndarray": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search(xb[10:20], 1)",
                            "Call"
                        ],
                        [
                            "index.search(xb_cpu[10:20], 1)",
                            "Call"
                        ],
                        [
                            "index.search(xb_np[10:20], 1)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c[6:8], xb_c, k)",
                            "Call"
                        ],
                        [
                            "torch.zeros(nq, k, device=xb_c.device, dtype=torch.int32)",
                            "Call"
                        ],
                        [
                            "np.zeros((nq, k), dtype=np.int32)",
                            "Call"
                        ]
                    ]
                }
            },
            "sort_412": {
                "variable": {
                    "value": "(D, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c[6:8], xb_c, k)",
                            "Call"
                        ],
                        [
                            "torch.zeros(nq, k, device=xb_c.device, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "np.zeros((nq, k), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "np.sort(D, axis=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c[4:8], xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sort_430": {
                "variable": {
                    "value": "(D, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c[6:8], xb_c, k)",
                            "Call"
                        ],
                        [
                            "torch.zeros(nq, k, device=xb_c.device, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "np.zeros((nq, k), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "np.sort(D, axis=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c[4:8], xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "equal_257": {
                "input": {
                    "value": "torch.from_numpy(I)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "gt_I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search(xq, k)",
                            "Call"
                        ],
                        [
                            "index.search(xq, k)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_257": {
                "ndarray": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search(xb[10:20], 1)",
                            "Call"
                        ],
                        [
                            "index.search(xb_cpu[10:20], 1)",
                            "Call"
                        ],
                        [
                            "index.search(xb_np[10:20], 1)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c[6:8], xb_c, k)",
                            "Call"
                        ],
                        [
                            "torch.zeros(nq, k, device=xb_c.device, dtype=torch.int32)",
                            "Call"
                        ],
                        [
                            "np.zeros((nq, k), dtype=np.int32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_283": {
                "input": {
                    "value": "I.cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "gt_I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search(xq, k)",
                            "Call"
                        ],
                        [
                            "index.search(xq, k)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_297": {
                "input": {
                    "value": "I.cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "gt_I[6:8]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_338": {
                "ndarray": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c[6:8], xb_c, k)",
                            "Call"
                        ],
                        [
                            "torch.zeros(nq, k, device=xb_c.device, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "np.zeros((nq, k), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "np.sort(D, axis=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c[4:8], xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_258": {
                "ndarray": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c[6:8], xb_c, k)",
                            "Call"
                        ],
                        [
                            "torch.zeros(nq, k, device=xb_c.device, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "np.zeros((nq, k), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "np.sort(D, axis=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c[4:8], xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_385": {
                "ndarray": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c, xb_c, k)",
                            "Call"
                        ],
                        [
                            "faiss.knn_gpu(res, xq_c[6:8], xb_c, k)",
                            "Call"
                        ],
                        [
                            "torch.zeros(nq, k, device=xb_c.device, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "np.zeros((nq, k), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "np.sort(D, axis=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c, xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ],
                        [
                            "faiss.pairwise_distance_gpu(res, xq_c[4:8], xb_c)",
                            "Call"
                        ],
                        [
                            "torch.sort(D, dim=1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/torch_test_contrib.py": {
        "torch": {
            "rand_19": {
                "variable": {
                    "value": "xb_torch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                }
            },
            "rand_27": {
                "variable": {
                    "value": "xb_np",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                }
            },
            "rand_36": {
                "variable": {
                    "value": "xq_torch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_55": {
                "variable": {
                    "value": "d_torch_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "I_torch_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_69": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_73": {
                "variable": {
                    "value": "ids",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "1000 + xb.shape[0]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_90": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_103": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_117": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_125": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_132": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_149": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "xq.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_163": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_164": {
                "variable": {
                    "value": "ids",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "1000 + xb.shape[0]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_180": {
                "variable": {
                    "value": "ids_remove",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1012]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_197": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_198": {
                "variable": {
                    "value": "ids",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "1000 + xb.shape[0]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_206": {
                "variable": {
                    "value": "xb_up",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_212": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_225": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_230": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_249": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_253": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_257": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_279": {
                "variable": {
                    "value": "D_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "xq.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_280": {
                "variable": {
                    "value": "I_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "xq.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_281": {
                "variable": {
                    "value": "R_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "xq.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_294": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_299": {
                "variable": {
                    "value": "xq",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_313": {
                "variable": {
                    "value": "encoded_torch_param",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_318": {
                "variable": {
                    "value": "decoded_torch_param",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "nq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_338": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "32",
                            "int"
                        ],
                        [
                            "16",
                            "int"
                        ],
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "transpose_338": {
                "variable": {
                    "value": "xb",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_222": {
                "seed": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "equal_24": {
                "input": {
                    "value": "y_torch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(10)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "xb_torch[10]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "equal_76": {
                "input": {
                    "value": "I.view(10)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "ids[10:20]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "equal_95": {
                "input": {
                    "value": "xb[7]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1011)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1010)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_105": {
                "input": {
                    "value": "xb[12]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1011)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1010)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_109": {
                "input": {
                    "value": "xb[10:20]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1011)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1010)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_119": {
                "input": {
                    "value": "xb[40:50].cpu()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.reconstruct(7)",
                            "Call"
                        ],
                        [
                            "np.empty(d, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct_n(10, 10)",
                            "Call"
                        ],
                        [
                            "np.empty((10, d), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.empty(10, d, dtype=torch.float32)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1011)",
                            "Call"
                        ],
                        [
                            "index.reconstruct(1010)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_136": {
                "input": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.assign(xq, 5)",
                            "Call"
                        ],
                        [
                            "index.assign(xq.numpy(), 5)",
                            "Call"
                        ],
                        [
                            "np.empty((xq.shape[0], 5), dtype='int64')",
                            "Call"
                        ],
                        [
                            "torch.empty(xq.shape[0], 5, dtype=torch.int64)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "labels_ref",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index_ref.assign(xq.cpu(), 5)",
                            "Call"
                        ],
                        [
                            "index_ref.assign(xq.numpy(), 5)",
                            "Call"
                        ],
                        [
                            "index_ref.assign(xq, 5)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_152": {
                "input": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.assign(xq, 5)",
                            "Call"
                        ],
                        [
                            "index.assign(xq.numpy(), 5)",
                            "Call"
                        ],
                        [
                            "np.empty((xq.shape[0], 5), dtype='int64')",
                            "Call"
                        ],
                        [
                            "torch.empty(xq.shape[0], 5, dtype=torch.int64)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "labels_ref",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index_ref.assign(xq.cpu(), 5)",
                            "Call"
                        ],
                        [
                            "index_ref.assign(xq.numpy(), 5)",
                            "Call"
                        ],
                        [
                            "index_ref.assign(xq, 5)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_285": {
                "input": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.range_search(xq, thresh)",
                            "Call"
                        ],
                        [
                            "index.search_and_reconstruct(xq, k)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "D_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((xq.shape[0], k), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.zeros(xq.shape[0], k, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_286": {
                "input": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search(xb[10:20], 1)",
                            "Call"
                        ],
                        [
                            "index.search(xb.numpy()[10:20], 1)",
                            "Call"
                        ],
                        [
                            "index.range_search(xq, thresh)",
                            "Call"
                        ],
                        [
                            "index.search_and_reconstruct(xq, k)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "I_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((xq.shape[0], k), dtype=np.int64)",
                            "Call"
                        ],
                        [
                            "torch.zeros(xq.shape[0], k, dtype=torch.int64)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_287": {
                "input": {
                    "value": "R",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.search_and_reconstruct(xq, k)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "R_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((xq.shape[0], k, d), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.zeros(xq.shape[0], k, d, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_310": {
                "input": {
                    "value": "decoded_torch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.sa_decode(encoded_torch)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "torch.from_numpy(decoded_np)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "equal_316": {
                "input": {
                    "value": "encoded_torch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.sa_encode(xq)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "encoded_torch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.sa_encode(xq)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_321": {
                "input": {
                    "value": "decoded_torch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.sa_decode(encoded_torch)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "decoded_torch_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(nq, d, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_310": {
                "ndarray": {
                    "value": "decoded_np",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index.sa_decode(encoded_np)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}