{
    "DLA.py": {
        "tensorflow": {
            "get_or_create_global_step_26": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_35": {
                "variable": {
                    "value": "self.images",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[None]",
                            "List"
                        ]
                    ]
                },
                "name": {
                    "value": "images",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_36": {
                "variable": {
                    "value": "self.labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "labels",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_37": {
                "variable": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "lr",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_38": {
                "variable": {
                    "value": "self.is_training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.bool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "is_training",
                    "type": "str",
                    "possible_values": []
                }
            },
            "InteractiveSession_122": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_124": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_125": {
                "variable": {
                    "value": "self.best_saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_checkpoint_state_183": {
                "variable": {
                    "value": "ckpt",
                    "type": "variable",
                    "possible_values": []
                },
                "checkpoint_dir": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "batch_normalization_191": {
                "variable": {
                    "value": "bn",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "bottom",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "3 if self.data_format == 'channels_last' else 1",
                    "type": "IfExp",
                    "possible_values": []
                },
                "training": {
                    "value": "self.is_training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_199": {
                "variable": {
                    "value": "conv",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "bottom",
                    "type": "variable",
                    "possible_values": []
                },
                "filters": {
                    "value": "filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "strides",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "self.data_format",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.contrib.layers.variance_scaling_initializer()",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "concat_223": {
                "variable": {
                    "value": "total_conv",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "total_conv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "tf.concat(total_conv, axis=axes)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "axes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[1, 2] if self.data_format == 'channels_last' else [2, 3]",
                            "IfExp"
                        ],
                        [
                            "3 if self.data_format == 'channels_last' else 1",
                            "IfExp"
                        ]
                    ]
                }
            },
            "cond_231": {
                "variable": {
                    "value": "shutcut",
                    "type": "variable",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(input_channels, filters)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : bottom",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._conv_bn_activation(bottom, filters, 1, 1)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "reduce_mean_97": {
                "variable": {
                    "value": "global_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "dla_stage6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._dla_generator(dla_stage5, self.filters_list[5], self.block_list[5] - 1, stack_basic_fn)",
                            "Call"
                        ],
                        [
                            "self._max_pooling(dla_stage6, 2, 2)",
                            "Call"
                        ],
                        [
                            "dla_stage6 + residual",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "axes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[1, 2] if self.data_format == 'channels_last' else [2, 3]",
                            "IfExp"
                        ],
                        [
                            "3 if self.data_format == 'channels_last' else 1",
                            "IfExp"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "name": {
                    "value": "global_pool",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dense_98": {
                "variable": {
                    "value": "final_dense",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "global_pool",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(dla_stage6, axis=axes, keepdims=False, name='global_pool')",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "final_dense",
                    "type": "str",
                    "possible_values": []
                }
            },
            "softmax_100": {
                "variable": {
                    "value": "self.logit",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "final_dense",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.layers.dense(global_pool, self.num_classes, name='final_dense')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "logit",
                    "type": "str",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_101": {
                "variable": {
                    "value": "self.classifer_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "onehot_labels": {
                    "value": "self.labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "final_dense",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.layers.dense(global_pool, self.num_classes, name='final_dense')",
                            "Call"
                        ]
                    ]
                },
                "label_smoothing": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "reduction": {
                    "value": "tf.losses.Reduction.MEAN",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_106": {
                "variable": {
                    "value": "lossavg",
                    "type": "variable",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                },
                "name": {
                    "value": "loss_moveavg",
                    "type": "str",
                    "possible_values": []
                }
            },
            "trainable_variables_110": {
                "variable": {
                    "value": "var_list",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_111": {
                "variable": {
                    "value": "varavg",
                    "type": "variable",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                },
                "name": {
                    "value": "var_moveavg",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MomentumOptimizer_113": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "get_collection_115": {
                "variable": {
                    "value": "update_ops",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.UPDATE_OPS",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "group_116": {
                "variable": {
                    "value": "self.train_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[update_ops, lossavg_op, varavg_op, train_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_117": {
                "variable": {
                    "value": "self.accuracy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.cast(tf.equal(tf.argmax(final_dense, 1), tf.argmax(self.labels, 1)), tf.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gather_220": {
                "variable": {
                    "value": "split_bottom",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "bottom",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "tf.range(i * 32, (i + 1) * 32)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "axes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[1, 2] if self.data_format == 'channels_last' else [2, 3]",
                            "IfExp"
                        ],
                        [
                            "3 if self.data_format == 'channels_last' else 1",
                            "IfExp"
                        ]
                    ]
                }
            },
            "max_pooling2d_262": {
                "inputs": {
                    "value": "bottom",
                    "type": "variable",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "pool_size",
                    "type": "variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "strides",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "self.data_format",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "average_pooling2d_272": {
                "inputs": {
                    "value": "bottom",
                    "type": "variable",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "pool_size",
                    "type": "variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "strides",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "self.data_format",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "dropout_282": {
                "inputs": {
                    "value": "bottom",
                    "type": "variable",
                    "possible_values": []
                },
                "rate": {
                    "value": "self.prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "self.is_training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "variable_scope_48": {
                "name_or_scope": {
                    "value": "stage1",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_56": {
                "name_or_scope": {
                    "value": "stage2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_74": {
                "name_or_scope": {
                    "value": "stage3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_77": {
                "name_or_scope": {
                    "value": "stage4",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_83": {
                "name_or_scope": {
                    "value": "stage5",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_89": {
                "name_or_scope": {
                    "value": "stage6",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_95": {
                "name_or_scope": {
                    "value": "final_dense",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_99": {
                "name_or_scope": {
                    "value": "optimizer",
                    "type": "str",
                    "possible_values": []
                }
            },
            "identity_109": {
                "variable": {
                    "value": "self.total_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "total_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifer_loss + self.l2_loss",
                            "BinOp"
                        ]
                    ]
                }
            },
            "global_variables_initializer_123": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "shape_230": {
                "input": {
                    "value": "bottom",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "equal_232": {
                "x": {
                    "value": "input_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.shape(bottom)[axis]",
                            "Subscript"
                        ]
                    ]
                },
                "y": {
                    "value": "filters",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "add_n_102": {
                "inputs": {
                    "value": "[tf.nn.l2_loss(var) for var in tf.trainable_variables()]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "control_dependencies_108": {
                "control_inputs": {
                    "value": "[lossavg_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cast_118": {
                "x": {
                    "value": "tf.equal(tf.argmax(final_dense, 1), tf.argmax(self.labels, 1))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_118": {
                "x": {
                    "value": "tf.argmax(final_dense, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.argmax(self.labels, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "l2_loss_103": {
                "t": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "argmax_118": {
                "input": {
                    "value": "self.labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "trainable_variables_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "tensorflow": {
            "gpu_device_name_13": {
                "variable": {
                    "value": "device_name",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}