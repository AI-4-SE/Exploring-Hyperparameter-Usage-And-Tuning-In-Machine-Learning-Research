{
    "Autonomous_driving_application_Car_detection.py": {
        "tensorflow": {
            "boolean_mask_182": {
                "variable": {
                    "value": "scores",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "box_class_scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.max(box_scores, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "filtering_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "box_class_scores >= threshold",
                            "Compare"
                        ]
                    ]
                }
            },
            "boolean_mask_183": {
                "variable": {
                    "value": "boxes",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "boxes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_normal([19, 19, 5, 4], mean=1, stddev=4, seed=1)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold=0.5)",
                            "Call"
                        ],
                        [
                            "tf.random_normal([54, 4], mean=1, stddev=4, seed=1)",
                            "Call"
                        ],
                        [
                            "yolo_non_max_suppression(scores, boxes, classes)",
                            "Call"
                        ],
                        [
                            "yolo_eval(yolo_outputs)",
                            "Call"
                        ],
                        [
                            "yolo_eval(yolo_outputs, image_shape)",
                            "Call"
                        ],
                        [
                            "tf.boolean_mask(boxes, filtering_mask)",
                            "Call"
                        ],
                        [
                            "K.gather(boxes, nms_indices)",
                            "Call"
                        ],
                        [
                            "yolo_boxes_to_corners(box_xy, box_wh)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, score_threshold)",
                            "Call"
                        ],
                        [
                            "scale_boxes(boxes, image_shape)",
                            "Call"
                        ],
                        [
                            "yolo_non_max_suppression(scores, boxes, classes, max_boxes, iou_threshold)",
                            "Call"
                        ],
                        [
                            "boxes",
                            "Method Argument"
                        ],
                        [
                            "boxes",
                            "Method Argument"
                        ]
                    ]
                },
                "mask": {
                    "value": "filtering_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "box_class_scores >= threshold",
                            "Compare"
                        ]
                    ]
                }
            },
            "boolean_mask_184": {
                "variable": {
                    "value": "classes",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "box_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.argmax(box_scores, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "filtering_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "box_class_scores >= threshold",
                            "Compare"
                        ]
                    ]
                }
            },
            "non_max_suppression_384": {
                "variable": {
                    "value": "nms_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "boxes": {
                    "value": "boxes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_normal([19, 19, 5, 4], mean=1, stddev=4, seed=1)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold=0.5)",
                            "Call"
                        ],
                        [
                            "tf.random_normal([54, 4], mean=1, stddev=4, seed=1)",
                            "Call"
                        ],
                        [
                            "yolo_non_max_suppression(scores, boxes, classes)",
                            "Call"
                        ],
                        [
                            "yolo_eval(yolo_outputs)",
                            "Call"
                        ],
                        [
                            "yolo_eval(yolo_outputs, image_shape)",
                            "Call"
                        ],
                        [
                            "tf.boolean_mask(boxes, filtering_mask)",
                            "Call"
                        ],
                        [
                            "K.gather(boxes, nms_indices)",
                            "Call"
                        ],
                        [
                            "yolo_boxes_to_corners(box_xy, box_wh)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, score_threshold)",
                            "Call"
                        ],
                        [
                            "scale_boxes(boxes, image_shape)",
                            "Call"
                        ],
                        [
                            "yolo_non_max_suppression(scores, boxes, classes, max_boxes, iou_threshold)",
                            "Call"
                        ],
                        [
                            "boxes",
                            "Method Argument"
                        ],
                        [
                            "boxes",
                            "Method Argument"
                        ]
                    ]
                },
                "scores": {
                    "value": "scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold=0.5)",
                            "Call"
                        ],
                        [
                            "tf.random_normal([54], mean=1, stddev=4, seed=1)",
                            "Call"
                        ],
                        [
                            "yolo_non_max_suppression(scores, boxes, classes)",
                            "Call"
                        ],
                        [
                            "yolo_eval(yolo_outputs)",
                            "Call"
                        ],
                        [
                            "yolo_eval(yolo_outputs, image_shape)",
                            "Call"
                        ],
                        [
                            "tf.boolean_mask(box_class_scores, filtering_mask)",
                            "Call"
                        ],
                        [
                            "K.gather(scores, nms_indices)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, score_threshold)",
                            "Call"
                        ],
                        [
                            "yolo_non_max_suppression(scores, boxes, classes, max_boxes, iou_threshold)",
                            "Call"
                        ],
                        [
                            "scores",
                            "Method Argument"
                        ]
                    ]
                },
                "max_output_size": {
                    "value": "max_boxes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "Method Argument"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "iou_threshold": {
                    "value": "iou_threshold",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ],
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Session_193": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_400": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_537": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variables_initializer_380": {
                "var_list": {
                    "value": "[max_boxes_tensor]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "yad2k/models/keras_yolo.py": {
        "tensorflow": {
            "boolean_mask_314": {
                "variable": {
                    "value": "boxes",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "boxes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.boolean_mask(boxes, prediction_mask)",
                            "Call"
                        ],
                        [
                            "yolo_boxes_to_corners(box_xy, box_wh)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold=score_threshold)",
                            "Call"
                        ],
                        [
                            "boxes * image_dims",
                            "BinOp"
                        ],
                        [
                            "K.gather(boxes, nms_index)",
                            "Call"
                        ],
                        [
                            "boxes",
                            "Method Argument"
                        ]
                    ]
                },
                "mask": {
                    "value": "prediction_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "box_class_scores >= threshold",
                            "Compare"
                        ]
                    ]
                }
            },
            "boolean_mask_315": {
                "variable": {
                    "value": "scores",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "box_class_scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.max(box_scores, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "prediction_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "box_class_scores >= threshold",
                            "Compare"
                        ]
                    ]
                }
            },
            "boolean_mask_316": {
                "variable": {
                    "value": "classes",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "box_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.argmax(box_scores, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "prediction_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "box_class_scores >= threshold",
                            "Compare"
                        ]
                    ]
                }
            },
            "non_max_suppression_342": {
                "variable": {
                    "value": "nms_index",
                    "type": "variable",
                    "possible_values": []
                },
                "boxes": {
                    "value": "boxes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.boolean_mask(boxes, prediction_mask)",
                            "Call"
                        ],
                        [
                            "yolo_boxes_to_corners(box_xy, box_wh)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold=score_threshold)",
                            "Call"
                        ],
                        [
                            "boxes * image_dims",
                            "BinOp"
                        ],
                        [
                            "K.gather(boxes, nms_index)",
                            "Call"
                        ],
                        [
                            "boxes",
                            "Method Argument"
                        ]
                    ]
                },
                "scores": {
                    "value": "scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.boolean_mask(box_class_scores, prediction_mask)",
                            "Call"
                        ],
                        [
                            "yolo_filter_boxes(box_confidence, boxes, box_class_probs, threshold=score_threshold)",
                            "Call"
                        ],
                        [
                            "K.gather(scores, nms_index)",
                            "Call"
                        ]
                    ]
                },
                "max_output_size": {
                    "value": "max_boxes_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.variable(max_boxes, dtype='int32')",
                            "Call"
                        ]
                    ]
                },
                "iou_threshold": {
                    "value": "iou_threshold",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "space_to_depth_31": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "concatenate([conv21_reshaped, conv20])",
                            "Call"
                        ],
                        [
                            "DarknetConv2D_BN_Leaky(1024, (3, 3))(x)",
                            "Call"
                        ],
                        [
                            "DarknetConv2D(num_anchors * (num_classes + 5), (1, 1))(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "block_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Print_287": {
                "variable": {
                    "value": "total_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "total_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * (confidence_loss_sum + classification_loss_sum + coordinates_loss_sum)",
                            "BinOp"
                        ],
                        [
                            "tf.Print(total_loss, [total_loss, confidence_loss_sum, classification_loss_sum, coordinates_loss_sum], message='yolo_loss, conf_loss, class_loss, box_coord_loss:')",
                            "Call"
                        ]
                    ]
                },
                "data": {
                    "value": "[total_loss, confidence_loss_sum, classification_loss_sum, coordinates_loss_sum]",
                    "type": "List",
                    "possible_values": []
                },
                "message": {
                    "value": "yolo_loss, conf_loss, class_loss, box_coord_loss:",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variables_initializer_341": {
                "var_list": {
                    "value": "[max_boxes_tensor]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    }
}