{
    "model/MDN.py": {
        "sklearn": {},
        "tensorflow": {
            "reshape_51": {
                "variable": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y_pred, [-1, 2 * num_mixes * output_dim + num_mixes], name='reshape_ypreds')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 2 * num_mixes * output_dim + num_mixes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "reshape_ypreds",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reshape_52": {
                "variable": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y_true, [-1, output_dim], name='reshape_ytrue')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, output_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "reshape_ytrue",
                    "type": "str",
                    "possible_values": []
                }
            },
            "split_54": {
                "variable": {
                    "value": "(out_mu, out_sigma, out_pi)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y_pred, [-1, 2 * num_mixes * output_dim + num_mixes], name='reshape_ypreds')",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "[num_mixes * output_dim, num_mixes * output_dim, num_mixes]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "name": {
                    "value": "mdn_coef_split",
                    "type": "str",
                    "possible_values": []
                }
            },
            "split_61": {
                "variable": {
                    "value": "mus",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "out_mu",
                    "type": "variable",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "component_splits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[output_dim] * num_mixes",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_62": {
                "variable": {
                    "value": "sigs",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "out_sigma",
                    "type": "variable",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "component_splits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[output_dim] * num_mixes",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "negative_67": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mixture.log_prob(y_true)",
                            "Call"
                        ],
                        [
                            "tf.negative(loss)",
                            "Call"
                        ],
                        [
                            "tf.reduce_mean(loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_68": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mixture.log_prob(y_true)",
                            "Call"
                        ],
                        [
                            "tf.negative(loss)",
                            "Call"
                        ],
                        [
                            "tf.reduce_mean(loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "Input_111": {
                "variable": {
                    "value": "inp",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "concatenate_126": {
                "variable": {
                    "value": "concate",
                    "type": "variable",
                    "possible_values": []
                },
                "arys": {
                    "value": "[x, inp]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concatenate_131": {
                "variable": {
                    "value": "concate",
                    "type": "variable",
                    "possible_values": []
                },
                "arys": {
                    "value": "[x, concate]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concatenate_136": {
                "variable": {
                    "value": "concate",
                    "type": "variable",
                    "possible_values": []
                },
                "arys": {
                    "value": "[x, concate]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concatenate_189": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "arys": {
                    "value": "[mdn_mus, mdn_sigmas, mdn_pi]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Model_190": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "inp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(1,))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "concatenate([mdn_mus, mdn_sigmas, mdn_pi])",
                            "Call"
                        ]
                    ]
                }
            },
            "Dense_112": {
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNormalization_123": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Activation_124": {
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_127": {
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNormalization_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Activation_129": {
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_132": {
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNormalization_133": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Activation_134": {
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_137": {
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNormalization_138": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Activation_139": {
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_186": {
                "units": {
                    "value": "N_MIXES * OUTPUT_DIMS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Dense_187": {
                "units": {
                    "value": "N_MIXES * OUTPUT_DIMS",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "elu_plus_one_plus_epsilon",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dense_188": {
                "units": {
                    "value": "N_MIXES",
                    "type": "variable",
                    "possible_values": [
                        [
                            "40",
                            "Constant"
                        ]
                    ]
                }
            },
            "elu_45": {
                "features": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(16)(inp)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(16)(concate)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(16)(concate)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Dense(16)(concate)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_191": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model/ScalableG.py": {
        "sklearn": {},
        "tensorflow": {}
    }
}