{
    "en_attack.py": {
        "tensorflow": {
            "cast_45": {
                "variable": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_52": {
                "variable": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_53": {
                "variable": {
                    "value": "self.newimg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_54": {
                "variable": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_55": {
                "variable": {
                    "value": "self.tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros((batch_size, num_labels))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_56": {
                "variable": {
                    "value": "self.const",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(batch_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_59": {
                "variable": {
                    "value": "self.assign_timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_60": {
                "variable": {
                    "value": "self.assign_newimg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_61": {
                "variable": {
                    "value": "self.assign_slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_62": {
                "variable": {
                    "value": "self.assign_tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(batch_size, num_labels)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_63": {
                "variable": {
                    "value": "self.assign_const",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[batch_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Variable_65": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_66": {
                "variable": {
                    "value": "self.global_step_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "divide_70": {
                "variable": {
                    "value": "self.zt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.global_step_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.global_step_t + tf.cast(3, tf.float32)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cast_72": {
                "variable": {
                    "value": "cond1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.greater(tf.subtract(self.slack, self.timg), self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_73": {
                "variable": {
                    "value": "cond2",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.less_equal(tf.abs(tf.subtract(self.slack, self.timg)), self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_74": {
                "variable": {
                    "value": "cond3",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.less(tf.subtract(self.slack, self.timg), tf.negative(self.beta_t))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "minimum_76": {
                "variable": {
                    "value": "upper",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.subtract(self.slack, self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.cast(0.5, tf.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "maximum_77": {
                "variable": {
                    "value": "lower",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.add(self.slack, self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.cast(-0.5, tf.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "assign_81": {
                "variable": {
                    "value": "self.setter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ref": {
                    "value": "self.newimg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.assign_newimg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "assign_82": {
                "variable": {
                    "value": "self.setter_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ref": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.assign_slack",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_89": {
                "variable": {
                    "value": "self.l2dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(self.newimg - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_90": {
                "variable": {
                    "value": "self.l2dist_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(self.slack - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_91": {
                "variable": {
                    "value": "self.l1dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.abs(self.newimg - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_92": {
                "variable": {
                    "value": "self.l1dist_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.abs(self.slack - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_97": {
                "variable": {
                    "value": "real",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.tlab * self.output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_98": {
                "variable": {
                    "value": "real_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.tlab * self.output_y",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_99": {
                "variable": {
                    "value": "other",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(1 - self.tlab) * self.output - self.tlab * 10000",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_100": {
                "variable": {
                    "value": "other_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(1 - self.tlab) * self.output_y - self.tlab * 10000",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_111": {
                "variable": {
                    "value": "self.loss21",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l1dist",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_112": {
                "variable": {
                    "value": "self.loss21_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l1dist_y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_113": {
                "variable": {
                    "value": "self.loss2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l2dist",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_114": {
                "variable": {
                    "value": "self.loss2_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l2dist_y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_115": {
                "variable": {
                    "value": "self.loss1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.const * loss1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_116": {
                "variable": {
                    "value": "self.loss1_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.const * loss1_y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "polynomial_decay_121": {
                "variable": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "global_step": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_steps": {
                    "value": "self.MAX_ITERATIONS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "end_learning_rate": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "power": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_123": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_125": {
                "variable": {
                    "value": "end_vars",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variables_initializer_134": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "[self.global_step] + [self.slack] + [self.newimg] + new_vars",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_103": {
                "variable": {
                    "value": "loss1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "other - real + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_104": {
                "variable": {
                    "value": "loss1_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "other_y - real_y + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_107": {
                "variable": {
                    "value": "loss1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "real - other + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_108": {
                "variable": {
                    "value": "loss1_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "real_y - other_y + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "greater_72": {
                "x": {
                    "value": "tf.subtract(self.slack, self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "less_equal_73": {
                "x": {
                    "value": "tf.abs(tf.subtract(self.slack, self.timg))",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "less_74": {
                "x": {
                    "value": "tf.subtract(self.slack, self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.negative(self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "subtract_76": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_76": {
                "x": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "add_77": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_77": {
                "x": {
                    "value": "-0.5",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_79": {
                "x": {
                    "value": "cond2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.less_equal(tf.abs(tf.subtract(self.slack, self.timg)), self.beta_t), tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_80": {
                "x": {
                    "value": "self.zt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.assign_newimg - self.newimg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_89": {
                "x": {
                    "value": "self.newimg - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_90": {
                "x": {
                    "value": "self.slack - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_91": {
                "x": {
                    "value": "self.newimg - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_92": {
                "x": {
                    "value": "self.slack - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "multiply_93": {
                "x": {
                    "value": "self.l1dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_94": {
                "x": {
                    "value": "self.l1dist_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_119": {
                "x": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.loss21",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_70": {
                "x": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "subtract_72": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_73": {
                "x": {
                    "value": "tf.subtract(self.slack, self.timg)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "subtract_74": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "negative_74": {
                "x": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "subtract_73": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "fgm.py": {
        "tensorflow": {
            "Variable_34": {
                "variable": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_35": {
                "variable": {
                    "value": "self.tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros((batch_size, num_labels))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_36": {
                "variable": {
                    "value": "self.eps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_39": {
                "variable": {
                    "value": "self.assign_timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_40": {
                "variable": {
                    "value": "self.assign_tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(batch_size, num_labels)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_41": {
                "variable": {
                    "value": "self.assign_eps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_47": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.tlab_new",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gradients_52": {
                "variable": {
                    "value": "(self.gradients,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "ys": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clip_by_value_67": {
                "variable": {
                    "value": "self.adv_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "t": {
                    "value": "tf.stop_gradient(self.timg + self.eps * self.signed_grad)",
                    "type": "Call",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "self.clip_min",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "self.clip_max",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sign_55": {
                "variable": {
                    "value": "self.signed_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_43": {
                "input_tensor": {
                    "value": "self.tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stop_gradient_67": {
                "input": {
                    "value": "self.timg + self.eps * self.signed_grad",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_58": {
                "input_tensor": {
                    "value": "tf.abs(self.gradients)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction_indices": {
                    "value": "reduc_ind",
                    "type": "Call",
                    "possible_values": [
                        [
                            "list(xrange(1, len(shape)))",
                            "Call"
                        ],
                        [
                            "list(xrange(1, len(shape)))",
                            "Call"
                        ]
                    ]
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_58": {
                "x": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_63": {
                "x": {
                    "value": "tf.reduce_sum(tf.square(self.gradients), reduction_indices=reduc_ind, keep_dims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_63": {
                "input_tensor": {
                    "value": "tf.square(self.gradients)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction_indices": {
                    "value": "reduc_ind",
                    "type": "Call",
                    "possible_values": [
                        [
                            "list(xrange(1, len(shape)))",
                            "Call"
                        ],
                        [
                            "list(xrange(1, len(shape)))",
                            "Call"
                        ]
                    ]
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "square_63": {
                "x": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "ifgm.py": {
        "tensorflow": {
            "Variable_35": {
                "variable": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(self.shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_36": {
                "variable": {
                    "value": "self.tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros((batch_size, num_labels))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_37": {
                "variable": {
                    "value": "self.eps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_40": {
                "variable": {
                    "value": "self.assign_timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_41": {
                "variable": {
                    "value": "self.assign_tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(batch_size, num_labels)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_43": {
                "variable": {
                    "value": "self.assign_eps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_49": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.tlab_new",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gradients_54": {
                "variable": {
                    "value": "(self.gradients,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "ys": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clip_by_value_69": {
                "variable": {
                    "value": "self.adv_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "t": {
                    "value": "tf.stop_gradient(self.timg + self.eps * self.signed_grad)",
                    "type": "Call",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "self.clip_min",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "self.clip_max",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sign_57": {
                "variable": {
                    "value": "self.signed_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_45": {
                "input_tensor": {
                    "value": "self.tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stop_gradient_69": {
                "input": {
                    "value": "self.timg + self.eps * self.signed_grad",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_60": {
                "input_tensor": {
                    "value": "tf.abs(self.gradients)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction_indices": {
                    "value": "reduc_ind",
                    "type": "Call",
                    "possible_values": [
                        [
                            "list(xrange(1, len(self.shape)))",
                            "Call"
                        ],
                        [
                            "list(xrange(1, len(self.shape)))",
                            "Call"
                        ],
                        [
                            "list(xrange(1, len(self.shape)))",
                            "Call"
                        ]
                    ]
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_60": {
                "x": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_65": {
                "x": {
                    "value": "tf.reduce_sum(tf.square(self.gradients), reduction_indices=reduc_ind, keep_dims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_65": {
                "input_tensor": {
                    "value": "tf.square(self.gradients)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction_indices": {
                    "value": "reduc_ind",
                    "type": "Call",
                    "possible_values": [
                        [
                            "list(xrange(1, len(self.shape)))",
                            "Call"
                        ],
                        [
                            "list(xrange(1, len(self.shape)))",
                            "Call"
                        ],
                        [
                            "list(xrange(1, len(self.shape)))",
                            "Call"
                        ]
                    ]
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "square_65": {
                "x": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "l1_attack.py": {
        "tensorflow": {
            "cast_45": {
                "variable": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_52": {
                "variable": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_53": {
                "variable": {
                    "value": "self.newimg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_54": {
                "variable": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_55": {
                "variable": {
                    "value": "self.tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros((batch_size, num_labels))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_56": {
                "variable": {
                    "value": "self.const",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(batch_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_59": {
                "variable": {
                    "value": "self.assign_timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_60": {
                "variable": {
                    "value": "self.assign_newimg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_61": {
                "variable": {
                    "value": "self.assign_slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_62": {
                "variable": {
                    "value": "self.assign_tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(batch_size, num_labels)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_63": {
                "variable": {
                    "value": "self.assign_const",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[batch_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Variable_65": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_66": {
                "variable": {
                    "value": "self.global_step_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "divide_70": {
                "variable": {
                    "value": "self.zt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.global_step_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.global_step_t + tf.cast(3, tf.float32)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cast_72": {
                "variable": {
                    "value": "cond1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.greater(tf.subtract(self.slack, self.timg), self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_73": {
                "variable": {
                    "value": "cond2",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.less_equal(tf.abs(tf.subtract(self.slack, self.timg)), self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_74": {
                "variable": {
                    "value": "cond3",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.less(tf.subtract(self.slack, self.timg), tf.negative(self.beta_t))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "minimum_76": {
                "variable": {
                    "value": "upper",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.subtract(self.slack, self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.cast(0.5, tf.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "maximum_77": {
                "variable": {
                    "value": "lower",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.add(self.slack, self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.cast(-0.5, tf.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "assign_81": {
                "variable": {
                    "value": "self.setter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ref": {
                    "value": "self.newimg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.assign_newimg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "assign_82": {
                "variable": {
                    "value": "self.setter_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ref": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.assign_slack",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_89": {
                "variable": {
                    "value": "self.l2dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(self.newimg - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_90": {
                "variable": {
                    "value": "self.l2dist_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(self.slack - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_91": {
                "variable": {
                    "value": "self.l1dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.abs(self.newimg - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_92": {
                "variable": {
                    "value": "self.l1dist_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.abs(self.slack - self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_97": {
                "variable": {
                    "value": "real",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.tlab * self.output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_98": {
                "variable": {
                    "value": "real_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.tlab * self.output_y",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_99": {
                "variable": {
                    "value": "other",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(1 - self.tlab) * self.output - self.tlab * 10000",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_100": {
                "variable": {
                    "value": "other_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(1 - self.tlab) * self.output_y - self.tlab * 10000",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_111": {
                "variable": {
                    "value": "self.loss21",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l1dist",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_112": {
                "variable": {
                    "value": "self.loss21_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l1dist_y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_113": {
                "variable": {
                    "value": "self.loss2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l2dist",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_114": {
                "variable": {
                    "value": "self.loss2_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l2dist_y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_115": {
                "variable": {
                    "value": "self.loss1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.const * loss1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_116": {
                "variable": {
                    "value": "self.loss1_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.const * loss1_y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "polynomial_decay_121": {
                "variable": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "global_step": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_steps": {
                    "value": "self.MAX_ITERATIONS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "end_learning_rate": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "power": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_123": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_125": {
                "variable": {
                    "value": "end_vars",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variables_initializer_134": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "[self.global_step] + [self.slack] + [self.newimg] + new_vars",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_103": {
                "variable": {
                    "value": "loss1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "other - real + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_104": {
                "variable": {
                    "value": "loss1_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "other_y - real_y + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_107": {
                "variable": {
                    "value": "loss1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "real - other + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_108": {
                "variable": {
                    "value": "loss1_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "real_y - other_y + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "greater_72": {
                "x": {
                    "value": "tf.subtract(self.slack, self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "less_equal_73": {
                "x": {
                    "value": "tf.abs(tf.subtract(self.slack, self.timg))",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "less_74": {
                "x": {
                    "value": "tf.subtract(self.slack, self.timg)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.negative(self.beta_t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "subtract_76": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_76": {
                "x": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "add_77": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_77": {
                "x": {
                    "value": "-0.5",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_79": {
                "x": {
                    "value": "cond2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.less_equal(tf.abs(tf.subtract(self.slack, self.timg)), self.beta_t), tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_80": {
                "x": {
                    "value": "self.zt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.assign_newimg - self.newimg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_89": {
                "x": {
                    "value": "self.newimg - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_90": {
                "x": {
                    "value": "self.slack - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_91": {
                "x": {
                    "value": "self.newimg - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_92": {
                "x": {
                    "value": "self.slack - self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "multiply_93": {
                "x": {
                    "value": "self.l1dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_94": {
                "x": {
                    "value": "self.l1dist_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_119": {
                "x": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.loss21",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_70": {
                "x": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "subtract_72": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_73": {
                "x": {
                    "value": "tf.subtract(self.slack, self.timg)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "subtract_74": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "negative_74": {
                "x": {
                    "value": "self.beta_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "subtract_73": {
                "x": {
                    "value": "self.slack",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "l2_attack.py": {
        "tensorflow": {
            "Variable_69": {
                "variable": {
                    "value": "modifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape, dtype=np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_72": {
                "variable": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_73": {
                "variable": {
                    "value": "self.tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros((batch_size, num_labels))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_74": {
                "variable": {
                    "value": "self.const",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(batch_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_77": {
                "variable": {
                    "value": "self.assign_timg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(batch_size, image_size, image_size, num_channels)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_78": {
                "variable": {
                    "value": "self.assign_tlab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(batch_size, num_labels)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_79": {
                "variable": {
                    "value": "self.assign_const",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[batch_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_88": {
                "variable": {
                    "value": "self.l2dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(self.newimg - tf.tanh(self.timg) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_91": {
                "variable": {
                    "value": "real",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.tlab * self.output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_92": {
                "variable": {
                    "value": "other",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(1 - self.tlab) * self.output - self.tlab * 10000",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_102": {
                "variable": {
                    "value": "self.loss2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.l2dist",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_103": {
                "variable": {
                    "value": "self.loss1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.const * loss1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "AdamOptimizer_108": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_110": {
                "variable": {
                    "value": "end_vars",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variables_initializer_119": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "[modifier] + new_vars",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_96": {
                "variable": {
                    "value": "loss1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "other - real + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_99": {
                "variable": {
                    "value": "loss1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "y": {
                    "value": "real - other + self.CONFIDENCE",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_82": {
                "x": {
                    "value": "modifier + self.timg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_88": {
                "x": {
                    "value": "self.newimg - tf.tanh(self.timg) / 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "global_variables_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tanh_88": {
                "x": {
                    "value": "self.timg",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "setup_cifar.py": {
        "tensorflow": {}
    },
    "setup_inception.py": {
        "tensorflow": {
            "FastGFile_125": {
                "variable": {
                    "value": "image_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "image",
                    "type": "Name",
                    "possible_values": [
                        [
                            "FLAGS.image_file if FLAGS.image_file else os.path.join(FLAGS.model_dir, 'cropped_panda.jpg')",
                            "IfExp"
                        ]
                    ]
                },
                "mode": {
                    "value": "rb",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GFile_84": {
                "variable": {
                    "value": "proto_as_ascii",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "label_lookup_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(FLAGS.model_dir, 'labels.txt')",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "GraphDef_106": {
                "variable": {
                    "value": "graph_def",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "import_graph_def_111": {
                "variable": {
                    "value": "_",
                    "type": "Variable",
                    "possible_values": []
                },
                "graph_def": {
                    "value": "graph_def",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.GraphDef()",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_140": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(299, 299, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "import_graph_def_141": {
                "variable": {
                    "value": "softmax_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "graph_def": {
                    "value": "sess.graph.as_graph_def()",
                    "type": "Call",
                    "possible_values": []
                },
                "input_map": {
                    "value": "{'DecodeJpeg:0': tf.reshape(img, (299, 299, 3))}",
                    "type": "Dict",
                    "possible_values": []
                },
                "return_elements": {
                    "value": "['softmax/logits:0']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_170": {
                "variable": {
                    "value": "self.img",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, 299, 299, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "import_graph_def_171": {
                "variable": {
                    "value": "self.softmax_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph_def": {
                    "value": "sess.graph.as_graph_def()",
                    "type": "Call",
                    "possible_values": []
                },
                "input_map": {
                    "value": "{'input:0': self.img}",
                    "type": "Dict",
                    "possible_values": []
                },
                "return_elements": {
                    "value": "[output_name]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DEFINE_string_311": {
                "name": {
                    "value": "model_dir",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "tmp/imagenet",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Path to classify_image_graph_def.pb, imagenet_synset_to_human_label_map.txt, and imagenet_2012_challenge_label_map_proto.pbtxt.",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_string_316": {
                "name": {
                    "value": "image_file",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Absolute path to image file.",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_318": {
                "name": {
                    "value": "num_top_predictions",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Display this many predictions.",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "run_320": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FastGFile_103": {
                "name": {
                    "value": "os.path.join(FLAGS.model_dir, 'frozen_inception_v3.pb')",
                    "type": "Call",
                    "possible_values": []
                },
                "mode": {
                    "value": "rb",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Exists_123": {
                "filename": {
                    "value": "image",
                    "type": "Name",
                    "possible_values": [
                        [
                            "FLAGS.image_file if FLAGS.image_file else os.path.join(FLAGS.model_dir, 'cropped_panda.jpg')",
                            "IfExp"
                        ]
                    ]
                }
            },
            "fatal_124": {
                "msg": {
                    "value": "File does not exist %s",
                    "type": "Constant",
                    "possible_values": []
                },
                "*args": {
                    "value": "image",
                    "type": "Name",
                    "possible_values": [
                        [
                            "FLAGS.image_file if FLAGS.image_file else os.path.join(FLAGS.model_dir, 'cropped_panda.jpg')",
                            "IfExp"
                        ]
                    ]
                }
            },
            "Session_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "import_graph_def_219": {
                "variable": {
                    "value": "softmax_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "graph_def": {
                    "value": "self.sess.graph.as_graph_def()",
                    "type": "Call",
                    "possible_values": []
                },
                "input_map": {
                    "value": "{'input:0': img, 'InceptionV3/Predictions/Shape:0': shape}",
                    "type": "Dict",
                    "possible_values": []
                },
                "return_elements": {
                    "value": "[output_name]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "import_graph_def_225": {
                "variable": {
                    "value": "softmax_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "graph_def": {
                    "value": "self.sess.graph.as_graph_def()",
                    "type": "Call",
                    "possible_values": []
                },
                "input_map": {
                    "value": "{'input:0': img}",
                    "type": "Dict",
                    "possible_values": []
                },
                "return_elements": {
                    "value": "[output_name]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Session_257": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Exists_79": {
                "filename": {
                    "value": "label_lookup_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(FLAGS.model_dir, 'labels.txt')",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "fatal_80": {
                "msg": {
                    "value": "File does not exist %s",
                    "type": "Constant",
                    "possible_values": []
                },
                "*args": {
                    "value": "label_lookup_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(FLAGS.model_dir, 'labels.txt')",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "reshape_143": {
                "tensor": {
                    "value": "img",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.uint8, (299, 299, 3))",
                            "Call"
                        ],
                        [
                            "scipy.misc.imread(f)",
                            "Call"
                        ],
                        [
                            "np.array(scipy.misc.imresize(img, (299, 299)), dtype=np.float32) / 255 - 0.5",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(299, 299, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "setup_mnist.py": {
        "tensorflow": {}
    },
    "test_attack.py": {
        "tensorflow": {
            "Session_108": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train_models.py": {
        "tensorflow": {
            "softmax_cross_entropy_with_logits_56": {
                "labels": {
                    "value": "correct",
                    "type": "Variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "predicted / train_temp",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Session_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_96": {
                "logits": {
                    "value": "predicted / train_temp",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "verify.py": {
        "tensorflow": {
            "placeholder_22": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, model.image_size, model.image_size, model.num_channels)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Session_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}