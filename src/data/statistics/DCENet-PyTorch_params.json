{
    "evaluate.py": {
        "torch": {
            "device_43": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataParallel_46": {
                "module": {
                    "value": "DCENet(config)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_65": {
                "f": {
                    "value": "os.path.join('checkpoints', args.resume_name)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "loader.py": {
        "torch": {
            "tensor_18": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.x[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_19": {
                "variable": {
                    "value": "x_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.x_occu[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "permute_19": {
                "variable": {
                    "value": "x_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_20": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.y[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_21": {
                "variable": {
                    "value": "y_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.y_occu[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "permute_21": {
                "variable": {
                    "value": "y_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_26": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.x[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_27": {
                "variable": {
                    "value": "x_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.x_occu[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "permute_27": {
                "variable": {
                    "value": "x_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_28": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.y[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_33": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.x[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_34": {
                "variable": {
                    "value": "x_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.x_occu[index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "permute_34": {
                "variable": {
                    "value": "x_occu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "loss.py": {
        "torch": {
            "sum_13": {
                "input": {
                    "value": "mu.pow(2) + log_var.exp() - log_var - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mse_loss_14": {
                "input": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "device_39": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_58": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config['lr']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(config_file)",
                            "Call"
                        ]
                    ]
                },
                "betas": {
                    "value": "(0.9, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-08",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_96": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TrajDataset(x=train_x, x_occu=train_occu, y=train_y, y_occu=train_y_occu, mode='train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "config['batch_size']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(config_file)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_99": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TrajDataset(x=val_x, x_occu=val_occu, y=val_y, y_occu=val_y_occu, mode='val')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "config['batch_size']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(config_file)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_182": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_52": {
                "module": {
                    "value": "DCENet(config)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_115": {
                "f": {
                    "value": "os.path.join('checkpoints', args.config.split('/')[-1].replace('.json', '.pth'))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_117": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models.py": {
        "torch": {
            "Conv1d_35": {
                "variable": {
                    "value": "self.traj_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "config['n_hidden'] // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.traj_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=config['n_hidden'] // 16, out_features=config['n_hidden'] // 8)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TransformerEncoderLayer_44": {
                "variable": {
                    "value": "self.traj_transformer_encoder_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "d_model": {
                    "value": "config['{}_encoder_dim'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "nhead": {
                    "value": "config['{}_encoder_head'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim_feedforward": {
                    "value": "config['{}_encoder_dim'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "TransformerEncoder_49": {
                "variable": {
                    "value": "self.traj_transformer_encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "encoder_layer": {
                    "value": "self.traj_transformer_encoder_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "config['{}_encoder_layers'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.traj_avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AdaptiveAvgPool1d(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.occu_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ZeroPad2d((0, 1, 0, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TransformerEncoderLayer_73": {
                "variable": {
                    "value": "self.occu_transformer_encoder_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "d_model": {
                    "value": "config['occu_encoder_{}_dim'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "nhead": {
                    "value": "config['occu_encoder_{}_head'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim_feedforward": {
                    "value": "config['occu_encoder_{}_dim'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "TransformerEncoder_78": {
                "variable": {
                    "value": "self.occu_transformer_encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "encoder_layer": {
                    "value": "self.occu_transformer_encoder_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "config['occu_encoder_{}_layers'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LSTM_82": {
                "variable": {
                    "value": "self.occu_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "config['occu_encoder_{}_dim'.format(x_or_y)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "config['hidden_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_88": {
                "variable": {
                    "value": "self.occu_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config['s_drop']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_91": {
                "variable": {
                    "value": "self.encode_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=config['{}_encoder_dim'.format(x_or_y)] + config['hidden_size'], out_features=config['encoder_dim'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "variable": {
                    "value": "h0",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, x.size(0), self.config['hidden_size'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_100": {
                "variable": {
                    "value": "c0",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, x.size(0), self.config['hidden_size'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_125": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, dmap)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_136": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=d_in, out_features=d_model)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_140": {
                "variable": {
                    "value": "pe",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "max_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5000",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "d_model",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "arange_141": {
                "variable": {
                    "value": "position",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "max_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5000",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_141": {
                "variable": {
                    "value": "position",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "exp_142": {
                "variable": {
                    "value": "div_term",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.arange(0, d_model, 2).float() * (-math.log(10000.0) / d_model)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sin_143": {
                "variable": {
                    "value": "pe[:, 0::2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "position * div_term",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cos_144": {
                "variable": {
                    "value": "pe[:, 1::2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "position * div_term",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_191": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Sequential_194": {
                "variable": {
                    "value": "self.xy_encoded_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=config['encoder_dim'] * 2, out_features=config['n_hidden'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_198": {
                "variable": {
                    "value": "self.xy_encoded_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=config['n_hidden'], out_features=config['n_hidden'] // 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_202": {
                "variable": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config['n_hidden'] // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config['z_dim']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_203": {
                "variable": {
                    "value": "self.log_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config['n_hidden'] // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config['z_dim']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_206": {
                "variable": {
                    "value": "self.z_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(config['z_dim'] + config['encoder_dim'], config['n_hidden'] // 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LSTM_210": {
                "variable": {
                    "value": "self.z_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "config['n_hidden'] // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "config['z_decoder_dim']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_211": {
                "variable": {
                    "value": "self.z_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config['z_drop']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Conv1d_213": {
                "variable": {
                    "value": "self.y_decoder_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "config['z_decoder_dim']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "config['z_decoder_dim']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_217": {
                "variable": {
                    "value": "concat_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "exp_223": {
                "variable": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5 * log_var",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randn_like_224": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.exp(0.5 * log_var)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_228": {
                "variable": {
                    "value": "concat_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[z, x]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_181": {
                "tensors": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.decoder(x_encoded_dense, y_encoded_dense, train=train)",
                            "Call"
                        ],
                        [
                            "torch.cat((traj, dmap), dim=1)",
                            "Call"
                        ],
                        [
                            "self.encode_fc(out)",
                            "Call"
                        ],
                        [
                            "self.module(*[x.reshape(bs * seq_len, *x.shape[2:]) for x in args], **kwargs)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "self.y_decoder(h).view(h.size(0), h.size(1), -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "self.tdim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_243": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(x.size(0), self.z_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "config['n_hidden'] // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config['n_hidden'] // 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool1d_54": {
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Flatten_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ZeroPad2d_60": {
                "padding": {
                    "value": "(0, 1, 0, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ZeroPad2d_63": {
                "padding": {
                    "value": "(0, 1, 0, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "MaxPool2d_64": {
                "kernel_size": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_65": {
                "p": {
                    "value": "config['o_drop']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Flatten_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_92": {
                "in_features": {
                    "value": "config['{}_encoder_dim'.format(x_or_y)] + config['hidden_size']",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config['encoder_dim']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_93": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_137": {
                "in_features": {
                    "value": "d_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "d_model",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_138": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unbind_177": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "x + self.pe[:x.size(0), :]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "self.tdim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_195": {
                "in_features": {
                    "value": "config['encoder_dim'] * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config['n_hidden']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_196": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_199": {
                "in_features": {
                    "value": "config['n_hidden']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config['n_hidden'] // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_200": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_207": {
                "in_features": {
                    "value": "config['z_dim'] + config['encoder_dim']",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config['n_hidden'] // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_208": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tanh_232": {
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.xy_encoded_fc1(concat_input)",
                            "Call"
                        ],
                        [
                            "self.xy_encoded_fc2(h)",
                            "Call"
                        ],
                        [
                            "self.z_fc(concat_input)",
                            "Call"
                        ],
                        [
                            "h.view(h.size(0), 1, -1).repeat(1, self.pred_seq, 1)",
                            "Call"
                        ],
                        [
                            "self.z_dropout(torch.tanh(h))",
                            "Call"
                        ],
                        [
                            "h.view(h.size(0), h.size(1), 1, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_142": {
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "d_model",
                    "type": "variable",
                    "possible_values": []
                },
                "step": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_191": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/utils.py": {
        "torch": {
            "tensor_246": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(traj, dtype=torch.float)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_247": {
                "variable": {
                    "value": "occu",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "occu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(occu, dtype=torch.float).permute(0, 1, 4, 2, 3)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "permute_247": {
                "variable": {
                    "value": "occu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_61": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(self.path, self.filename)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}