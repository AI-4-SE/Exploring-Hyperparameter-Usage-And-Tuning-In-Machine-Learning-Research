{
    "rlzoo/algorithms/ac/default.py": {
        "tensorflow": {
            "Adam_54": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "a_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_55": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "c_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_91": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "a_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_92": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "c_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_128": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "a_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_129": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "c_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_165": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "a_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_166": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "c_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_202": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "a_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_203": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "c_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_239": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "a_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_240": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "c_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_276": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "a_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Adam_277": {
                "variable": {
                    "value": "c_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "c_lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "name_scope_43": {
                "name": {
                    "value": "AC",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_80": {
                "name": {
                    "value": "AC",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_117": {
                "name": {
                    "value": "AC",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_154": {
                "name": {
                    "value": "AC",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_191": {
                "name": {
                    "value": "AC",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_228": {
                "name": {
                    "value": "AC",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_265": {
                "name": {
                    "value": "AC",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_44": {
                "name": {
                    "value": "Critic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_46": {
                "name": {
                    "value": "Actor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_81": {
                "name": {
                    "value": "Critic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_83": {
                "name": {
                    "value": "Actor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_118": {
                "name": {
                    "value": "Critic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_120": {
                "name": {
                    "value": "Actor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_155": {
                "name": {
                    "value": "Critic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_157": {
                "name": {
                    "value": "Actor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_192": {
                "name": {
                    "value": "Critic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_194": {
                "name": {
                    "value": "Actor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_229": {
                "name": {
                    "value": "Critic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_231": {
                "name": {
                    "value": "Actor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_266": {
                "name": {
                    "value": "Critic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_268": {
                "name": {
                    "value": "Actor",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "rlzoo/algorithms/dppo_clip_distributed/dppo_clip.py": {
        "tensorflow": {
            "reshape_79": {
                "variable": {
                    "value": "value",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "value",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self._get_value(np.array(state))",
                            "Call"
                        ],
                        [
                            "tf.reshape(value, value_shape[:-1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "value_shape[:-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "exp_209": {
                "variable": {
                    "value": "oldpi_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "oldpi_logp",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "exp_212": {
                "variable": {
                    "value": "pi_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "self.actor.policy_dist.logp(a)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_226": {
                "variable": {
                    "value": "closs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(advantage)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GradientTape_210": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_223": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_216": {
                "input_tensor": {
                    "value": "tf.minimum(surr, tf.clip_by_value(ratio, 1.0 - self.epsilon, 1.0 + self.epsilon) * adv)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "square_226": {
                "x": {
                    "value": "advantage",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dc_r - v",
                            "BinOp"
                        ]
                    ]
                }
            },
            "minimum_217": {
                "x": {
                    "value": "surr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "ratio * adv",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.clip_by_value(ratio, 1.0 - self.epsilon, 1.0 + self.epsilon) * adv",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_217": {
                "t": {
                    "value": "ratio",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pi_prob / (oldpi_prob + EPS)",
                            "BinOp"
                        ]
                    ]
                },
                "clip_value_min": {
                    "value": "1.0 - self.epsilon",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1.0 + self.epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "rlzoo/common/basic_nets.py": {
        "tensorflow": {
            "Orthogonal_9": {
                "gain": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Orthogonal_30": {
                "gain": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GlorotUniform_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GlorotUniform_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GlorotUniform_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GlorotUniform_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GlorotUniform_110": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GlorotUniform_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_137": {
                "name": {
                    "value": "CNN",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "rlzoo/common/distributions.py": {
        "tensorflow": {
            "expand_dims_14": {
                "variable": {
                    "value": "result",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "result",
                    "type": "Call",
                    "possible_values": [
                        [
                            "func(*args, **kwargs)",
                            "Call"
                        ],
                        [
                            "tf.expand_dims(result, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_78": {
                "variable": {
                    "value": "res",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self._logits - tf.math.log(-tf.math.log(u))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_83": {
                "variable": {
                    "value": "_probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "self._logits",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_94": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.array(x)",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(x, tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.one_hot(x, self._ndim, axis=-1)",
                            "Call"
                        ],
                        [
                            "(x - self.action_mean) / self.action_scale",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "one_hot_95": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.array(x)",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(x, tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.one_hot(x, self._ndim, axis=-1)",
                            "Call"
                        ],
                        [
                            "(x - self.action_mean) / self.action_scale",
                            "BinOp"
                        ]
                    ]
                },
                "depth": {
                    "value": "self._ndim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_106": {
                "variable": {
                    "value": "ea0",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "a0",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "self._logits - tf.reduce_max(self._logits, axis=-1, keepdims=True)",
                            "BinOp"
                        ],
                        [
                            "self._logits - tf.reduce_max(self._logits, axis=-1, keepdims=True)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "exp_107": {
                "variable": {
                    "value": "ea1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "a1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "logits - tf.reduce_max(logits, axis=-1, keepdims=True)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_108": {
                "variable": {
                    "value": "z0",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "ea0",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.exp(a0)",
                            "Call"
                        ],
                        [
                            "tf.exp(a0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_109": {
                "variable": {
                    "value": "z1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "ea1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.exp(a1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_117": {
                "variable": {
                    "value": "ea0",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "a0",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "self._logits - tf.reduce_max(self._logits, axis=-1, keepdims=True)",
                            "BinOp"
                        ],
                        [
                            "self._logits - tf.reduce_max(self._logits, axis=-1, keepdims=True)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_118": {
                "variable": {
                    "value": "z0",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "ea0",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.exp(a0)",
                            "Call"
                        ],
                        [
                            "tf.exp(a0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_152": {
                "variable": {
                    "value": "self.std",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.logstd",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_84": {
                "input": {
                    "value": "_probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.softmax(self._logits)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_96": {
                "labels": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.array(x)",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(x, tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.one_hot(x, self._ndim, axis=-1)",
                            "Call"
                        ],
                        [
                            "(x - self.action_mean) / self.action_scale",
                            "BinOp"
                        ]
                    ]
                },
                "logits": {
                    "value": "self._logits",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_111": {
                "input_tensor": {
                    "value": "p0 * (a0 - tf.math.log(z0) - a1 + tf.math.log(z1))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_sum_120": {
                "input_tensor": {
                    "value": "p0 * (tf.math.log(z0) - a0)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_sum_185": {
                "input_tensor": {
                    "value": "logstd - self.logstd + (tf.square(self.std) + tf.square(self.mean - mean)) / (2.0 * tf.square(tf.math.exp(logstd))) - 0.5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_sum_192": {
                "input_tensor": {
                    "value": "self.logstd + 0.5 * np.log(2.0 * np.pi * np.e)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_max_104": {
                "input_tensor": {
                    "value": "self._logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_105": {
                "input_tensor": {
                    "value": "logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_116": {
                "input_tensor": {
                    "value": "self._logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_176": {
                "input_tensor": {
                    "value": "self.logstd",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_78": {
                "x": {
                    "value": "u",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.array(np.random.uniform(0, 1, size=np.shape(self._logits)), dtype=np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_112": {
                "x": {
                    "value": "z0",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.reduce_sum(ea0, axis=-1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(ea0, axis=-1, keepdims=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_120": {
                "x": {
                    "value": "z0",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.reduce_sum(ea0, axis=-1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(ea0, axis=-1, keepdims=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_sum_175": {
                "input_tensor": {
                    "value": "tf.square((x - self.mean) / self.std)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "square_175": {
                "x": {
                    "value": "(x - self.mean) / self.std",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_187": {
                "x": {
                    "value": "self.mean - mean",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_188": {
                "x": {
                    "value": "tf.math.exp(logstd)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_188": {
                "x": {
                    "value": "logstd",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "rlzoo/common/utils.py": {
        "tensorflow": {
            "set_seed_145": {
                "seed": {
                    "value": "seed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "seed[0]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "rlzoo/distributed/dis_components.py": {
        "tensorflow": {}
    },
    "rlzoo/distributed/start_dis_role.py": {
        "tensorflow": {
            "Variable_65": {
                "initial_value": {
                    "value": "state",
                    "type": "Name",
                    "possible_values": [
                        [
                            "env.reset()",
                            "Call"
                        ],
                        [
                            "next_state",
                            "Name"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_37": {
                "initial_value": {
                    "value": "weight",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "rl_agent.all_weights",
                            "Attribute"
                        ],
                        [
                            "rl_agent.all_weights",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_69": {
                "initial_value": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(reward, done, next_state)",
                            "Tuple"
                        ],
                        [
                            "traj_data",
                            "Name"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_49": {
                "initial_value": {
                    "value": "weight",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "rl_agent.all_weights",
                            "Attribute"
                        ],
                        [
                            "rl_agent.all_weights",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_125": {
                "initial_value": {
                    "value": "action",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "action_dtype",
                    "type": "IfExp",
                    "possible_values": [
                        [
                            "tf.int32 if isinstance(env.action_space, spaces.Discrete) else tf.float32",
                            "IfExp"
                        ],
                        [
                            "tf.int32 if isinstance(rl_agent.actor.action_space, spaces.Discrete) else tf.float32",
                            "IfExp"
                        ]
                    ]
                }
            },
            "Variable_174": {
                "initial_value": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(reward, done, next_state)",
                            "Tuple"
                        ],
                        [
                            "traj_data",
                            "Name"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "rlzoo/distributed/training_components.py": {
        "tensorflow": {
            "Adam_46": {
                "learning_rate": {
                    "value": "actor_lr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0001",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    }
}