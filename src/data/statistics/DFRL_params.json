{
    "common/ppo_centralized.py": {
        "tensorflow": {
            "Graph_9": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_49": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_11": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_13": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_24": {
                "variable": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_25": {
                "variable": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.layer_1, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "placeholder_28": {
                "variable": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_output]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_squared_error_29": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_30": {
                "variable": {
                    "value": "self.grad_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_33": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_53": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_55": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_67": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "trainable_vars",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[item for sublist in [self.W, self.B] for item in sublist]",
                            "ListComp"
                        ]
                    ]
                },
                "max_to_keep": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_69": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.output, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_72": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_74": {
                "variable": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_75": {
                "variable": {
                    "value": "self.advantages_aggregated",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "placeholder_77": {
                "variable": {
                    "value": "self.chosen_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_78": {
                "variable": {
                    "value": "self.old_probabilities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_80": {
                "variable": {
                    "value": "self.new_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_81": {
                "variable": {
                    "value": "self.old_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.old_probabilities",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "minimum_85": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.multiply(self.ratio, self.advantages_aggregated)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.multiply(tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon), self.advantages_aggregated)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "placeholder_91": {
                "variable": {
                    "value": "self.W0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_92": {
                "variable": {
                    "value": "self.W1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_93": {
                "variable": {
                    "value": "self.W2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_95": {
                "variable": {
                    "value": "self.B0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_96": {
                "variable": {
                    "value": "self.B1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_97": {
                "variable": {
                    "value": "self.B2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_104": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_107": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_variable_15": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_features, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_16": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_17": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_20": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_21": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_22": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_26": {
                "a": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "get_variable_57": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_features, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_58": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_59": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_62": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_63": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_64": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_71": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "multiply_86": {
                "x": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages_aggregated",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_87": {
                "x": {
                    "value": "tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages_aggregated",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_88": {
                "x": {
                    "value": "self.new_responsible_outputs + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_89": {
                "input_tensor": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "matmul_24": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_25": {
                "a": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_69": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_70": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "clip_by_value_87": {
                "t": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "1 - epsilon",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1 + epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "common/ppo_centralizedggi.py": {
        "tensorflow": {
            "Graph_9": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_49": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_11": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_13": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_24": {
                "variable": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_25": {
                "variable": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.layer_1, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "placeholder_28": {
                "variable": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_output]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_squared_error_29": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_30": {
                "variable": {
                    "value": "self.grad_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_33": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_53": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_55": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_67": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "trainable_vars",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[item for sublist in [self.W, self.B] for item in sublist]",
                            "ListComp"
                        ]
                    ]
                },
                "max_to_keep": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_69": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.output, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_72": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_74": {
                "variable": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_75": {
                "variable": {
                    "value": "self.sorted_omega",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_76": {
                "variable": {
                    "value": "self.advantages_aggregated",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.multiply(self.advantages, self.sorted_omega)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "placeholder_78": {
                "variable": {
                    "value": "self.chosen_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_79": {
                "variable": {
                    "value": "self.old_probabilities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_81": {
                "variable": {
                    "value": "self.new_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_82": {
                "variable": {
                    "value": "self.old_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.old_probabilities",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "minimum_86": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.multiply(self.ratio, self.advantages_aggregated)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.multiply(tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon), self.advantages_aggregated)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "placeholder_92": {
                "variable": {
                    "value": "self.W0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_93": {
                "variable": {
                    "value": "self.W1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_94": {
                "variable": {
                    "value": "self.W2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_96": {
                "variable": {
                    "value": "self.B0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_97": {
                "variable": {
                    "value": "self.B1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_98": {
                "variable": {
                    "value": "self.B2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_105": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_108": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_variable_15": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_features, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_16": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_17": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_20": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_21": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_22": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_26": {
                "a": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "get_variable_57": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_features, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_58": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_59": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_62": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_63": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_64": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_71": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "multiply_76": {
                "x": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.sorted_omega",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_87": {
                "x": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages_aggregated",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_88": {
                "x": {
                    "value": "tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages_aggregated",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_89": {
                "x": {
                    "value": "self.new_responsible_outputs + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_90": {
                "input_tensor": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "matmul_24": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_25": {
                "a": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_69": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_70": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "clip_by_value_88": {
                "t": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "1 - epsilon",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1 + epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "common/ppo_centralizedggiag.py": {
        "tensorflow": {
            "Graph_9": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_49": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_11": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_13": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_24": {
                "variable": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_25": {
                "variable": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.layer_1, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "placeholder_28": {
                "variable": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_output]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_squared_error_29": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_30": {
                "variable": {
                    "value": "self.grad_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_33": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_53": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_55": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_67": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "trainable_vars",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[item for sublist in [self.W, self.B] for item in sublist]",
                            "ListComp"
                        ]
                    ]
                },
                "max_to_keep": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_69": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.output, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_72": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_76": {
                "variable": {
                    "value": "self.chosen_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_77": {
                "variable": {
                    "value": "self.old_probabilities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_79": {
                "variable": {
                    "value": "self.new_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_80": {
                "variable": {
                    "value": "self.old_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.old_probabilities",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "placeholder_90": {
                "variable": {
                    "value": "self.W0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_91": {
                "variable": {
                    "value": "self.W1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_92": {
                "variable": {
                    "value": "self.W2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_94": {
                "variable": {
                    "value": "self.B0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_95": {
                "variable": {
                    "value": "self.B1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_96": {
                "variable": {
                    "value": "self.B2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_103": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_106": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_variable_15": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_features, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_16": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_17": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_20": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_21": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_22": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_26": {
                "a": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "get_variable_57": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_features, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_58": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_59": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_62": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_63": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_64": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_actions ** num_agent]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_71": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "placeholder_74": {
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "minimum_84": {
                "x": {
                    "value": "tf.multiply(self.ratio, self.advantages[i])",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.multiply(tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon), self.advantages[i])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_24": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_25": {
                "a": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_69": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_70": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "multiply_85": {
                "x": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "multiply_86": {
                "x": {
                    "value": "tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "reduce_mean_88": {
                "input_tensor": {
                    "value": "self.loss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clip_by_value_86": {
                "t": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "1 - epsilon",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1 + epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_87": {
                "x": {
                    "value": "self.new_responsible_outputs + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "common/ppo_centralizedq.py": {
        "tensorflow": {
            "Graph_9": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_57": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_11": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_13": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_24": {
                "variable": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_25": {
                "variable": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.layer_1, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "placeholder_28": {
                "variable": {
                    "value": "self.target",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_29": {
                "variable": {
                    "value": "self.activated_action",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_output]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_31": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.activated_action",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_32": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "mean_squared_error_33": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.target",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_34": {
                "variable": {
                    "value": "self.grad_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.01",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_37": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_59": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_61": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_72": {
                "variable": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_73": {
                "variable": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.layer_1, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_75": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, self.num_output1D, self.num_output2D]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_77": {
                "variable": {
                    "value": "self.target",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_output2D]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_78": {
                "variable": {
                    "value": "self.activated_action",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_output1D, self.num_output2D]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_80": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.activated_action",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_81": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_squared_error_82": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.target",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_83": {
                "variable": {
                    "value": "self.grad_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.01",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_86": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_variable_15": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_features, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_16": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_17": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_20": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_21": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_22": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_26": {
                "a": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "get_variable_63": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_features, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_64": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_65": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.num_output1D * self.num_output2D]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_68": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_69": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_70": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_output1D * self.num_output2D]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_74": {
                "a": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_24": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_25": {
                "a": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_72": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_73": {
                "a": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "common/ppo_independant.py": {
        "tensorflow": {
            "Graph_8": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_48": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_138": {
                "variable": {
                    "value": "self.tf_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_10": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_12": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_23": {
                "variable": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_24": {
                "variable": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.layer_1, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_25": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.matmul(self.layer_2, self.W[2]) + self.B[2]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_27": {
                "variable": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_squared_error_28": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.rollout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_29": {
                "variable": {
                    "value": "self.grad_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_32": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_51": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_53": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_65": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "trainable_vars",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[item for sublist in [self.W, self.B] for item in sublist]",
                            "ListComp"
                        ],
                        [
                            "[item for sublist in [self.W, self.B] for item in sublist]",
                            "ListComp"
                        ]
                    ]
                },
                "max_to_keep": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_67": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_68": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.output, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_69": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "tf.matmul(self.output, self.W[2]) + self.B[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "placeholder_71": {
                "variable": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_73": {
                "variable": {
                    "value": "self.chosen_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_74": {
                "variable": {
                    "value": "self.old_probabilities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_76": {
                "variable": {
                    "value": "self.new_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_77": {
                "variable": {
                    "value": "self.old_responsible_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.chosen_actions * self.old_probabilities",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "placeholder_89": {
                "variable": {
                    "value": "self.W0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_90": {
                "variable": {
                    "value": "self.W1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_91": {
                "variable": {
                    "value": "self.W2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_93": {
                "variable": {
                    "value": "self.B0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_94": {
                "variable": {
                    "value": "self.B1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_95": {
                "variable": {
                    "value": "self.B2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_102": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_105": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_143": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_145": {
                "variable": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_157": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "trainable_vars",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[item for sublist in [self.W, self.B] for item in sublist]",
                            "ListComp"
                        ],
                        [
                            "[item for sublist in [self.W, self.B] for item in sublist]",
                            "ListComp"
                        ]
                    ]
                },
                "max_to_keep": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_164": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(self.output, self.W[2]) + self.B[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "placeholder_170": {
                "variable": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_172": {
                "variable": {
                    "value": "self.chosen_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_actions]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_173": {
                "variable": {
                    "value": "self.OLDNEGLOGPAC",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_178": {
                "variable": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.OLDNEGLOGPAC - self.old_responsible_outputs",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_180": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.minimum(tf.multiply(self.ratio, self.advantages), tf.multiply(tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon), self.advantages))",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_188": {
                "variable": {
                    "value": "self.W0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_189": {
                "variable": {
                    "value": "self.W1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_190": {
                "variable": {
                    "value": "self.W2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_192": {
                "variable": {
                    "value": "self.B0_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_193": {
                "variable": {
                    "value": "self.B1_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_194": {
                "variable": {
                    "value": "self.B2_grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_201": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ],
                        [
                            "0.0009",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_204": {
                "variable": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tanh_159": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_160": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(self.output, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_162": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.observations, self.W[0]) + self.B[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_163": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(self.output, self.W[1]) + self.B[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_variable_14": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.num_features, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_15": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_16": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_19": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_20": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_21": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_55": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_features, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_56": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_57": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, num_actions]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_60": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_61": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_62": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_actions]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_81": {
                "tensor": {
                    "value": "tf.minimum(tf.multiply(self.ratio, self.advantages), tf.multiply(tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon), self.advantages))",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_87": {
                "input_tensor": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_147": {
                "name": {
                    "value": "W1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_features, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_148": {
                "name": {
                    "value": "W2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_149": {
                "name": {
                    "value": "W3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size, num_actions]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_152": {
                "name": {
                    "value": "B1",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_153": {
                "name": {
                    "value": "B2",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[layer_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_154": {
                "name": {
                    "value": "B3",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_actions]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_168": {
                "x": {
                    "value": "self.std",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_175": {
                "x": {
                    "value": "self.std",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "minimum_181": {
                "x": {
                    "value": "tf.multiply(self.ratio, self.advantages)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.multiply(tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon), self.advantages)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_186": {
                "input_tensor": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_23": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_24": {
                "a": {
                    "value": "self.layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_25": {
                "a": {
                    "value": "self.layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_67": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_68": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_69": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "minimum_82": {
                "x": {
                    "value": "tf.multiply(self.ratio, self.advantages)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.multiply(tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon), self.advantages)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_86": {
                "x": {
                    "value": "self.new_responsible_outputs + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "matmul_164": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "multiply_182": {
                "x": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_183": {
                "x": {
                    "value": "tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_83": {
                "x": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_84": {
                "x": {
                    "value": "tf.clip_by_value(self.ratio, 1 - epsilon, 1 + epsilon)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.advantages",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_159": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_160": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_162": {
                "a": {
                    "value": "self.observations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_163": {
                "a": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.W[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "shape_167": {
                "input": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_168": {
                "x": {
                    "value": "(self.sampling - self.mean) / self.std",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_175": {
                "input_tensor": {
                    "value": "tf.square((self.chosen_actions - self.mean) / self.std)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "clip_by_value_183": {
                "t": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "1 - epsilon",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1 + epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_84": {
                "t": {
                    "value": "self.ratio",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "1 - epsilon",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1 + epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_175": {
                "x": {
                    "value": "(self.chosen_actions - self.mean) / self.std",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "common/utils.py": {
        "tensorflow": {
            "ConfigProto_167": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "intra_op_parallelism_threads": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "inter_op_parallelism_threads": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "device_count": {
                    "value": "{'CPU': 1}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "Session_171": {
                "variable": {
                    "value": "session",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "configparser.ConfigParser()",
                            "Call"
                        ],
                        [
                            "tf.ConfigProto(intra_op_parallelism_threads=1, inter_op_parallelism_threads=1, allow_soft_placement=True, device_count={'CPU': 1})",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}