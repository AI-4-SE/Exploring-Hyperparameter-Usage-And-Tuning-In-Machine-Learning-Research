{
    "client_manager.py": {
        "sklearn": {},
        "torch": {
            "DataLoader_76": {
                "variable": {
                    "value": "self.train_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DatasetSplit(train_set, train_idxs)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_77": {
                "variable": {
                    "value": "self.val_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DatasetSplit(train_set, val_idxs)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.args.batch_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataLoader_78": {
                "variable": {
                    "value": "self.test_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.args.batch_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "data_manager.py": {
        "torch": {
            "ConcatDataset_53": {
                "variable": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": []
                },
                "datasets": {
                    "value": "[train_set, train_set_non_rotated]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ConcatDataset_62": {
                "variable": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": []
                },
                "datasets": {
                    "value": "[test_set, test_set_non_rotated]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {}
    },
    "models.py": {
        "torch": {
            "cross_entropy_12": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self(images)",
                            "Call"
                        ],
                        [
                            "self(images)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_25": {
                "variable": {
                    "value": "epoch_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "batch_losses",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[x['val_loss'] for x in outputs]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "mean_25": {
                "variable": {
                    "value": "epoch_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_27": {
                "variable": {
                    "value": "epoch_acc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "batch_accs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[x['val_acc'] for x in outputs]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "mean_27": {
                "variable": {
                    "value": "epoch_acc",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_35": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_46": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_55": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_58": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cross_entropy_19": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self(images)",
                            "Call"
                        ],
                        [
                            "self(images)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "no_grad_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_42": {
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_43": {
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_44": {
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_62": {
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_63": {
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_64": {
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "train_functions.py": {
        "torch": {
            "Adam_256": {
                "variable": {
                    "value": "client.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "client.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "train_utils.py": {
        "torch": {
            "max_15": {
                "variable": {
                    "value": "(_, preds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[model.validation_step(batch) for batch in data_loader]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "weighted_average",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.shape[1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "x.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_16": {
                "data": {
                    "value": "torch.sum(preds == labels).item() / len(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_644": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_351": {
                "f": {
                    "value": "f'data/output/{start_date}/checkpoints/checkpoint{args.pid}/{plot_title}/client_{c}.tar'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "load_394": {
                "f": {
                    "value": "f'data/output/{start_date}/checkpoints/checkpoint{args.pid}/{plot_title}/client_{c}.tar'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "save_440": {
                "obj": {
                    "value": "{'communication_round': None, 'stopped_early': False, 'model_state_dict': client.model.state_dict(), 'val_acc': histories[c]['val_accs'][-1]}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "f'data/output/{start_date}/checkpoints/checkpoint{args.pid}/{plot_title}/client_{c}.tar'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "Adam_556": {
                "variable": {
                    "value": "client.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "client.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_16": {
                "input": {
                    "value": "preds == labels",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "stack_64": {
                "variable": {
                    "value": "model_dict[k]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[models[i].state_dict()[k].float() for i in range(len(models))]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_64": {
                "variable": {
                    "value": "model_dict[k]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_369": {
                "obj": {
                    "value": "{'communication_round': comround, 'stopped_early': False, 'model_state_dict': client.model.state_dict(), 'val_acc': current_accuracy}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "f'data/output/{start_date}/checkpoints/checkpoint{args.pid}/{plot_title}/client_{c}.tar'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "Adam_577": {
                "variable": {
                    "value": "client.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "client.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_417": {
                "obj": {
                    "value": "checkpoints[c]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "f": {
                    "value": "f'data/output/{start_date}/checkpoints/checkpoint{args.pid}/{plot_title}/client_{c}.tar'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "Adam_599": {
                "variable": {
                    "value": "other_client.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "other_client.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_56": {
                "tensors": {
                    "value": "[models[i].state_dict()[k].float() for i in range(len(models))]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}