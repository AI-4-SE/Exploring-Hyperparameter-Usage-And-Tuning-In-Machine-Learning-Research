{
    "classifier/dataset.py": {
        "torch": {}
    },
    "classifier/dataset_leak.py": {
        "torch": {}
    },
    "classifier/main.py": {
        "torch": {
            "DataLoader_50": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "dataset(transform=transform_train, test=False)",
                            "Call"
                        ],
                        [
                            "dataset_leak(transform=transform_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_52": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dataset(transform=transform_test, test=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_55": {
                "variable": {
                    "value": "test_true_cifar_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset_true_cifar",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dataset(transform=transform_test, test=True, true_cifar=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_91": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_92": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "Constant",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MultiStepLR_93": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "optim.SGD(net.parameters(), lr=args.lr, momentum=0.9, weight_decay=0.0005)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "milestones_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[150, 250]",
                            "List"
                        ]
                    ]
                },
                "gamma": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_86": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "./checkpoint/ckpt.pth",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_159": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/densenet.py": {
        "torch": {
            "randn_103": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_12": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_planes + self.growth_rate",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_13": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_planes + self.growth_rate",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "4 * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_14": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "4 * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "4 * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "growth_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_20": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[out, x]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_27": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_planes + self.growth_rate",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_28": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_planes + self.growth_rate",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Call",
                    "possible_values": [
                        [
                            "int(math.floor(num_planes * reduction))",
                            "Call"
                        ],
                        [
                            "int(math.floor(num_planes * reduction))",
                            "Call"
                        ],
                        [
                            "int(math.floor(num_planes * reduction))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_32": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv1(F.relu(self.bn1(x)))",
                            "Call"
                        ],
                        [
                            "self.conv2(F.relu(self.bn2(out)))",
                            "Call"
                        ],
                        [
                            "torch.cat([out, x], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(F.relu(self.bn(x)))",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 2)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.trans1(self.dense1(out))",
                            "Call"
                        ],
                        [
                            "self.trans2(self.dense2(out))",
                            "Call"
                        ],
                        [
                            "self.trans3(self.dense3(out))",
                            "Call"
                        ],
                        [
                            "self.dense4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(F.relu(self.bn(out)), 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2 * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_planes + nblocks[3] * growth_rate",
                            "BinOp"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2 * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_planes + nblocks[3] * growth_rate",
                            "BinOp"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2 * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_planes + nblocks[3] * growth_rate",
                            "BinOp"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ],
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "avg_pool2d_81": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.relu(self.bn(out))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_18": {
                "input": {
                    "value": "self.bn1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_19": {
                "input": {
                    "value": "self.bn2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_31": {
                "input": {
                    "value": "self.bn(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "input": {
                    "value": "self.bn(out)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/dpn.py": {
        "torch": {
            "randn_94": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "last_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_14": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes + dense_depth",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes + dense_depth",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_20": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_28": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_29": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_33": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x[:, :d, :, :] + out[:, :d, :, :], x[:, d:, :, :], out[:, d:, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_34": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "torch.cat([x[:, :d, :, :] + out[:, :d, :, :], x[:, d:, :, :], out[:, d:, :, :]], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "out_planes[3] + (num_blocks[3] + 1) * dense_depth[3]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_62": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_67": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "torch.cat([x[:, :d, :, :] + out[:, :d, :, :], x[:, d:, :, :], out[:, d:, :, :]], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(last_planes, out_planes + dense_depth, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "last_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes + dense_depth",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_24": {
                "num_features": {
                    "value": "out_planes + dense_depth",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/efficientnet.py": {
        "torch": {
            "randn_94": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_23": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_24": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_28": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_41": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_42": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_46": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "out * w + shortcut",
                            "BinOp"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layers(out)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "out.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(w)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_59": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_61": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "cfg[-1][1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_73": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_30": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, out_planes, kernel_size=1, stride=1, padding=0, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/googlenet.py": {
        "torch": {
            "randn_103": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_11": {
                "variable": {
                    "value": "self.b1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, n1x1, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self.b2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, n3x3red, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_28": {
                "variable": {
                    "value": "self.b3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, n5x5red, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_41": {
                "variable": {
                    "value": "self.b4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.MaxPool2d(3, stride=1, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.pre_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 192, kernel_size=3, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_68": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_79": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_80": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_53": {
                "tensors": {
                    "value": "[y1, y2, y3, y4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_12": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n1x1",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_13": {
                "num_features": {
                    "value": "n1x1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_14": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n3x3red",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "num_features": {
                    "value": "n3x3red",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "n3x3red",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n3x3",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_23": {
                "num_features": {
                    "value": "n3x3",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n5x5red",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "num_features": {
                    "value": "n5x5red",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "in_channels": {
                    "value": "n5x5red",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n5x5",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "num_features": {
                    "value": "n5x5",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "n5x5",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n5x5",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_36": {
                "num_features": {
                    "value": "n5x5",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_37": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_42": {
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "pool_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_44": {
                "num_features": {
                    "value": "pool_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_60": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "192",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_61": {
                "num_features": {
                    "value": "192",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_62": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/lenet.py": {
        "torch": {
            "Conv2d_8": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_9": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_10": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "16 * 5 * 5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "120",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_11": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "120",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "84",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_12": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "84",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_15": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_16": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(out, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(out, 2)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(out))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(out))",
                            "Call"
                        ],
                        [
                            "self.fc3(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_17": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_18": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(out, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(out, 2)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(out))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(out))",
                            "Call"
                        ],
                        [
                            "self.fc3(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_20": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_21": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/linear_classifier.py": {
        "torch": {
            "Linear_7": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32 * 32 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/mobilenet.py": {
        "torch": {
            "randn_57": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 if isinstance(x, int) else x[1]",
                            "IfExp"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x if isinstance(x, int) else x[0]",
                            "IfExp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x if isinstance(x, int) else x[0]",
                            "IfExp"
                        ]
                    ]
                }
            },
            "relu_21": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_22": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_47": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_49": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layers(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 2)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_44": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/mobilenetv2.py": {
        "torch": {
            "randn_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_19": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_20": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_21": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_22": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "expansion * in_planes",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_23": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_33": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_34": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_54": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "320",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1280",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_57": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "1280",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_58": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1280",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_70": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_72": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_74": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x) if self.stride == 1 else out",
                            "IfExp"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layers(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_27": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, out_planes, kernel_size=1, stride=1, padding=0, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/pnasnet.py": {
        "torch": {
            "randn_121": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(kernel_size - 1) // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "max_pool2d_35": {
                "variable": {
                    "value": "y2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.randn(1, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "2 * out_planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_54": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "max_pool2d_61": {
                "variable": {
                    "value": "y3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.randn(1, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "b1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y1 + y2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_67": {
                "variable": {
                    "value": "b2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y3 + y4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_68": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[b1, b2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_77": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_78": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_101": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_107": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "self.layer5(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 8)",
                            "Call"
                        ],
                        [
                            "self.linear(out.view(out.size(0), -1))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "relu_38": {
                "input": {
                    "value": "y1 + y2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_51": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "relu_69": {
                "input": {
                    "value": "self.bn2(self.conv2(y))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_93": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/preact_resnet.py": {
        "torch": {
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_29": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_43": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_56": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_70": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_75": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "avg_pool2d_91": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(out)",
                            "Call"
                        ],
                        [
                            "self.conv2(F.relu(self.bn2(out)))",
                            "Call"
                        ],
                        [
                            "out + shortcut",
                            "BinOp"
                        ],
                        [
                            "F.relu(self.bn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(out)",
                            "Call"
                        ],
                        [
                            "self.conv2(F.relu(self.bn2(out)))",
                            "Call"
                        ],
                        [
                            "self.conv3(F.relu(self.bn3(out)))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_51": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_83": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_115": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_32": {
                "input": {
                    "value": "self.bn2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_59": {
                "input": {
                    "value": "self.bn2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_60": {
                "input": {
                    "value": "self.bn3(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_52": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/resnet.py": {
        "torch": {
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_22": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_32": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_35": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_49": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_51": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_59": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_60": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_63": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_72": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_73": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_78": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_89": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_94": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_26": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_86": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_118": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_55": {
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/resnext.py": {
        "torch": {
            "randn_91": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "group_width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * bottleneck_width",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "group_width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * bottleneck_width",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "group_width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * bottleneck_width",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "group_width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * bottleneck_width",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "cardinality",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "group_width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * bottleneck_width",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "group_width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * bottleneck_width",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "self.expansion * group_width",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_22": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.expansion * group_width",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_32": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_33": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_36": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 8)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_48": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_53": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "cardinality * bottleneck_width * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_66": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_71": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 8)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_26": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * group_width, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * group_width",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "num_features": {
                    "value": "self.expansion * group_width",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/senet.py": {
        "torch": {
            "Conv2d_13": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_14": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_30": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_34": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "out + shortcut",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(out)",
                            "Call"
                        ],
                        [
                            "self.conv2(F.relu(self.bn2(out)))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "out.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_35": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(w)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_36": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(w)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_41": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "out + shortcut",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(out)",
                            "Call"
                        ],
                        [
                            "self.conv2(F.relu(self.bn2(out)))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "BatchNorm2d_48": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_60": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_63": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_69": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "out + shortcut",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(out)",
                            "Call"
                        ],
                        [
                            "self.conv2(F.relu(self.bn2(out)))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "out.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(w)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_71": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(w)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_84": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_85": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_101": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_106": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "out + shortcut",
                            "BinOp"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(out)",
                            "Call"
                        ],
                        [
                            "self.conv2(F.relu(self.bn2(out)))",
                            "Call"
                        ],
                        [
                            "out * w",
                            "BinOp"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_20": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_54": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_98": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_118": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_66": {
                "input": {
                    "value": "self.bn2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_22": {
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_55": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/shufflenet.py": {
        "torch": {
            "randn_105": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_planes / 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "g",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.groups",
                            "Attribute"
                        ],
                        [
                            "1 if in_planes == 24 else groups",
                            "IfExp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_planes / 4",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_planes / 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_planes / 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2 if i == 0 else 1",
                            "IfExp"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_planes / 4",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_planes / 4",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_planes / 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cfg['out_planes']",
                            "Subscript"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "groups",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cfg['groups']",
                            "Subscript"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_35": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cfg['out_planes']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_37": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_42": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_44": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_59": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "out_planes[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_76": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_80": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.shuffle1(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.relu(torch.cat([out, res], 1)) if self.stride == 2 else F.relu(out + res)",
                            "IfExp"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AvgPool2d(3, stride=2, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_47": {
                "input": {
                    "value": "out + res",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "AvgPool2d_39": {
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_47": {
                "tensors": {
                    "value": "[out, res]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/shufflenetv2.py": {
        "torch": {
            "randn_157": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_39": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_42": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_43": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_50": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_52": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.conv3(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_53": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x1, out]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_66": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_68": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_70": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(in_channels * split_ratio)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_72": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_73": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_75": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_76": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_78": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out_channels // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "relu_85": {
                "variable": {
                    "value": "out1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_87": {
                "variable": {
                    "value": "out2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.conv3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_89": {
                "variable": {
                    "value": "out2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.conv5(out2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_91": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[out1, out2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_102": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_104": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_109": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_111": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_channels[3]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "out_channels[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_122": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_127": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_128": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(self.conv1(x2)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.conv3(out)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x1, out], 1)",
                            "Call"
                        ],
                        [
                            "self.shuffle(out)",
                            "Call"
                        ],
                        [
                            "torch.cat([out1, out2], 1)",
                            "Call"
                        ],
                        [
                            "self.shuffle(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_119": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "classifier/models/vgg.py": {
        "torch": {
            "randn_43": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_38": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_37": {
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_31": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "x",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.randn(2, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_34": {
                "num_features": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.randn(2, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "classifier/utils.py": {
        "torch": {
            "normal_40": {
                "mean": {
                    "value": "m.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "std": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "dataset.py": {
        "torch": {}
    },
    "deepleakage/dataset.py": {
        "torch": {}
    },
    "deepleakage/main.py": {
        "torch": {
            "DataLoader_39": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dataset(transform=transform, test=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_41": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dataset(transform=transform, test=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_51": {
                "variable": {
                    "value": "dy_dx",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "y",
                    "type": "Call",
                    "possible_values": [
                        [
                            "criterion(pred, gt_onehot_label)",
                            "Call"
                        ],
                        [
                            "criterion(pred, gt_onehot_label)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "grad_98": {
                "variable": {
                    "value": "dy_dx",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "y",
                    "type": "Call",
                    "possible_values": [
                        [
                            "criterion(pred, gt_onehot_label)",
                            "Call"
                        ],
                        [
                            "criterion(pred, gt_onehot_label)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randn_56": {
                "variable": {
                    "value": "dummy_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "gt_data.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randn_57": {
                "variable": {
                    "value": "dummy_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "gt_onehot_label.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LBFGS_60": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[dummy_data, dummy_label]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "randn_103": {
                "variable": {
                    "value": "dummy_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "gt_data.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randn_104": {
                "variable": {
                    "value": "dummy_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "gt_onehot_label.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LBFGS_107": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[dummy_data, dummy_label]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "softmax_68": {
                "variable": {
                    "value": "dummy_onehot_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dummy_label",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ],
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "grad_70": {
                "variable": {
                    "value": "dummy_dy_dx",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "dummy_loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "criterion(dummy_pred, dummy_onehot_label)",
                            "Call"
                        ],
                        [
                            "criterion(dummy_pred, dummy_onehot_label)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_115": {
                "variable": {
                    "value": "dummy_onehot_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dummy_label",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ],
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "grad_117": {
                "variable": {
                    "value": "dummy_dy_dx",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "dummy_loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "criterion(dummy_pred, dummy_onehot_label)",
                            "Call"
                        ],
                        [
                            "criterion(dummy_pred, dummy_onehot_label)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_85": {
                "variable": {
                    "value": "best_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dummy_label",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ],
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_132": {
                "variable": {
                    "value": "best_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dummy_label",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ],
                        [
                            "torch.randn(gt_onehot_label.size()).to(device).requires_grad_(True)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "deepleakage/models/vision.py": {
        "torch": {
            "Sequential_19": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 12, kernel_size=5, padding=5 // 2, stride=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_27": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(768, 10)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_64": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_66": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_76": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_79": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.body(x)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_88": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_89": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_90": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_91": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_92": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_93": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_103": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_104": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_107": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.body(x)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_117": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_122": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sigmoid_133": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool2d_138": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.body(x)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "out + self.shortcut(x)",
                            "BinOp"
                        ],
                        [
                            "F.sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.bn3(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(out)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.layer1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ],
                        [
                            "self.layer4(out)",
                            "Call"
                        ],
                        [
                            "F.avg_pool2d(out, 4)",
                            "Call"
                        ],
                        [
                            "out.view(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.linear(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_97": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_planes, self.expansion * planes, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_130": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "5 // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "5 // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "5 // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "768",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_72": {
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "strides",
                            "Name"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_99": {
                "num_features": {
                    "value": "self.expansion * planes",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "deepleakage/utils.py": {
        "torch": {
            "unsqueeze_5": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.unsqueeze(target, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_6": {
                "variable": {
                    "value": "onehot_target",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "target.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "device": {
                    "value": "target.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_11": {
                "input": {
                    "value": "torch.sum(-target * F.log_softmax(pred, dim=-1), 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_11": {
                "input": {
                    "value": "-target * F.log_softmax(pred, dim=-1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_softmax_11": {
                "input": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/glow/act_norm.py": {
        "torch": {
            "Parameter_19": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1, num_features, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_20": {
                "variable": {
                    "value": "self.logs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1, num_features, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_18": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_19": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "num_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_20": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "num_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/glow/coupling.py": {
        "torch": {
            "Parameter_23": {
                "variable": {
                    "value": "self.scale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(in_channels, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_45": {
                "variable": {
                    "value": "scale",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "scale + 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_56": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z1, z2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "variable": {
                    "value": "self.in_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "mid_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "variable": {
                    "value": "self.mid_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "mid_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_85": {
                "variable": {
                    "value": "self.out_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((z1, z2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.in_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.in_conv(x)",
                            "Call"
                        ],
                        [
                            "self.mid_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.mid_conv(x)",
                            "Call"
                        ],
                        [
                            "self.out_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.out_conv(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_99": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((z1, z2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.in_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.in_conv(x)",
                            "Call"
                        ],
                        [
                            "self.mid_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.mid_conv(x)",
                            "Call"
                        ],
                        [
                            "self.out_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.out_conv(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_103": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((z1, z2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.in_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.in_conv(x)",
                            "Call"
                        ],
                        [
                            "self.mid_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.mid_conv(x)",
                            "Call"
                        ],
                        [
                            "self.out_norm(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.out_conv(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_23": {
                "*size": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_91": {
                "data": {
                    "value": "torch.zeros(out_channels, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_107": {
                "input": {
                    "value": "self.logs * self.logscale_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_50": {
                "input": {
                    "value": "scale",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sigmoid(scale + 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "flatten_50": {
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_50": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_54": {
                "input": {
                    "value": "scale",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sigmoid(scale + 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "flatten_54": {
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_54": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_91": {
                "*size": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/glow/glow.py": {
        "torch": {
            "zeros_like_80": {
                "variable": {
                    "value": "logdet",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x[:, 0, 0, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ModuleList_95": {
                "variable": {
                    "value": "self.steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[_FlowStep(in_channels=in_channels, mid_channels=mid_channels) for _ in range(num_steps)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "zeros_37": {
                "variable": {
                    "value": "sldj",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_115": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, x_split)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_29": {
                "data": {
                    "value": "[0.9]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softplus_72": {
                "input": {
                    "value": "(1.0 - self.bounds).log() - self.bounds.log()",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "normal_78": {
                "mean": {
                    "value": "torch.zeros_like(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "std": {
                    "value": "torch.ones_like(x) * (1.0 / 256.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "rand_like_65": {
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "x.view(b, c // 4, 2, 2, h, w)",
                            "Call"
                        ],
                        [
                            "x.permute(0, 1, 4, 2, 5, 3).contiguous()",
                            "Call"
                        ],
                        [
                            "x.view(b, c // 4, h * 2, w * 2)",
                            "Call"
                        ],
                        [
                            "x.view(b, c, h // 2, 2, w // 2, 2)",
                            "Call"
                        ],
                        [
                            "x.permute(0, 1, 3, 5, 2, 4).contiguous()",
                            "Call"
                        ],
                        [
                            "x.view(b, c * 2 * 2, h // 2, w // 2)",
                            "Call"
                        ],
                        [
                            "squeeze(x)",
                            "Call"
                        ],
                        [
                            "squeeze(x, reverse=True)",
                            "Call"
                        ],
                        [
                            "squeeze(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, x_split), dim=1)",
                            "Call"
                        ],
                        [
                            "squeeze(x, reverse=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_71": {
                "input": {
                    "value": "-y",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_78": {
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "x.view(b, c // 4, 2, 2, h, w)",
                            "Call"
                        ],
                        [
                            "x.permute(0, 1, 4, 2, 5, 3).contiguous()",
                            "Call"
                        ],
                        [
                            "x.view(b, c // 4, h * 2, w * 2)",
                            "Call"
                        ],
                        [
                            "x.view(b, c, h // 2, 2, w // 2, 2)",
                            "Call"
                        ],
                        [
                            "x.permute(0, 1, 3, 5, 2, 4).contiguous()",
                            "Call"
                        ],
                        [
                            "x.view(b, c * 2 * 2, h // 2, w // 2)",
                            "Call"
                        ],
                        [
                            "squeeze(x)",
                            "Call"
                        ],
                        [
                            "squeeze(x, reverse=True)",
                            "Call"
                        ],
                        [
                            "squeeze(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, x_split), dim=1)",
                            "Call"
                        ],
                        [
                            "squeeze(x, reverse=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_79": {
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "x.view(b, c // 4, 2, 2, h, w)",
                            "Call"
                        ],
                        [
                            "x.permute(0, 1, 4, 2, 5, 3).contiguous()",
                            "Call"
                        ],
                        [
                            "x.view(b, c // 4, h * 2, w * 2)",
                            "Call"
                        ],
                        [
                            "x.view(b, c, h // 2, 2, w // 2, 2)",
                            "Call"
                        ],
                        [
                            "x.permute(0, 1, 3, 5, 2, 4).contiguous()",
                            "Call"
                        ],
                        [
                            "x.view(b, c * 2 * 2, h // 2, w // 2)",
                            "Call"
                        ],
                        [
                            "squeeze(x)",
                            "Call"
                        ],
                        [
                            "squeeze(x, reverse=True)",
                            "Call"
                        ],
                        [
                            "squeeze(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x, x_split), dim=1)",
                            "Call"
                        ],
                        [
                            "squeeze(x, reverse=True)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/glow/inv_conv.py": {
        "torch": {
            "Parameter_19": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.from_numpy(w_init)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_34": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "weight",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.inverse(self.weight.double()).float()",
                            "Call"
                        ],
                        [
                            "self.weight",
                            "Attribute"
                        ],
                        [
                            "weight.view(self.num_channels, self.num_channels, 1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "inverse_27": {
                "variable": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.weight.double()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_19": {
                "ndarray": {
                    "value": "w_init",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.random.randn(num_channels, num_channels)",
                            "Call"
                        ],
                        [
                            "np.linalg.qr(w_init)[0].astype(np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "slogdet_24": {
                "input": {
                    "value": "self.weight.cpu()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "rotate_data.py": {
        "torch": {
            "DataLoader_16": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dataset(num_class % 10, transform, test=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_19": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dataset(num_class % 10, transform, test=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_43": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "z",
                    "type": "Call",
                    "possible_values": [
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_45": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_59": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "z",
                    "type": "Call",
                    "possible_values": [
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_61": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_28": {
                "f": {
                    "value": "ckpts/ + str(num_class) + .pth.tar",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "rotate_data_unsuper.py": {
        "torch": {
            "DataLoader_21": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torchvision.datasets.CIFAR10(root='dataset/cifar10-torchvision', train=True, download=False, transform=transform_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_24": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torchvision.datasets.CIFAR10(root='dataset/cifar10-torchvision', train=False, download=False, transform=transform_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_48": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "z",
                    "type": "Call",
                    "possible_values": [
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_50": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_62": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "z",
                    "type": "Call",
                    "possible_values": [
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "z.view(-1, 3 * 32 * 32)",
                            "Call"
                        ],
                        [
                            "z.detach().numpy()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(z).view(-1, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_64": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_33": {
                "f": {
                    "value": "ckpts/-1.pth.tar",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "test_bpd.py": {
        "torch": {
            "DataLoader_74": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torchvision.datasets.CIFAR10(root='dataset/cifar10-torchvision', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "imagenet_val(transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_105": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torchvision.datasets.CIFAR10(root='dataset/cifar10-torchvision', train=False, download=True, transform=transform)",
                            "Call"
                        ],
                        [
                            "imagenet_val(transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_66": {
                "f": {
                    "value": "ckpts/-2.pth.tar",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_69": {
                "f": {
                    "value": "ckpts/-1.pth.tar",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_99": {
                "f": {
                    "value": "ckpts/-2.pth.tar",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_102": {
                "f": {
                    "value": "ckpts/-1.pth.tar",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "DataLoader_50": {
                "variable": {
                    "value": "trainloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "dataset(num_class % 10, transform_train, test=False)",
                            "Call"
                        ],
                        [
                            "torchvision.datasets.CIFAR10(root='dataset/cifar10-torchvision', train=True, download=True, transform=transform_train)",
                            "Call"
                        ],
                        [
                            "dataset(num_class % 10, transform_train, test=False, rotation_data=args.rotation_data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_51": {
                "variable": {
                    "value": "testloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "dataset(num_class % 10, transform_test, test=True)",
                            "Call"
                        ],
                        [
                            "torchvision.datasets.CIFAR10(root='dataset/cifar10-torchvision', train=False, download=True, transform=transform_test)",
                            "Call"
                        ],
                        [
                            "torchvision.datasets.CIFAR10(root='dataset/cifar10-torchvision', train=False, download=True, transform=transform_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_79": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LambdaLR_80": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "optim.Adam(net.parameters(), lr=args.lr)",
                            "Call"
                        ]
                    ]
                },
                "lr_lambda": {
                    "value": "lambda s: min(1.0, s / args.warm_up)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "enable_grad_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_123": {
                "variable": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, 3, 32, 32)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'cuda' if torch.cuda.is_available() and args.gpu_ids else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "sigmoid_125": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "x.to(device)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(x)",
                            "Call"
                        ],
                        [
                            "x.to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_114": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_28": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_29": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_60": {
                "variable": {
                    "value": "net",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Glow(num_channels=args.num_channels, num_levels=args.num_levels, num_steps=args.num_steps)",
                            "Call"
                        ],
                        [
                            "net.to(device)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net, args.gpu_ids)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "args.gpu_ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_70": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "ckpts/ + str(num_class) + .pth.tar",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_156": {
                "obj": {
                    "value": "state",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'net': net.state_dict(), 'test_loss': loss_meter.avg, 'epoch': epoch}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "'ckpts/' + str(num_class) + '.pth.tar'.format(epoch)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "util/array_util.py": {
        "torch": {}
    },
    "util/optim_util.py": {
        "torch": {
            "clip_grad_norm__33": {
                "parameters": {
                    "value": "group['params']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "max_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "norm_type": {
                    "value": "norm_type",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    }
}