{
    "Discrete and Continuous/Nets/DQN.py": {
        "tensorflow": {
            "Input_23": {
                "variable": {
                    "value": "input_state",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.state_shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "input_state",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_24": {
                "variable": {
                    "value": "input_parameters",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.n_continuous_actions,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "input_parameters",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_38": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[input_state, input_parameters]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Dense(self.n_discrete_actions, activation='linear', name='output')(dense4)",
                            "Call"
                        ],
                        [
                            "Dense(self.n_discrete_actions, activation='linear', name='output')(dense3)",
                            "Call"
                        ]
                    ]
                }
            },
            "RMSprop_39": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Flatten_25": {
                "name": {
                    "value": "flat_input_state",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Flatten_26": {
                "name": {
                    "value": "flat_input_parameters",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Concatenate_27": {
                "name": {
                    "value": "concat",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_29": {
                "units": {
                    "value": "self.layer1_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_30": {
                "units": {
                    "value": "self.layer2_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_31": {
                "units": {
                    "value": "self.layer3_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_33": {
                "units": {
                    "value": "self.layer3_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_34": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_36": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "output",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/Nets/DQN_dueling.py": {
        "tensorflow": {
            "Input_26": {
                "variable": {
                    "value": "input_state",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.state_shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "input_state",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_27": {
                "variable": {
                    "value": "input_parameters",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.n_continuous_actions,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "input_parameters",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_44": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[input_state, input_parameters]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "value + tf.math.subtract(advantage, tf.math.reduce_mean(advantage, axis=1, keepdims=True))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Flatten_28": {
                "name": {
                    "value": "flat_input_state",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Flatten_29": {
                "name": {
                    "value": "flat_input_parameters",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Concatenate_30": {
                "name": {
                    "value": "concat",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_32": {
                "units": {
                    "value": "self.layer1_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_33": {
                "units": {
                    "value": "self.layer2_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_34": {
                "units": {
                    "value": "self.layer3_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_36": {
                "units": {
                    "value": "self.layer3_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "value_fc",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_37": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "value",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_39": {
                "units": {
                    "value": "self.layer3_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "advantage_fc",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_40": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "subtract_42": {
                "x": {
                    "value": "advantage",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Dense(self.n_discrete_actions, activation='linear')(advantage_fc)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.math.reduce_mean(advantage, axis=1, keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_42": {
                "input_tensor": {
                    "value": "advantage",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Dense(self.n_discrete_actions, activation='linear')(advantage_fc)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/Nets/DQN_dueling_new_structure.py": {
        "tensorflow": {
            "Input_27": {
                "variable": {
                    "value": "input_state",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.state_shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "input_state",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_28": {
                "variable": {
                    "value": "input_parameters",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(self.n_continuous_actions,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "input_parameters",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_54": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[input_state, input_parameters]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "value + tf.math.subtract(advantage, tf.math.reduce_mean(advantage, axis=1, keepdims=True))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Flatten_29": {
                "name": {
                    "value": "flat_input_parameters",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Concatenate_38": {
                "name": {
                    "value": "input_fcs_output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Concatenate_40": {
                "name": {
                    "value": "concat",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_42": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_43": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_44": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_46": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "value_fc",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_47": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "value",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_49": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "advantage_fc",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_50": {
                "units": {
                    "value": "self.n_discrete_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "subtract_52": {
                "x": {
                    "value": "advantage",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Dense(self.n_discrete_actions, activation='linear')(advantage_fc)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.math.reduce_mean(advantage, axis=1, keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_52": {
                "input_tensor": {
                    "value": "advantage",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Dense(self.n_discrete_actions, activation='linear')(advantage_fc)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Lambda_35": {
                "function": {
                    "value": "lambda x: x[:, i, :]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_36": {
                "units": {
                    "value": "self.stream_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "f'fc1{i}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "Dense_37": {
                "units": {
                    "value": "self.stream_len - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "f'fc2{i}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/Nets/P_actor.py": {
        "tensorflow": {
            "Input_24": {
                "variable": {
                    "value": "input_state",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.state_shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "input_state",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_30": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_state",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Input(shape=self.state_shape, name='input_state')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Dense(self.n_continuous_actions, activation='tanh', name='output')(dense2)",
                            "Call"
                        ]
                    ]
                }
            },
            "Flatten_25": {
                "name": {
                    "value": "flat_input_state",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_26": {
                "units": {
                    "value": "self.layer1_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_27": {
                "units": {
                    "value": "self.layer2_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "dense2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_28": {
                "units": {
                    "value": "self.n_continuous_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "output",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/Utils/OrnsteinNoise.py": {
        "tensorflow": {}
    },
    "Discrete and Continuous/Workers/Worker_constrained.py": {
        "tensorflow": {
            "clone_model_45": {
                "variable": {
                    "value": "self.local_param_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_P",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clone_model_47": {
                "variable": {
                    "value": "self.local_dqn_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_dqn",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "convert_to_tensor_234": {
                "variable": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ],
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ]
                    ]
                }
            },
            "convert_to_tensor_250": {
                "variable": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ],
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_185": {
                "device_name": {
                    "value": "/CPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_224": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_norm_238": {
                "t": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_norm_241": {
                "t": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_246": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_norm_253": {
                "t": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_228": {
                "input_tensor": {
                    "value": "Qvalues",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.local_dqn_model([state, predict_param])",
                            "Call"
                        ]
                    ]
                }
            },
            "add_206": {
                "x": {
                    "value": "accumulated_param_gradients[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "gradient_param[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "add_208": {
                "x": {
                    "value": "accumulated_dqn_gradients[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "gradient_dqn[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "add_216": {
                "x": {
                    "value": "accumulated_dqn_gradients[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "gradient_dqn[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/Workers/Worker_constrained_6.py": {
        "tensorflow": {
            "clone_model_45": {
                "variable": {
                    "value": "self.local_param_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_P",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clone_model_47": {
                "variable": {
                    "value": "self.local_dqn_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_dqn",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "convert_to_tensor_240": {
                "variable": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ],
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ]
                    ]
                }
            },
            "convert_to_tensor_256": {
                "variable": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ],
                        [
                            "QvaluesDQN.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_191": {
                "device_name": {
                    "value": "/CPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_230": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_norm_244": {
                "t": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_norm_247": {
                "t": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_252": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_norm_259": {
                "t": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_234": {
                "input_tensor": {
                    "value": "Qvalues",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.local_dqn_model([state, predict_param])",
                            "Call"
                        ]
                    ]
                }
            },
            "add_212": {
                "x": {
                    "value": "accumulated_param_gradients[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "gradient_param[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "add_214": {
                "x": {
                    "value": "accumulated_dqn_gradients[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "gradient_dqn[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "add_222": {
                "x": {
                    "value": "accumulated_dqn_gradients[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "gradient_dqn[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/Workers/Worker_memory.py": {
        "tensorflow": {
            "clone_model_41": {
                "variable": {
                    "value": "self.local_param_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_P",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clone_model_43": {
                "variable": {
                    "value": "self.local_dqn_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_dqn",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "device_160": {
                "device_name": {
                    "value": "/CPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_173": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_176": {
                "input_tensor": {
                    "value": "Qvalues",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.local_dqn_model([state, predict_param])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Discrete and Continuous/Workers/Worker_onlyDQN.py": {
        "tensorflow": {
            "clone_model_40": {
                "variable": {
                    "value": "self.local_param_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_P",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clone_model_42": {
                "variable": {
                    "value": "self.local_dqn_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model": {
                    "value": "global_network_dqn",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "device_139": {
                "device_name": {
                    "value": "/CPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "convert_to_tensor_158": {
                "variable": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "target_dqn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Qvalues.numpy()",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(target_dqn)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_151": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_norm_161": {
                "t": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "add_166": {
                "x": {
                    "value": "accumulated_dqn_gradients[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "gradient_dqn[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/final agent.py": {
        "tensorflow": {
            "list_physical_devices_6": {
                "variable": {
                    "value": "gpus",
                    "type": "Name",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_floatx_22": {
                "value": {
                    "value": "float64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "list_logical_devices_12": {
                "variable": {
                    "value": "logical_gpus",
                    "type": "Name",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_109": {
                "device_name": {
                    "value": "/CPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_model_116": {
                "variable": {
                    "value": "param_model",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "Nets/Agent_improved/param_model.h5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_model_117": {
                "variable": {
                    "value": "dqn_model",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "Nets/Agent_improved/dqn_model.h5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Coordinator_147": {
                "variable": {
                    "value": "coord",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Coordinator_182": {
                "variable": {
                    "value": "coord",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_memory_growth_11": {
                "device": {
                    "value": "gpu",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gpus",
                            "Name"
                        ]
                    ]
                },
                "enable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_model_120": {
                "variable": {
                    "value": "param_model",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "Nets/Agent_final/big_param_model.h5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_model_121": {
                "variable": {
                    "value": "dqn_model",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "Nets/Agent_final/big_dqn_model.h5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_model_123": {
                "variable": {
                    "value": "param_model",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "Nets/Agent_final/param_model.h5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_model_124": {
                "variable": {
                    "value": "dqn_model",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "Nets/Agent_final/dqn_model.h5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RMSprop_171": {
                "lr": {
                    "value": "alpha",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0001",
                            "Constant"
                        ]
                    ]
                },
                "decay": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Discrete and Continuous/main.py": {
        "tensorflow": {
            "list_physical_devices_6": {
                "variable": {
                    "value": "gpus",
                    "type": "Name",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_floatx_22": {
                "value": {
                    "value": "float64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Coordinator_140": {
                "variable": {
                    "value": "coord",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "list_logical_devices_12": {
                "variable": {
                    "value": "logical_gpus",
                    "type": "Name",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_113": {
                "device_name": {
                    "value": "/CPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Coordinator_174": {
                "variable": {
                    "value": "coord",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_memory_growth_11": {
                "device": {
                    "value": "gpu",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gpus",
                            "Name"
                        ]
                    ]
                },
                "enable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RMSprop_163": {
                "lr": {
                    "value": "alpha",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0001",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    }
}