{
    "demo.py": {
        "tensorflow": {
            "ConfigProto_33": {
                "variable": {
                    "value": "tfconfig",
                    "type": "variable",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Session_36": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "tfconfig",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto(allow_soft_placement=True)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "resolution_network.py": {
        "tensorflow": {
            "placeholder_36": {
                "variable": {
                    "value": "self.input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.img_size[0], self.img_size[1], self.img_size[2]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_61": {
                "variable": {
                    "value": "self.gt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sparse_softmax_cross_entropy_with_logits_77": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.gt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.logits",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_78": {
                "variable": {
                    "value": "self.net_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tmp * self.weights",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_total_loss_80": {
                "variable": {
                    "value": "self.total_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "add_loss_79": {
                "loss": {
                    "value": "self.net_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_41": {
                "variable": {
                    "value": "self.prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_47": {
                "variable": {
                    "value": "self.prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "net[:, 0, 0, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_52": {
                "variable": {
                    "value": "self.prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "net[:, 0, 0, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_57": {
                "variable": {
                    "value": "self.prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "net[:, 0, 0, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "solver.py": {
        "tensorflow": {
            "Variable_34": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Saver_35": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "max_to_keep": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "var_list": {
                    "value": "tf.global_variables()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Saver_105": {
                "variable": {
                    "value": "restorer",
                    "type": "variable",
                    "possible_values": []
                },
                "var_list": {
                    "value": "variables_to_restore",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.get_restore_var_list(model_path)",
                            "Call"
                        ]
                    ]
                }
            },
            "exponential_decay_111": {
                "variable": {
                    "value": "self.LR",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "global_step": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_steps": {
                    "value": "self.decay_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay_rate": {
                    "value": "self.decay_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "staircase": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_118": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.LR",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_collection_131": {
                "variable": {
                    "value": "global_vars",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "list_variables_146": {
                "variable": {
                    "value": "saved_vars",
                    "type": "variable",
                    "possible_values": []
                },
                "ckpt_dir_or_file": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "scalar_44": {
                "variable": {
                    "value": "self.loss_summary",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "loss_summary",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.net.total_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_45": {
                "variable": {
                    "value": "self.lr_summary",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate_summary",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.LR",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_46": {
                "variable": {
                    "value": "self.summary",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[self.loss_summary, self.lr_summary]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "FileWriter_47": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "self.summary_dir",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.sess.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_initializer_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tf_utils/utils.py": {
        "tensorflow": {
            "split_11": {
                "variable": {
                    "value": "(b, g, r)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([b - img_mean[0], g - img_mean[1], r - img_mean[2]], axis=3)",
                            "Call"
                        ],
                        [
                            "tf.concat([r - img_mean[2], g - img_mean[1], b - img_mean[0]], axis=3)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_13": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[b - img_mean[0], g - img_mean[1], r - img_mean[2]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_15": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[r - img_mean[2], g - img_mean[1], b - img_mean[0]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}