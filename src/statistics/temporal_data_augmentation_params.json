{
    "data/__init__.py": {
        "torch": {
            "DataLoader_31": {
                "variable": {
                    "value": "self.loader_test",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "possible_values": [
                        [
                            "getattr(m_test, self.data_test.upper())(self.args, train=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "not self.args.cpu",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.args.n_threads",
                    "possible_values": []
                }
            },
            "DataLoader_18": {
                "variable": {
                    "value": "self.loader_train",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "possible_values": [
                        [
                            "getattr(m_train, self.data_train.upper())(self.args, train=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.args.batch_size",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "not self.args.cpu",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.args.n_threads",
                    "possible_values": []
                }
            }
        }
    },
    "data/utils.py": {
        "torch": {
            "zeros_like_166": {
                "variable": {
                    "value": "out_images",
                    "possible_values": []
                },
                "input": {
                    "value": "images",
                    "possible_values": [
                        [
                            "images.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "brightness_jitter(img_brightness, images)",
                            "Call"
                        ],
                        [
                            "contrast_jitter(img_contrast, images)",
                            "Call"
                        ],
                        [
                            "saturation_jitter(img_saturation, images)",
                            "Call"
                        ],
                        [
                            "blend(images, img_bright, alpha)",
                            "Call"
                        ],
                        [
                            "blend(images, img_gray, alpha)",
                            "Call"
                        ],
                        [
                            "blend(images, img_gray, alpha)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "data/videodata.py": {
        "torch": {}
    },
    "models/slowfastnet.py": {
        "torch": {
            "Conv3d_20": {
                "variable": {
                    "value": "self.conv2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, stride, stride)",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_22": {
                "variable": {
                    "value": "self.bn2",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "possible_values": []
                }
            },
            "Conv3d_23": {
                "variable": {
                    "value": "self.conv3",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_24": {
                "variable": {
                    "value": "self.bn3",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "variable": {
                    "value": "self.relu",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "Conv3d_56": {
                "variable": {
                    "value": "self.fast_conv1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(5, 7, 7)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "possible_values": []
                },
                "padding": {
                    "value": "(2, 3, 3)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_57": {
                "variable": {
                    "value": "self.fast_bn1",
                    "possible_values": []
                },
                "num_features": {
                    "value": "8",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "variable": {
                    "value": "self.fast_relu",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "MaxPool3d_59": {
                "variable": {
                    "value": "self.fast_maxpool",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "possible_values": []
                }
            },
            "Conv3d_68": {
                "variable": {
                    "value": "self.lateral_p1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8 * 2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(5, 1, 1)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(8, 1, 1)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                },
                "padding": {
                    "value": "(2, 0, 0)",
                    "possible_values": []
                }
            },
            "Conv3d_69": {
                "variable": {
                    "value": "self.lateral_res2",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32 * 2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(5, 1, 1)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(8, 1, 1)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                },
                "padding": {
                    "value": "(2, 0, 0)",
                    "possible_values": []
                }
            },
            "Conv3d_71": {
                "variable": {
                    "value": "self.lateral_res3",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * 2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(5, 1, 1)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(8, 1, 1)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                },
                "padding": {
                    "value": "(2, 0, 0)",
                    "possible_values": []
                }
            },
            "Conv3d_73": {
                "variable": {
                    "value": "self.lateral_res4",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128 * 2",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(5, 1, 1)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(8, 1, 1)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                },
                "padding": {
                    "value": "(2, 0, 0)",
                    "possible_values": []
                }
            },
            "Conv3d_77": {
                "variable": {
                    "value": "self.slow_conv1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 7, 7)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 3, 3)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_78": {
                "variable": {
                    "value": "self.slow_bn1",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "possible_values": []
                }
            },
            "ReLU_79": {
                "variable": {
                    "value": "self.slow_relu",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "MaxPool3d_80": {
                "variable": {
                    "value": "self.slow_maxpool",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "possible_values": []
                }
            },
            "Dropout_88": {
                "variable": {
                    "value": "self.dp",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_89": {
                "variable": {
                    "value": "self.fc",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.fast_inplanes + 2048",
                    "possible_values": []
                },
                "out_features": {
                    "value": "class_num",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "cat_94": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[slow, fast]",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "cat_104": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, lateral[0]]",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "cat_106": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, lateral[1]]",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "cat_108": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, lateral[2]]",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "cat_110": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, lateral[3]]",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv3d_13": {
                "variable": {
                    "value": "self.conv1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_14": {
                "variable": {
                    "value": "self.bn1",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "possible_values": []
                }
            },
            "Sequential_146": {
                "variable": {
                    "value": "downsample",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(self.fast_inplanes, planes * block.expansion, kernel_size=1, stride=(1, stride, stride), bias=False)",
                    "possible_values": []
                }
            },
            "Sequential_159": {
                "*args": {
                    "value": "*layers",
                    "possible_values": []
                }
            },
            "Sequential_164": {
                "variable": {
                    "value": "downsample",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(self.slow_inplanes, planes * block.expansion, kernel_size=1, stride=(1, stride, stride), bias=False)",
                    "possible_values": []
                }
            },
            "Sequential_179": {
                "*args": {
                    "value": "*layers",
                    "possible_values": []
                }
            },
            "rand_223": {
                "*size": {
                    "value": "1",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "possible_values": []
                },
                "dtype": {
                    "value": "64",
                    "possible_values": []
                },
                "layout": {
                    "value": "224",
                    "possible_values": []
                },
                "device": {
                    "value": "224",
                    "possible_values": []
                }
            },
            "Conv3d_16": {
                "variable": {
                    "value": "self.conv1",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 1, 1)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 0, 0)",
                    "possible_values": []
                }
            },
            "BatchNorm3d_17": {
                "variable": {
                    "value": "self.bn1",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool3d_112": {
                "output_size": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool3d_138": {
                "output_size": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Conv3d_147": {
                "in_channels": {
                    "value": "self.fast_inplanes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, stride, stride)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_152": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "possible_values": []
                }
            },
            "Conv3d_165": {
                "in_channels": {
                    "value": "self.slow_inplanes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, stride, stride)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_170": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "manual_seed_7": {
                "seed": {
                    "value": "args.seed",
                    "possible_values": []
                }
            },
            "set_device_11": {
                "device": {
                    "value": "args.gpu_id",
                    "possible_values": []
                }
            }
        }
    },
    "trainer.py": {
        "torch": {
            "DataParallel_21": {
                "variable": {
                    "value": "self.model",
                    "possible_values": []
                },
                "module": {
                    "value": "self.model",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_37": {
                "variable": {
                    "value": "self.loss",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "load_30": {
                "variable": {
                    "value": "checkpoint",
                    "possible_values": []
                },
                "f": {
                    "value": "args.load",
                    "possible_values": []
                }
            },
            "device_count_22": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "get_device_name_22": {
                "device": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "no_grad_128": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "save_210": {
                "obj": {
                    "value": "{'epoch': self.current_epoch, 'state_dict': self.model.state_dict(), 'optimizer_state_dict': self.optimizer.state_dict(), 'scheduler_state_dict': self.scheduler.state_dict()}",
                    "possible_values": []
                },
                "f": {
                    "value": "self.ckpt_dir + '/model_epoch' + str(self.current_epoch).zfill(3) + '.pth'",
                    "possible_values": []
                }
            },
            "Softmax_167": {
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Softmax_161": {
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Softmax_169": {
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Softmax_163": {
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            }
        }
    },
    "utility.py": {
        "torch": {
            "randperm_67": {
                "variable": {
                    "value": "rand_index",
                    "possible_values": []
                },
                "n": {
                    "value": "inputs.size()[0]",
                    "possible_values": []
                }
            },
            "StepLR_358": {
                "variable": {
                    "value": "scheduler",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "my_optimizer",
                    "possible_values": []
                },
                "step_size": {
                    "value": "args.lr_decay",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.gamma",
                    "possible_values": []
                }
            },
            "MultiStepLR_367": {
                "variable": {
                    "value": "scheduler",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "my_optimizer",
                    "possible_values": []
                },
                "milestones": {
                    "value": "milestones",
                    "possible_values": [
                        [
                            "args.decay_type.split('_')",
                            "Call"
                        ],
                        [
                            "list(map(lambda x: int(x), milestones))",
                            "Call"
                        ]
                    ]
                },
                "gamma": {
                    "value": "args.gamma",
                    "possible_values": []
                }
            },
            "CosineAnnealingLR_373": {
                "variable": {
                    "value": "scheduler",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "my_optimizer",
                    "possible_values": []
                },
                "T_max": {
                    "value": "args.epochs",
                    "possible_values": []
                }
            },
            "zeros_like_214": {
                "variable": {
                    "value": "state[exp_avg]",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_215": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "CosineAnnealingLR_378": {
                "variable": {
                    "value": "cosine_scheduler",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "my_optimizer",
                    "possible_values": []
                },
                "T_max": {
                    "value": "args.epochs",
                    "possible_values": []
                }
            }
        }
    }
}