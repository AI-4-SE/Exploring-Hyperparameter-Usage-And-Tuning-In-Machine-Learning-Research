{
    "tasks/exchange_rate/main.py": {
        "sklearn": {
            "mean_squared_error_34": {
                "variable": {
                    "value": "mse_cur",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "Name",
                    "possible_values": [
                        [
                            "enc.inverse_transform([test_y]).flatten()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "enc.inverse_transform(y_raw_pred).flatten()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tasks/exchange_rate/utils.py": {
        "sklearn": {
            "MinMaxScaler_15": {
                "variable": {
                    "value": "enc",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tasks/mnist_pixel/test_tcn.py": {
        "sklearn": {
            "accuracy_score_81": {
                "variable": {
                    "value": "acc",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y_val",
                            "Name"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred > confidence / 100",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "balanced_accuracy_score_82": {
                "variable": {
                    "value": "bacc",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y_val",
                            "Name"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred > confidence / 100",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "confusion_matrix_83": {
                "variable": {
                    "value": "cm",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y_val",
                            "Name"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred > confidence / 100",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "roc_curve_94": {
                "variable": {
                    "value": "(fpr_auc, tpr_auc, thds_auc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y_val",
                            "Name"
                        ]
                    ]
                },
                "y_score": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "predict(model, x_val, y_val)",
                            "Call"
                        ],
                        [
                            "model.predict_generator(utils.data_generator(x_test, y_test, max_len, batch_size, shuffle=False), steps=len(x_test), verbose=verbose)",
                            "Call"
                        ]
                    ]
                },
                "drop_intermediate": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "roc_auc_score_95": {
                "variable": {
                    "value": "auc",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y_val",
                            "Name"
                        ]
                    ]
                },
                "y_score": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "predict(model, x_val, y_val)",
                            "Call"
                        ],
                        [
                            "model.predict_generator(utils.data_generator(x_test, y_test, max_len, batch_size, shuffle=False), steps=len(x_test), verbose=verbose)",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "Input_63": {
                "variable": {
                    "value": "i",
                    "type": "Name",
                    "possible_values": []
                },
                "batch_shape": {
                    "value": "(batch_size, timesteps, input_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_66": {
                "variable": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[i]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "[o]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Dense_65": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tasks/imdb_tcn.py": {
        "tensorflow": {
            "load_data_22": {
                "variable": {
                    "value": "((x_train, y_train), (x_test, y_test))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "num_words": {
                    "value": "max_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20000",
                            "Constant"
                        ]
                    ]
                }
            },
            "pad_sequences_27": {
                "variable": {
                    "value": "x_train",
                    "type": "Name",
                    "possible_values": []
                },
                "sequences": {
                    "value": "x_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "sequence.pad_sequences(x_train, maxlen=maxlen)",
                            "Call"
                        ]
                    ]
                },
                "maxlen": {
                    "value": "maxlen",
                    "type": "Name",
                    "possible_values": [
                        [
                            "100",
                            "Constant"
                        ]
                    ]
                }
            },
            "pad_sequences_28": {
                "variable": {
                    "value": "x_test",
                    "type": "Name",
                    "possible_values": []
                },
                "sequences": {
                    "value": "x_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "sequence.pad_sequences(x_test, maxlen=maxlen)",
                            "Call"
                        ]
                    ]
                },
                "maxlen": {
                    "value": "maxlen",
                    "type": "Name",
                    "possible_values": [
                        [
                            "100",
                            "Constant"
                        ]
                    ]
                }
            },
            "Input_34": {
                "variable": {
                    "value": "i",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(maxlen,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_42": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[i]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "[x]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Embedding_35": {
                "input_dim": {
                    "value": "max_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20000",
                            "Constant"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "rate": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_40": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tasks/save_reload_model.py": {
        "tensorflow": {
            "Sequential_11": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "layers": {
                    "value": "[Embedding(max_features, 16, input_shape=(max_len,)), TCN(nb_filters=12, dropout_rate=0.5, kernel_size=6, dilations=[1, 2, 4]), Dropout(0.5), Dense(units=1, activation='sigmoid')]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "model_from_json_34": {
                "variable": {
                    "value": "reloaded_model",
                    "type": "Name",
                    "possible_values": []
                },
                "json_string": {
                    "value": "loaded_json",
                    "type": "Name",
                    "possible_values": [
                        [
                            "open('model.json', 'r').read()",
                            "Call"
                        ]
                    ]
                },
                "custom_objects": {
                    "value": "{'TCN': TCN}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "Embedding_11": {
                "input_dim": {
                    "value": "max_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "50",
                            "Constant"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(max_len,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_16": {
                "rate": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_17": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tasks/sequential.py": {
        "tensorflow": {
            "load_data_23": {
                "variable": {
                    "value": "((x_train, y_train), (x_test, y_test))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "num_words": {
                    "value": "max_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20000",
                            "Constant"
                        ]
                    ]
                }
            },
            "pad_sequences_28": {
                "variable": {
                    "value": "x_train",
                    "type": "Name",
                    "possible_values": []
                },
                "sequences": {
                    "value": "x_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "sequence.pad_sequences(x_train, maxlen=maxlen)",
                            "Call"
                        ]
                    ]
                },
                "maxlen": {
                    "value": "maxlen",
                    "type": "Name",
                    "possible_values": [
                        [
                            "100",
                            "Constant"
                        ]
                    ]
                }
            },
            "pad_sequences_29": {
                "variable": {
                    "value": "x_test",
                    "type": "Name",
                    "possible_values": []
                },
                "sequences": {
                    "value": "x_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "sequence.pad_sequences(x_test, maxlen=maxlen)",
                            "Call"
                        ]
                    ]
                },
                "maxlen": {
                    "value": "maxlen",
                    "type": "Name",
                    "possible_values": [
                        [
                            "100",
                            "Constant"
                        ]
                    ]
                }
            },
            "Sequential_35": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_36": {
                "input_dim": {
                    "value": "max_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20000",
                            "Constant"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(maxlen,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_40": {
                "rate": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_41": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tasks/time_series_forecasting.py": {
        "tensorflow": {
            "Input_35": {
                "variable": {
                    "value": "i",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(lookback_window, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_39": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[i]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "[m]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Dense_37": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tcn/tcn.py": {
        "tensorflow": {
            "Input_363": {
                "variable": {
                    "value": "input_layer",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_len, num_feat)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "add_131": {
                "variable": {
                    "value": "res_x",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "[x2, x]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv1D_217": {
                "variable": {
                    "value": "self.main_conv1D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "self.nb_filters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Lambda_255": {
                "variable": {
                    "value": "self.lambda_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "function": {
                    "value": "lambda tt: tt[:, output_slice_index, :]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Model_385": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "*args": {
                    "value": "input_layer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Input(shape=(max_len, num_feat))",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "output_layer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "x",
                            "Name"
                        ]
                    ]
                }
            },
            "Model_405": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "*args": {
                    "value": "input_layer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Input(shape=(max_len, num_feat))",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "output_layer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "x",
                            "Name"
                        ]
                    ]
                }
            },
            "Activation_108": {
                "variable": {
                    "value": "self.final_activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "add_286": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "skip_connections",
                    "type": "Name",
                    "possible_values": [
                        [
                            "list()",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_395": {
                "variable": {
                    "value": "y_pred_labels",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cast_396": {
                "variable": {
                    "value": "y_pred_labels",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "y_pred_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.argmax(y_pred, axis=-1)",
                            "Call"
                        ],
                        [
                            "K.cast(y_pred_labels, K.floatx())",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "K.floatx()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "name_scope_69": {
                "name": {
                    "value": "self.name",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Lambda_103": {
                "variable": {
                    "value": "self.shape_match_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "function": {
                    "value": "lambda x: x",
                    "type": "Lambda",
                    "possible_values": []
                },
                "name": {
                    "value": "identity",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_374": {
                "lr": {
                    "value": "lr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.002",
                            "MethodArgument"
                        ]
                    ]
                },
                "clipnorm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dense_382": {
                "units": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Activation_383": {
                "activation": {
                    "value": "softmax",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_393": {
                "variable": {
                    "value": "y_true",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "y_true",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.squeeze(y_true, -1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cast_397": {
                "x": {
                    "value": "K.equal(y_true, y_pred_labels)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "K.floatx()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_402": {
                "units": {
                    "value": "output_len",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Activation_403": {
                "activation": {
                    "value": "linear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1D_96": {
                "variable": {
                    "value": "self.shape_match_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "self.nb_filters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'conv1D_{}'.format(k)",
                            "Call"
                        ],
                        [
                            "'conv1D_{}'.format(k + 1)",
                            "Call"
                        ],
                        [
                            "'tcn'",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_initializer": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "RMSprop_376": {
                "lr": {
                    "value": "lr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.002",
                            "MethodArgument"
                        ]
                    ]
                },
                "clipnorm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ndim_392": {
                "a": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "floatx_396": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "equal_397": {
                "x": {
                    "value": "y_true",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.squeeze(y_true, -1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "y_pred_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.argmax(y_pred, axis=-1)",
                            "Call"
                        ],
                        [
                            "K.cast(y_pred_labels, K.floatx())",
                            "Call"
                        ]
                    ]
                }
            },
            "floatx_397": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_75": {
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'conv1D_{}'.format(k)",
                            "Call"
                        ],
                        [
                            "'conv1D_{}'.format(k + 1)",
                            "Call"
                        ],
                        [
                            "'tcn'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Activation_88": {
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SpatialDropout1D_89": {
                "rate": {
                    "value": "self.dropout_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_94": {
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'conv1D_{}'.format(k)",
                            "Call"
                        ],
                        [
                            "'conv1D_{}'.format(k + 1)",
                            "Call"
                        ],
                        [
                            "'tcn'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv1D_76": {
                "filters": {
                    "value": "self.nb_filters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation_rate": {
                    "value": "self.dilation_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'conv1D_{}'.format(k)",
                            "Call"
                        ],
                        [
                            "'conv1D_{}'.format(k + 1)",
                            "Call"
                        ],
                        [
                            "'tcn'",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_initializer": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNormalization_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LayerNormalization_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}