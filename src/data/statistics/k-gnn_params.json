{
    "examples/1-2-3-imdb.py": {
        "torch": {
            "randperm_42": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "one_hot_47": {
                "variable": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_2.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "one_hot_52": {
                "variable": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_3.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_107": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_184": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_149": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_150": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_153": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_160": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_25": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(data.num_nodes, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "one_hot_29": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "136",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unique_45": {
                "input": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unique_50": {
                "input": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_68": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_75": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_76": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_77": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_82": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_84": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_85": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_91": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_92": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_95": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2, x_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_100": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_101": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.x",
                            "Attribute"
                        ],
                        [
                            "torch.cat([x_1, x_2, x_3], dim=1)",
                            "Call"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_102": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_118": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_104": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.x",
                            "Attribute"
                        ],
                        [
                            "torch.cat([x_1, x_2, x_3], dim=1)",
                            "Call"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_131": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-2-3-mutag.py": {
        "torch": {
            "randperm_38": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_40": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "mutag_perm.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "one_hot_45": {
                "variable": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_2.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "one_hot_50": {
                "variable": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_3.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_105": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_183": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_39": {
                "obj": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randperm(len(dataset), dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.load('mutag_perm.pt')",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "mutag_perm.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_147": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_148": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "15",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_151": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_158": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unique_43": {
                "input": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unique_48": {
                "input": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_73": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_74": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_75": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_80": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_82": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_83": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_87": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_89": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_90": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_93": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2, x_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_98": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_99": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.x",
                            "Attribute"
                        ],
                        [
                            "torch.cat([x_1, x_2, x_3], dim=1)",
                            "Call"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_100": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_116": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_102": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.x",
                            "Attribute"
                        ],
                        [
                            "torch.cat([x_1, x_2, x_3], dim=1)",
                            "Call"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_129": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-2-3-proteins.py": {
        "torch": {
            "randperm_31": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "one_hot_36": {
                "variable": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_2.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "one_hot_41": {
                "variable": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_3.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_96": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_173": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_138": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_139": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_142": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_149": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unique_34": {
                "input": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unique_39": {
                "input": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_56": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_64": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_65": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_66": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_73": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_74": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_78": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_80": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_81": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_84": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2, x_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_89": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_90": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.x",
                            "Attribute"
                        ],
                        [
                            "torch.cat([x_1, x_2, x_3], dim=1)",
                            "Call"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_91": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_107": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_93": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.x",
                            "Attribute"
                        ],
                        [
                            "torch.cat([x_1, x_2, x_3], dim=1)",
                            "Call"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_120": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-2-3-qm9.py": {
        "torch": {
            "one_hot_52": {
                "variable": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_2.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "one_hot_57": {
                "variable": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_3.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_130": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_132": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_133": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "unique_50": {
                "input": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unique_55": {
                "input": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "variable": {
                    "value": "nn1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "variable": {
                    "value": "nn2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "nn3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_97": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_99": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_102": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_103": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_104": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_109": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_111": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_112": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_116": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_118": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_119": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2, x_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_124": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_125": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mse_loss_144": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_80": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_84": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_88": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-2-3-qm9_all_targets.py": {
        "torch": {
            "one_hot_40": {
                "variable": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_2.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "one_hot_45": {
                "variable": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_3.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_105": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_137": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_138": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-07",
                    "type": "float",
                    "possible_values": []
                }
            },
            "unique_38": {
                "input": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unique_43": {
                "input": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_54": {
                "variable": {
                    "value": "nn1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "nn2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "nn3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_73": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_74": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_77": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_78": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_79": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_84": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_86": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_87": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_91": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_93": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_94": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_97": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2, x_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_99": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_100": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "L1Loss_146": {
                "variable": {
                    "value": "lf",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_162": {
                "variable": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, 12]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_169": {
                "variable": {
                    "value": "error_log",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros([1, 12]).to(device)",
                            "Call"
                        ],
                        [
                            "error + ((data.y * std - model(data) * std).abs() / std).sum(dim=0)",
                            "BinOp"
                        ],
                        [
                            "error / len(loader.dataset)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_159": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_58": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_62": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-2-qm9.py": {
        "torch": {
            "one_hot_51": {
                "variable": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_2.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_113": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_115": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_116": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "unique_49": {
                "input": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_74": {
                "variable": {
                    "value": "nn1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "variable": {
                    "value": "nn2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_82": {
                "variable": {
                    "value": "nn3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_89": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_93": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_94": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_95": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_101": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_102": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_105": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_107": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_108": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mse_loss_127": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_74": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_78": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_82": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-2-qm9_all_targets.py": {
        "torch": {
            "one_hot_39": {
                "variable": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_2.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_88": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_118": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_119": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-07",
                    "type": "float",
                    "possible_values": []
                }
            },
            "unique_37": {
                "input": {
                    "value": "dataset.data.iso_type_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "nn1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "nn2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_57": {
                "variable": {
                    "value": "nn3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_63": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_68": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_69": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_70": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_74": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_76": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_77": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(data.x, data.edge_index_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_80": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_82": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_83": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "L1Loss_127": {
                "variable": {
                    "value": "lf",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_143": {
                "variable": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, 12]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_150": {
                "variable": {
                    "value": "error_log",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros([1, 12]).to(device)",
                            "Call"
                        ],
                        [
                            "error + ((data.y * std - model(data) * std).abs() / std).sum(dim=0)",
                            "BinOp"
                        ],
                        [
                            "error / len(loader.dataset)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_140": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_49": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_53": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_57": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-3-qm9.py": {
        "torch": {
            "one_hot_51": {
                "variable": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_3.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_113": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_115": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_116": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "unique_49": {
                "input": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_74": {
                "variable": {
                    "value": "nn1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "variable": {
                    "value": "nn2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_82": {
                "variable": {
                    "value": "nn3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_89": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_93": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_94": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_95": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_101": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_102": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_105": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_107": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_108": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mse_loss_127": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_74": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_78": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_82": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-3-qm9_all_targets.py": {
        "torch": {
            "one_hot_39": {
                "variable": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "num_i_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dataset.data.iso_type_3.max().item() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_89": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_127": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_128": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-07",
                    "type": "float",
                    "possible_values": []
                }
            },
            "unique_37": {
                "input": {
                    "value": "dataset.data.iso_type_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_50": {
                "variable": {
                    "value": "nn1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_54": {
                "variable": {
                    "value": "nn2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "nn3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(6, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_69": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_70": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_71": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_75": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data.x, data.iso_type_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_77": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_78": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(data.x, data.edge_index_3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_81": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_1, x_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_83": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_84": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "L1Loss_136": {
                "variable": {
                    "value": "lf",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_152": {
                "variable": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, 12]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_159": {
                "variable": {
                    "value": "error_log",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros([1, 12]).to(device)",
                            "Call"
                        ],
                        [
                            "error + ((data.y * std - model(data) * std).abs() / std).sum(dim=0)",
                            "BinOp"
                        ],
                        [
                            "error / len(loader.dataset)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_89": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_50": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_58": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-NCI1.py": {
        "torch": {
            "randperm_26": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_28": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "nci_perm.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_63": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_140": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_27": {
                "obj": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randperm(len(dataset), dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.load('nci_perm.pt')",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "nci_perm.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_105": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_106": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_109": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_116": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_47": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_48": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_49": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_56": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_57": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_58": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_74": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_60": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_87": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-imdb.py": {
        "torch": {
            "randperm_38": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_73": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_150": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_115": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_116": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.01)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_119": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_126": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "one_hot_25": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "136",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_48": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_57": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_58": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_59": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_66": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_67": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_68": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_84": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_70": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_97": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-mutag.py": {
        "torch": {
            "randperm_25": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_27": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "mutag.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_61": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_138": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_26": {
                "obj": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randperm(len(dataset), dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.load('mutag.pt')",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "mutag.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_103": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_104": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_107": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_114": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_46": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_47": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_48": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_55": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_56": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_72": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_58": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_85": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-proteins.py": {
        "torch": {
            "randperm_27": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_62": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_139": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_104": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_105": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_108": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_115": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_46": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_47": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_48": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_55": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_56": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_57": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_73": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_59": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_86": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-qm9.py": {
        "torch": {
            "device_84": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_86": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_87": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.001)",
                            "Call"
                        ]
                    ]
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_55": {
                "variable": {
                    "value": "nn1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "nn2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "variable": {
                    "value": "nn3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(5, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_68": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_72": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_73": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_74": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(x, data.edge_index, data.edge_attr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_78": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_79": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mse_loss_98": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_55": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_59": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_63": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "M_in * M_out",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "examples/1-reddit.py": {
        "torch": {
            "randperm_85": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_124": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "tensor_201": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(acc)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_166": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_167": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=0.01)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_170": {
                "variable": {
                    "value": "test_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_177": {
                "variable": {
                    "value": "val_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "one_hot_79": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_99": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_101": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dataset.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_108": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_109": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_110": {
                "variable": {
                    "value": "data.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(data.x, data.edge_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_117": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_118": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "elu_119": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_135": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_42": {
                "variable": {
                    "value": "deg",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "degs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "degs + [degree(data.edge_index[0], dtype=torch.long)]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_121": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_1",
                            "Name"
                        ],
                        [
                            "x.detach()",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.dropout(x, p=0.5, training=self.training)",
                            "Call"
                        ],
                        [
                            "F.elu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_148": {
                "input": {
                    "value": "model(data)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "data.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tensor_62": {
                "data": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "k_gnn/complete.py": {
        "torch": {
            "arange_9": {
                "variable": {
                    "value": "row",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.edge_index.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "arange_10": {
                "variable": {
                    "value": "col",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.edge_index.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "stack_14": {
                "variable": {
                    "value": "edge_index",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[row, col]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "k_gnn/dataloader.py": {
        "torch": {}
    },
    "k_gnn/graph_conv.py": {
        "torch": {
            "Parameter_22": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(in_channels, out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_23": {
                "variable": {
                    "value": "self.root_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(in_channels, out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_26": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_43": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dropout_50": {
                "variable": {
                    "value": "out_col",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out_col",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out[col]",
                            "Subscript"
                        ],
                        [
                            "F.dropout(out_col, self.dropout, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mm_63": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "self.root_weight",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mm_61": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "self.root_weight",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "setup.py": {
        "torch": {}
    }
}