{
    "mime.py": {
        "sklearn": {
            "roc_auc_score_136": {
                "variable": {
                    "value": "auc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "all_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "y_score": {
                    "value": "all_preds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "average_precision_score_137": {
                "variable": {
                    "value": "aucpr",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "all_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "y_score": {
                    "value": "all_preds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "binarize_138": {
                "X": {
                    "value": "np.array(all_preds).reshape(-1, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "threshold": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "get_variable_39": {
                "variable": {
                    "value": "W_emb_dx",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "W_emb_dx",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "(options['num_dx'], options['dx_emb_size'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_40": {
                "variable": {
                    "value": "W_emb_rx",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "W_emb_rx",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "(options['num_rx'], options['rx_emb_size'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_41": {
                "variable": {
                    "value": "W_emb_pr",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "W_emb_pr",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "(options['num_pr'], options['pr_emb_size'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_43": {
                "variable": {
                    "value": "dx_var",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "dx_var",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_44": {
                "variable": {
                    "value": "rx_var",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'], options['max_rx_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "rx_var",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_45": {
                "variable": {
                    "value": "pr_var",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'], options['max_pr_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "pr_var",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_47": {
                "variable": {
                    "value": "dx_label",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'], options['num_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "dx_label",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_48": {
                "variable": {
                    "value": "rx_label",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'], options['num_rx'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "rx_label",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_49": {
                "variable": {
                    "value": "pr_label",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'], options['num_pr'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "pr_label",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_51": {
                "variable": {
                    "value": "dx_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "dx_mask",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_52": {
                "variable": {
                    "value": "rx_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'], options['max_rx_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "rx_mask",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_53": {
                "variable": {
                    "value": "pr_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, options['batch_size'], options['max_dx_per_visit'], options['max_pr_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "pr_mask",
                    "type": "str",
                    "possible_values": []
                }
            },
            "embedding_lookup_55": {
                "variable": {
                    "value": "dx_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "W_emb_dx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable('W_emb_dx', shape=(options['num_dx'], options['dx_emb_size']), dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "tf.reshape(dx_var, (-1, options['max_dx_per_visit']))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_57": {
                "variable": {
                    "value": "dx_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dx_visit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(W_emb_dx, tf.reshape(dx_var, (-1, options['max_dx_per_visit'])))",
                            "Call"
                        ],
                        [
                            "emb_activation(dx_visit)",
                            "Call"
                        ],
                        [
                            "tf.reshape(dx_visit, (-1, options['dx_emb_size']))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['dx_emb_size'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "embedding_lookup_59": {
                "variable": {
                    "value": "rx_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "W_emb_rx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable('W_emb_rx', shape=(options['num_rx'], options['rx_emb_size']), dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "tf.reshape(rx_var, (-1, options['max_rx_per_dx']))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_62": {
                "variable": {
                    "value": "rx_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "rx_visit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(W_emb_rx, tf.reshape(rx_var, (-1, options['max_rx_per_dx'])))",
                            "Call"
                        ],
                        [
                            "emb_activation(rx_visit)",
                            "Call"
                        ],
                        [
                            "rx_visit * tf.reshape(rx_mask, (-1, options['max_rx_per_dx']))[:, :, None]",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(rx_visit, axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dense_63": {
                "variable": {
                    "value": "W_dr",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['rx_emb_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "order_activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'relu'",
                            "str"
                        ],
                        [
                            "tf.nn.sigmoid",
                            "Attribute"
                        ],
                        [
                            "tf.nn.tanh",
                            "Attribute"
                        ],
                        [
                            "tf.nn.relu",
                            "Attribute"
                        ],
                        [
                            "'sigmoid'",
                            "Method Argument"
                        ]
                    ]
                },
                "name": {
                    "value": "W_dr",
                    "type": "str",
                    "possible_values": []
                }
            },
            "embedding_lookup_67": {
                "variable": {
                    "value": "pr_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "W_emb_pr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable('W_emb_pr', shape=(options['num_pr'], options['pr_emb_size']), dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "tf.reshape(pr_var, (-1, options['max_pr_per_dx']))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_70": {
                "variable": {
                    "value": "pr_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "pr_visit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(W_emb_pr, tf.reshape(pr_var, (-1, options['max_pr_per_dx'])))",
                            "Call"
                        ],
                        [
                            "emb_activation(pr_visit)",
                            "Call"
                        ],
                        [
                            "pr_visit * tf.reshape(pr_mask, (-1, options['max_pr_per_dx']))[:, :, None]",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(pr_visit, axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dense_71": {
                "variable": {
                    "value": "W_dp",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['pr_emb_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "order_activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'relu'",
                            "str"
                        ],
                        [
                            "tf.nn.sigmoid",
                            "Attribute"
                        ],
                        [
                            "tf.nn.tanh",
                            "Attribute"
                        ],
                        [
                            "tf.nn.relu",
                            "Attribute"
                        ],
                        [
                            "'sigmoid'",
                            "Method Argument"
                        ]
                    ]
                },
                "name": {
                    "value": "W_dp",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_76": {
                "variable": {
                    "value": "W_dx",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['dxobj_emb_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "order_activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'relu'",
                            "str"
                        ],
                        [
                            "tf.nn.sigmoid",
                            "Attribute"
                        ],
                        [
                            "tf.nn.tanh",
                            "Attribute"
                        ],
                        [
                            "tf.nn.relu",
                            "Attribute"
                        ],
                        [
                            "'sigmoid'",
                            "Method Argument"
                        ]
                    ]
                },
                "name": {
                    "value": "W_dxobj",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reshape_78": {
                "variable": {
                    "value": "pre_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dx_obj",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dx_visit + dr_visit + dp_visit",
                            "BinOp"
                        ],
                        [
                            "W_dx(dx_obj)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['max_dx_per_visit'], options['dxobj_emb_size'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_80": {
                "variable": {
                    "value": "visit",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "pre_visit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(dx_obj, (-1, options['max_dx_per_visit'], options['dxobj_emb_size']))",
                            "Call"
                        ],
                        [
                            "pre_visit * tf.reshape(dx_mask, (-1, options['max_dx_per_visit']))[:, :, None]",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_81": {
                "variable": {
                    "value": "seq_visit",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "visit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(pre_visit, axis=1)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['batch_size'], options['visit_emb_size'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "placeholder_83": {
                "variable": {
                    "value": "seq_length",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "options['batch_size']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "locals().copy()",
                            "Call"
                        ],
                        [
                            "options",
                            "Method Argument"
                        ],
                        [
                            "options",
                            "Method Argument"
                        ]
                    ]
                },
                "name": {
                    "value": "seq_length",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GRUCell_84": {
                "variable": {
                    "value": "rnn_cell",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['rnn_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "emb2rnn",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_85": {
                "variable": {
                    "value": "rnn2pred",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['output_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "rnn2pred",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_86": {
                "variable": {
                    "value": "rnn2aux_dx",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['num_dx']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "rnn2aux_dx",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_87": {
                "variable": {
                    "value": "rnn2aux_rx",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['num_rx']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "rnn2aux_rx",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_88": {
                "variable": {
                    "value": "rnn2aux_pr",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "options['num_pr']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "rnn2aux_pr",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dynamic_rnn_90": {
                "variable": {
                    "value": "(_, final_states)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell": {
                    "value": "rnn_cell",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.keras.layers.GRUCell(options['rnn_size'], name='emb2rnn')",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "seq_visit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(visit, (-1, options['batch_size'], options['visit_emb_size']))",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "time_major": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "sequence_length": {
                    "value": "seq_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.int32, shape=options['batch_size'], name='seq_length')",
                            "Call"
                        ],
                        [
                            "mime_util.st_preprocess_hf_aux(batch_x, options)",
                            "Call"
                        ],
                        [
                            "mime_util.st_preprocess_hf_aux(batch_x, options)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_91": {
                "variable": {
                    "value": "preds",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "rnn2pred(final_states)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "placeholder_92": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "options['batch_size']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "locals().copy()",
                            "Call"
                        ],
                        [
                            "options",
                            "Method Argument"
                        ],
                        [
                            "options",
                            "Method Argument"
                        ]
                    ]
                },
                "name": {
                    "value": "labels",
                    "type": "str",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_96": {
                "variable": {
                    "value": "aux_dx_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "onehot_labels": {
                    "value": "tf.reshape(dx_label, (-1, options['num_dx']))",
                    "type": "Call",
                    "possible_values": []
                },
                "logits": {
                    "value": "aux_dx_preds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "rnn2aux_dx(dx_obj) * tf.reshape(dx_mask, (-1, 1))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sigmoid_cross_entropy_99": {
                "variable": {
                    "value": "aux_rx_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "multi_class_labels": {
                    "value": "tf.reshape(rx_label, (-1, options['num_rx']))",
                    "type": "Call",
                    "possible_values": []
                },
                "logits": {
                    "value": "aux_rx_preds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "rnn2aux_rx(dx_obj) * tf.reshape(dx_mask, (-1, 1))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sigmoid_cross_entropy_102": {
                "variable": {
                    "value": "aux_pr_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "multi_class_labels": {
                    "value": "tf.reshape(pr_label, (-1, options['num_pr']))",
                    "type": "Call",
                    "possible_values": []
                },
                "logits": {
                    "value": "aux_pr_preds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "rnn2aux_pr(dx_obj) * tf.reshape(dx_mask, (-1, 1))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "trainable_variables_178": {
                "variable": {
                    "value": "all_vars",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "constant_179": {
                "variable": {
                    "value": "L2_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_185": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "options['learning_rate']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "locals().copy()",
                            "Call"
                        ],
                        [
                            "options",
                            "Method Argument"
                        ],
                        [
                            "options",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Saver_196": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "max_to_keep": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_55": {
                "tensor": {
                    "value": "dx_var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.int32, shape=(None, options['batch_size'], options['max_dx_per_visit']), name='dx_var')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['max_dx_per_visit'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_59": {
                "tensor": {
                    "value": "rx_var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.int32, shape=(None, options['batch_size'], options['max_dx_per_visit'], options['max_rx_per_dx']), name='rx_var')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['max_rx_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_67": {
                "tensor": {
                    "value": "pr_var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.int32, shape=(None, options['batch_size'], options['max_dx_per_visit'], options['max_pr_per_dx']), name='pr_var')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['max_pr_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_mean_93": {
                "input_tensor": {
                    "value": "labels * tf.log(preds + 1e-10) + (1.0 - labels) * tf.log(1.0 - preds + 1e-10)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_95": {
                "tensor": {
                    "value": "dx_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit']), name='dx_mask')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_96": {
                "tensor": {
                    "value": "dx_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit'], options['num_dx']), name='dx_label')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['num_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_98": {
                "tensor": {
                    "value": "dx_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit']), name='dx_mask')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_99": {
                "tensor": {
                    "value": "rx_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit'], options['num_rx']), name='rx_label')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['num_rx'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_101": {
                "tensor": {
                    "value": "dx_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit']), name='dx_mask')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_102": {
                "tensor": {
                    "value": "pr_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit'], options['num_pr']), name='pr_label')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['num_pr'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_183": {
                "input_tensor": {
                    "value": "var ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Session_197": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_random_seed_270": {
                "seed": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "i in range(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_61": {
                "tensor": {
                    "value": "rx_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit'], options['max_rx_per_dx']), name='rx_mask')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['max_rx_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_69": {
                "tensor": {
                    "value": "pr_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit'], options['max_pr_per_dx']), name='pr_mask')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['max_pr_per_dx'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_79": {
                "tensor": {
                    "value": "dx_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=(None, options['batch_size'], options['max_dx_per_visit']), name='dx_mask')",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, options['max_dx_per_visit'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "global_variables_initializer_198": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reset_default_graph_274": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_93": {
                "x": {
                    "value": "1.0 - preds + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "mime_util.py": {
        "sklearn": {
            "train_test_split_29": {
                "variable": {
                    "value": "(train_seqs, temp_seqs, train_labels, temp_labels)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1234",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "train_test_split_30": {
                "variable": {
                    "value": "(valid_seqs, test_seqs, valid_labels, test_labels)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "temp_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "temp_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1234",
                            "Method Argument"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "trainable_variables_184": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}