{
    "python/asap_gpu.py": {
        "torch": {
            "set_printoptions_7": {
                "precision": {
                    "value": "3",
                    "possible_values": []
                },
                "sci_mode": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Normal_11": {
                "variable": {
                    "value": "normal",
                    "possible_values": []
                },
                "loc": {
                    "value": "torch.tensor(0.0, device=x.device)",
                    "possible_values": []
                },
                "scale": {
                    "value": "torch.tensor(1.0, device=x.device)",
                    "possible_values": []
                }
            },
            "zeros_30": {
                "variable": {
                    "value": "Ms",
                    "possible_values": []
                },
                "*size": {
                    "value": "*dim",
                    "possible_values": []
                },
                "out": {
                    "value": "M",
                    "possible_values": []
                }
            },
            "full_31": {
                "variable": {
                    "value": "Ps",
                    "possible_values": []
                },
                "size": {
                    "value": "(*dim, M)",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "1 / pv",
                    "possible_values": []
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "Mgs",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "possible_values": []
                },
                "out": {
                    "value": "*dim",
                    "possible_values": []
                },
                "dtype": {
                    "value": "N",
                    "possible_values": [
                        [
                            "dist.Normal(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "Pgs",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "possible_values": []
                },
                "out": {
                    "value": "*dim",
                    "possible_values": []
                },
                "dtype": {
                    "value": "N",
                    "possible_values": [
                        [
                            "dist.Normal(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "Msg",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "possible_values": []
                },
                "out": {
                    "value": "*dim",
                    "possible_values": []
                },
                "dtype": {
                    "value": "N",
                    "possible_values": [
                        [
                            "dist.Normal(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_37": {
                "variable": {
                    "value": "Psg",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "possible_values": []
                },
                "out": {
                    "value": "*dim",
                    "possible_values": []
                },
                "dtype": {
                    "value": "N",
                    "possible_values": [
                        [
                            "dist.Normal(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "meshgrid_78": {
                "variable": {
                    "value": "(mi, mj)",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "(m, m)",
                    "possible_values": []
                }
            },
            "meshgrid_79": {
                "variable": {
                    "value": "(vi, vj)",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "(v, v)",
                    "possible_values": []
                }
            },
            "Normal_80": {
                "variable": {
                    "value": "N",
                    "possible_values": []
                },
                "loc": {
                    "value": "0",
                    "possible_values": []
                },
                "scale": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Normal_109": {
                "variable": {
                    "value": "normal0",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean_1",
                    "possible_values": []
                },
                "scale": {
                    "value": "std_1",
                    "possible_values": []
                }
            },
            "Normal_110": {
                "variable": {
                    "value": "normal",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean_2",
                    "possible_values": []
                },
                "scale": {
                    "value": "std_2",
                    "possible_values": []
                }
            },
            "stack_142": {
                "variable": {
                    "value": "G0",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.tensor(cmp_matrix.row).long(), torch.tensor(cmp_matrix.col).long(), torch.tensor(cmp_matrix.data).long())",
                    "possible_values": []
                }
            },
            "nonzero_157": {
                "variable": {
                    "value": "(I, J)",
                    "possible_values": []
                },
                "input": {
                    "value": "(1 - torch.eye(M)).to(G0.device)",
                    "possible_values": []
                },
                "as_tuple": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "unbind_157": {
                "variable": {
                    "value": "(I, J)",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "possible_values": []
                }
            },
            "zeros_158": {
                "variable": {
                    "value": "G",
                    "possible_values": []
                },
                "*size": {
                    "value": "G0.size(0)",
                    "possible_values": []
                },
                "out": {
                    "value": "I.size(0)",
                    "possible_values": []
                },
                "dtype": {
                    "value": "G0.size(1) + 1",
                    "possible_values": []
                }
            },
            "tensor_12": {
                "data": {
                    "value": "0.0",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "possible_values": []
                }
            },
            "tensor_13": {
                "data": {
                    "value": "1.0",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "possible_values": []
                }
            },
            "full_39": {
                "size": {
                    "value": "(*dim, M)",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "value",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "stack_43": {
                "tensors": {
                    "value": "(Am.gather(-1, idx[I]), Am.gather(-1, idx[J]))",
                    "possible_values": []
                }
            },
            "Normal_68": {
                "loc": {
                    "value": "Ms",
                    "possible_values": [
                        [
                            "torch.zeros(*dim, M).to(G.device)",
                            "Call"
                        ],
                        [
                            "n2m(Pgs * Mgs * count) / Ps",
                            "BinOp"
                        ]
                    ]
                },
                "scale": {
                    "value": "1 / Ps.sqrt()",
                    "possible_values": []
                }
            },
            "tensor_143": {
                "data": {
                    "value": "cmp_matrix.row",
                    "possible_values": []
                }
            },
            "tensor_144": {
                "data": {
                    "value": "cmp_matrix.col",
                    "possible_values": []
                }
            },
            "tensor_145": {
                "data": {
                    "value": "cmp_matrix.data",
                    "possible_values": []
                }
            },
            "eye_157": {
                "n": {
                    "value": "M",
                    "possible_values": []
                }
            }
        }
    }
}