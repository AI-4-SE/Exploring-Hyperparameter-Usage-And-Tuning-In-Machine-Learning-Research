[
    {
        "full_name": "sklearn.calibration.CalibratedClassifierCV",
        "name": "CalibratedClassifierCV",
        "params": {
            "base_estimator": "None",
            "cv": "None",
            "ensemble": "True",
            "method": "'sigmoid'",
            "n_jobs": "None"
        }
    },
    {
        "full_name": "sklearn.cluster.AffinityPropagation",
        "name": "AffinityPropagation",
        "params": {
            "affinity": "'euclidean'",
            "convergence_iter": "15",
            "copy": "True",
            "damping": "0.5",
            "max_iter": "200",
            "preference": "None",
            "random_state": "None",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.cluster.AgglomerativeClustering",
        "name": "AgglomerativeClustering",
        "params": {
            "affinity": "'euclidean'",
            "compute_distances": "False",
            "compute_full_tree": "'auto'",
            "connectivity": "None",
            "distance_threshold": "None",
            "linkage": "'ward'",
            "memory": "None",
            "n_clusters": "2"
        }
    },
    {
        "full_name": "sklearn.cluster.Birch",
        "name": "Birch",
        "params": {
            "branching_factor": "50",
            "compute_labels": "True",
            "copy": "True",
            "n_clusters": "3",
            "threshold": "0.5"
        }
    },
    {
        "full_name": "sklearn.cluster.DBSCAN",
        "name": "DBSCAN",
        "params": {
            "algorithm": "'auto'",
            "eps": "0.5",
            "leaf_size": "30",
            "metric": "'euclidean'",
            "metric_params": "None",
            "min_samples": "5",
            "n_jobs": "None",
            "p": "None"
        }
    },
    {
        "full_name": "sklearn.cluster.FeatureAgglomeration",
        "name": "FeatureAgglomeration",
        "params": {
            "affinity": "'euclidean'",
            "compute_distances": "False",
            "compute_full_tree": "'auto'",
            "connectivity": "None",
            "distance_threshold": "None",
            "linkage": "'ward'",
            "memory": "None",
            "n_clusters": "2",
            "pooling_func": "<function mean>"
        }
    },
    {
        "full_name": "sklearn.cluster.KMeans",
        "name": "KMeans",
        "params": {
            "algorithm": "'lloyd'",
            "copy_x": "True",
            "init": "'k-means++'",
            "max_iter": "300",
            "n_clusters": "8",
            "n_init": "10",
            "random_state": "None",
            "tol": "0.0001",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.cluster.MiniBatchKMeans",
        "name": "MiniBatchKMeans",
        "params": {
            "batch_size": "1024",
            "compute_labels": "True",
            "init": "'k-means++'",
            "init_size": "None",
            "max_iter": "100",
            "max_no_improvement": "10",
            "n_clusters": "8",
            "n_init": "3",
            "random_state": "None",
            "reassignment_ratio": "0.01",
            "tol": "0.0",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.cluster.MeanShift",
        "name": "MeanShift",
        "params": {
            "bandwidth": "None",
            "bin_seeding": "False",
            "cluster_all": "True",
            "max_iter": "300",
            "min_bin_freq": "1",
            "n_jobs": "None",
            "seeds": "None"
        }
    },
    {
        "full_name": "sklearn.cluster.OPTICS",
        "name": "OPTICS",
        "params": {
            "algorithm": "'auto'",
            "cluster_method": "'xi'",
            "eps": "None",
            "leaf_size": "30",
            "max_eps": "inf",
            "memory": "None",
            "metric": "'minkowski'",
            "metric_params": "None",
            "min_cluster_size": "None",
            "min_samples": "5",
            "n_jobs": "None",
            "p": "2",
            "predecessor_correction": "True",
            "xi": "0.05"
        }
    },
    {
        "full_name": "sklearn.cluster.SpectralClustering",
        "name": "SpectralClustering",
        "params": {
            "affinity": "'rbf'",
            "assign_labels": "'kmeans'",
            "coef0": "1",
            "degree": "3",
            "eigen_solver": "None",
            "eigen_tol": "0.0",
            "gamma": "1.0",
            "kernel_params": "None",
            "n_clusters": "8",
            "n_components": "None",
            "n_init": "10",
            "n_jobs": "None",
            "n_neighbors": "10",
            "random_state": "None",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.compose.TransformedTargetRegressor",
        "name": "TransformedTargetRegressor",
        "params": {
            "check_inverse": "True",
            "func": "None",
            "inverse_func": "None",
            "regressor": "None",
            "transformer": "None"
        }
    },
    {
        "full_name": "sklearn.cross_decomposition.CCA",
        "name": "CCA",
        "params": {
            "copy": "True",
            "max_iter": "500",
            "n_components": "2",
            "scale": "True",
            "tol": "1e-06"
        }
    },
    {
        "full_name": "sklearn.cross_decomposition.PLSCanonical",
        "name": "PLSCanonical",
        "params": {
            "algorithm": "'nipals'",
            "copy": "True",
            "max_iter": "500",
            "n_components": "2",
            "scale": "True",
            "tol": "1e-06"
        }
    },
    {
        "full_name": "sklearn.cross_decomposition.PLSRegression",
        "name": "PLSRegression",
        "params": {
            "copy": "True",
            "max_iter": "500",
            "n_components": "2",
            "scale": "True",
            "tol": "1e-06"
        }
    },
    {
        "full_name": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
        "name": "LinearDiscriminantAnalysis",
        "params": {
            "covariance_estimator": "None",
            "n_components": "None",
            "priors": "None",
            "shrinkage": "None",
            "solver": "'svd'",
            "store_covariance": "False",
            "tol": "0.0001"
        }
    },
    {
        "full_name": "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
        "name": "QuadraticDiscriminantAnalysis",
        "params": {
            "priors": "None",
            "reg_param": "0.0",
            "store_covariance": "False",
            "tol": "0.0001"
        }
    },
    {
        "full_name": "sklearn.dummy.DummyClassifier",
        "name": "DummyClassifier",
        "params": {
            "constant": "None",
            "random_state": "None",
            "strategy": "'prior'"
        }
    },
    {
        "full_name": "sklearn.dummy.DummyRegressor",
        "name": "DummyRegressor",
        "params": {
            "constant": "None",
            "quantile": "None",
            "strategy": "'mean'"
        }
    },
    {
        "full_name": "sklearn.ensemble.AdaBoostClassifier",
        "name": "AdaBoostClassifier",
        "params": {
            "algorithm": "'SAMME.R'",
            "base_estimator": "None",
            "learning_rate": "1.0",
            "n_estimators": "50",
            "random_state": "None"
        }
    },
    {
        "full_name": "sklearn.ensemble.AdaBoostRegressor",
        "name": "AdaBoostRegressor",
        "params": {
            "base_estimator": "None",
            "learning_rate": "1.0",
            "loss": "'linear'",
            "n_estimators": "50",
            "random_state": "None"
        }
    },
    {
        "full_name": "sklearn.ensemble.BaggingClassifier",
        "name": "BaggingClassifier",
        "params": {
            "base_estimator": "None",
            "bootstrap": "True",
            "bootstrap_features": "False",
            "max_features": "1.0",
            "max_samples": "1.0",
            "n_estimators": "10",
            "n_jobs": "None",
            "oob_score": "False",
            "random_state": "None",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.BaggingRegressor",
        "name": "BaggingRegressor",
        "params": {
            "base_estimator": "None",
            "bootstrap": "True",
            "bootstrap_features": "False",
            "max_features": "1.0",
            "max_samples": "1.0",
            "n_estimators": "10",
            "n_jobs": "None",
            "oob_score": "False",
            "random_state": "None",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.ExtraTreesClassifier",
        "name": "ExtraTreesClassifier",
        "params": {
            "bootstrap": "False",
            "ccp_alpha": "0.0",
            "class_weight": "None",
            "criterion": "'gini'",
            "max_depth": "None",
            "max_features": "'sqrt'",
            "max_leaf_nodes": "None",
            "max_samples": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "n_estimators": "100",
            "n_jobs": "None",
            "oob_score": "False",
            "random_state": "None",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.ExtraTreesRegressor",
        "name": "ExtraTreesRegressor",
        "params": {
            "bootstrap": "False",
            "ccp_alpha": "0.0",
            "criterion": "'squared_error'",
            "max_depth": "None",
            "max_features": "1.0",
            "max_leaf_nodes": "None",
            "max_samples": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "n_estimators": "100",
            "n_jobs": "None",
            "oob_score": "False",
            "random_state": "None",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.GradientBoostingClassifier",
        "name": "GradientBoostingClassifier",
        "params": {
            "ccp_alpha": "0.0",
            "criterion": "'friedman_mse'",
            "init": "None",
            "learning_rate": "0.1",
            "loss": "'log_loss'",
            "max_depth": "3",
            "max_features": "None",
            "max_leaf_nodes": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "n_estimators": "100",
            "n_iter_no_change": "None",
            "random_state": "None",
            "subsample": "1.0",
            "tol": "0.0001",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.GradientBoostingRegressor",
        "name": "GradientBoostingRegressor",
        "params": {
            "alpha": "0.9",
            "ccp_alpha": "0.0",
            "criterion": "'friedman_mse'",
            "init": "None",
            "learning_rate": "0.1",
            "loss": "'squared_error'",
            "max_depth": "3",
            "max_features": "None",
            "max_leaf_nodes": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "n_estimators": "100",
            "n_iter_no_change": "None",
            "random_state": "None",
            "subsample": "1.0",
            "tol": "0.0001",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.RandomForestClassifier",
        "name": "RandomForestClassifier",
        "params": {
            "bootstrap": "True",
            "ccp_alpha": "0.0",
            "class_weight": "None",
            "criterion": "'gini'",
            "max_depth": "None",
            "max_features": "'sqrt'",
            "max_leaf_nodes": "None",
            "max_samples": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "n_estimators": "100",
            "n_jobs": "None",
            "oob_score": "False",
            "random_state": "None",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.RandomForestRegressor",
        "name": "RandomForestRegressor",
        "params": {
            "bootstrap": "True",
            "ccp_alpha": "0.0",
            "criterion": "'squared_error'",
            "max_depth": "None",
            "max_features": "1.0",
            "max_leaf_nodes": "None",
            "max_samples": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "n_estimators": "100",
            "n_jobs": "None",
            "oob_score": "False",
            "random_state": "None",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.StackingClassifier",
        "name": "StackingClassifier",
        "params": {
            "cv": "None",
            "estimators": null,
            "final_estimator": "None",
            "n_jobs": "None",
            "passthrough": "False",
            "stack_method": "'auto'",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.ensemble.StackingRegressor",
        "name": "StackingRegressor",
        "params": {
            "cv": "None",
            "estimators": null,
            "final_estimator": "None",
            "n_jobs": "None",
            "passthrough": "False",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.ensemble.VotingClassifier",
        "name": "VotingClassifier",
        "params": {
            "estimators": null,
            "flatten_transform": "True",
            "n_jobs": "None",
            "verbose": "False",
            "voting": "'hard'",
            "weights": "None"
        }
    },
    {
        "full_name": "sklearn.ensemble.VotingRegressor",
        "name": "VotingRegressor",
        "params": {
            "estimators": null,
            "n_jobs": "None",
            "verbose": "False",
            "weights": "None"
        }
    },
    {
        "full_name": "sklearn.ensemble.HistGradientBoostingRegressor",
        "name": "HistGradientBoostingRegressor",
        "params": {
            "categorical_features": "None",
            "early_stopping": "'auto'",
            "l2_regularization": "0.0",
            "learning_rate": "0.1",
            "loss": "'squared_error'",
            "max_bins": "255",
            "max_depth": "None",
            "max_iter": "100",
            "max_leaf_nodes": "31",
            "min_samples_leaf": "20",
            "monotonic_cst": "None",
            "n_iter_no_change": "10",
            "quantile": "None",
            "random_state": "None",
            "scoring": "'loss'",
            "tol": "1e-07",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.ensemble.HistGradientBoostingClassifier",
        "name": "HistGradientBoostingClassifier",
        "params": {
            "categorical_features": "None",
            "early_stopping": "'auto'",
            "l2_regularization": "0.0",
            "learning_rate": "0.1",
            "loss": "'log_loss'",
            "max_bins": "255",
            "max_depth": "None",
            "max_iter": "100",
            "max_leaf_nodes": "31",
            "min_samples_leaf": "20",
            "monotonic_cst": "None",
            "n_iter_no_change": "10",
            "random_state": "None",
            "scoring": "'loss'",
            "tol": "1e-07",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.gaussian_process.GaussianProcessClassifier",
        "name": "GaussianProcessClassifier",
        "params": {
            "copy_X_train": "True",
            "kernel": "None",
            "max_iter_predict": "100",
            "multi_class": "'one_vs_rest'",
            "n_jobs": "None",
            "n_restarts_optimizer": "0",
            "optimizer": "'fmin_l_bfgs_b'",
            "random_state": "None",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.gaussian_process.GaussianProcessRegressor",
        "name": "GaussianProcessRegressor",
        "params": {
            "alpha": "1e-10",
            "copy_X_train": "True",
            "kernel": "None",
            "n_restarts_optimizer": "0",
            "normalize_y": "False",
            "optimizer": "'fmin_l_bfgs_b'",
            "random_state": "None"
        }
    },
    {
        "full_name": "sklearn.isotonic.IsotonicRegression",
        "name": "IsotonicRegression",
        "params": {
            "increasing": "True",
            "out_of_bounds": "'nan'",
            "y_max": "None",
            "y_min": "None"
        }
    },
    {
        "full_name": "sklearn.kernel_ridge.KernelRidge",
        "name": "KernelRidge",
        "params": {
            "alpha": "1",
            "coef0": "1",
            "degree": "3",
            "gamma": "None",
            "kernel": "'linear'",
            "kernel_params": "None"
        }
    },
    {
        "full_name": "sklearn.linear_model.LogisticRegression",
        "name": "LogisticRegression",
        "params": {
            "C": "1.0",
            "class_weight": "None",
            "dual": "False",
            "fit_intercept": "True",
            "intercept_scaling": "1",
            "l1_ratio": "None",
            "max_iter": "100",
            "multi_class": "'auto'",
            "n_jobs": "None",
            "penalty": "'l2'",
            "random_state": "None",
            "solver": "'lbfgs'",
            "tol": "0.0001",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.LogisticRegressionCV",
        "name": "LogisticRegressionCV",
        "params": {
            "Cs": "10",
            "class_weight": "None",
            "cv": "None",
            "dual": "False",
            "fit_intercept": "True",
            "intercept_scaling": "1.0",
            "l1_ratios": "None",
            "max_iter": "100",
            "multi_class": "'auto'",
            "n_jobs": "None",
            "penalty": "'l2'",
            "random_state": "None",
            "refit": "True",
            "scoring": "None",
            "solver": "'lbfgs'",
            "tol": "0.0001",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.linear_model.PassiveAggressiveClassifier",
        "name": "PassiveAggressiveClassifier",
        "params": {
            "C": "1.0",
            "average": "False",
            "class_weight": "None",
            "early_stopping": "False",
            "fit_intercept": "True",
            "loss": "'hinge'",
            "max_iter": "1000",
            "n_iter_no_change": "5",
            "n_jobs": "None",
            "random_state": "None",
            "shuffle": "True",
            "tol": "0.001",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.Perceptron",
        "name": "Perceptron",
        "params": {
            "alpha": "0.0001",
            "class_weight": "None",
            "early_stopping": "False",
            "eta0": "1.0",
            "fit_intercept": "True",
            "l1_ratio": "0.15",
            "max_iter": "1000",
            "n_iter_no_change": "5",
            "n_jobs": "None",
            "penalty": "None",
            "random_state": "0",
            "shuffle": "True",
            "tol": "0.001",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.RidgeClassifier",
        "name": "RidgeClassifier",
        "params": {
            "alpha": "1.0",
            "class_weight": "None",
            "copy_X": "True",
            "fit_intercept": "True",
            "max_iter": "None",
            "normalize": "'deprecated'",
            "positive": "False",
            "random_state": "None",
            "solver": "'auto'",
            "tol": "0.001"
        }
    },
    {
        "full_name": "sklearn.linear_model.RidgeClassifierCV",
        "name": "RidgeClassifierCV",
        "params": {
            "alphas": "(0.1, 1.0, 10.0)",
            "class_weight": "None",
            "cv": "None",
            "fit_intercept": "True",
            "normalize": "'deprecated'",
            "scoring": "None",
            "store_cv_values": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.SGDClassifier",
        "name": "SGDClassifier",
        "params": {
            "alpha": "0.0001",
            "average": "False",
            "class_weight": "None",
            "early_stopping": "False",
            "epsilon": "0.1",
            "eta0": "0.0",
            "fit_intercept": "True",
            "l1_ratio": "0.15",
            "learning_rate": "'optimal'",
            "loss": "'hinge'",
            "max_iter": "1000",
            "n_iter_no_change": "5",
            "n_jobs": "None",
            "penalty": "'l2'",
            "power_t": "0.5",
            "random_state": "None",
            "shuffle": "True",
            "tol": "0.001",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.LinearRegression",
        "name": "LinearRegression",
        "params": {
            "copy_X": "True",
            "fit_intercept": "True",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "positive": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.Ridge",
        "name": "Ridge",
        "params": {
            "alpha": "1.0",
            "copy_X": "True",
            "fit_intercept": "True",
            "max_iter": "None",
            "normalize": "'deprecated'",
            "positive": "False",
            "random_state": "None",
            "solver": "'auto'",
            "tol": "0.001"
        }
    },
    {
        "full_name": "sklearn.linear_model.RidgeCV",
        "name": "RidgeCV",
        "params": {
            "alpha_per_target": "False",
            "alphas": "(0.1, 1.0, 10.0)",
            "cv": "None",
            "fit_intercept": "True",
            "gcv_mode": "None",
            "normalize": "'deprecated'",
            "scoring": "None",
            "store_cv_values": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.SGDRegressor",
        "name": "SGDRegressor",
        "params": {
            "alpha": "0.0001",
            "average": "False",
            "early_stopping": "False",
            "epsilon": "0.1",
            "eta0": "0.01",
            "fit_intercept": "True",
            "l1_ratio": "0.15",
            "learning_rate": "'invscaling'",
            "loss": "'squared_error'",
            "max_iter": "1000",
            "n_iter_no_change": "5",
            "penalty": "'l2'",
            "power_t": "0.25",
            "random_state": "None",
            "shuffle": "True",
            "tol": "0.001",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.ElasticNet",
        "name": "ElasticNet",
        "params": {
            "alpha": "1.0",
            "copy_X": "True",
            "fit_intercept": "True",
            "l1_ratio": "0.5",
            "max_iter": "1000",
            "normalize": "'deprecated'",
            "positive": "False",
            "precompute": "False",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.ElasticNetCV",
        "name": "ElasticNetCV",
        "params": {
            "alphas": "None",
            "copy_X": "True",
            "cv": "None",
            "eps": "0.001",
            "fit_intercept": "True",
            "l1_ratio": "0.5",
            "max_iter": "1000",
            "n_alphas": "100",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "positive": "False",
            "precompute": "'auto'",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.linear_model.Lars",
        "name": "Lars",
        "params": {
            "copy_X": "True",
            "eps": "2.220446049250313e-16",
            "fit_intercept": "True",
            "fit_path": "True",
            "jitter": "None",
            "n_nonzero_coefs": "500",
            "normalize": "'deprecated'",
            "precompute": "'auto'",
            "random_state": "None",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.LarsCV",
        "name": "LarsCV",
        "params": {
            "copy_X": "True",
            "cv": "None",
            "eps": "2.220446049250313e-16",
            "fit_intercept": "True",
            "max_iter": "500",
            "max_n_alphas": "1000",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "precompute": "'auto'",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.Lasso",
        "name": "Lasso",
        "params": {
            "alpha": "1.0",
            "copy_X": "True",
            "fit_intercept": "True",
            "max_iter": "1000",
            "normalize": "'deprecated'",
            "positive": "False",
            "precompute": "False",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.LassoCV",
        "name": "LassoCV",
        "params": {
            "alphas": "None",
            "copy_X": "True",
            "cv": "None",
            "eps": "0.001",
            "fit_intercept": "True",
            "max_iter": "1000",
            "n_alphas": "100",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "positive": "False",
            "precompute": "'auto'",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.LassoLars",
        "name": "LassoLars",
        "params": {
            "alpha": "1.0",
            "copy_X": "True",
            "eps": "2.220446049250313e-16",
            "fit_intercept": "True",
            "fit_path": "True",
            "jitter": "None",
            "max_iter": "500",
            "normalize": "'deprecated'",
            "positive": "False",
            "precompute": "'auto'",
            "random_state": "None",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.LassoLarsCV",
        "name": "LassoLarsCV",
        "params": {
            "copy_X": "True",
            "cv": "None",
            "eps": "2.220446049250313e-16",
            "fit_intercept": "True",
            "max_iter": "500",
            "max_n_alphas": "1000",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "positive": "False",
            "precompute": "'auto'",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.LassoLarsIC",
        "name": "LassoLarsIC",
        "params": {
            "copy_X": "True",
            "criterion": "'aic'",
            "eps": "2.220446049250313e-16",
            "fit_intercept": "True",
            "max_iter": "500",
            "noise_variance": "None",
            "normalize": "'deprecated'",
            "positive": "False",
            "precompute": "'auto'",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.OrthogonalMatchingPursuit",
        "name": "OrthogonalMatchingPursuit",
        "params": {
            "fit_intercept": "True",
            "n_nonzero_coefs": "None",
            "normalize": "'deprecated'",
            "precompute": "'auto'",
            "tol": "None"
        }
    },
    {
        "full_name": "sklearn.linear_model.OrthogonalMatchingPursuitCV",
        "name": "OrthogonalMatchingPursuitCV",
        "params": {
            "copy": "True",
            "cv": "None",
            "fit_intercept": "True",
            "max_iter": "None",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.ARDRegression",
        "name": "ARDRegression",
        "params": {
            "alpha_1": "1e-06",
            "alpha_2": "1e-06",
            "compute_score": "False",
            "copy_X": "True",
            "fit_intercept": "True",
            "lambda_1": "1e-06",
            "lambda_2": "1e-06",
            "n_iter": "300",
            "normalize": "'deprecated'",
            "threshold_lambda": "10000.0",
            "tol": "0.001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.BayesianRidge",
        "name": "BayesianRidge",
        "params": {
            "alpha_1": "1e-06",
            "alpha_2": "1e-06",
            "alpha_init": "None",
            "compute_score": "False",
            "copy_X": "True",
            "fit_intercept": "True",
            "lambda_1": "1e-06",
            "lambda_2": "1e-06",
            "lambda_init": "None",
            "n_iter": "300",
            "normalize": "'deprecated'",
            "tol": "0.001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.MultiTaskElasticNet",
        "name": "MultiTaskElasticNet",
        "params": {
            "alpha": "1.0",
            "copy_X": "True",
            "fit_intercept": "True",
            "l1_ratio": "0.5",
            "max_iter": "1000",
            "normalize": "'deprecated'",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.MultiTaskElasticNetCV",
        "name": "MultiTaskElasticNetCV",
        "params": {
            "alphas": "None",
            "copy_X": "True",
            "cv": "None",
            "eps": "0.001",
            "fit_intercept": "True",
            "l1_ratio": "0.5",
            "max_iter": "1000",
            "n_alphas": "100",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.linear_model.MultiTaskLasso",
        "name": "MultiTaskLasso",
        "params": {
            "alpha": "1.0",
            "copy_X": "True",
            "fit_intercept": "True",
            "max_iter": "1000",
            "normalize": "'deprecated'",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.MultiTaskLassoCV",
        "name": "MultiTaskLassoCV",
        "params": {
            "alphas": "None",
            "copy_X": "True",
            "cv": "None",
            "eps": "0.001",
            "fit_intercept": "True",
            "max_iter": "1000",
            "n_alphas": "100",
            "n_jobs": "None",
            "normalize": "'deprecated'",
            "random_state": "None",
            "selection": "'cyclic'",
            "tol": "0.0001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.HuberRegressor",
        "name": "HuberRegressor",
        "params": {
            "alpha": "0.0001",
            "epsilon": "1.35",
            "fit_intercept": "True",
            "max_iter": "100",
            "tol": "1e-05",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.RANSACRegressor",
        "name": "RANSACRegressor",
        "params": {
            "base_estimator": "'deprecated'",
            "estimator": "None",
            "is_data_valid": "None",
            "is_model_valid": "None",
            "loss": "'absolute_error'",
            "max_skips": "inf",
            "max_trials": "100",
            "min_samples": "None",
            "random_state": "None",
            "residual_threshold": "None",
            "stop_n_inliers": "inf",
            "stop_probability": "0.99",
            "stop_score": "inf"
        }
    },
    {
        "full_name": "sklearn.linear_model.TheilSenRegressor",
        "name": "TheilSenRegressor",
        "params": {
            "copy_X": "True",
            "fit_intercept": "True",
            "max_iter": "300",
            "max_subpopulation": "10000.0",
            "n_jobs": "None",
            "n_subsamples": "None",
            "random_state": "None",
            "tol": "0.001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.PoissonRegressor",
        "name": "PoissonRegressor",
        "params": {
            "alpha": "1.0",
            "fit_intercept": "True",
            "max_iter": "100",
            "tol": "0.0001",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.TweedieRegressor",
        "name": "TweedieRegressor",
        "params": {
            "alpha": "1.0",
            "fit_intercept": "True",
            "link": "'auto'",
            "max_iter": "100",
            "power": "0.0",
            "tol": "0.0001",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.GammaRegressor",
        "name": "GammaRegressor",
        "params": {
            "alpha": "1.0",
            "fit_intercept": "True",
            "max_iter": "100",
            "tol": "0.0001",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.linear_model.PassiveAggressiveRegressor",
        "name": "PassiveAggressiveRegressor",
        "params": {
            "C": "1.0",
            "average": "False",
            "early_stopping": "False",
            "epsilon": "0.1",
            "fit_intercept": "True",
            "loss": "'epsilon_insensitive'",
            "max_iter": "1000",
            "n_iter_no_change": "5",
            "random_state": "None",
            "shuffle": "True",
            "tol": "0.001",
            "validation_fraction": "0.1",
            "verbose": "0",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.multiclass.OneVsRestClassifier",
        "name": "OneVsRestClassifier",
        "params": {
            "estimator": null,
            "n_jobs": "None",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.multiclass.OneVsOneClassifier",
        "name": "OneVsOneClassifier",
        "params": {
            "estimator": null,
            "n_jobs": "None"
        }
    },
    {
        "full_name": "sklearn.multiclass.OutputCodeClassifier",
        "name": "OutputCodeClassifier",
        "params": {
            "code_size": "1.5",
            "estimator": null,
            "n_jobs": "None",
            "random_state": "None"
        }
    },
    {
        "full_name": "sklearn.multioutput.ClassifierChain",
        "name": "ClassifierChain",
        "params": {
            "base_estimator": null,
            "cv": "None",
            "order": "None",
            "random_state": "None"
        }
    },
    {
        "full_name": "sklearn.multioutput.MultiOutputRegressor",
        "name": "MultiOutputRegressor",
        "params": {
            "estimator": null,
            "n_jobs": "None"
        }
    },
    {
        "full_name": "sklearn.multioutput.MultiOutputClassifier",
        "name": "MultiOutputClassifier",
        "params": {
            "estimator": null,
            "n_jobs": "None"
        }
    },
    {
        "full_name": "sklearn.multioutput.RegressorChain",
        "name": "RegressorChain",
        "params": {
            "base_estimator": null,
            "cv": "None",
            "order": "None",
            "random_state": "None"
        }
    },
    {
        "full_name": "sklearn.naive_bayes.BernoulliNB",
        "name": "BernoulliNB",
        "params": {
            "alpha": "1.0",
            "binarize": "0.0",
            "class_prior": "None",
            "fit_prior": "True"
        }
    },
    {
        "full_name": "sklearn.naive_bayes.CategoricalNB",
        "name": "CategoricalNB",
        "params": {
            "alpha": "1.0",
            "class_prior": "None",
            "fit_prior": "True",
            "min_categories": "None"
        }
    },
    {
        "full_name": "sklearn.naive_bayes.ComplementNB",
        "name": "ComplementNB",
        "params": {
            "alpha": "1.0",
            "class_prior": "None",
            "fit_prior": "True",
            "norm": "False"
        }
    },
    {
        "full_name": "sklearn.naive_bayes.GaussianNB",
        "name": "GaussianNB",
        "params": {
            "priors": "None",
            "var_smoothing": "1e-09"
        }
    },
    {
        "full_name": "sklearn.naive_bayes.MultinomialNB",
        "name": "MultinomialNB",
        "params": {
            "alpha": "1.0",
            "class_prior": "None",
            "fit_prior": "True"
        }
    },
    {
        "full_name": "sklearn.neighbors.KNeighborsClassifier",
        "name": "KNeighborsClassifier",
        "params": {
            "algorithm": "'auto'",
            "leaf_size": "30",
            "metric": "'minkowski'",
            "metric_params": "None",
            "n_jobs": "None",
            "n_neighbors": "5",
            "p": "2",
            "weights": "'uniform'"
        }
    },
    {
        "full_name": "sklearn.neighbors.KNeighborsRegressor",
        "name": "KNeighborsRegressor",
        "params": {
            "algorithm": "'auto'",
            "leaf_size": "30",
            "metric": "'minkowski'",
            "metric_params": "None",
            "n_jobs": "None",
            "n_neighbors": "5",
            "p": "2",
            "weights": "'uniform'"
        }
    },
    {
        "full_name": "sklearn.neighbors.RadiusNeighborsClassifier",
        "name": "RadiusNeighborsClassifier",
        "params": {
            "**kwargs": null,
            "algorithm": "'auto'",
            "leaf_size": "30",
            "metric": "'minkowski'",
            "metric_params": "None",
            "n_jobs": "None",
            "outlier_label": "None",
            "p": "2",
            "radius": "1.0",
            "weights": "'uniform'"
        }
    },
    {
        "full_name": "sklearn.neighbors.RadiusNeighborsRegressor",
        "name": "RadiusNeighborsRegressor",
        "params": {
            "algorithm": "'auto'",
            "leaf_size": "30",
            "metric": "'minkowski'",
            "metric_params": "None",
            "n_jobs": "None",
            "p": "2",
            "radius": "1.0",
            "weights": "'uniform'"
        }
    },
    {
        "full_name": "sklearn.neighbors.NearestCentroid",
        "name": "NearestCentroid",
        "params": {
            "metric": "'euclidean'",
            "shrink_threshold": "None"
        }
    },
    {
        "full_name": "sklearn.neural_network.MLPClassifier",
        "name": "MLPClassifier",
        "params": {
            "activation": "'relu'",
            "alpha": "0.0001",
            "batch_size": "'auto'",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "early_stopping": "False",
            "epsilon": "1e-08",
            "hidden_layer_sizes": "(100,)",
            "learning_rate": "'constant'",
            "learning_rate_init": "0.001",
            "max_fun": "15000",
            "max_iter": "200",
            "momentum": "0.9",
            "n_iter_no_change": "10",
            "nesterovs_momentum": "True",
            "power_t": "0.5",
            "random_state": "None",
            "shuffle": "True",
            "solver": "'adam'",
            "tol": "0.0001",
            "validation_fraction": "0.1",
            "verbose": "False",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.neural_network.MLPRegressor",
        "name": "MLPRegressor",
        "params": {
            "activation": "'relu'",
            "alpha": "0.0001",
            "batch_size": "'auto'",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "early_stopping": "False",
            "epsilon": "1e-08",
            "hidden_layer_sizes": "(100,)",
            "learning_rate": "'constant'",
            "learning_rate_init": "0.001",
            "max_fun": "15000",
            "max_iter": "200",
            "momentum": "0.9",
            "n_iter_no_change": "10",
            "nesterovs_momentum": "True",
            "power_t": "0.5",
            "random_state": "None",
            "shuffle": "True",
            "solver": "'adam'",
            "tol": "0.0001",
            "validation_fraction": "0.1",
            "verbose": "False",
            "warm_start": "False"
        }
    },
    {
        "full_name": "sklearn.semi_supervised.LabelPropagation",
        "name": "LabelPropagation",
        "params": {
            "gamma": "20",
            "kernel": "'rbf'",
            "max_iter": "1000",
            "n_jobs": "None",
            "n_neighbors": "7",
            "tol": "0.001"
        }
    },
    {
        "full_name": "sklearn.semi_supervised.LabelSpreading",
        "name": "LabelSpreading",
        "params": {
            "alpha": "0.2",
            "gamma": "20",
            "kernel": "'rbf'",
            "max_iter": "30",
            "n_jobs": "None",
            "n_neighbors": "7",
            "tol": "0.001"
        }
    },
    {
        "full_name": "sklearn.svm.LinearSVC",
        "name": "LinearSVC",
        "params": {
            "C": "1.0",
            "class_weight": "None",
            "dual": "True",
            "fit_intercept": "True",
            "intercept_scaling": "1",
            "loss": "'squared_hinge'",
            "max_iter": "1000",
            "multi_class": "'ovr'",
            "penalty": "'l2'",
            "random_state": "None",
            "tol": "0.0001",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.svm.LinearSVR",
        "name": "LinearSVR",
        "params": {
            "C": "1.0",
            "dual": "True",
            "epsilon": "0.0",
            "fit_intercept": "True",
            "intercept_scaling": "1.0",
            "loss": "'epsilon_insensitive'",
            "max_iter": "1000",
            "random_state": "None",
            "tol": "0.0001",
            "verbose": "0"
        }
    },
    {
        "full_name": "sklearn.svm.NuSVC",
        "name": "NuSVC",
        "params": {
            "break_ties": "False",
            "cache_size": "200",
            "class_weight": "None",
            "coef0": "0.0",
            "decision_function_shape": "'ovr'",
            "degree": "3",
            "gamma": "'scale'",
            "kernel": "'rbf'",
            "max_iter": "- 1",
            "nu": "0.5",
            "probability": "False",
            "random_state": "None",
            "shrinking": "True",
            "tol": "0.001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.svm.NuSVR",
        "name": "NuSVR",
        "params": {
            "C": "1.0",
            "cache_size": "200",
            "coef0": "0.0",
            "degree": "3",
            "gamma": "'scale'",
            "kernel": "'rbf'",
            "max_iter": "- 1",
            "nu": "0.5",
            "shrinking": "True",
            "tol": "0.001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.svm.SVC",
        "name": "SVC",
        "params": {
            "C": "1.0",
            "break_ties": "False",
            "cache_size": "200",
            "class_weight": "None",
            "coef0": "0.0",
            "decision_function_shape": "'ovr'",
            "degree": "3",
            "gamma": "'scale'",
            "kernel": "'rbf'",
            "max_iter": "- 1",
            "probability": "False",
            "random_state": "None",
            "shrinking": "True",
            "tol": "0.001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.svm.SVR",
        "name": "SVR",
        "params": {
            "C": "1.0",
            "cache_size": "200",
            "coef0": "0.0",
            "degree": "3",
            "epsilon": "0.1",
            "gamma": "'scale'",
            "kernel": "'rbf'",
            "max_iter": "- 1",
            "shrinking": "True",
            "tol": "0.001",
            "verbose": "False"
        }
    },
    {
        "full_name": "sklearn.tree.DecisionTreeClassifier",
        "name": "DecisionTreeClassifier",
        "params": {
            "ccp_alpha": "0.0",
            "class_weight": "None",
            "criterion": "'gini'",
            "max_depth": "None",
            "max_features": "None",
            "max_leaf_nodes": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "random_state": "None",
            "splitter": "'best'"
        }
    },
    {
        "full_name": "sklearn.tree.DecisionTreeRegressor",
        "name": "DecisionTreeRegressor",
        "params": {
            "ccp_alpha": "0.0",
            "criterion": "'squared_error'",
            "max_depth": "None",
            "max_features": "None",
            "max_leaf_nodes": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "random_state": "None",
            "splitter": "'best'"
        }
    },
    {
        "full_name": "sklearn.tree.ExtraTreeClassifier",
        "name": "ExtraTreeClassifier",
        "params": {
            "ccp_alpha": "0.0",
            "class_weight": "None",
            "criterion": "'gini'",
            "max_depth": "None",
            "max_features": "'sqrt'",
            "max_leaf_nodes": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "random_state": "None",
            "splitter": "'random'"
        }
    },
    {
        "full_name": "sklearn.tree.ExtraTreeRegressor",
        "name": "ExtraTreeRegressor",
        "params": {
            "ccp_alpha": "0.0",
            "criterion": "'squared_error'",
            "max_depth": "None",
            "max_features": "1.0",
            "max_leaf_nodes": "None",
            "min_impurity_decrease": "0.0",
            "min_samples_leaf": "1",
            "min_samples_split": "2",
            "min_weight_fraction_leaf": "0.0",
            "random_state": "None",
            "splitter": "'random'"
        }
    }
]