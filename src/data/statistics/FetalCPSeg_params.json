{
    "DataOp.py": {
        "torch": {}
    },
    "Infer.py": {
        "torch": {
            "set_device_14": {
                "device": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_20": {
                "f": {
                    "value": "output_path + '/ckpt/best_val.pth.gz'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "from_numpy_54": {
                "variable": {
                    "value": "patch_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "image_patch[np.newaxis, np.newaxis, ...]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "Network/MixAttNet.py": {
        "torch": {
            "Sequential_11": {
                "*args": {
                    "value": "nn.Conv3d(in_chan, out_chan, kernel_size=ksize, padding=pad, stride=stride, bias=bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "interpolate_22": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[conv(t) for (conv, t) in zip(self.grouped_conv, x_split)]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(x, dim=1)",
                            "Call"
                        ],
                        [
                            "self.init_block(x)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "t.size()[2:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "mode": {
                    "value": "mode",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'trilinear'",
                            "MethodArgument"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_32": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(out_chan, out_chan, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "PReLU_36": {
                "variable": {
                    "value": "self.non_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_37": {
                "variable": {
                    "value": "self.down_sample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_chan, out_chan, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_50": {
                "*args": {
                    "value": "nn.Conv3d(in_chan, out_chan, kernel_size=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_60": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_61": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_62": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_63": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "9",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_64": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm3d_65": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm3d_66": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm3d_67": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_chan // 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "PReLU_68": {
                "variable": {
                    "value": "self.nonlinear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_94": {
                "variable": {
                    "value": "self.grouped_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "split_115": {
                "variable": {
                    "value": "x_split",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[conv(t) for (conv, t) in zip(self.grouped_conv, x_split)]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(x, dim=1)",
                            "Call"
                        ],
                        [
                            "self.init_block(x)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.split_in_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[conv(t) for (conv, t) in zip(self.grouped_conv, x_split)]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(x, dim=1)",
                            "Call"
                        ],
                        [
                            "self.init_block(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_126": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_128": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_129": {
                "variable": {
                    "value": "self.norm1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm3d_130": {
                "variable": {
                    "value": "self.norm2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "PReLU_131": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_137": {
                "variable": {
                    "value": "att_map",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(mix2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_143": {
                "*args": {
                    "value": "nn.Conv3d(in_chan, out_chan, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_175": {
                "variable": {
                    "value": "self.mix_out1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_176": {
                "variable": {
                    "value": "self.mix_out2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_177": {
                "variable": {
                    "value": "self.mix_out3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_178": {
                "variable": {
                    "value": "self.mix_out4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_179": {
                "variable": {
                    "value": "self.down_out1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_180": {
                "variable": {
                    "value": "self.down_out2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_181": {
                "variable": {
                    "value": "self.down_out3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_182": {
                "variable": {
                    "value": "self.down_out4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_231": {
                "obj": {
                    "value": "net.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "MixAttNet.pth.gz",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv3d_12": {
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "ksize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm3d_13": {
                "num_features": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "PReLU_14": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_51": {
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_52": {
                "num_features": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "PReLU_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_144": {
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_145": {
                "num_features": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "PReLU_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_147": {
                "in_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_33": {
                "in_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_34": {
                "num_features": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv3d_38": {
                "in_channels": {
                    "value": "in_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_39": {
                "num_features": {
                    "value": "out_chan",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_75": {
                "tensors": {
                    "value": "(k1, k3, k5, k7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_194": {
                "tensors": {
                    "value": "(enc4, up_sample3d(enc5, enc4))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_196": {
                "tensors": {
                    "value": "(enc3, up_sample3d(dec4, enc3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_198": {
                "tensors": {
                    "value": "(enc2, up_sample3d(dec3, enc2))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_200": {
                "tensors": {
                    "value": "(enc1, up_sample3d(dec2, enc1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_221": {
                "tensors": {
                    "value": "(mix1, mix2, mix3, mix4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_226": {
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv2(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "self.non_linear(out + shortcut)",
                            "Call"
                        ],
                        [
                            "self.norm1(x * att_map) + self.norm2(shortcut)",
                            "BinOp"
                        ],
                        [
                            "self.out(torch.cat((mix1, mix2, mix3, mix4), dim=1))",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_97": {
                "*args": {
                    "value": "nn.Conv3d(self.split_in_channels[i], self.split_out_channels[i], kernel_size[i], stride=1, padding=(kernel_size[i] - 1) // 2, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_98": {
                "in_channels": {
                    "value": "self.split_in_channels[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.split_out_channels[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(kernel_size[i] - 1) // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_106": {
                "num_features": {
                    "value": "self.split_out_channels[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "PReLU_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Train.py": {
        "torch": {
            "binary_cross_entropy_with_logits_36": {
                "variable": {
                    "value": "bce_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": [
                        [
                            "net(image)",
                            "Call"
                        ],
                        [
                            "np.zeros_like(image, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "predict / pre_count",
                            "BinOp"
                        ]
                    ]
                },
                "target": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(label).cuda())",
                            "Call"
                        ],
                        [
                            "nib.load(label_path).get_fdata()",
                            "Call"
                        ]
                    ]
                },
                "pos_weight": {
                    "value": "pos_weight",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Adam_123": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_device_111": {
                "device": {
                    "value": "args.gpu_id",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_51": {
                "ndarray": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(image).cuda())",
                            "Call"
                        ],
                        [
                            "nib.load(image_path).get_fdata()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_52": {
                "ndarray": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(label).cuda())",
                            "Call"
                        ],
                        [
                            "nib.load(label_path).get_fdata()",
                            "Call"
                        ]
                    ]
                }
            },
            "save_151": {
                "obj": {
                    "value": "net.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(ckpt_path, 'train_{}.pth.gz'.format(iteration))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_100": {
                "variable": {
                    "value": "image_patch_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "image_patch[np.newaxis, np.newaxis, ...]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "save_146": {
                "obj": {
                    "value": "net.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(ckpt_path, 'best_val.pth.gz')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}