{
    "IBP_SVHN_medium-1.py": {
        "torch": {
            "device_295": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_320": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.SVHN(root=dataset_path, split='train', download=True, transform=transform_train)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "50",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_325": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.SVHN(root=dataset_path, split='test', download=True, transform=transform_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "50",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_381": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_236": {
                "variable": {
                    "value": "max_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "y.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_like_237": {
                "variable": {
                    "value": "max_delta",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_290": {
                "variable": {
                    "value": "vol_lower_bound",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.log(yp + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_291": {
                "variable": {
                    "value": "vol_upper_bound",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.log(y + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "manual_seed_296": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_443": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_IBP_SVHN_medium.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "rand_like_240": {
                "variable": {
                    "value": "delta",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "max_251": {
                "variable": {
                    "value": "max_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "max_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(y.shape[0]).to(y.device)",
                            "Call"
                        ],
                        [
                            "torch.max(max_loss, all_loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_272": {
                "input": {
                    "value": "nn.MSELoss()(yp, y) + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_277": {
                "input": {
                    "value": "torch.log((yp - y) ** 2 + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_282": {
                "input": {
                    "value": "torch.log(torch.abs(yp - y) + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_287": {
                "input": {
                    "value": "torch.abs(yp - y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_335": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_336": {
                "variable": {
                    "value": "self.relu1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_337": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_338": {
                "variable": {
                    "value": "self.relu2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_339": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_340": {
                "variable": {
                    "value": "self.relu3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_341": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_342": {
                "variable": {
                    "value": "self.relu4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_344": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64 * 5 * 5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_345": {
                "variable": {
                    "value": "self.relu5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_346": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_347": {
                "variable": {
                    "value": "self.relu6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_348": {
                "variable": {
                    "value": "self.last_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_277": {
                "input": {
                    "value": "(yp - y) ** 2 + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_282": {
                "input": {
                    "value": "torch.abs(yp - y) + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_287": {
                "input": {
                    "value": "yp - y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_290": {
                "input": {
                    "value": "yp + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_291": {
                "input": {
                    "value": "y + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_295": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "eye_93": {
                "n": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "eye_161": {
                "n": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_249": {
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_262": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_244": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_272": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_282": {
                "input": {
                    "value": "yp - y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_136": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_121": {
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "conv2d_53": {
                "input": {
                    "value": "l",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(min=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_56": {
                "input": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(max=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_61": {
                "input": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(min=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_64": {
                "input": {
                    "value": "l",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(max=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "extra_loss_SVHN_medium-1.py": {
        "torch": {
            "device_293": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_318": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.SVHN(root=dataset_path, split='train', download=True, transform=transform_train)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "50",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_323": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.SVHN(root=dataset_path, split='test', download=True, transform=transform_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "50",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_379": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_235": {
                "variable": {
                    "value": "max_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "y.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_like_236": {
                "variable": {
                    "value": "max_delta",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_288": {
                "variable": {
                    "value": "vol_lower_bound",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.log(yp + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_289": {
                "variable": {
                    "value": "vol_upper_bound",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.log(y + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "manual_seed_294": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_450": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_extra_loss_SVHN_medium.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "rand_like_239": {
                "variable": {
                    "value": "delta",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "max_250": {
                "variable": {
                    "value": "max_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "max_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(y.shape[0]).to(y.device)",
                            "Call"
                        ],
                        [
                            "torch.max(max_loss, all_loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_270": {
                "input": {
                    "value": "nn.MSELoss()(yp, y) + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_275": {
                "input": {
                    "value": "torch.log((yp - y) ** 2 + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_280": {
                "input": {
                    "value": "torch.log(torch.abs(yp - y) + 1e-06)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_285": {
                "input": {
                    "value": "torch.abs(yp - y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_334": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_335": {
                "variable": {
                    "value": "self.relu1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_336": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_337": {
                "variable": {
                    "value": "self.relu2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_338": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_339": {
                "variable": {
                    "value": "self.relu3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_340": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_341": {
                "variable": {
                    "value": "self.relu4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_343": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64 * 5 * 5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_344": {
                "variable": {
                    "value": "self.relu5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_345": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_346": {
                "variable": {
                    "value": "self.relu6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_347": {
                "variable": {
                    "value": "self.last_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_275": {
                "input": {
                    "value": "(yp - y) ** 2 + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_280": {
                "input": {
                    "value": "torch.abs(yp - y) + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_285": {
                "input": {
                    "value": "yp - y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_288": {
                "input": {
                    "value": "yp + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_289": {
                "input": {
                    "value": "y + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_293": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "eye_93": {
                "n": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "eye_160": {
                "n": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_248": {
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_261": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_243": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_270": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_280": {
                "input": {
                    "value": "yp - y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_136": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_121": {
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "conv2d_53": {
                "input": {
                    "value": "l",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(min=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_56": {
                "input": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(max=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_61": {
                "input": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(min=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_64": {
                "input": {
                    "value": "l",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "layer.weight.clamp(max=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "layer.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "layer.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}