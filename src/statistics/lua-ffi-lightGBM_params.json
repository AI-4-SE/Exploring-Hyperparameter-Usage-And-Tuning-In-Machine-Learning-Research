{
    "examples/python-guide/advanced_example.py": {
        "sklearn": {
            "mean_squared_error_87": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "df_test[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "bst.predict(X_test)",
                            "Call"
                        ],
                        [
                            "pkl_bst.predict(X_test, num_iteration=7)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_squared_error_99": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "df_test[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "bst.predict(X_test)",
                            "Call"
                        ],
                        [
                            "pkl_bst.predict(X_test, num_iteration=7)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "examples/python-guide/simple_example.py": {
        "sklearn": {
            "mean_squared_error_50": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "df_test[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gbm.predict(X_test, num_iteration=gbm.best_iteration)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "examples/python-guide/sklearn_example.py": {
        "sklearn": {
            "GridSearchCV_68": {
                "variable": {
                    "value": "gbm",
                    "type": "Name",
                    "possible_values": []
                },
                "estimator": {
                    "value": "estimator",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lgb.LGBMRegressor(num_leaves=31)",
                            "Call"
                        ]
                    ]
                },
                "param_grid": {
                    "value": "param_grid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'learning_rate': [0.01, 0.1, 1], 'n_estimators': [20, 40]}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_squared_error_34": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "df_test[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gbm.predict(X_test, num_iteration=gbm.best_iteration_)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_test, num_iteration=gbm.best_iteration_)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "python-package/lightgbm/__init__.py": {
        "sklearn": {}
    },
    "python-package/lightgbm/compat.py": {
        "sklearn": {}
    },
    "python-package/lightgbm/plotting.py": {
        "sklearn": {}
    },
    "tests/python_package_test/test_basic.py": {
        "sklearn": {
            "train_test_split_16": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "*load_breast_cancer(True)",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_71": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "*load_breast_cancer(True)",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_svmlight_file_84": {
                "variable": {
                    "value": "(X_train, y_train)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(os.path.dirname(os.path.realpath(__file__)), '../../examples/lambdarank/rank.train')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dump_svmlight_file_47": {
                "X": {
                    "value": "X_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[X_test[i * chunk_size:(i + 1) * chunk_size, :] for i in range(X_test.shape[0] // chunk_size + 1)]",
                            "ListComp"
                        ]
                    ]
                },
                "y": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "load_breast_cancer_16": {
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_breast_cancer_71": {
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/python_package_test/test_consistency.py": {
        "sklearn": {
            "load_svmlight_file_29": {
                "variable": {
                    "value": "(X, Y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.path(suffix)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "np.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "zero_based": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/python_package_test/test_engine.py": {
        "sklearn": {
            "load_breast_cancer_30": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_31": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_loss_46": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_breast_cancer_52": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_53": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_loss_72": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_boston_77": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_78": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_squared_error_91": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_squared_error_116": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.zeros(1000)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y_true)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "gbm.predict(X_train)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "roc_auc_score_148": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.zeros(1000)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y_true)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_auc_score_180": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.zeros(1000)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y_true)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_auc_score_213": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.zeros(1000)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y_true)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_auc_score_250": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.zeros(1000)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y_true)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_auc_score_287": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.zeros(1000)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y)",
                            "Call"
                        ],
                        [
                            "np.array(y_true)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X)",
                            "Call"
                        ],
                        [
                            "gbm.predict(X_train)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_digits_292": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_293": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_digits_313": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_314": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_digits_340": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_341": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_breast_cancer_366": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_372": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_397": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_398": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_absolute_error_418": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_iris_426": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_427": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_449": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_450": {
                "variable": {
                    "value": "(X_train, _, y_train, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TimeSeriesSplit_468": {
                "variable": {
                    "value": "tss",
                    "type": "Name",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_svmlight_file_476": {
                "variable": {
                    "value": "(X_train, y_train)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(os.path.dirname(os.path.realpath(__file__)), '../../examples/lambdarank/rank.train')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_boston_499": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_500": {
                "variable": {
                    "value": "(X_train, _, y_train, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_breast_cancer_615": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_616": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_breast_cancer_720": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_721": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_loss_730": {
                "variable": {
                    "value": "err_pred",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_loss_732": {
                "variable": {
                    "value": "new_err_pred",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "new_gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_boston_736": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_753": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_iris_832": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_digits_846": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_847": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_digits_1152": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_1221": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_1247": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_513": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_514": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GroupKFold_494": {
                "n_splits": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_squared_error_522": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm_template.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_absolute_error_415": {
                "y_true": {
                    "value": "p",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "d.get_label()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tests/python_package_test/test_plotting.py": {
        "sklearn": {
            "train_test_split_20": {
                "variable": {
                    "value": "(self.X_train, self.X_test, self.y_train, self.y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "*load_breast_cancer(True)",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_breast_cancer_20": {
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/python_package_test/test_sklearn.py": {
        "sklearn": {
            "load_breast_cancer_32": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_33": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_loss_36": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict_proba(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_boston_41": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_42": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_squared_error_45": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_digits_50": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_51": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_svmlight_file_60": {
                "variable": {
                    "value": "(X_train, y_train)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(os.path.dirname(os.path.realpath(__file__)), '../../examples/lambdarank/rank.train')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_svmlight_file_62": {
                "variable": {
                    "value": "(X_test, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(os.path.dirname(os.path.realpath(__file__)), '../../examples/lambdarank/rank.test')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_boston_82": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_83": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_squared_error_86": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "gbm.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_digits_100": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_101": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_108": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_109": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_115": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_116": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GridSearchCV_120": {
                "variable": {
                    "value": "gbm",
                    "type": "Name",
                    "possible_values": []
                },
                "estimator": {
                    "value": "lgb.LGBMRegressor()",
                    "type": "Call",
                    "possible_values": []
                },
                "param_grid": {
                    "value": "params",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'boosting_type': ['dart', 'gbdt'], 'n_estimators': [5, 8], 'drop_rate': [0.05, 0.1]}",
                            "Dict"
                        ],
                        [
                            "{'n_estimators': 5, 'verbose': -1}",
                            "Dict"
                        ],
                        [
                            "{'n_estimators': 20, 'verbose': -1}",
                            "Dict"
                        ],
                        [
                            "{'n_estimators': 20, 'verbose': -1}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_125": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_126": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clone_130": {
                "variable": {
                    "value": "gbm_clone",
                    "type": "Name",
                    "possible_values": []
                },
                "estimator": {
                    "value": "gbm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lgb.LGBMClassifier(n_estimators=50, silent=True)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(n_estimators=50, silent=True)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMClassifier(n_estimators=50, silent=True)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRanker()",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(n_estimators=50, silent=True, objective=objective_ls)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMClassifier(n_estimators=50, silent=True, objective=logregobj)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(boosting_type='dart')",
                            "Call"
                        ],
                        [
                            "GridSearchCV(lgb.LGBMRegressor(), params, cv=3)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(n_estimators=100, silent=True)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(n_estimators=100, silent=True)",
                            "Call"
                        ],
                        [
                            "lgb.train({'objective': 'multiclass', 'num_class': 3, 'verbose': -1}, lgb.Dataset(X_train, y_train))",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(n_estimators=10, silent=True)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(**params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(metric='mape', **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(metric='None', **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(**params).fit(eval_metric='mape', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(metric='gamma', **params).fit(eval_metric='mape', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(metric='gamma', **params).fit(eval_metric=['l2', 'mape'], **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', metric='mape', **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', metric='None', **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', **params).fit(eval_metric='mape', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', metric='gamma', **params).fit(eval_metric='mape', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', metric='gamma', **params).fit(eval_metric=['l2', 'mape'], **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric='mape', **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric=['l1', 'gamma'], **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric='None', **params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, **params).fit(eval_metric='mape', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric='mape', **params).fit(eval_metric='gamma', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric=['l1', 'gamma'], **params).fit(eval_metric='l2', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric=['l1', 'gamma'], **params).fit(eval_metric=['l2', 'mape'], **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(**params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(metric='mape', **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(metric=['l1', 'gamma'], **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(metric='None', **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', metric='mape', **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', metric=['l1', 'gamma'], **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective='regression_l1', metric='None', **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric='mape', **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(objective=custom_obj, metric=['l2', 'mape'], **params).fit(eval_metric=custom_metric, **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMClassifier(**params).fit(eval_metric='binary_error', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMClassifier(objective='invalid_obj', **params).fit(eval_metric='binary_error', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMClassifier(objective='ovr', **params).fit(eval_metric='binary_error', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMClassifier(**params).fit(eval_metric='multi_error', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMClassifier(objective=custom_obj, **params).fit(eval_metric='multi_logloss', **params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(**params).fit(**params_fit)",
                            "Call"
                        ],
                        [
                            "lgb.LGBMRegressor(**params).fit(**params_fit)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_digits_134": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_135": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_144": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_145": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_155": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_156": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_iris_170": {
                "variable": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_iris_177": {
                "variable": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_iris_246": {
                "variable": {
                    "value": "iris",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_247": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "iris.data",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "iris.target",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_291": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_292": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_boston_310": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_digits_519": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_digits_546": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}