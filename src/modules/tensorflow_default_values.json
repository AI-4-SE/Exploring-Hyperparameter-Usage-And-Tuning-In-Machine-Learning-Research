{
    "tensorflow.AggregationMethod": {
        "short name": "AggregationMethod",
        "parameters": {}
    },
    "tensorflow.CriticalSection": {
        "short name": "CriticalSection",
        "parameters": {
            "name": "None",
            "shared_name": "None",
            "critical_section_def": "None",
            "import_scope": "None"
        }
    },
    "tensorflow.dtypes.DType": {
        "short name": "DType",
        "parameters": {}
    },
    "tensorflow.DeviceSpec": {
        "short name": "DeviceSpec",
        "parameters": {
            "job": "None",
            "replica": "None",
            "task": "None",
            "device_type": "None",
            "device_index": "None"
        }
    },
    "tensorflow.GradientTape": {
        "short name": "GradientTape",
        "parameters": {
            "persistent": "False",
            "watch_accessed_variables": "True"
        }
    },
    "tensorflow.Graph": {
        "short name": "Graph",
        "parameters": {}
    },
    "tensorflow.IndexedSlices": {
        "short name": "IndexedSlices",
        "parameters": {
            "values": null,
            "indices": null,
            "dense_shape": "None"
        }
    },
    "tensorflow.IndexedSlicesSpec": {
        "short name": "IndexedSlicesSpec",
        "parameters": {
            "shape": "None",
            "dtype": "tf.dtypes.float32",
            "indices_dtype": "tf.dtypes.int64",
            "dense_shape_dtype": "None",
            "indices_shape": "None"
        }
    },
    "tensorflow.Module": {
        "short name": "Module",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.Operation": {
        "short name": "Operation",
        "parameters": {
            "node_def": null,
            "g": null,
            "inputs": "None",
            "output_types": "None",
            "control_inputs": "None",
            "input_types": "None",
            "original_op": "None",
            "op_def": "None"
        }
    },
    "tensorflow.OptionalSpec": {
        "short name": "OptionalSpec",
        "parameters": {
            "element_spec": null
        }
    },
    "tensorflow.RaggedTensor": {
        "short name": "RaggedTensor",
        "parameters": {}
    },
    "tensorflow.RaggedTensorSpec": {
        "short name": "RaggedTensorSpec",
        "parameters": {
            "shape": "None",
            "dtype": "tf.dtypes.float32",
            "ragged_rank": "None",
            "row_splits_dtype": "tf.dtypes.int64",
            "flat_values_spec": "None"
        }
    },
    "tensorflow.RegisterGradient": {
        "short name": "RegisterGradient",
        "parameters": {
            "op_type": null
        }
    },
    "tensorflow.sparse.SparseTensor": {
        "short name": "SparseTensor",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null
        }
    },
    "tensorflow.SparseTensorSpec": {
        "short name": "SparseTensorSpec",
        "parameters": {
            "shape": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.Tensor": {
        "short name": "Tensor",
        "parameters": {
            "op": null,
            "value_index": null,
            "dtype": null
        }
    },
    "tensorflow.TensorArray": {
        "short name": "TensorArray",
        "parameters": {
            "dtype": null,
            "size": "None",
            "dynamic_size": "None",
            "clear_after_read": "None",
            "tensor_array_name": "None",
            "handle": "None",
            "flow": "None",
            "infer_shape": "True",
            "element_shape": "None",
            "colocate_with_first_write_call": "True",
            "name": "None"
        }
    },
    "tensorflow.TensorArraySpec": {
        "short name": "TensorArraySpec",
        "parameters": {
            "element_shape": "None",
            "dtype": "tf.dtypes.float32",
            "dynamic_size": "False",
            "infer_shape": "True"
        }
    },
    "tensorflow.TensorShape": {
        "short name": "TensorShape",
        "parameters": {
            "dims": null
        }
    },
    "tensorflow.TensorSpec": {
        "short name": "TensorSpec",
        "parameters": {
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.TypeSpec": {
        "short name": "TypeSpec",
        "parameters": {}
    },
    "tensorflow.UnconnectedGradients": {
        "short name": "UnconnectedGradients",
        "parameters": {}
    },
    "tensorflow.Variable": {
        "short name": "Variable",
        "parameters": {
            "initial_value": "None",
            "trainable": "None",
            "validate_shape": "True",
            "caching_device": "None",
            "name": "None",
            "variable_def": "None",
            "dtype": "None",
            "import_scope": "None",
            "constraint": "None",
            "synchronization": "tf.VariableSynchronization.AUTO",
            "aggregation": "tf.compat.v1.VariableAggregation.NONE",
            "shape": "None"
        }
    },
    "tensorflow.VariableAggregation": {
        "short name": "VariableAggregation",
        "parameters": {}
    },
    "tensorflow.VariableSynchronization": {
        "short name": "VariableSynchronization",
        "parameters": {}
    },
    "tensorflow.constant_initializer": {
        "short name": "constant_initializer",
        "parameters": {
            "value": "0"
        }
    },
    "tensorflow.name_scope": {
        "short name": "name_scope",
        "parameters": {
            "name": null
        }
    },
    "tensorflow.ones_initializer": {
        "short name": "ones_initializer",
        "parameters": {}
    },
    "tensorflow.random_normal_initializer": {
        "short name": "random_normal_initializer",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.random_uniform_initializer": {
        "short name": "random_uniform_initializer",
        "parameters": {
            "minval": "-0.05",
            "maxval": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.zeros_initializer": {
        "short name": "zeros_initializer",
        "parameters": {}
    },
    "tensorflow.debugging.Assert": {
        "short name": "Assert",
        "parameters": {
            "condition": null,
            "data": null,
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.math.abs": {
        "short name": "abs",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.acos": {
        "short name": "acos",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.acosh": {
        "short name": "acosh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.add": {
        "short name": "add",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.add_n": {
        "short name": "add_n",
        "parameters": {
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.math.argmax": {
        "short name": "argmax",
        "parameters": {
            "input": null,
            "axis": "None",
            "output_type": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.math.argmin": {
        "short name": "argmin",
        "parameters": {
            "input": null,
            "axis": "None",
            "output_type": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.argsort": {
        "short name": "argsort",
        "parameters": {
            "values": null,
            "axis": "-1",
            "direction": "'ASCENDING'",
            "stable": "False",
            "name": "None"
        }
    },
    "tensorflow.dtypes.as_dtype": {
        "short name": "as_dtype",
        "parameters": {
            "type_value": null
        }
    },
    "tensorflow.strings.as_string": {
        "short name": "as_string",
        "parameters": {
            "input": null,
            "precision": "-1",
            "scientific": "False",
            "shortest": "False",
            "width": "-1",
            "fill": "''",
            "name": "None"
        }
    },
    "tensorflow.math.asin": {
        "short name": "asin",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.asinh": {
        "short name": "asinh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_equal": {
        "short name": "assert_equal",
        "parameters": {
            "x": null,
            "y": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_greater": {
        "short name": "assert_greater",
        "parameters": {
            "x": null,
            "y": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_less": {
        "short name": "assert_less",
        "parameters": {
            "x": null,
            "y": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_rank": {
        "short name": "assert_rank",
        "parameters": {
            "x": null,
            "rank": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.math.atan": {
        "short name": "atan",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.atan2": {
        "short name": "atan2",
        "parameters": {
            "y": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.atanh": {
        "short name": "atanh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.batch_to_space": {
        "short name": "batch_to_space",
        "parameters": {
            "input": null,
            "block_shape": null,
            "crops": null,
            "name": "None"
        }
    },
    "tensorflow.bitcast": {
        "short name": "bitcast",
        "parameters": {
            "input": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.boolean_mask": {
        "short name": "boolean_mask",
        "parameters": {
            "tensor": null,
            "mask": null,
            "axis": "None",
            "name": "'boolean_mask'"
        }
    },
    "tensorflow.broadcast_dynamic_shape": {
        "short name": "broadcast_dynamic_shape",
        "parameters": {
            "shape_x": null,
            "shape_y": null
        }
    },
    "tensorflow.broadcast_static_shape": {
        "short name": "broadcast_static_shape",
        "parameters": {
            "shape_x": null,
            "shape_y": null
        }
    },
    "tensorflow.broadcast_to": {
        "short name": "broadcast_to",
        "parameters": {
            "input": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.case": {
        "short name": "case",
        "parameters": {
            "pred_fn_pairs": null,
            "default": "None",
            "exclusive": "False",
            "strict": "False",
            "name": "'case'"
        }
    },
    "tensorflow.cast": {
        "short name": "cast",
        "parameters": {
            "x": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.clip_by_global_norm": {
        "short name": "clip_by_global_norm",
        "parameters": {
            "t_list": null,
            "clip_norm": null,
            "use_norm": "None",
            "name": "None"
        }
    },
    "tensorflow.clip_by_norm": {
        "short name": "clip_by_norm",
        "parameters": {
            "t": null,
            "clip_norm": null,
            "axes": "None",
            "name": "None"
        }
    },
    "tensorflow.clip_by_value": {
        "short name": "clip_by_value",
        "parameters": {
            "t": null,
            "clip_value_min": null,
            "clip_value_max": null,
            "name": "None"
        }
    },
    "tensorflow.dtypes.complex": {
        "short name": "complex",
        "parameters": {
            "real": null,
            "imag": null,
            "name": "None"
        }
    },
    "tensorflow.concat": {
        "short name": "concat",
        "parameters": {
            "values": null,
            "axis": null,
            "name": "'concat'"
        }
    },
    "tensorflow.cond": {
        "short name": "cond",
        "parameters": {
            "pred": null,
            "true_fn": "None",
            "false_fn": "None",
            "name": "None"
        }
    },
    "tensorflow.constant": {
        "short name": "constant",
        "parameters": {
            "value": null,
            "dtype": "None",
            "shape": "None",
            "name": "'Const'"
        }
    },
    "tensorflow.control_dependencies": {
        "short name": "control_dependencies",
        "parameters": {
            "control_inputs": null
        }
    },
    "tensorflow.convert_to_tensor": {
        "short name": "convert_to_tensor",
        "parameters": {
            "value": null,
            "dtype": "None",
            "dtype_hint": "None",
            "name": "None"
        }
    },
    "tensorflow.math.cos": {
        "short name": "cos",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.cosh": {
        "short name": "cosh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.cumsum": {
        "short name": "cumsum",
        "parameters": {
            "x": null,
            "axis": "0",
            "exclusive": "False",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.custom_gradient": {
        "short name": "custom_gradient",
        "parameters": {
            "f": "None"
        }
    },
    "tensorflow.device": {
        "short name": "device",
        "parameters": {
            "device_name": null
        }
    },
    "tensorflow.math.divide": {
        "short name": "divide",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.dynamic_partition": {
        "short name": "dynamic_partition",
        "parameters": {
            "data": null,
            "partitions": null,
            "num_partitions": null,
            "name": "None"
        }
    },
    "tensorflow.dynamic_stitch": {
        "short name": "dynamic_stitch",
        "parameters": {
            "indices": null,
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.edit_distance": {
        "short name": "edit_distance",
        "parameters": {
            "hypothesis": null,
            "truth": null,
            "normalize": "True",
            "name": "'edit_distance'"
        }
    },
    "tensorflow.linalg.eig": {
        "short name": "eig",
        "parameters": {
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.eigvals": {
        "short name": "eigvals",
        "parameters": {
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.einsum": {
        "short name": "einsum",
        "parameters": {
            "equation": null,
            "*inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.ensure_shape": {
        "short name": "ensure_shape",
        "parameters": {
            "x": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.math.equal": {
        "short name": "equal",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.executing_eagerly": {
        "short name": "executing_eagerly",
        "parameters": {}
    },
    "tensorflow.math.exp": {
        "short name": "exp",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.expand_dims": {
        "short name": "expand_dims",
        "parameters": {
            "input": null,
            "axis": null,
            "name": "None"
        }
    },
    "tensorflow.extract_volume_patches": {
        "short name": "extract_volume_patches",
        "parameters": {
            "input": null,
            "ksizes": null,
            "strides": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.eye": {
        "short name": "eye",
        "parameters": {
            "num_rows": null,
            "num_columns": "None",
            "batch_shape": "None",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.fill": {
        "short name": "fill",
        "parameters": {
            "dims": null,
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.fingerprint": {
        "short name": "fingerprint",
        "parameters": {
            "data": null,
            "method": "'farmhash64'",
            "name": "None"
        }
    },
    "tensorflow.math.floor": {
        "short name": "floor",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.foldl": {
        "short name": "foldl",
        "parameters": {
            "fn": null,
            "elems": null,
            "initializer": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "name": "None"
        }
    },
    "tensorflow.foldr": {
        "short name": "foldr",
        "parameters": {
            "fn": null,
            "elems": null,
            "initializer": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "name": "None"
        }
    },
    "tensorflow.function": {
        "short name": "function",
        "parameters": {}
    },
    "tensorflow.gather": {
        "short name": "gather",
        "parameters": {
            "params": null,
            "indices": null,
            "validate_indices": "None",
            "axis": "None",
            "batch_dims": "0",
            "name": "None"
        }
    },
    "tensorflow.gather_nd": {
        "short name": "gather_nd",
        "parameters": {
            "params": null,
            "indices": null,
            "batch_dims": "0",
            "name": "None"
        }
    },
    "tensorflow.get_current_name_scope": {
        "short name": "get_current_name_scope",
        "parameters": {}
    },
    "tensorflow.get_logger": {
        "short name": "get_logger",
        "parameters": {}
    },
    "tensorflow.get_static_value": {
        "short name": "get_static_value",
        "parameters": {
            "tensor": null,
            "partial": "False"
        }
    },
    "tensorflow.grad_pass_through": {
        "short name": "grad_pass_through",
        "parameters": {
            "f": null
        }
    },
    "tensorflow.gradients": {
        "short name": "gradients",
        "parameters": {
            "ys": null,
            "xs": null,
            "grad_ys": "None",
            "name": "'gradients'",
            "gate_gradients": "False",
            "aggregation_method": "None",
            "stop_gradients": "None",
            "unconnected_gradients": "tf.UnconnectedGradients.NONE"
        }
    },
    "tensorflow.math.greater": {
        "short name": "greater",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.greater_equal": {
        "short name": "greater_equal",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.group": {
        "short name": "group",
        "parameters": {
            "*inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.guarantee_const": {
        "short name": "guarantee_const",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.hessians": {
        "short name": "hessians",
        "parameters": {
            "ys": null,
            "xs": null,
            "gate_gradients": "False",
            "aggregation_method": "None",
            "name": "'hessians'"
        }
    },
    "tensorflow.histogram_fixed_width": {
        "short name": "histogram_fixed_width",
        "parameters": {
            "values": null,
            "value_range": null,
            "nbins": "100",
            "dtype": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.histogram_fixed_width_bins": {
        "short name": "histogram_fixed_width_bins",
        "parameters": {
            "values": null,
            "value_range": null,
            "nbins": "100",
            "dtype": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.identity": {
        "short name": "identity",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.identity_n": {
        "short name": "identity_n",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.graph_util.import_graph_def": {
        "short name": "import_graph_def",
        "parameters": {
            "graph_def": null,
            "input_map": "None",
            "return_elements": "None",
            "name": "None",
            "op_dict": "None",
            "producer_op_list": "None"
        }
    },
    "tensorflow.init_scope": {
        "short name": "init_scope",
        "parameters": {}
    },
    "tensorflow.inside_function": {
        "short name": "inside_function",
        "parameters": {}
    },
    "tensorflow.is_tensor": {
        "short name": "is_tensor",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.math.less": {
        "short name": "less",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.less_equal": {
        "short name": "less_equal",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.linspace": {
        "short name": "linspace",
        "parameters": {
            "start": null,
            "stop": null,
            "num": null,
            "name": "None",
            "axis": "0"
        }
    },
    "tensorflow.load_library": {
        "short name": "load_library",
        "parameters": {
            "library_location": null
        }
    },
    "tensorflow.load_op_library": {
        "short name": "load_op_library",
        "parameters": {
            "library_filename": null
        }
    },
    "tensorflow.math.logical_and": {
        "short name": "logical_and",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.logical_not": {
        "short name": "logical_not",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.logical_or": {
        "short name": "logical_or",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.make_ndarray": {
        "short name": "make_ndarray",
        "parameters": {
            "tensor": null
        }
    },
    "tensorflow.make_tensor_proto": {
        "short name": "make_tensor_proto",
        "parameters": {
            "values": null,
            "dtype": "None",
            "shape": "None",
            "verify_shape": "False",
            "allow_broadcast": "False"
        }
    },
    "tensorflow.map_fn": {
        "short name": "map_fn",
        "parameters": {
            "fn": null,
            "elems": null,
            "dtype": "None",
            "parallel_iterations": "None",
            "back_prop": "True",
            "swap_memory": "False",
            "infer_shape": "True",
            "name": "None",
            "fn_output_signature": "None"
        }
    },
    "tensorflow.linalg.matmul": {
        "short name": "matmul",
        "parameters": {
            "a": null,
            "b": null,
            "transpose_a": "False",
            "transpose_b": "False",
            "adjoint_a": "False",
            "adjoint_b": "False",
            "a_is_sparse": "False",
            "b_is_sparse": "False",
            "output_type": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.sqrtm": {
        "short name": "sqrtm",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.math.maximum": {
        "short name": "maximum",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.meshgrid": {
        "short name": "meshgrid",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.math.minimum": {
        "short name": "minimum",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.multiply": {
        "short name": "multiply",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.negative": {
        "short name": "negative",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.no_gradient": {
        "short name": "no_gradient",
        "parameters": {
            "op_type": null
        }
    },
    "tensorflow.no_op": {
        "short name": "no_op",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.nondifferentiable_batch_function": {
        "short name": "nondifferentiable_batch_function",
        "parameters": {
            "num_batch_threads": null,
            "max_batch_size": null,
            "batch_timeout_micros": null,
            "allowed_batch_sizes": "None",
            "max_enqueued_batches": "10",
            "autograph": "True",
            "enable_large_batch_splitting": "True"
        }
    },
    "tensorflow.norm": {
        "short name": "norm",
        "parameters": {
            "tensor": null,
            "ord": "'euclidean'",
            "axis": "None",
            "keepdims": "None",
            "name": "None"
        }
    },
    "tensorflow.math.not_equal": {
        "short name": "not_equal",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.numpy_function": {
        "short name": "numpy_function",
        "parameters": {
            "func": null,
            "inp": null,
            "Tout": null,
            "stateful": "True",
            "name": "None"
        }
    },
    "tensorflow.one_hot": {
        "short name": "one_hot",
        "parameters": {
            "indices": null,
            "depth": null,
            "on_value": "None",
            "off_value": "None",
            "axis": "None",
            "dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.ones": {
        "short name": "ones",
        "parameters": {
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.ones_like": {
        "short name": "ones_like",
        "parameters": {
            "input": null,
            "dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.pad": {
        "short name": "pad",
        "parameters": {
            "tensor": null,
            "paddings": null,
            "mode": "'CONSTANT'",
            "constant_values": "0",
            "name": "None"
        }
    },
    "tensorflow.parallel_stack": {
        "short name": "parallel_stack",
        "parameters": {
            "values": null,
            "name": "'parallel_stack'"
        }
    },
    "tensorflow.math.pow": {
        "short name": "pow",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.print": {
        "short name": "print",
        "parameters": {
            "*inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.py_function": {
        "short name": "py_function",
        "parameters": {
            "func": null,
            "inp": null,
            "Tout": null,
            "name": "None"
        }
    },
    "tensorflow.random_index_shuffle": {
        "short name": "random_index_shuffle",
        "parameters": {
            "index": null,
            "seed": null,
            "max_index": null,
            "name": "None"
        }
    },
    "tensorflow.range": {
        "short name": "range",
        "parameters": {}
    },
    "tensorflow.rank": {
        "short name": "rank",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.realdiv": {
        "short name": "realdiv",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.recompute_grad": {
        "short name": "recompute_grad",
        "parameters": {
            "f": null
        }
    },
    "tensorflow.math.reduce_all": {
        "short name": "reduce_all",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_any": {
        "short name": "reduce_any",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_logsumexp": {
        "short name": "reduce_logsumexp",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_max": {
        "short name": "reduce_max",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_mean": {
        "short name": "reduce_mean",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_min": {
        "short name": "reduce_min",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_prod": {
        "short name": "reduce_prod",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_sum": {
        "short name": "reduce_sum",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.register_tensor_conversion_function": {
        "short name": "register_tensor_conversion_function",
        "parameters": {
            "base_type": null,
            "conversion_func": null,
            "priority": "100"
        }
    },
    "tensorflow.repeat": {
        "short name": "repeat",
        "parameters": {
            "input": null,
            "repeats": null,
            "axis": "None",
            "name": "None"
        }
    },
    "tensorflow.required_space_to_batch_paddings": {
        "short name": "required_space_to_batch_paddings",
        "parameters": {
            "input_shape": null,
            "block_shape": null,
            "base_paddings": "None",
            "name": "None"
        }
    },
    "tensorflow.reshape": {
        "short name": "reshape",
        "parameters": {
            "tensor": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.reverse": {
        "short name": "reverse",
        "parameters": {
            "tensor": null,
            "axis": null,
            "name": "None"
        }
    },
    "tensorflow.reverse_sequence": {
        "short name": "reverse_sequence",
        "parameters": {
            "input": null,
            "seq_lengths": null,
            "seq_axis": "None",
            "batch_axis": "None",
            "name": "None"
        }
    },
    "tensorflow.roll": {
        "short name": "roll",
        "parameters": {
            "input": null,
            "shift": null,
            "axis": null,
            "name": "None"
        }
    },
    "tensorflow.math.round": {
        "short name": "round",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.dtypes.saturate_cast": {
        "short name": "saturate_cast",
        "parameters": {
            "value": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.math.scalar_mul": {
        "short name": "scalar_mul",
        "parameters": {
            "scalar": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.scan": {
        "short name": "scan",
        "parameters": {
            "fn": null,
            "elems": null,
            "initializer": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "infer_shape": "True",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.scatter_nd": {
        "short name": "scatter_nd",
        "parameters": {
            "indices": null,
            "updates": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.searchsorted": {
        "short name": "searchsorted",
        "parameters": {
            "sorted_sequence": null,
            "values": null,
            "side": "'left'",
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.sequence_mask": {
        "short name": "sequence_mask",
        "parameters": {
            "lengths": null,
            "maxlen": "None",
            "dtype": "tf.dtypes.bool",
            "name": "None"
        }
    },
    "tensorflow.shape": {
        "short name": "shape",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.shape_n": {
        "short name": "shape_n",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.math.sigmoid": {
        "short name": "sigmoid",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.sign": {
        "short name": "sign",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.sin": {
        "short name": "sin",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.sinh": {
        "short name": "sinh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.size": {
        "short name": "size",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.slice": {
        "short name": "slice",
        "parameters": {
            "input_": null,
            "begin": null,
            "size": null,
            "name": "None"
        }
    },
    "tensorflow.sort": {
        "short name": "sort",
        "parameters": {
            "values": null,
            "axis": "-1",
            "direction": "'ASCENDING'",
            "name": "None"
        }
    },
    "tensorflow.space_to_batch": {
        "short name": "space_to_batch",
        "parameters": {
            "input": null,
            "block_shape": null,
            "paddings": null,
            "name": "None"
        }
    },
    "tensorflow.space_to_batch_nd": {
        "short name": "space_to_batch_nd",
        "parameters": {
            "input": null,
            "block_shape": null,
            "paddings": null,
            "name": "None"
        }
    },
    "tensorflow.split": {
        "short name": "split",
        "parameters": {
            "value": null,
            "num_or_size_splits": null,
            "axis": "0",
            "num": "None",
            "name": "'split'"
        }
    },
    "tensorflow.math.sqrt": {
        "short name": "sqrt",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.square": {
        "short name": "square",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.squeeze": {
        "short name": "squeeze",
        "parameters": {
            "input": null,
            "axis": "None",
            "name": "None"
        }
    },
    "tensorflow.stack": {
        "short name": "stack",
        "parameters": {
            "values": null,
            "axis": "0",
            "name": "'stack'"
        }
    },
    "tensorflow.stop_gradient": {
        "short name": "stop_gradient",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.strided_slice": {
        "short name": "strided_slice",
        "parameters": {
            "input_": null,
            "begin": null,
            "end": null,
            "strides": "None",
            "begin_mask": "0",
            "end_mask": "0",
            "ellipsis_mask": "0",
            "new_axis_mask": "0",
            "shrink_axis_mask": "0",
            "var": "None",
            "name": "None"
        }
    },
    "tensorflow.math.subtract": {
        "short name": "subtract",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.switch_case": {
        "short name": "switch_case",
        "parameters": {
            "branch_index": null,
            "branch_fns": null,
            "default": "None",
            "name": "'switch_case'"
        }
    },
    "tensorflow.math.tan": {
        "short name": "tan",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.tanh": {
        "short name": "tanh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.tensor_scatter_nd_add": {
        "short name": "tensor_scatter_nd_add",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.tensor_scatter_nd_max": {
        "short name": "tensor_scatter_nd_max",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.tensor_scatter_nd_min": {
        "short name": "tensor_scatter_nd_min",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.tensor_scatter_nd_sub": {
        "short name": "tensor_scatter_nd_sub",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.tensor_scatter_nd_update": {
        "short name": "tensor_scatter_nd_update",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.tensordot": {
        "short name": "tensordot",
        "parameters": {
            "a": null,
            "b": null,
            "axes": null,
            "name": "None"
        }
    },
    "tensorflow.tile": {
        "short name": "tile",
        "parameters": {
            "input": null,
            "multiples": null,
            "name": "None"
        }
    },
    "tensorflow.timestamp": {
        "short name": "timestamp",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.transpose": {
        "short name": "transpose",
        "parameters": {
            "a": null,
            "perm": "None",
            "conjugate": "False",
            "name": "'transpose'"
        }
    },
    "tensorflow.math.truediv": {
        "short name": "truediv",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.truncatediv": {
        "short name": "truncatediv",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.truncatemod": {
        "short name": "truncatemod",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.tuple": {
        "short name": "tuple",
        "parameters": {
            "tensors": null,
            "control_inputs": "None",
            "name": "None"
        }
    },
    "tensorflow.type_spec_from_value": {
        "short name": "type_spec_from_value",
        "parameters": {}
    },
    "tensorflow.unique": {
        "short name": "unique",
        "parameters": {
            "x": null,
            "out_idx": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.unique_with_counts": {
        "short name": "unique_with_counts",
        "parameters": {
            "x": null,
            "out_idx": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.unravel_index": {
        "short name": "unravel_index",
        "parameters": {
            "indices": null,
            "dims": null,
            "name": "None"
        }
    },
    "tensorflow.unstack": {
        "short name": "unstack",
        "parameters": {
            "value": null,
            "num": "None",
            "axis": "0",
            "name": "'unstack'"
        }
    },
    "tensorflow.variable_creator_scope": {
        "short name": "variable_creator_scope",
        "parameters": {}
    },
    "tensorflow.vectorized_map": {
        "short name": "vectorized_map",
        "parameters": {
            "fn": null,
            "elems": null,
            "fallback_to_while_loop": "True"
        }
    },
    "tensorflow.where": {
        "short name": "where",
        "parameters": {
            "condition": null,
            "x": "None",
            "y": "None",
            "name": "None"
        }
    },
    "tensorflow.while_loop": {
        "short name": "while_loop",
        "parameters": {
            "cond": null,
            "body": null,
            "loop_vars": null,
            "shape_invariants": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "maximum_iterations": "None",
            "name": "None"
        }
    },
    "tensorflow.zeros": {
        "short name": "zeros",
        "parameters": {
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.zeros_like": {
        "short name": "zeros_like",
        "parameters": {
            "input": null,
            "dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.audio.decode_wav": {
        "short name": "decode_wav",
        "parameters": {
            "contents": null,
            "desired_channels": "-1",
            "desired_samples": "-1",
            "name": "None"
        }
    },
    "tensorflow.audio.encode_wav": {
        "short name": "encode_wav",
        "parameters": {
            "audio": null,
            "sample_rate": null,
            "name": "None"
        }
    },
    "tensorflow.autodiff.ForwardAccumulator": {
        "short name": "ForwardAccumulator",
        "parameters": {
            "primals": null,
            "tangents": null
        }
    },
    "tensorflow.autograph.set_verbosity": {
        "short name": "set_verbosity",
        "parameters": {
            "level": null,
            "alsologtostdout": "False"
        }
    },
    "tensorflow.autograph.to_code": {
        "short name": "to_code",
        "parameters": {
            "entity": null,
            "recursive": "True",
            "experimental_optional_features": "None"
        }
    },
    "tensorflow.autograph.to_graph": {
        "short name": "to_graph",
        "parameters": {
            "entity": null,
            "recursive": "True",
            "experimental_optional_features": "None"
        }
    },
    "tensorflow.autograph.trace": {
        "short name": "trace",
        "parameters": {
            "*args": null
        }
    },
    "tensorflow.bitwise.bitwise_and": {
        "short name": "bitwise_and",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.bitwise.bitwise_or": {
        "short name": "bitwise_or",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.bitwise.bitwise_xor": {
        "short name": "bitwise_xor",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.bitwise.invert": {
        "short name": "invert",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.bitwise.left_shift": {
        "short name": "left_shift",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.bitwise.right_shift": {
        "short name": "right_shift",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.compat.as_bytes": {
        "short name": "as_bytes",
        "parameters": {
            "bytes_or_text": null,
            "encoding": "'utf-8'"
        }
    },
    "tensorflow.compat.as_str": {
        "short name": "as_str",
        "parameters": {
            "bytes_or_text": null,
            "encoding": "'utf-8'"
        }
    },
    "tensorflow.compat.as_str_any": {
        "short name": "as_str_any",
        "parameters": {
            "value": null
        }
    },
    "tensorflow.compat.as_text": {
        "short name": "as_text",
        "parameters": {
            "bytes_or_text": null,
            "encoding": "'utf-8'"
        }
    },
    "tensorflow.compat.dimension_at_index": {
        "short name": "dimension_at_index",
        "parameters": {
            "shape": null,
            "index": null
        }
    },
    "tensorflow.compat.dimension_value": {
        "short name": "dimension_value",
        "parameters": {
            "dimension": null
        }
    },
    "tensorflow.compat.forward_compatibility_horizon": {
        "short name": "forward_compatibility_horizon",
        "parameters": {}
    },
    "tensorflow.compat.forward_compatible": {
        "short name": "forward_compatible",
        "parameters": {
            "year": null,
            "month": null,
            "day": null
        }
    },
    "tensorflow.compat.path_to_str": {
        "short name": "path_to_str",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.config.LogicalDevice": {
        "short name": "LogicalDevice",
        "parameters": {
            "name": null,
            "device_type": null
        }
    },
    "tensorflow.config.LogicalDeviceConfiguration": {
        "short name": "LogicalDeviceConfiguration",
        "parameters": {
            "memory_limit": "None",
            "experimental_priority": "None"
        }
    },
    "tensorflow.config.PhysicalDevice": {
        "short name": "PhysicalDevice",
        "parameters": {
            "name": null,
            "device_type": null
        }
    },
    "tensorflow.config.experimental_connect_to_cluster": {
        "short name": "experimental_connect_to_cluster",
        "parameters": {
            "cluster_spec_or_resolver": null,
            "job_name": "'localhost'",
            "task_index": "0",
            "protocol": "None",
            "make_master_device_default": "True",
            "cluster_device_filters": "None"
        }
    },
    "tensorflow.config.experimental_connect_to_host": {
        "short name": "experimental_connect_to_host",
        "parameters": {
            "remote_host": "None",
            "job_name": "'worker'"
        }
    },
    "tensorflow.config.experimental_functions_run_eagerly": {
        "short name": "experimental_functions_run_eagerly",
        "parameters": {}
    },
    "tensorflow.config.experimental_run_functions_eagerly": {
        "short name": "experimental_run_functions_eagerly",
        "parameters": {
            "run_eagerly": null
        }
    },
    "tensorflow.config.functions_run_eagerly": {
        "short name": "functions_run_eagerly",
        "parameters": {}
    },
    "tensorflow.config.get_logical_device_configuration": {
        "short name": "get_logical_device_configuration",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.config.get_soft_device_placement": {
        "short name": "get_soft_device_placement",
        "parameters": {}
    },
    "tensorflow.config.get_visible_devices": {
        "short name": "get_visible_devices",
        "parameters": {
            "device_type": "None"
        }
    },
    "tensorflow.config.list_logical_devices": {
        "short name": "list_logical_devices",
        "parameters": {
            "device_type": "None"
        }
    },
    "tensorflow.config.list_physical_devices": {
        "short name": "list_physical_devices",
        "parameters": {
            "device_type": "None"
        }
    },
    "tensorflow.config.run_functions_eagerly": {
        "short name": "run_functions_eagerly",
        "parameters": {
            "run_eagerly": null
        }
    },
    "tensorflow.config.set_logical_device_configuration": {
        "short name": "set_logical_device_configuration",
        "parameters": {
            "device": null,
            "logical_devices": null
        }
    },
    "tensorflow.config.set_soft_device_placement": {
        "short name": "set_soft_device_placement",
        "parameters": {
            "enabled": null
        }
    },
    "tensorflow.config.set_visible_devices": {
        "short name": "set_visible_devices",
        "parameters": {
            "devices": null,
            "device_type": "None"
        }
    },
    "tensorflow.data.Dataset": {
        "short name": "Dataset",
        "parameters": {
            "variant_tensor": null
        }
    },
    "tensorflow.data.DatasetSpec": {
        "short name": "DatasetSpec",
        "parameters": {
            "element_spec": null,
            "dataset_shape": "()"
        }
    },
    "tensorflow.data.FixedLengthRecordDataset": {
        "short name": "FixedLengthRecordDataset",
        "parameters": {
            "filenames": null,
            "record_bytes": null,
            "header_bytes": "None",
            "footer_bytes": "None",
            "buffer_size": "None",
            "compression_type": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.data.Iterator": {
        "short name": "Iterator",
        "parameters": {}
    },
    "tensorflow.data.IteratorSpec": {
        "short name": "IteratorSpec",
        "parameters": {
            "element_spec": null
        }
    },
    "tensorflow.data.Options": {
        "short name": "Options",
        "parameters": {}
    },
    "tensorflow.data.TFRecordDataset": {
        "short name": "TFRecordDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.data.TextLineDataset": {
        "short name": "TextLineDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.data.ThreadingOptions": {
        "short name": "ThreadingOptions",
        "parameters": {}
    },
    "tensorflow.debugging.assert_all_finite": {
        "short name": "assert_all_finite",
        "parameters": {
            "x": null,
            "message": null,
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_greater_equal": {
        "short name": "assert_greater_equal",
        "parameters": {
            "x": null,
            "y": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_integer": {
        "short name": "assert_integer",
        "parameters": {
            "x": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_less_equal": {
        "short name": "assert_less_equal",
        "parameters": {
            "x": null,
            "y": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_near": {
        "short name": "assert_near",
        "parameters": {
            "x": null,
            "y": null,
            "rtol": "None",
            "atol": "None",
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_negative": {
        "short name": "assert_negative",
        "parameters": {
            "x": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_non_negative": {
        "short name": "assert_non_negative",
        "parameters": {
            "x": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_non_positive": {
        "short name": "assert_non_positive",
        "parameters": {
            "x": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_none_equal": {
        "short name": "assert_none_equal",
        "parameters": {
            "x": null,
            "y": null,
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_positive": {
        "short name": "assert_positive",
        "parameters": {
            "x": null,
            "message": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_proper_iterable": {
        "short name": "assert_proper_iterable",
        "parameters": {
            "values": null
        }
    },
    "tensorflow.debugging.assert_rank_at_least": {
        "short name": "assert_rank_at_least",
        "parameters": {
            "x": null,
            "rank": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_rank_in": {
        "short name": "assert_rank_in",
        "parameters": {
            "x": null,
            "ranks": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_same_float_dtype": {
        "short name": "assert_same_float_dtype",
        "parameters": {
            "tensors": "None",
            "dtype": "None"
        }
    },
    "tensorflow.debugging.assert_scalar": {
        "short name": "assert_scalar",
        "parameters": {
            "tensor": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_shapes": {
        "short name": "assert_shapes",
        "parameters": {
            "shapes": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.assert_type": {
        "short name": "assert_type",
        "parameters": {
            "tensor": null,
            "tf_type": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.debugging.check_numerics": {
        "short name": "check_numerics",
        "parameters": {
            "tensor": null,
            "message": null,
            "name": "None"
        }
    },
    "tensorflow.debugging.disable_check_numerics": {
        "short name": "disable_check_numerics",
        "parameters": {}
    },
    "tensorflow.debugging.disable_traceback_filtering": {
        "short name": "disable_traceback_filtering",
        "parameters": {}
    },
    "tensorflow.debugging.enable_check_numerics": {
        "short name": "enable_check_numerics",
        "parameters": {
            "stack_height_limit": "30",
            "path_length_limit": "50"
        }
    },
    "tensorflow.debugging.enable_traceback_filtering": {
        "short name": "enable_traceback_filtering",
        "parameters": {}
    },
    "tensorflow.debugging.get_log_device_placement": {
        "short name": "get_log_device_placement",
        "parameters": {}
    },
    "tensorflow.debugging.is_numeric_tensor": {
        "short name": "is_numeric_tensor",
        "parameters": {
            "tensor": null
        }
    },
    "tensorflow.debugging.is_traceback_filtering_enabled": {
        "short name": "is_traceback_filtering_enabled",
        "parameters": {}
    },
    "tensorflow.debugging.set_log_device_placement": {
        "short name": "set_log_device_placement",
        "parameters": {
            "enabled": null
        }
    },
    "tensorflow.distribute.CrossDeviceOps": {
        "short name": "CrossDeviceOps",
        "parameters": {}
    },
    "tensorflow.distribute.DistributedDataset": {
        "short name": "DistributedDataset",
        "parameters": {}
    },
    "tensorflow.distribute.DistributedIterator": {
        "short name": "DistributedIterator",
        "parameters": {}
    },
    "tensorflow.distribute.DistributedValues": {
        "short name": "DistributedValues",
        "parameters": {
            "values": null
        }
    },
    "tensorflow.distribute.HierarchicalCopyAllReduce": {
        "short name": "HierarchicalCopyAllReduce",
        "parameters": {
            "num_packs": "1"
        }
    },
    "tensorflow.distribute.InputContext": {
        "short name": "InputContext",
        "parameters": {
            "num_input_pipelines": "1",
            "input_pipeline_id": "0",
            "num_replicas_in_sync": "1"
        }
    },
    "tensorflow.distribute.InputOptions": {
        "short name": "InputOptions",
        "parameters": {
            "experimental_fetch_to_device": "None",
            "experimental_replication_mode": "tf.distribute.InputReplicationMode.PER_WORKER",
            "experimental_place_dataset_on_device": "False",
            "experimental_per_replica_buffer_size": "1"
        }
    },
    "tensorflow.distribute.InputReplicationMode": {
        "short name": "InputReplicationMode",
        "parameters": {}
    },
    "tensorflow.distribute.MirroredStrategy": {
        "short name": "MirroredStrategy",
        "parameters": {
            "devices": "None",
            "cross_device_ops": "None"
        }
    },
    "tensorflow.distribute.MultiWorkerMirroredStrategy": {
        "short name": "MultiWorkerMirroredStrategy",
        "parameters": {
            "cluster_resolver": "None",
            "communication_options": "None"
        }
    },
    "tensorflow.distribute.NcclAllReduce": {
        "short name": "NcclAllReduce",
        "parameters": {
            "num_packs": "1"
        }
    },
    "tensorflow.distribute.OneDeviceStrategy": {
        "short name": "OneDeviceStrategy",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.distribute.experimental.ParameterServerStrategy": {
        "short name": "ParameterServerStrategy",
        "parameters": {
            "cluster_resolver": null,
            "variable_partitioner": "None"
        }
    },
    "tensorflow.distribute.ReduceOp": {
        "short name": "ReduceOp",
        "parameters": {}
    },
    "tensorflow.distribute.ReductionToOneDevice": {
        "short name": "ReductionToOneDevice",
        "parameters": {
            "reduce_to_device": "None",
            "accumulation_fn": "None"
        }
    },
    "tensorflow.distribute.ReplicaContext": {
        "short name": "ReplicaContext",
        "parameters": {
            "strategy": null,
            "replica_id_in_sync_group": null
        }
    },
    "tensorflow.distribute.RunOptions": {
        "short name": "RunOptions",
        "parameters": {
            "experimental_enable_dynamic_batch_size": "True",
            "experimental_bucketizing_dynamic_shape": "False",
            "experimental_xla_options": "None"
        }
    },
    "tensorflow.distribute.Server": {
        "short name": "Server",
        "parameters": {
            "server_or_cluster_def": null,
            "job_name": "None",
            "task_index": "None",
            "protocol": "None",
            "config": "None",
            "start": "True"
        }
    },
    "tensorflow.distribute.Strategy": {
        "short name": "Strategy",
        "parameters": {
            "extended": null
        }
    },
    "tensorflow.distribute.StrategyExtended": {
        "short name": "StrategyExtended",
        "parameters": {
            "container_strategy": null
        }
    },
    "tensorflow.distribute.TPUStrategy": {
        "short name": "TPUStrategy",
        "parameters": {
            "tpu_cluster_resolver": "None",
            "experimental_device_assignment": "None",
            "experimental_spmd_xla_partitioning": "False"
        }
    },
    "tensorflow.distribute.experimental_set_strategy": {
        "short name": "experimental_set_strategy",
        "parameters": {
            "strategy": null
        }
    },
    "tensorflow.distribute.get_replica_context": {
        "short name": "get_replica_context",
        "parameters": {}
    },
    "tensorflow.distribute.get_strategy": {
        "short name": "get_strategy",
        "parameters": {}
    },
    "tensorflow.distribute.has_strategy": {
        "short name": "has_strategy",
        "parameters": {}
    },
    "tensorflow.distribute.in_cross_replica_context": {
        "short name": "in_cross_replica_context",
        "parameters": {}
    },
    "tensorflow.errors.AbortedError": {
        "short name": "AbortedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.AlreadyExistsError": {
        "short name": "AlreadyExistsError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.CancelledError": {
        "short name": "CancelledError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.DataLossError": {
        "short name": "DataLossError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.DeadlineExceededError": {
        "short name": "DeadlineExceededError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.FailedPreconditionError": {
        "short name": "FailedPreconditionError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.InternalError": {
        "short name": "InternalError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.InvalidArgumentError": {
        "short name": "InvalidArgumentError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.NotFoundError": {
        "short name": "NotFoundError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.OpError": {
        "short name": "OpError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "error_code": null,
            "*args": null
        }
    },
    "tensorflow.errors.OperatorNotAllowedInGraphError": {
        "short name": "OperatorNotAllowedInGraphError",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.errors.OutOfRangeError": {
        "short name": "OutOfRangeError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.PermissionDeniedError": {
        "short name": "PermissionDeniedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.ResourceExhaustedError": {
        "short name": "ResourceExhaustedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnauthenticatedError": {
        "short name": "UnauthenticatedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnavailableError": {
        "short name": "UnavailableError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnimplementedError": {
        "short name": "UnimplementedError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.errors.UnknownError": {
        "short name": "UnknownError",
        "parameters": {
            "node_def": null,
            "op": null,
            "message": null,
            "*args": null
        }
    },
    "tensorflow.estimator.BaselineClassifier": {
        "short name": "BaselineClassifier",
        "parameters": {
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE"
        }
    },
    "tensorflow.estimator.BaselineEstimator": {
        "short name": "BaselineEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None"
        }
    },
    "tensorflow.estimator.BaselineRegressor": {
        "short name": "BaselineRegressor",
        "parameters": {
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE"
        }
    },
    "tensorflow.estimator.BestExporter": {
        "short name": "BestExporter",
        "parameters": {
            "name": "'best_exporter'",
            "serving_input_receiver_fn": "None",
            "event_file_pattern": "'eval/*.tfevents.*'",
            "compare_fn": "_loss_smaller",
            "assets_extra": "None",
            "as_text": "False",
            "exports_to_keep": "5"
        }
    },
    "tensorflow.estimator.BinaryClassHead": {
        "short name": "BinaryClassHead",
        "parameters": {
            "weight_column": "None",
            "thresholds": "None",
            "label_vocabulary": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.CheckpointSaverHook": {
        "short name": "CheckpointSaverHook",
        "parameters": {
            "checkpoint_dir": null,
            "save_secs": "None",
            "save_steps": "None",
            "saver": "None",
            "checkpoint_basename": "'model.ckpt'",
            "scaffold": "None",
            "listeners": "None",
            "save_graph_def": "True"
        }
    },
    "tensorflow.estimator.CheckpointSaverListener": {
        "short name": "CheckpointSaverListener",
        "parameters": {}
    },
    "tensorflow.estimator.DNNClassifier": {
        "short name": "DNNClassifier",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False"
        }
    },
    "tensorflow.estimator.DNNEstimator": {
        "short name": "DNNEstimator",
        "parameters": {
            "head": null,
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "config": "None",
            "warm_start_from": "None",
            "batch_norm": "False"
        }
    },
    "tensorflow.estimator.DNNLinearCombinedClassifier": {
        "short name": "DNNLinearCombinedClassifier",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.DNNLinearCombinedEstimator": {
        "short name": "DNNLinearCombinedEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "config": "None",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.DNNLinearCombinedRegressor": {
        "short name": "DNNLinearCombinedRegressor",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.DNNRegressor": {
        "short name": "DNNRegressor",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "batch_norm": "False"
        }
    },
    "tensorflow.estimator.Estimator": {
        "short name": "Estimator",
        "parameters": {
            "model_fn": null,
            "model_dir": "None",
            "config": "None",
            "params": "None",
            "warm_start_from": "None"
        }
    },
    "tensorflow.estimator.EstimatorSpec": {
        "short name": "EstimatorSpec",
        "parameters": {
            "mode": null,
            "predictions": "None",
            "loss": "None",
            "train_op": "None",
            "eval_metric_ops": "None",
            "export_outputs": "None",
            "training_chief_hooks": "None",
            "training_hooks": "None",
            "scaffold": "None",
            "evaluation_hooks": "None",
            "prediction_hooks": "None"
        }
    },
    "tensorflow.estimator.EvalSpec": {
        "short name": "EvalSpec",
        "parameters": {
            "input_fn": null,
            "steps": "100",
            "name": "None",
            "hooks": "None",
            "exporters": "None",
            "start_delay_secs": "120",
            "throttle_secs": "600"
        }
    },
    "tensorflow.estimator.Exporter": {
        "short name": "Exporter",
        "parameters": {}
    },
    "tensorflow.estimator.FeedFnHook": {
        "short name": "FeedFnHook",
        "parameters": {
            "feed_fn": null
        }
    },
    "tensorflow.estimator.FinalExporter": {
        "short name": "FinalExporter",
        "parameters": {
            "name": null,
            "serving_input_receiver_fn": null,
            "assets_extra": "None",
            "as_text": "False"
        }
    },
    "tensorflow.estimator.FinalOpsHook": {
        "short name": "FinalOpsHook",
        "parameters": {
            "final_ops": null,
            "final_ops_feed_dict": "None"
        }
    },
    "tensorflow.estimator.GlobalStepWaiterHook": {
        "short name": "GlobalStepWaiterHook",
        "parameters": {
            "wait_until_step": null
        }
    },
    "tensorflow.estimator.Head": {
        "short name": "Head",
        "parameters": {}
    },
    "tensorflow.estimator.LatestExporter": {
        "short name": "LatestExporter",
        "parameters": {
            "name": null,
            "serving_input_receiver_fn": null,
            "assets_extra": "None",
            "as_text": "False",
            "exports_to_keep": "5"
        }
    },
    "tensorflow.estimator.LinearClassifier": {
        "short name": "LinearClassifier",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.LinearEstimator": {
        "short name": "LinearEstimator",
        "parameters": {
            "head": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "sparse_combiner": "'sum'",
            "warm_start_from": "None"
        }
    },
    "tensorflow.estimator.LinearRegressor": {
        "short name": "LinearRegressor",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.estimator.LoggingTensorHook": {
        "short name": "LoggingTensorHook",
        "parameters": {
            "tensors": null,
            "every_n_iter": "None",
            "every_n_secs": "None",
            "at_end": "False",
            "formatter": "None"
        }
    },
    "tensorflow.estimator.LogisticRegressionHead": {
        "short name": "LogisticRegressionHead",
        "parameters": {
            "weight_column": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "name": "None"
        }
    },
    "tensorflow.estimator.ModeKeys": {
        "short name": "ModeKeys",
        "parameters": {}
    },
    "tensorflow.estimator.MultiClassHead": {
        "short name": "MultiClassHead",
        "parameters": {
            "n_classes": null,
            "weight_column": "None",
            "label_vocabulary": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.MultiHead": {
        "short name": "MultiHead",
        "parameters": {
            "heads": null,
            "head_weights": "None"
        }
    },
    "tensorflow.estimator.MultiLabelHead": {
        "short name": "MultiLabelHead",
        "parameters": {
            "n_classes": null,
            "weight_column": "None",
            "thresholds": "None",
            "label_vocabulary": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "classes_for_class_based_metrics": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.NanLossDuringTrainingError": {
        "short name": "NanLossDuringTrainingError",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.estimator.NanTensorHook": {
        "short name": "NanTensorHook",
        "parameters": {
            "loss_tensor": null,
            "fail_on_nan_loss": "True"
        }
    },
    "tensorflow.estimator.PoissonRegressionHead": {
        "short name": "PoissonRegressionHead",
        "parameters": {
            "label_dimension": "1",
            "weight_column": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "compute_full_loss": "True",
            "name": "None"
        }
    },
    "tensorflow.estimator.ProfilerHook": {
        "short name": "ProfilerHook",
        "parameters": {
            "save_steps": "None",
            "save_secs": "None",
            "output_dir": "''",
            "show_dataflow": "True",
            "show_memory": "False"
        }
    },
    "tensorflow.estimator.RegressionHead": {
        "short name": "RegressionHead",
        "parameters": {
            "label_dimension": "1",
            "weight_column": "None",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "loss_fn": "None",
            "inverse_link_fn": "None",
            "name": "None"
        }
    },
    "tensorflow.estimator.RunConfig": {
        "short name": "RunConfig",
        "parameters": {
            "model_dir": "None",
            "tf_random_seed": "None",
            "save_summary_steps": "100",
            "save_checkpoints_steps": "_USE_DEFAULT",
            "save_checkpoints_secs": "_USE_DEFAULT",
            "session_config": "None",
            "keep_checkpoint_max": "5",
            "keep_checkpoint_every_n_hours": "10000",
            "log_step_count_steps": "100",
            "train_distribute": "None",
            "device_fn": "None",
            "protocol": "None",
            "eval_distribute": "None",
            "experimental_distribute": "None",
            "experimental_max_worker_delay_secs": "None",
            "session_creation_timeout_secs": "7200",
            "checkpoint_save_graph_def": "True"
        }
    },
    "tensorflow.estimator.SecondOrStepTimer": {
        "short name": "SecondOrStepTimer",
        "parameters": {
            "every_secs": "None",
            "every_steps": "None"
        }
    },
    "tensorflow.estimator.SessionRunArgs": {
        "short name": "SessionRunArgs",
        "parameters": {
            "fetches": null,
            "feed_dict": "None",
            "options": "None"
        }
    },
    "tensorflow.estimator.SessionRunContext": {
        "short name": "SessionRunContext",
        "parameters": {
            "original_args": null,
            "session": null
        }
    },
    "tensorflow.estimator.SessionRunHook": {
        "short name": "SessionRunHook",
        "parameters": {}
    },
    "tensorflow.estimator.SessionRunValues": {
        "short name": "SessionRunValues",
        "parameters": {
            "results": null,
            "options": null,
            "run_metadata": null
        }
    },
    "tensorflow.estimator.StepCounterHook": {
        "short name": "StepCounterHook",
        "parameters": {
            "every_n_steps": "100",
            "every_n_secs": "None",
            "output_dir": "None",
            "summary_writer": "None"
        }
    },
    "tensorflow.estimator.StopAtStepHook": {
        "short name": "StopAtStepHook",
        "parameters": {
            "num_steps": "None",
            "last_step": "None"
        }
    },
    "tensorflow.estimator.SummarySaverHook": {
        "short name": "SummarySaverHook",
        "parameters": {
            "save_steps": "None",
            "save_secs": "None",
            "output_dir": "None",
            "summary_writer": "None",
            "scaffold": "None",
            "summary_op": "None"
        }
    },
    "tensorflow.estimator.TrainSpec": {
        "short name": "TrainSpec",
        "parameters": {
            "input_fn": null,
            "max_steps": "None",
            "hooks": "None",
            "saving_listeners": "None"
        }
    },
    "tensorflow.estimator.VocabInfo": {
        "short name": "VocabInfo",
        "parameters": {
            "new_vocab": null,
            "new_vocab_size": null,
            "num_oov_buckets": null,
            "old_vocab": null,
            "old_vocab_size": "-1",
            "backup_initializer": "None",
            "axis": "0"
        }
    },
    "tensorflow.estimator.WarmStartSettings": {
        "short name": "WarmStartSettings",
        "parameters": {
            "ckpt_to_initialize_from": null,
            "vars_to_warm_start": "'.*'",
            "var_name_to_vocab_info": "None",
            "var_name_to_prev_var_name": "None"
        }
    },
    "tensorflow.estimator.add_metrics": {
        "short name": "add_metrics",
        "parameters": {
            "estimator": null,
            "metric_fn": null
        }
    },
    "tensorflow.estimator.classifier_parse_example_spec": {
        "short name": "classifier_parse_example_spec",
        "parameters": {
            "feature_columns": null,
            "label_key": null,
            "label_dtype": "tf.dtypes.int64",
            "label_default": "None",
            "weight_column": "None"
        }
    },
    "tensorflow.estimator.regressor_parse_example_spec": {
        "short name": "regressor_parse_example_spec",
        "parameters": {
            "feature_columns": null,
            "label_key": null,
            "label_dtype": "tf.dtypes.float32",
            "label_default": "None",
            "label_dimension": "1",
            "weight_column": "None"
        }
    },
    "tensorflow.estimator.train_and_evaluate": {
        "short name": "train_and_evaluate",
        "parameters": {
            "estimator": null,
            "train_spec": null,
            "eval_spec": null
        }
    },
    "tensorflow.experimental.BatchableExtensionType": {
        "short name": "BatchableExtensionType",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.DynamicRaggedShape": {
        "short name": "DynamicRaggedShape",
        "parameters": {
            "row_partitions": null,
            "inner_shape": null,
            "dtype": "None",
            "validate": "False"
        }
    },
    "tensorflow.experimental.ExtensionType": {
        "short name": "ExtensionType",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.ExtensionTypeBatchEncoder": {
        "short name": "ExtensionTypeBatchEncoder",
        "parameters": {}
    },
    "tensorflow.experimental.Optional": {
        "short name": "Optional",
        "parameters": {}
    },
    "tensorflow.experimental.RowPartition": {
        "short name": "RowPartition",
        "parameters": {
            "row_splits": null,
            "row_lengths": "None",
            "value_rowids": "None",
            "nrows": "None",
            "uniform_row_length": "None",
            "nvals": "None",
            "internal": "False"
        }
    },
    "tensorflow.experimental.async_clear_error": {
        "short name": "async_clear_error",
        "parameters": {}
    },
    "tensorflow.experimental.async_scope": {
        "short name": "async_scope",
        "parameters": {}
    },
    "tensorflow.experimental.dispatch_for_api": {
        "short name": "dispatch_for_api",
        "parameters": {
            "api": null,
            "*signatures": null
        }
    },
    "tensorflow.experimental.dispatch_for_binary_elementwise_apis": {
        "short name": "dispatch_for_binary_elementwise_apis",
        "parameters": {
            "x_type": null,
            "y_type": null
        }
    },
    "tensorflow.experimental.dispatch_for_unary_elementwise_apis": {
        "short name": "dispatch_for_unary_elementwise_apis",
        "parameters": {
            "x_type": null
        }
    },
    "tensorflow.experimental.function_executor_type": {
        "short name": "function_executor_type",
        "parameters": {}
    },
    "tensorflow.experimental.register_filesystem_plugin": {
        "short name": "register_filesystem_plugin",
        "parameters": {
            "plugin_location": null
        }
    },
    "tensorflow.experimental.unregister_dispatch_for": {
        "short name": "unregister_dispatch_for",
        "parameters": {
            "dispatch_target": null
        }
    },
    "tensorflow.feature_column.bucketized_column": {
        "short name": "bucketized_column",
        "parameters": {
            "source_column": null,
            "boundaries": null
        }
    },
    "tensorflow.feature_column.categorical_column_with_hash_bucket": {
        "short name": "categorical_column_with_hash_bucket",
        "parameters": {
            "key": null,
            "hash_bucket_size": null,
            "dtype": "tf.dtypes.string"
        }
    },
    "tensorflow.feature_column.categorical_column_with_identity": {
        "short name": "categorical_column_with_identity",
        "parameters": {
            "key": null,
            "num_buckets": null,
            "default_value": "None"
        }
    },
    "tensorflow.feature_column.categorical_column_with_vocabulary_file": {
        "short name": "categorical_column_with_vocabulary_file",
        "parameters": {
            "key": null,
            "vocabulary_file": null,
            "vocabulary_size": "None",
            "dtype": "tf.dtypes.string",
            "default_value": "None",
            "num_oov_buckets": "0",
            "file_format": "None"
        }
    },
    "tensorflow.feature_column.categorical_column_with_vocabulary_list": {
        "short name": "categorical_column_with_vocabulary_list",
        "parameters": {
            "key": null,
            "vocabulary_list": null,
            "dtype": "None",
            "default_value": "-1",
            "num_oov_buckets": "0"
        }
    },
    "tensorflow.feature_column.crossed_column": {
        "short name": "crossed_column",
        "parameters": {
            "keys": null,
            "hash_bucket_size": null,
            "hash_key": "None"
        }
    },
    "tensorflow.feature_column.embedding_column": {
        "short name": "embedding_column",
        "parameters": {
            "categorical_column": null,
            "dimension": null,
            "combiner": "'mean'",
            "initializer": "None",
            "ckpt_to_load_from": "None",
            "tensor_name_in_ckpt": "None",
            "max_norm": "None",
            "trainable": "True",
            "use_safe_embedding_lookup": "True"
        }
    },
    "tensorflow.feature_column.indicator_column": {
        "short name": "indicator_column",
        "parameters": {
            "categorical_column": null
        }
    },
    "tensorflow.feature_column.make_parse_example_spec": {
        "short name": "make_parse_example_spec",
        "parameters": {
            "feature_columns": null
        }
    },
    "tensorflow.feature_column.numeric_column": {
        "short name": "numeric_column",
        "parameters": {
            "key": null,
            "shape": "(1,)",
            "default_value": "None",
            "dtype": "tf.dtypes.float32",
            "normalizer_fn": "None"
        }
    },
    "tensorflow.feature_column.sequence_categorical_column_with_hash_bucket": {
        "short name": "sequence_categorical_column_with_hash_bucket",
        "parameters": {
            "key": null,
            "hash_bucket_size": null,
            "dtype": "tf.dtypes.string"
        }
    },
    "tensorflow.feature_column.sequence_categorical_column_with_identity": {
        "short name": "sequence_categorical_column_with_identity",
        "parameters": {
            "key": null,
            "num_buckets": null,
            "default_value": "None"
        }
    },
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_file": {
        "short name": "sequence_categorical_column_with_vocabulary_file",
        "parameters": {
            "key": null,
            "vocabulary_file": null,
            "vocabulary_size": "None",
            "num_oov_buckets": "0",
            "default_value": "None",
            "dtype": "tf.dtypes.string"
        }
    },
    "tensorflow.feature_column.sequence_categorical_column_with_vocabulary_list": {
        "short name": "sequence_categorical_column_with_vocabulary_list",
        "parameters": {
            "key": null,
            "vocabulary_list": null,
            "dtype": "None",
            "default_value": "-1",
            "num_oov_buckets": "0"
        }
    },
    "tensorflow.feature_column.sequence_numeric_column": {
        "short name": "sequence_numeric_column",
        "parameters": {
            "key": null,
            "shape": "(1,)",
            "default_value": "0.0",
            "dtype": "tf.dtypes.float32",
            "normalizer_fn": "None"
        }
    },
    "tensorflow.feature_column.shared_embeddings": {
        "short name": "shared_embeddings",
        "parameters": {
            "categorical_columns": null,
            "dimension": null,
            "combiner": "'mean'",
            "initializer": "None",
            "shared_embedding_collection_name": "None",
            "ckpt_to_load_from": "None",
            "tensor_name_in_ckpt": "None",
            "max_norm": "None",
            "trainable": "True",
            "use_safe_embedding_lookup": "True"
        }
    },
    "tensorflow.feature_column.weighted_categorical_column": {
        "short name": "weighted_categorical_column",
        "parameters": {
            "categorical_column": null,
            "weight_feature_key": null,
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.image.ResizeMethod": {
        "short name": "ResizeMethod",
        "parameters": {}
    },
    "tensorflow.image.adjust_brightness": {
        "short name": "adjust_brightness",
        "parameters": {
            "image": null,
            "delta": null
        }
    },
    "tensorflow.image.adjust_contrast": {
        "short name": "adjust_contrast",
        "parameters": {
            "images": null,
            "contrast_factor": null
        }
    },
    "tensorflow.image.adjust_gamma": {
        "short name": "adjust_gamma",
        "parameters": {
            "image": null,
            "gamma": "1",
            "gain": "1"
        }
    },
    "tensorflow.image.adjust_hue": {
        "short name": "adjust_hue",
        "parameters": {
            "image": null,
            "delta": null,
            "name": "None"
        }
    },
    "tensorflow.image.adjust_jpeg_quality": {
        "short name": "adjust_jpeg_quality",
        "parameters": {
            "image": null,
            "jpeg_quality": null,
            "name": "None"
        }
    },
    "tensorflow.image.adjust_saturation": {
        "short name": "adjust_saturation",
        "parameters": {
            "image": null,
            "saturation_factor": null,
            "name": "None"
        }
    },
    "tensorflow.image.central_crop": {
        "short name": "central_crop",
        "parameters": {
            "image": null,
            "central_fraction": null
        }
    },
    "tensorflow.image.combined_non_max_suppression": {
        "short name": "combined_non_max_suppression",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size_per_class": null,
            "max_total_size": null,
            "iou_threshold": "0.5",
            "score_threshold": "float('-inf')",
            "pad_per_class": "False",
            "clip_boxes": "True",
            "name": "None"
        }
    },
    "tensorflow.image.convert_image_dtype": {
        "short name": "convert_image_dtype",
        "parameters": {
            "image": null,
            "dtype": null,
            "saturate": "False",
            "name": "None"
        }
    },
    "tensorflow.image.crop_and_resize": {
        "short name": "crop_and_resize",
        "parameters": {
            "image": null,
            "boxes": null,
            "box_indices": null,
            "crop_size": null,
            "method": "'bilinear'",
            "extrapolation_value": "0.0",
            "name": "None"
        }
    },
    "tensorflow.image.crop_to_bounding_box": {
        "short name": "crop_to_bounding_box",
        "parameters": {
            "image": null,
            "offset_height": null,
            "offset_width": null,
            "target_height": null,
            "target_width": null
        }
    },
    "tensorflow.io.decode_and_crop_jpeg": {
        "short name": "decode_and_crop_jpeg",
        "parameters": {
            "contents": null,
            "crop_window": null,
            "channels": "0",
            "ratio": "1",
            "fancy_upscaling": "True",
            "try_recover_truncated": "False",
            "acceptable_fraction": "1",
            "dct_method": "''",
            "name": "None"
        }
    },
    "tensorflow.io.decode_bmp": {
        "short name": "decode_bmp",
        "parameters": {
            "contents": null,
            "channels": "0",
            "name": "None"
        }
    },
    "tensorflow.io.decode_gif": {
        "short name": "decode_gif",
        "parameters": {
            "contents": null,
            "name": "None"
        }
    },
    "tensorflow.io.decode_image": {
        "short name": "decode_image",
        "parameters": {
            "contents": null,
            "channels": "None",
            "dtype": "tf.dtypes.uint8",
            "name": "None",
            "expand_animations": "True"
        }
    },
    "tensorflow.io.decode_jpeg": {
        "short name": "decode_jpeg",
        "parameters": {
            "contents": null,
            "channels": "0",
            "ratio": "1",
            "fancy_upscaling": "True",
            "try_recover_truncated": "False",
            "acceptable_fraction": "1",
            "dct_method": "''",
            "name": "None"
        }
    },
    "tensorflow.io.decode_png": {
        "short name": "decode_png",
        "parameters": {
            "contents": null,
            "channels": "0",
            "dtype": "tf.dtypes.uint8",
            "name": "None"
        }
    },
    "tensorflow.image.draw_bounding_boxes": {
        "short name": "draw_bounding_boxes",
        "parameters": {
            "images": null,
            "boxes": null,
            "colors": null,
            "name": "None"
        }
    },
    "tensorflow.io.encode_jpeg": {
        "short name": "encode_jpeg",
        "parameters": {
            "image": null,
            "format": "''",
            "quality": "95",
            "progressive": "False",
            "optimize_size": "False",
            "chroma_downsampling": "True",
            "density_unit": "'in'",
            "x_density": "300",
            "y_density": "300",
            "xmp_metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.io.encode_png": {
        "short name": "encode_png",
        "parameters": {
            "image": null,
            "compression": "-1",
            "name": "None"
        }
    },
    "tensorflow.image.extract_glimpse": {
        "short name": "extract_glimpse",
        "parameters": {
            "input": null,
            "size": null,
            "offsets": null,
            "centered": "True",
            "normalized": "True",
            "noise": "'uniform'",
            "name": "None"
        }
    },
    "tensorflow.io.extract_jpeg_shape": {
        "short name": "extract_jpeg_shape",
        "parameters": {
            "contents": null,
            "output_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.image.extract_patches": {
        "short name": "extract_patches",
        "parameters": {
            "images": null,
            "sizes": null,
            "strides": null,
            "rates": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.image.flip_left_right": {
        "short name": "flip_left_right",
        "parameters": {
            "image": null
        }
    },
    "tensorflow.image.flip_up_down": {
        "short name": "flip_up_down",
        "parameters": {
            "image": null
        }
    },
    "tensorflow.image.generate_bounding_box_proposals": {
        "short name": "generate_bounding_box_proposals",
        "parameters": {
            "scores": null,
            "bbox_deltas": null,
            "image_info": null,
            "anchors": null,
            "nms_threshold": "0.7",
            "pre_nms_topn": "6000",
            "min_size": "16",
            "post_nms_topn": "300",
            "name": "None"
        }
    },
    "tensorflow.image.grayscale_to_rgb": {
        "short name": "grayscale_to_rgb",
        "parameters": {
            "images": null,
            "name": "None"
        }
    },
    "tensorflow.image.hsv_to_rgb": {
        "short name": "hsv_to_rgb",
        "parameters": {
            "images": null,
            "name": "None"
        }
    },
    "tensorflow.image.image_gradients": {
        "short name": "image_gradients",
        "parameters": {
            "image": null
        }
    },
    "tensorflow.io.is_jpeg": {
        "short name": "is_jpeg",
        "parameters": {
            "contents": null,
            "name": "None"
        }
    },
    "tensorflow.image.non_max_suppression": {
        "short name": "non_max_suppression",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": "0.5",
            "score_threshold": "float('-inf')",
            "name": "None"
        }
    },
    "tensorflow.image.non_max_suppression_overlaps": {
        "short name": "non_max_suppression_overlaps",
        "parameters": {
            "overlaps": null,
            "scores": null,
            "max_output_size": null,
            "overlap_threshold": "0.5",
            "score_threshold": "float('-inf')",
            "name": "None"
        }
    },
    "tensorflow.image.non_max_suppression_padded": {
        "short name": "non_max_suppression_padded",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": "0.5",
            "score_threshold": "float('-inf')",
            "pad_to_max_output_size": "False",
            "name": "None",
            "sorted_input": "False",
            "canonicalized_coordinates": "False",
            "tile_size": "512"
        }
    },
    "tensorflow.image.non_max_suppression_with_scores": {
        "short name": "non_max_suppression_with_scores",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": "0.5",
            "score_threshold": "float('-inf')",
            "soft_nms_sigma": "0.0",
            "name": "None"
        }
    },
    "tensorflow.image.pad_to_bounding_box": {
        "short name": "pad_to_bounding_box",
        "parameters": {
            "image": null,
            "offset_height": null,
            "offset_width": null,
            "target_height": null,
            "target_width": null
        }
    },
    "tensorflow.image.per_image_standardization": {
        "short name": "per_image_standardization",
        "parameters": {
            "image": null
        }
    },
    "tensorflow.image.psnr": {
        "short name": "psnr",
        "parameters": {
            "a": null,
            "b": null,
            "max_val": null,
            "name": "None"
        }
    },
    "tensorflow.image.random_brightness": {
        "short name": "random_brightness",
        "parameters": {
            "image": null,
            "max_delta": null,
            "seed": "None"
        }
    },
    "tensorflow.image.random_contrast": {
        "short name": "random_contrast",
        "parameters": {
            "image": null,
            "lower": null,
            "upper": null,
            "seed": "None"
        }
    },
    "tensorflow.image.random_crop": {
        "short name": "random_crop",
        "parameters": {
            "value": null,
            "size": null,
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.image.random_flip_left_right": {
        "short name": "random_flip_left_right",
        "parameters": {
            "image": null,
            "seed": "None"
        }
    },
    "tensorflow.image.random_flip_up_down": {
        "short name": "random_flip_up_down",
        "parameters": {
            "image": null,
            "seed": "None"
        }
    },
    "tensorflow.image.random_hue": {
        "short name": "random_hue",
        "parameters": {
            "image": null,
            "max_delta": null,
            "seed": "None"
        }
    },
    "tensorflow.image.random_jpeg_quality": {
        "short name": "random_jpeg_quality",
        "parameters": {
            "image": null,
            "min_jpeg_quality": null,
            "max_jpeg_quality": null,
            "seed": "None"
        }
    },
    "tensorflow.image.random_saturation": {
        "short name": "random_saturation",
        "parameters": {
            "image": null,
            "lower": null,
            "upper": null,
            "seed": "None"
        }
    },
    "tensorflow.image.resize": {
        "short name": "resize",
        "parameters": {
            "images": null,
            "size": null,
            "method": "ResizeMethod.BILINEAR",
            "preserve_aspect_ratio": "False",
            "antialias": "False",
            "name": "None"
        }
    },
    "tensorflow.image.resize_with_crop_or_pad": {
        "short name": "resize_with_crop_or_pad",
        "parameters": {
            "image": null,
            "target_height": null,
            "target_width": null
        }
    },
    "tensorflow.image.resize_with_pad": {
        "short name": "resize_with_pad",
        "parameters": {
            "image": null,
            "target_height": null,
            "target_width": null,
            "method": "ResizeMethod.BILINEAR",
            "antialias": "False"
        }
    },
    "tensorflow.image.rgb_to_grayscale": {
        "short name": "rgb_to_grayscale",
        "parameters": {
            "images": null,
            "name": "None"
        }
    },
    "tensorflow.image.rgb_to_hsv": {
        "short name": "rgb_to_hsv",
        "parameters": {
            "images": null,
            "name": "None"
        }
    },
    "tensorflow.image.rgb_to_yiq": {
        "short name": "rgb_to_yiq",
        "parameters": {
            "images": null
        }
    },
    "tensorflow.image.rgb_to_yuv": {
        "short name": "rgb_to_yuv",
        "parameters": {
            "images": null
        }
    },
    "tensorflow.image.rot90": {
        "short name": "rot90",
        "parameters": {
            "image": null,
            "k": "1",
            "name": "None"
        }
    },
    "tensorflow.image.sample_distorted_bounding_box": {
        "short name": "sample_distorted_bounding_box",
        "parameters": {
            "image_size": null,
            "bounding_boxes": null,
            "seed": "0",
            "min_object_covered": "0.1",
            "aspect_ratio_range": "None",
            "area_range": "None",
            "max_attempts": "None",
            "use_image_if_no_bounding_boxes": "None",
            "name": "None"
        }
    },
    "tensorflow.image.sobel_edges": {
        "short name": "sobel_edges",
        "parameters": {
            "image": null
        }
    },
    "tensorflow.image.ssim": {
        "short name": "ssim",
        "parameters": {
            "img1": null,
            "img2": null,
            "max_val": null,
            "filter_size": "11",
            "filter_sigma": "1.5",
            "k1": "0.01",
            "k2": "0.03"
        }
    },
    "tensorflow.image.ssim_multiscale": {
        "short name": "ssim_multiscale",
        "parameters": {
            "img1": null,
            "img2": null,
            "max_val": null,
            "power_factors": "_MSSSIM_WEIGHTS",
            "filter_size": "11",
            "filter_sigma": "1.5",
            "k1": "0.01",
            "k2": "0.03"
        }
    },
    "tensorflow.image.stateless_random_brightness": {
        "short name": "stateless_random_brightness",
        "parameters": {
            "image": null,
            "max_delta": null,
            "seed": null
        }
    },
    "tensorflow.image.stateless_random_contrast": {
        "short name": "stateless_random_contrast",
        "parameters": {
            "image": null,
            "lower": null,
            "upper": null,
            "seed": null
        }
    },
    "tensorflow.image.stateless_random_crop": {
        "short name": "stateless_random_crop",
        "parameters": {
            "value": null,
            "size": null,
            "seed": null,
            "name": "None"
        }
    },
    "tensorflow.image.stateless_random_flip_left_right": {
        "short name": "stateless_random_flip_left_right",
        "parameters": {
            "image": null,
            "seed": null
        }
    },
    "tensorflow.image.stateless_random_flip_up_down": {
        "short name": "stateless_random_flip_up_down",
        "parameters": {
            "image": null,
            "seed": null
        }
    },
    "tensorflow.image.stateless_random_hue": {
        "short name": "stateless_random_hue",
        "parameters": {
            "image": null,
            "max_delta": null,
            "seed": null
        }
    },
    "tensorflow.image.stateless_random_jpeg_quality": {
        "short name": "stateless_random_jpeg_quality",
        "parameters": {
            "image": null,
            "min_jpeg_quality": null,
            "max_jpeg_quality": null,
            "seed": null
        }
    },
    "tensorflow.image.stateless_random_saturation": {
        "short name": "stateless_random_saturation",
        "parameters": {
            "image": null,
            "lower": null,
            "upper": null,
            "seed": "None"
        }
    },
    "tensorflow.image.stateless_sample_distorted_bounding_box": {
        "short name": "stateless_sample_distorted_bounding_box",
        "parameters": {
            "image_size": null,
            "bounding_boxes": null,
            "seed": null,
            "min_object_covered": "0.1",
            "aspect_ratio_range": "None",
            "area_range": "None",
            "max_attempts": "None",
            "use_image_if_no_bounding_boxes": "None",
            "name": "None"
        }
    },
    "tensorflow.image.total_variation": {
        "short name": "total_variation",
        "parameters": {
            "images": null,
            "name": "None"
        }
    },
    "tensorflow.image.transpose": {
        "short name": "transpose",
        "parameters": {
            "image": null,
            "name": "None"
        }
    },
    "tensorflow.image.yiq_to_rgb": {
        "short name": "yiq_to_rgb",
        "parameters": {
            "images": null
        }
    },
    "tensorflow.image.yuv_to_rgb": {
        "short name": "yuv_to_rgb",
        "parameters": {
            "images": null
        }
    },
    "tensorflow.io.FixedLenFeature": {
        "short name": "FixedLenFeature",
        "parameters": {
            "shape": null,
            "dtype": null,
            "default_value": "None"
        }
    },
    "tensorflow.io.FixedLenSequenceFeature": {
        "short name": "FixedLenSequenceFeature",
        "parameters": {
            "shape": null,
            "dtype": null,
            "allow_missing": "False",
            "default_value": "None"
        }
    },
    "tensorflow.io.RaggedFeature": {
        "short name": "RaggedFeature",
        "parameters": {
            "dtype": null,
            "value_key": "None",
            "partitions": "()",
            "row_splits_dtype": "tf.dtypes.int32",
            "validate": "False"
        }
    },
    "tensorflow.io.SparseFeature": {
        "short name": "SparseFeature",
        "parameters": {
            "index_key": null,
            "value_key": null,
            "dtype": null,
            "size": null,
            "already_sorted": "False"
        }
    },
    "tensorflow.io.TFRecordOptions": {
        "short name": "TFRecordOptions",
        "parameters": {
            "compression_type": "None",
            "flush_mode": "None",
            "input_buffer_size": "None",
            "output_buffer_size": "None",
            "window_bits": "None",
            "compression_level": "None",
            "compression_method": "None",
            "mem_level": "None",
            "compression_strategy": "None"
        }
    },
    "tensorflow.io.TFRecordWriter": {
        "short name": "TFRecordWriter",
        "parameters": {
            "path": null,
            "options": "None"
        }
    },
    "tensorflow.io.VarLenFeature": {
        "short name": "VarLenFeature",
        "parameters": {
            "dtype": null
        }
    },
    "tensorflow.io.decode_base64": {
        "short name": "decode_base64",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.io.decode_compressed": {
        "short name": "decode_compressed",
        "parameters": {
            "bytes": null,
            "compression_type": "''",
            "name": "None"
        }
    },
    "tensorflow.io.decode_csv": {
        "short name": "decode_csv",
        "parameters": {
            "records": null,
            "record_defaults": null,
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "select_cols": "None",
            "name": "None"
        }
    },
    "tensorflow.io.decode_json_example": {
        "short name": "decode_json_example",
        "parameters": {
            "json_examples": null,
            "name": "None"
        }
    },
    "tensorflow.io.decode_proto": {
        "short name": "decode_proto",
        "parameters": {
            "bytes": null,
            "message_type": null,
            "field_names": null,
            "output_types": null,
            "descriptor_source": "'local://'",
            "message_format": "'binary'",
            "sanitize": "False",
            "name": "None"
        }
    },
    "tensorflow.io.decode_raw": {
        "short name": "decode_raw",
        "parameters": {
            "input_bytes": null,
            "out_type": null,
            "little_endian": "True",
            "fixed_length": "None",
            "name": "None"
        }
    },
    "tensorflow.io.deserialize_many_sparse": {
        "short name": "deserialize_many_sparse",
        "parameters": {
            "serialized_sparse": null,
            "dtype": null,
            "rank": "None",
            "name": "None"
        }
    },
    "tensorflow.io.encode_base64": {
        "short name": "encode_base64",
        "parameters": {
            "input": null,
            "pad": "False",
            "name": "None"
        }
    },
    "tensorflow.io.encode_proto": {
        "short name": "encode_proto",
        "parameters": {
            "sizes": null,
            "values": null,
            "field_names": null,
            "message_type": null,
            "descriptor_source": "'local://'",
            "name": "None"
        }
    },
    "tensorflow.io.match_filenames_once": {
        "short name": "match_filenames_once",
        "parameters": {
            "pattern": null,
            "name": "None"
        }
    },
    "tensorflow.io.matching_files": {
        "short name": "matching_files",
        "parameters": {
            "pattern": null,
            "name": "None"
        }
    },
    "tensorflow.io.parse_example": {
        "short name": "parse_example",
        "parameters": {
            "serialized": null,
            "features": null,
            "example_names": "None",
            "name": "None"
        }
    },
    "tensorflow.io.parse_sequence_example": {
        "short name": "parse_sequence_example",
        "parameters": {
            "serialized": null,
            "context_features": "None",
            "sequence_features": "None",
            "example_names": "None",
            "name": "None"
        }
    },
    "tensorflow.io.parse_single_example": {
        "short name": "parse_single_example",
        "parameters": {
            "serialized": null,
            "features": null,
            "example_names": "None",
            "name": "None"
        }
    },
    "tensorflow.io.parse_single_sequence_example": {
        "short name": "parse_single_sequence_example",
        "parameters": {
            "serialized": null,
            "context_features": "None",
            "sequence_features": "None",
            "example_name": "None",
            "name": "None"
        }
    },
    "tensorflow.io.parse_tensor": {
        "short name": "parse_tensor",
        "parameters": {
            "serialized": null,
            "out_type": null,
            "name": "None"
        }
    },
    "tensorflow.io.read_file": {
        "short name": "read_file",
        "parameters": {
            "filename": null,
            "name": "None"
        }
    },
    "tensorflow.io.serialize_many_sparse": {
        "short name": "serialize_many_sparse",
        "parameters": {
            "sp_input": null,
            "out_type": "tf.dtypes.string",
            "name": "None"
        }
    },
    "tensorflow.io.serialize_sparse": {
        "short name": "serialize_sparse",
        "parameters": {
            "sp_input": null,
            "out_type": "tf.dtypes.string",
            "name": "None"
        }
    },
    "tensorflow.io.serialize_tensor": {
        "short name": "serialize_tensor",
        "parameters": {
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.io.write_file": {
        "short name": "write_file",
        "parameters": {
            "filename": null,
            "contents": null,
            "name": "None"
        }
    },
    "tensorflow.io.write_graph": {
        "short name": "write_graph",
        "parameters": {
            "graph_or_graph_def": null,
            "logdir": null,
            "name": null,
            "as_text": "True"
        }
    },
    "tensorflow.keras.Model": {
        "short name": "Model",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.Sequential": {
        "short name": "Sequential",
        "parameters": {
            "layers": "None",
            "name": "None"
        }
    },
    "tensorflow.keras.Input": {
        "short name": "Input",
        "parameters": {
            "shape": "None",
            "batch_size": "None",
            "name": "None",
            "dtype": "None",
            "sparse": "None",
            "tensor": "None",
            "ragged": "None",
            "type_spec": "None",
            "**kwargs": null
        }
    },
    "tensorflow.linalg.LinearOperator": {
        "short name": "LinearOperator",
        "parameters": {
            "dtype": null,
            "graph_parents": "None",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None",
            "parameters": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorAdjoint": {
        "short name": "LinearOperatorAdjoint",
        "parameters": {
            "operator": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorBlockDiag": {
        "short name": "LinearOperatorBlockDiag",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorBlockLowerTriangular": {
        "short name": "LinearOperatorBlockLowerTriangular",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorBlockLowerTriangular'"
        }
    },
    "tensorflow.linalg.LinearOperatorCirculant": {
        "short name": "LinearOperatorCirculant",
        "parameters": {
            "spectrum": null,
            "input_output_dtype": "tf.dtypes.complex64",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "'LinearOperatorCirculant'"
        }
    },
    "tensorflow.linalg.LinearOperatorCirculant2D": {
        "short name": "LinearOperatorCirculant2D",
        "parameters": {
            "spectrum": null,
            "input_output_dtype": "tf.dtypes.complex64",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "'LinearOperatorCirculant2D'"
        }
    },
    "tensorflow.linalg.LinearOperatorCirculant3D": {
        "short name": "LinearOperatorCirculant3D",
        "parameters": {
            "spectrum": null,
            "input_output_dtype": "tf.dtypes.complex64",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "name": "'LinearOperatorCirculant3D'"
        }
    },
    "tensorflow.linalg.LinearOperatorComposition": {
        "short name": "LinearOperatorComposition",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorDiag": {
        "short name": "LinearOperatorDiag",
        "parameters": {
            "diag": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorDiag'"
        }
    },
    "tensorflow.linalg.LinearOperatorFullMatrix": {
        "short name": "LinearOperatorFullMatrix",
        "parameters": {
            "matrix": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorFullMatrix'"
        }
    },
    "tensorflow.linalg.LinearOperatorHouseholder": {
        "short name": "LinearOperatorHouseholder",
        "parameters": {
            "reflection_axis": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorHouseholder'"
        }
    },
    "tensorflow.linalg.LinearOperatorIdentity": {
        "short name": "LinearOperatorIdentity",
        "parameters": {
            "num_rows": null,
            "batch_shape": "None",
            "dtype": "None",
            "is_non_singular": "True",
            "is_self_adjoint": "True",
            "is_positive_definite": "True",
            "is_square": "True",
            "assert_proper_shapes": "False",
            "name": "'LinearOperatorIdentity'"
        }
    },
    "tensorflow.linalg.LinearOperatorInversion": {
        "short name": "LinearOperatorInversion",
        "parameters": {
            "operator": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorKronecker": {
        "short name": "LinearOperatorKronecker",
        "parameters": {
            "operators": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.LinearOperatorLowRankUpdate": {
        "short name": "LinearOperatorLowRankUpdate",
        "parameters": {
            "base_operator": null,
            "u": null,
            "diag_update": "None",
            "v": "None",
            "is_diag_update_positive": "None",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorLowRankUpdate'"
        }
    },
    "tensorflow.linalg.LinearOperatorLowerTriangular": {
        "short name": "LinearOperatorLowerTriangular",
        "parameters": {
            "tril": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorLowerTriangular'"
        }
    },
    "tensorflow.linalg.LinearOperatorPermutation": {
        "short name": "LinearOperatorPermutation",
        "parameters": {
            "perm": null,
            "dtype": "tf.dtypes.float32",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorPermutation'"
        }
    },
    "tensorflow.linalg.LinearOperatorScaledIdentity": {
        "short name": "LinearOperatorScaledIdentity",
        "parameters": {
            "num_rows": null,
            "multiplier": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "True",
            "assert_proper_shapes": "False",
            "name": "'LinearOperatorScaledIdentity'"
        }
    },
    "tensorflow.linalg.LinearOperatorToeplitz": {
        "short name": "LinearOperatorToeplitz",
        "parameters": {
            "col": null,
            "row": null,
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorToeplitz'"
        }
    },
    "tensorflow.linalg.LinearOperatorTridiag": {
        "short name": "LinearOperatorTridiag",
        "parameters": {
            "diagonals": null,
            "diagonals_format": "_COMPACT",
            "is_non_singular": "None",
            "is_self_adjoint": "None",
            "is_positive_definite": "None",
            "is_square": "None",
            "name": "'LinearOperatorTridiag'"
        }
    },
    "tensorflow.linalg.LinearOperatorZeros": {
        "short name": "LinearOperatorZeros",
        "parameters": {
            "num_rows": null,
            "num_columns": "None",
            "batch_shape": "None",
            "dtype": "None",
            "is_non_singular": "False",
            "is_self_adjoint": "True",
            "is_positive_definite": "False",
            "is_square": "True",
            "assert_proper_shapes": "False",
            "name": "'LinearOperatorZeros'"
        }
    },
    "tensorflow.linalg.adjoint": {
        "short name": "adjoint",
        "parameters": {
            "matrix": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.band_part": {
        "short name": "band_part",
        "parameters": {
            "input": null,
            "num_lower": null,
            "num_upper": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.banded_triangular_solve": {
        "short name": "banded_triangular_solve",
        "parameters": {
            "bands": null,
            "rhs": null,
            "lower": "True",
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.cholesky": {
        "short name": "cholesky",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.cholesky_solve": {
        "short name": "cholesky_solve",
        "parameters": {
            "chol": null,
            "rhs": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.cross": {
        "short name": "cross",
        "parameters": {
            "a": null,
            "b": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.det": {
        "short name": "det",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.diag": {
        "short name": "diag",
        "parameters": {
            "diagonal": null,
            "name": "'diag'",
            "k": "0",
            "num_rows": "-1",
            "num_cols": "-1",
            "padding_value": "0",
            "align": "'RIGHT_LEFT'"
        }
    },
    "tensorflow.linalg.diag_part": {
        "short name": "diag_part",
        "parameters": {
            "input": null,
            "name": "'diag_part'",
            "k": "0",
            "padding_value": "0",
            "align": "'RIGHT_LEFT'"
        }
    },
    "tensorflow.linalg.eigh": {
        "short name": "eigh",
        "parameters": {
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.eigh_tridiagonal": {
        "short name": "eigh_tridiagonal",
        "parameters": {
            "alpha": null,
            "beta": null,
            "eigvals_only": "True",
            "select": "'a'",
            "select_range": "None",
            "tol": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.eigvalsh": {
        "short name": "eigvalsh",
        "parameters": {
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.expm": {
        "short name": "expm",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.global_norm": {
        "short name": "global_norm",
        "parameters": {
            "t_list": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.inv": {
        "short name": "inv",
        "parameters": {
            "input": null,
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.math.l2_normalize": {
        "short name": "l2_normalize",
        "parameters": {
            "x": null,
            "axis": "None",
            "epsilon": "1e-12",
            "name": "None",
            "dim": "None"
        }
    },
    "tensorflow.linalg.logdet": {
        "short name": "logdet",
        "parameters": {
            "matrix": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.logm": {
        "short name": "logm",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.lstsq": {
        "short name": "lstsq",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "l2_regularizer": "0.0",
            "fast": "True",
            "name": "None"
        }
    },
    "tensorflow.linalg.lu": {
        "short name": "lu",
        "parameters": {
            "input": null,
            "output_idx_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.linalg.lu_matrix_inverse": {
        "short name": "lu_matrix_inverse",
        "parameters": {
            "lower_upper": null,
            "perm": null,
            "validate_args": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.lu_reconstruct": {
        "short name": "lu_reconstruct",
        "parameters": {
            "lower_upper": null,
            "perm": null,
            "validate_args": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.lu_solve": {
        "short name": "lu_solve",
        "parameters": {
            "lower_upper": null,
            "perm": null,
            "rhs": null,
            "validate_args": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.matrix_rank": {
        "short name": "matrix_rank",
        "parameters": {
            "a": null,
            "tol": "None",
            "validate_args": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.matrix_transpose": {
        "short name": "matrix_transpose",
        "parameters": {
            "a": null,
            "name": "'matrix_transpose'",
            "conjugate": "False"
        }
    },
    "tensorflow.linalg.matvec": {
        "short name": "matvec",
        "parameters": {
            "a": null,
            "b": null,
            "transpose_a": "False",
            "adjoint_a": "False",
            "a_is_sparse": "False",
            "b_is_sparse": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.normalize": {
        "short name": "normalize",
        "parameters": {
            "tensor": null,
            "ord": "'euclidean'",
            "axis": "None",
            "name": "None"
        }
    },
    "tensorflow.linalg.pinv": {
        "short name": "pinv",
        "parameters": {
            "a": null,
            "rcond": "None",
            "validate_args": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.qr": {
        "short name": "qr",
        "parameters": {
            "input": null,
            "full_matrices": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.set_diag": {
        "short name": "set_diag",
        "parameters": {
            "input": null,
            "diagonal": null,
            "name": "'set_diag'",
            "k": "0",
            "align": "'RIGHT_LEFT'"
        }
    },
    "tensorflow.linalg.slogdet": {
        "short name": "slogdet",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.solve": {
        "short name": "solve",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.svd": {
        "short name": "svd",
        "parameters": {
            "tensor": null,
            "full_matrices": "False",
            "compute_uv": "True",
            "name": "None"
        }
    },
    "tensorflow.linalg.tensor_diag": {
        "short name": "tensor_diag",
        "parameters": {
            "diagonal": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.tensor_diag_part": {
        "short name": "tensor_diag_part",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.trace": {
        "short name": "trace",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.linalg.triangular_solve": {
        "short name": "triangular_solve",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "lower": "True",
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.linalg.tridiagonal_matmul": {
        "short name": "tridiagonal_matmul",
        "parameters": {
            "diagonals": null,
            "rhs": null,
            "diagonals_format": "'compact'",
            "name": "None"
        }
    },
    "tensorflow.linalg.tridiagonal_solve": {
        "short name": "tridiagonal_solve",
        "parameters": {
            "diagonals": null,
            "rhs": null,
            "diagonals_format": "'compact'",
            "transpose_rhs": "False",
            "conjugate_rhs": "False",
            "name": "None",
            "partial_pivoting": "True",
            "perturb_singular": "False"
        }
    },
    "tensorflow.lite.Interpreter": {
        "short name": "Interpreter",
        "parameters": {
            "model_path": "None",
            "model_content": "None",
            "experimental_delegates": "None",
            "num_threads": "None",
            "experimental_op_resolver_type": "tf.lite.experimental.OpResolverType.AUTO",
            "experimental_preserve_all_tensors": "False"
        }
    },
    "tensorflow.lite.OpsSet": {
        "short name": "OpsSet",
        "parameters": {}
    },
    "tensorflow.lite.Optimize": {
        "short name": "Optimize",
        "parameters": {}
    },
    "tensorflow.lite.RepresentativeDataset": {
        "short name": "RepresentativeDataset",
        "parameters": {
            "input_gen": null
        }
    },
    "tensorflow.lite.TFLiteConverter": {
        "short name": "TFLiteConverter",
        "parameters": {
            "funcs": null,
            "trackable_obj": "None"
        }
    },
    "tensorflow.lite.TargetSpec": {
        "short name": "TargetSpec",
        "parameters": {
            "supported_ops": "None",
            "supported_types": "None",
            "experimental_select_user_tf_ops": "None",
            "experimental_supported_backends": "None"
        }
    },
    "tensorflow.lookup.KeyValueTensorInitializer": {
        "short name": "KeyValueTensorInitializer",
        "parameters": {
            "keys": null,
            "values": null,
            "key_dtype": "None",
            "value_dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.lookup.StaticHashTable": {
        "short name": "StaticHashTable",
        "parameters": {
            "initializer": null,
            "default_value": null,
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.lookup.StaticVocabularyTable": {
        "short name": "StaticVocabularyTable",
        "parameters": {
            "initializer": null,
            "num_oov_buckets": null,
            "lookup_key_dtype": "None",
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.lookup.TextFileIndex": {
        "short name": "TextFileIndex",
        "parameters": {}
    },
    "tensorflow.lookup.TextFileInitializer": {
        "short name": "TextFileInitializer",
        "parameters": {
            "filename": null,
            "key_dtype": null,
            "key_index": null,
            "value_dtype": null,
            "value_index": null,
            "vocab_size": "None",
            "delimiter": "'\\t'",
            "name": "None",
            "value_index_offset": "0"
        }
    },
    "tensorflow.math.accumulate_n": {
        "short name": "accumulate_n",
        "parameters": {
            "inputs": null,
            "shape": "None",
            "tensor_dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.math.angle": {
        "short name": "angle",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.math.bessel_i0": {
        "short name": "bessel_i0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.bessel_i0e": {
        "short name": "bessel_i0e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.bessel_i1": {
        "short name": "bessel_i1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.bessel_i1e": {
        "short name": "bessel_i1e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.betainc": {
        "short name": "betainc",
        "parameters": {
            "a": null,
            "b": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.bincount": {
        "short name": "bincount",
        "parameters": {
            "arr": null,
            "weights": "None",
            "minlength": "None",
            "maxlength": "None",
            "dtype": "tf.dtypes.int32",
            "name": "None",
            "axis": "None",
            "binary_output": "False"
        }
    },
    "tensorflow.math.ceil": {
        "short name": "ceil",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.confusion_matrix": {
        "short name": "confusion_matrix",
        "parameters": {
            "labels": null,
            "predictions": null,
            "num_classes": "None",
            "weights": "None",
            "dtype": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.math.conj": {
        "short name": "conj",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.count_nonzero": {
        "short name": "count_nonzero",
        "parameters": {
            "input": null,
            "axis": "None",
            "keepdims": "None",
            "dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.math.cumprod": {
        "short name": "cumprod",
        "parameters": {
            "x": null,
            "axis": "0",
            "exclusive": "False",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.math.cumulative_logsumexp": {
        "short name": "cumulative_logsumexp",
        "parameters": {
            "x": null,
            "axis": "0",
            "exclusive": "False",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.math.digamma": {
        "short name": "digamma",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.divide_no_nan": {
        "short name": "divide_no_nan",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.erf": {
        "short name": "erf",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.erfc": {
        "short name": "erfc",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.erfcinv": {
        "short name": "erfcinv",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.erfinv": {
        "short name": "erfinv",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.expm1": {
        "short name": "expm1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.floordiv": {
        "short name": "floordiv",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.floormod": {
        "short name": "floormod",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.igamma": {
        "short name": "igamma",
        "parameters": {
            "a": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.igammac": {
        "short name": "igammac",
        "parameters": {
            "a": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.imag": {
        "short name": "imag",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.math.in_top_k": {
        "short name": "in_top_k",
        "parameters": {
            "targets": null,
            "predictions": null,
            "k": null,
            "name": "None"
        }
    },
    "tensorflow.math.invert_permutation": {
        "short name": "invert_permutation",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.is_finite": {
        "short name": "is_finite",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.is_inf": {
        "short name": "is_inf",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.is_nan": {
        "short name": "is_nan",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.is_non_decreasing": {
        "short name": "is_non_decreasing",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.is_strictly_increasing": {
        "short name": "is_strictly_increasing",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.lbeta": {
        "short name": "lbeta",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.lgamma": {
        "short name": "lgamma",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.log": {
        "short name": "log",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.log1p": {
        "short name": "log1p",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.log_sigmoid": {
        "short name": "log_sigmoid",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.nn.log_softmax": {
        "short name": "log_softmax",
        "parameters": {
            "logits": null,
            "axis": "None",
            "name": "None"
        }
    },
    "tensorflow.math.logical_xor": {
        "short name": "logical_xor",
        "parameters": {
            "x": null,
            "y": null,
            "name": "'LogicalXor'"
        }
    },
    "tensorflow.math.multiply_no_nan": {
        "short name": "multiply_no_nan",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.ndtri": {
        "short name": "ndtri",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.nextafter": {
        "short name": "nextafter",
        "parameters": {
            "x1": null,
            "x2": null,
            "name": "None"
        }
    },
    "tensorflow.math.polygamma": {
        "short name": "polygamma",
        "parameters": {
            "a": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.polyval": {
        "short name": "polyval",
        "parameters": {
            "coeffs": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.real": {
        "short name": "real",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.math.reciprocal": {
        "short name": "reciprocal",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.reciprocal_no_nan": {
        "short name": "reciprocal_no_nan",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.reduce_euclidean_norm": {
        "short name": "reduce_euclidean_norm",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_std": {
        "short name": "reduce_std",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.reduce_variance": {
        "short name": "reduce_variance",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.math.rint": {
        "short name": "rint",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.rsqrt": {
        "short name": "rsqrt",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.segment_max": {
        "short name": "segment_max",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.math.segment_mean": {
        "short name": "segment_mean",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.math.segment_min": {
        "short name": "segment_min",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.math.segment_prod": {
        "short name": "segment_prod",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.math.segment_sum": {
        "short name": "segment_sum",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.math.sobol_sample": {
        "short name": "sobol_sample",
        "parameters": {
            "dim": null,
            "num_results": null,
            "skip": "0",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.nn.softmax": {
        "short name": "softmax",
        "parameters": {
            "logits": null,
            "axis": "None",
            "name": "None"
        }
    },
    "tensorflow.math.softplus": {
        "short name": "softplus",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.nn.softsign": {
        "short name": "softsign",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.math.squared_difference": {
        "short name": "squared_difference",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.top_k": {
        "short name": "top_k",
        "parameters": {
            "input": null,
            "k": "1",
            "sorted": "True",
            "name": "None"
        }
    },
    "tensorflow.math.unsorted_segment_max": {
        "short name": "unsorted_segment_max",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.math.unsorted_segment_mean": {
        "short name": "unsorted_segment_mean",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.math.unsorted_segment_min": {
        "short name": "unsorted_segment_min",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.math.unsorted_segment_prod": {
        "short name": "unsorted_segment_prod",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.math.unsorted_segment_sqrt_n": {
        "short name": "unsorted_segment_sqrt_n",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.math.unsorted_segment_sum": {
        "short name": "unsorted_segment_sum",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.math.xdivy": {
        "short name": "xdivy",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.xlog1py": {
        "short name": "xlog1py",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.xlogy": {
        "short name": "xlogy",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.math.zero_fraction": {
        "short name": "zero_fraction",
        "parameters": {
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.math.zeta": {
        "short name": "zeta",
        "parameters": {
            "x": null,
            "q": null,
            "name": "None"
        }
    },
    "tensorflow.nest.assert_same_structure": {
        "short name": "assert_same_structure",
        "parameters": {
            "nest1": null,
            "nest2": null,
            "check_types": "True",
            "expand_composites": "False"
        }
    },
    "tensorflow.nest.flatten": {
        "short name": "flatten",
        "parameters": {
            "structure": null,
            "expand_composites": "False"
        }
    },
    "tensorflow.nest.is_nested": {
        "short name": "is_nested",
        "parameters": {
            "seq": null
        }
    },
    "tensorflow.nest.map_structure": {
        "short name": "map_structure",
        "parameters": {
            "func": null,
            "*structure": null,
            "**kwargs": null
        }
    },
    "tensorflow.nest.pack_sequence_as": {
        "short name": "pack_sequence_as",
        "parameters": {
            "structure": null,
            "flat_sequence": null,
            "expand_composites": "False"
        }
    },
    "tensorflow.nn.RNNCellDeviceWrapper": {
        "short name": "RNNCellDeviceWrapper",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.nn.RNNCellDropoutWrapper": {
        "short name": "RNNCellDropoutWrapper",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.nn.RNNCellResidualWrapper": {
        "short name": "RNNCellResidualWrapper",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.random.all_candidate_sampler": {
        "short name": "all_candidate_sampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.atrous_conv2d": {
        "short name": "atrous_conv2d",
        "parameters": {
            "value": null,
            "filters": null,
            "rate": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.nn.atrous_conv2d_transpose": {
        "short name": "atrous_conv2d_transpose",
        "parameters": {
            "value": null,
            "filters": null,
            "output_shape": null,
            "rate": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.nn.avg_pool": {
        "short name": "avg_pool",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.avg_pool1d": {
        "short name": "avg_pool1d",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.avg_pool2d": {
        "short name": "avg_pool2d",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.avg_pool3d": {
        "short name": "avg_pool3d",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.batch_norm_with_global_normalization": {
        "short name": "batch_norm_with_global_normalization",
        "parameters": {
            "input": null,
            "mean": null,
            "variance": null,
            "beta": null,
            "gamma": null,
            "variance_epsilon": null,
            "scale_after_normalization": null,
            "name": "None"
        }
    },
    "tensorflow.nn.batch_normalization": {
        "short name": "batch_normalization",
        "parameters": {
            "x": null,
            "mean": null,
            "variance": null,
            "offset": null,
            "scale": null,
            "variance_epsilon": null,
            "name": "None"
        }
    },
    "tensorflow.nn.bias_add": {
        "short name": "bias_add",
        "parameters": {
            "value": null,
            "bias": null,
            "data_format": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.collapse_repeated": {
        "short name": "collapse_repeated",
        "parameters": {
            "labels": null,
            "seq_length": null,
            "name": "None"
        }
    },
    "tensorflow.nn.compute_accidental_hits": {
        "short name": "compute_accidental_hits",
        "parameters": {
            "true_classes": null,
            "sampled_candidates": null,
            "num_true": null,
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.compute_average_loss": {
        "short name": "compute_average_loss",
        "parameters": {
            "per_example_loss": null,
            "sample_weight": "None",
            "global_batch_size": "None"
        }
    },
    "tensorflow.nn.conv1d": {
        "short name": "conv1d",
        "parameters": {
            "input": null,
            "filters": null,
            "stride": null,
            "padding": null,
            "data_format": "'NWC'",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.conv1d_transpose": {
        "short name": "conv1d_transpose",
        "parameters": {
            "input": null,
            "filters": null,
            "output_shape": null,
            "strides": null,
            "padding": "'SAME'",
            "data_format": "'NWC'",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.conv2d": {
        "short name": "conv2d",
        "parameters": {
            "input": null,
            "filters": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.conv2d_transpose": {
        "short name": "conv2d_transpose",
        "parameters": {
            "input": null,
            "filters": null,
            "output_shape": null,
            "strides": null,
            "padding": "'SAME'",
            "data_format": "'NHWC'",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.conv3d": {
        "short name": "conv3d",
        "parameters": {
            "input": null,
            "filters": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.conv3d_transpose": {
        "short name": "conv3d_transpose",
        "parameters": {
            "input": null,
            "filters": null,
            "output_shape": null,
            "strides": null,
            "padding": "'SAME'",
            "data_format": "'NDHWC'",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.conv_transpose": {
        "short name": "conv_transpose",
        "parameters": {
            "input": null,
            "filters": null,
            "output_shape": null,
            "strides": null,
            "padding": "'SAME'",
            "data_format": "None",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.convolution": {
        "short name": "convolution",
        "parameters": {
            "input": null,
            "filters": null,
            "strides": "None",
            "padding": "'VALID'",
            "data_format": "None",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.crelu": {
        "short name": "crelu",
        "parameters": {
            "features": null,
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.nn.ctc_beam_search_decoder": {
        "short name": "ctc_beam_search_decoder",
        "parameters": {
            "inputs": null,
            "sequence_length": null,
            "beam_width": "100",
            "top_paths": "1"
        }
    },
    "tensorflow.nn.ctc_greedy_decoder": {
        "short name": "ctc_greedy_decoder",
        "parameters": {
            "inputs": null,
            "sequence_length": null,
            "merge_repeated": "True",
            "blank_index": "None"
        }
    },
    "tensorflow.nn.ctc_loss": {
        "short name": "ctc_loss",
        "parameters": {
            "labels": null,
            "logits": null,
            "label_length": null,
            "logit_length": null,
            "logits_time_major": "True",
            "unique": "None",
            "blank_index": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.ctc_unique_labels": {
        "short name": "ctc_unique_labels",
        "parameters": {
            "labels": null,
            "name": "None"
        }
    },
    "tensorflow.nn.depth_to_space": {
        "short name": "depth_to_space",
        "parameters": {
            "input": null,
            "block_size": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.depthwise_conv2d": {
        "short name": "depthwise_conv2d",
        "parameters": {
            "input": null,
            "filter": null,
            "strides": null,
            "padding": null,
            "data_format": "None",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.depthwise_conv2d_backprop_filter": {
        "short name": "depthwise_conv2d_backprop_filter",
        "parameters": {
            "input": null,
            "filter_sizes": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.nn.depthwise_conv2d_backprop_input": {
        "short name": "depthwise_conv2d_backprop_input",
        "parameters": {
            "input_sizes": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.nn.dilation2d": {
        "short name": "dilation2d",
        "parameters": {
            "input": null,
            "filters": null,
            "strides": null,
            "padding": null,
            "data_format": null,
            "dilations": null,
            "name": "None"
        }
    },
    "tensorflow.nn.dropout": {
        "short name": "dropout",
        "parameters": {
            "x": null,
            "rate": null,
            "noise_shape": "None",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.elu": {
        "short name": "elu",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.nn.embedding_lookup": {
        "short name": "embedding_lookup",
        "parameters": {
            "params": null,
            "ids": null,
            "max_norm": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.embedding_lookup_sparse": {
        "short name": "embedding_lookup_sparse",
        "parameters": {
            "params": null,
            "sp_ids": null,
            "sp_weights": null,
            "combiner": "None",
            "max_norm": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.erosion2d": {
        "short name": "erosion2d",
        "parameters": {
            "value": null,
            "filters": null,
            "strides": null,
            "padding": null,
            "data_format": null,
            "dilations": null,
            "name": "None"
        }
    },
    "tensorflow.random.fixed_unigram_candidate_sampler": {
        "short name": "fixed_unigram_candidate_sampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "vocab_file": "''",
            "distortion": "1.0",
            "num_reserved_ids": "0",
            "num_shards": "1",
            "shard": "0",
            "unigrams": "()",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.fractional_avg_pool": {
        "short name": "fractional_avg_pool",
        "parameters": {
            "value": null,
            "pooling_ratio": null,
            "pseudo_random": "False",
            "overlapping": "False",
            "seed": "0",
            "name": "None"
        }
    },
    "tensorflow.nn.fractional_max_pool": {
        "short name": "fractional_max_pool",
        "parameters": {
            "value": null,
            "pooling_ratio": null,
            "pseudo_random": "False",
            "overlapping": "False",
            "seed": "0",
            "name": "None"
        }
    },
    "tensorflow.nn.gelu": {
        "short name": "gelu",
        "parameters": {
            "features": null,
            "approximate": "False",
            "name": "None"
        }
    },
    "tensorflow.nn.isotonic_regression": {
        "short name": "isotonic_regression",
        "parameters": {
            "inputs": null,
            "decreasing": "True",
            "axis": "-1"
        }
    },
    "tensorflow.nn.l2_loss": {
        "short name": "l2_loss",
        "parameters": {
            "t": null,
            "name": "None"
        }
    },
    "tensorflow.nn.leaky_relu": {
        "short name": "leaky_relu",
        "parameters": {
            "features": null,
            "alpha": "0.2",
            "name": "None"
        }
    },
    "tensorflow.random.learned_unigram_candidate_sampler": {
        "short name": "learned_unigram_candidate_sampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.local_response_normalization": {
        "short name": "local_response_normalization",
        "parameters": {
            "input": null,
            "depth_radius": "5",
            "bias": "1",
            "alpha": "1",
            "beta": "0.5",
            "name": "None"
        }
    },
    "tensorflow.nn.log_poisson_loss": {
        "short name": "log_poisson_loss",
        "parameters": {
            "targets": null,
            "log_input": null,
            "compute_full_loss": "False",
            "name": "None"
        }
    },
    "tensorflow.nn.max_pool": {
        "short name": "max_pool",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.max_pool1d": {
        "short name": "max_pool1d",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.max_pool2d": {
        "short name": "max_pool2d",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.max_pool3d": {
        "short name": "max_pool3d",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.max_pool_with_argmax": {
        "short name": "max_pool_with_argmax",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "output_dtype": "tf.dtypes.int64",
            "include_batch_in_index": "False",
            "name": "None"
        }
    },
    "tensorflow.nn.moments": {
        "short name": "moments",
        "parameters": {
            "x": null,
            "axes": null,
            "shift": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.nn.nce_loss": {
        "short name": "nce_loss",
        "parameters": {
            "weights": null,
            "biases": null,
            "labels": null,
            "inputs": null,
            "num_sampled": null,
            "num_classes": null,
            "num_true": "1",
            "sampled_values": "None",
            "remove_accidental_hits": "False",
            "name": "'nce_loss'"
        }
    },
    "tensorflow.nn.normalize_moments": {
        "short name": "normalize_moments",
        "parameters": {
            "counts": null,
            "mean_ss": null,
            "variance_ss": null,
            "shift": null,
            "name": "None"
        }
    },
    "tensorflow.nn.pool": {
        "short name": "pool",
        "parameters": {
            "input": null,
            "window_shape": null,
            "pooling_type": null,
            "strides": "None",
            "padding": "'VALID'",
            "data_format": "None",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.relu": {
        "short name": "relu",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.nn.relu6": {
        "short name": "relu6",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.nn.safe_embedding_lookup_sparse": {
        "short name": "safe_embedding_lookup_sparse",
        "parameters": {
            "embedding_weights": null,
            "sparse_ids": null,
            "sparse_weights": "None",
            "combiner": "'mean'",
            "default_id": "None",
            "max_norm": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.sampled_softmax_loss": {
        "short name": "sampled_softmax_loss",
        "parameters": {
            "weights": null,
            "biases": null,
            "labels": null,
            "inputs": null,
            "num_sampled": null,
            "num_classes": null,
            "num_true": "1",
            "sampled_values": "None",
            "remove_accidental_hits": "True",
            "seed": "None",
            "name": "'sampled_softmax_loss'"
        }
    },
    "tensorflow.nn.scale_regularization_loss": {
        "short name": "scale_regularization_loss",
        "parameters": {
            "regularization_loss": null
        }
    },
    "tensorflow.nn.selu": {
        "short name": "selu",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.nn.separable_conv2d": {
        "short name": "separable_conv2d",
        "parameters": {
            "input": null,
            "depthwise_filter": null,
            "pointwise_filter": null,
            "strides": null,
            "padding": null,
            "data_format": "None",
            "dilations": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.sigmoid_cross_entropy_with_logits": {
        "short name": "sigmoid_cross_entropy_with_logits",
        "parameters": {
            "labels": "None",
            "logits": "None",
            "name": "None"
        }
    },
    "tensorflow.nn.silu": {
        "short name": "silu",
        "parameters": {
            "features": null,
            "beta": "1.0"
        }
    },
    "tensorflow.nn.softmax_cross_entropy_with_logits": {
        "short name": "softmax_cross_entropy_with_logits",
        "parameters": {
            "labels": null,
            "logits": null,
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.nn.space_to_depth": {
        "short name": "space_to_depth",
        "parameters": {
            "input": null,
            "block_size": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits": {
        "short name": "sparse_softmax_cross_entropy_with_logits",
        "parameters": {
            "labels": null,
            "logits": null,
            "name": "None"
        }
    },
    "tensorflow.nn.sufficient_statistics": {
        "short name": "sufficient_statistics",
        "parameters": {
            "x": null,
            "axes": null,
            "shift": "None",
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.nn.weighted_cross_entropy_with_logits": {
        "short name": "weighted_cross_entropy_with_logits",
        "parameters": {
            "labels": null,
            "logits": null,
            "pos_weight": null,
            "name": "None"
        }
    },
    "tensorflow.nn.weighted_moments": {
        "short name": "weighted_moments",
        "parameters": {
            "x": null,
            "axes": null,
            "frequency_weights": null,
            "keepdims": "False",
            "name": "None"
        }
    },
    "tensorflow.nn.with_space_to_batch": {
        "short name": "with_space_to_batch",
        "parameters": {
            "input": null,
            "dilation_rate": null,
            "padding": null,
            "op": null,
            "filter_shape": "None",
            "spatial_dims": "None",
            "data_format": "None"
        }
    },
    "tensorflow.quantization.dequantize": {
        "short name": "dequantize",
        "parameters": {
            "input": null,
            "min_range": null,
            "max_range": null,
            "mode": "'MIN_COMBINED'",
            "name": "None",
            "axis": "None",
            "narrow_range": "False",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.quantization.fake_quant_with_min_max_args": {
        "short name": "fake_quant_with_min_max_args",
        "parameters": {
            "inputs": null,
            "min": "-6",
            "max": "6",
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.quantization.fake_quant_with_min_max_args_gradient": {
        "short name": "fake_quant_with_min_max_args_gradient",
        "parameters": {
            "gradients": null,
            "inputs": null,
            "min": "-6",
            "max": "6",
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.quantization.fake_quant_with_min_max_vars": {
        "short name": "fake_quant_with_min_max_vars",
        "parameters": {
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.quantization.fake_quant_with_min_max_vars_gradient": {
        "short name": "fake_quant_with_min_max_vars_gradient",
        "parameters": {
            "gradients": null,
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel": {
        "short name": "fake_quant_with_min_max_vars_per_channel",
        "parameters": {
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.quantization.fake_quant_with_min_max_vars_per_channel_gradient": {
        "short name": "fake_quant_with_min_max_vars_per_channel_gradient",
        "parameters": {
            "gradients": null,
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.quantization.quantize": {
        "short name": "quantize",
        "parameters": {
            "input": null,
            "min_range": null,
            "max_range": null,
            "T": null,
            "mode": "'MIN_COMBINED'",
            "round_mode": "'HALF_AWAY_FROM_ZERO'",
            "name": "None",
            "narrow_range": "False",
            "axis": "None",
            "ensure_minimum_range": "0.01"
        }
    },
    "tensorflow.quantization.quantize_and_dequantize": {
        "short name": "quantize_and_dequantize",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "signed_input": "True",
            "num_bits": "8",
            "range_given": "False",
            "round_mode": "'HALF_TO_EVEN'",
            "name": "None",
            "narrow_range": "False",
            "axis": "None"
        }
    },
    "tensorflow.quantization.quantize_and_dequantize_v2": {
        "short name": "quantize_and_dequantize_v2",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "signed_input": "True",
            "num_bits": "8",
            "range_given": "False",
            "round_mode": "'HALF_TO_EVEN'",
            "name": "None",
            "narrow_range": "False",
            "axis": "None"
        }
    },
    "tensorflow.quantization.quantized_concat": {
        "short name": "quantized_concat",
        "parameters": {
            "concat_dim": null,
            "values": null,
            "input_mins": null,
            "input_maxes": null,
            "name": "None"
        }
    },
    "tensorflow.queue.FIFOQueue": {
        "short name": "FIFOQueue",
        "parameters": {
            "capacity": null,
            "dtypes": null,
            "shapes": "None",
            "names": "None",
            "shared_name": "None",
            "name": "'fifo_queue'"
        }
    },
    "tensorflow.queue.PaddingFIFOQueue": {
        "short name": "PaddingFIFOQueue",
        "parameters": {
            "capacity": null,
            "dtypes": null,
            "shapes": null,
            "names": "None",
            "shared_name": "None",
            "name": "'padding_fifo_queue'"
        }
    },
    "tensorflow.queue.PriorityQueue": {
        "short name": "PriorityQueue",
        "parameters": {
            "capacity": null,
            "types": null,
            "shapes": "None",
            "names": "None",
            "shared_name": "None",
            "name": "'priority_queue'"
        }
    },
    "tensorflow.queue.QueueBase": {
        "short name": "QueueBase",
        "parameters": {
            "dtypes": null,
            "shapes": null,
            "names": null,
            "queue_ref": null
        }
    },
    "tensorflow.queue.RandomShuffleQueue": {
        "short name": "RandomShuffleQueue",
        "parameters": {
            "capacity": null,
            "min_after_dequeue": null,
            "dtypes": null,
            "shapes": "None",
            "names": "None",
            "seed": "None",
            "shared_name": "None",
            "name": "'random_shuffle_queue'"
        }
    },
    "tensorflow.ragged.boolean_mask": {
        "short name": "boolean_mask",
        "parameters": {
            "data": null,
            "mask": null,
            "name": "None"
        }
    },
    "tensorflow.ragged.constant": {
        "short name": "constant",
        "parameters": {
            "pylist": null,
            "dtype": "None",
            "ragged_rank": "None",
            "inner_shape": "None",
            "name": "None",
            "row_splits_dtype": "tf.dtypes.int64"
        }
    },
    "tensorflow.ragged.cross": {
        "short name": "cross",
        "parameters": {
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.ragged.cross_hashed": {
        "short name": "cross_hashed",
        "parameters": {
            "inputs": null,
            "num_buckets": "0",
            "hash_key": "None",
            "name": "None"
        }
    },
    "tensorflow.ragged.map_flat_values": {
        "short name": "map_flat_values",
        "parameters": {
            "op": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.ragged.range": {
        "short name": "range",
        "parameters": {
            "starts": null,
            "limits": "None",
            "deltas": "1",
            "dtype": "None",
            "name": "None",
            "row_splits_dtype": "tf.dtypes.int64"
        }
    },
    "tensorflow.ragged.row_splits_to_segment_ids": {
        "short name": "row_splits_to_segment_ids",
        "parameters": {
            "splits": null,
            "name": "None",
            "out_type": "None"
        }
    },
    "tensorflow.ragged.segment_ids_to_row_splits": {
        "short name": "segment_ids_to_row_splits",
        "parameters": {
            "segment_ids": null,
            "num_segments": "None",
            "out_type": "None",
            "name": "None"
        }
    },
    "tensorflow.ragged.stack": {
        "short name": "stack",
        "parameters": {}
    },
    "tensorflow.ragged.stack_dynamic_partitions": {
        "short name": "stack_dynamic_partitions",
        "parameters": {
            "data": null,
            "partitions": null,
            "num_partitions": null,
            "name": "None"
        }
    },
    "tensorflow.random.Algorithm": {
        "short name": "Algorithm",
        "parameters": {}
    },
    "tensorflow.random.Generator": {
        "short name": "Generator",
        "parameters": {
            "copy_from": "None",
            "state": "None",
            "alg": "None"
        }
    },
    "tensorflow.random.categorical": {
        "short name": "categorical",
        "parameters": {
            "logits": null,
            "num_samples": null,
            "dtype": "None",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.create_rng_state": {
        "short name": "create_rng_state",
        "parameters": {
            "seed": null,
            "alg": null
        }
    },
    "tensorflow.random.gamma": {
        "short name": "gamma",
        "parameters": {
            "shape": null,
            "alpha": null,
            "beta": "None",
            "dtype": "tf.dtypes.float32",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.get_global_generator": {
        "short name": "get_global_generator",
        "parameters": {}
    },
    "tensorflow.random.log_uniform_candidate_sampler": {
        "short name": "log_uniform_candidate_sampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.normal": {
        "short name": "normal",
        "parameters": {
            "shape": null,
            "mean": "0.0",
            "stddev": "1.0",
            "dtype": "tf.dtypes.float32",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.poisson": {
        "short name": "poisson",
        "parameters": {
            "shape": null,
            "lam": null,
            "dtype": "tf.dtypes.float32",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.set_global_generator": {
        "short name": "set_global_generator",
        "parameters": {
            "generator": null
        }
    },
    "tensorflow.random.set_seed": {
        "short name": "set_seed",
        "parameters": {
            "seed": null
        }
    },
    "tensorflow.random.shuffle": {
        "short name": "shuffle",
        "parameters": {
            "value": null,
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.stateless_binomial": {
        "short name": "stateless_binomial",
        "parameters": {
            "shape": null,
            "seed": null,
            "counts": null,
            "probs": null,
            "output_dtype": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.random.stateless_categorical": {
        "short name": "stateless_categorical",
        "parameters": {
            "logits": null,
            "num_samples": null,
            "seed": null,
            "dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.random.stateless_gamma": {
        "short name": "stateless_gamma",
        "parameters": {
            "shape": null,
            "seed": null,
            "alpha": null,
            "beta": "None",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.random.stateless_normal": {
        "short name": "stateless_normal",
        "parameters": {
            "shape": null,
            "seed": null,
            "mean": "0.0",
            "stddev": "1.0",
            "dtype": "tf.dtypes.float32",
            "name": "None",
            "alg": "'auto_select'"
        }
    },
    "tensorflow.random.stateless_parameterized_truncated_normal": {
        "short name": "stateless_parameterized_truncated_normal",
        "parameters": {
            "shape": null,
            "seed": null,
            "means": "0.0",
            "stddevs": "1.0",
            "minvals": "-2.0",
            "maxvals": "2.0",
            "name": "None"
        }
    },
    "tensorflow.random.stateless_poisson": {
        "short name": "stateless_poisson",
        "parameters": {
            "shape": null,
            "seed": null,
            "lam": null,
            "dtype": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.random.stateless_truncated_normal": {
        "short name": "stateless_truncated_normal",
        "parameters": {
            "shape": null,
            "seed": null,
            "mean": "0.0",
            "stddev": "1.0",
            "dtype": "tf.dtypes.float32",
            "name": "None",
            "alg": "'auto_select'"
        }
    },
    "tensorflow.random.stateless_uniform": {
        "short name": "stateless_uniform",
        "parameters": {
            "shape": null,
            "seed": null,
            "minval": "0",
            "maxval": "None",
            "dtype": "tf.dtypes.float32",
            "name": "None",
            "alg": "'auto_select'"
        }
    },
    "tensorflow.random.truncated_normal": {
        "short name": "truncated_normal",
        "parameters": {
            "shape": null,
            "mean": "0.0",
            "stddev": "1.0",
            "dtype": "tf.dtypes.float32",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.uniform": {
        "short name": "uniform",
        "parameters": {
            "shape": null,
            "minval": "0",
            "maxval": "None",
            "dtype": "tf.dtypes.float32",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.random.uniform_candidate_sampler": {
        "short name": "uniform_candidate_sampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.saved_model.Asset": {
        "short name": "Asset",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.saved_model.LoadOptions": {
        "short name": "LoadOptions",
        "parameters": {
            "allow_partial_checkpoint": "False",
            "experimental_io_device": "None",
            "experimental_skip_checkpoint": "False"
        }
    },
    "tensorflow.saved_model.SaveOptions": {
        "short name": "SaveOptions",
        "parameters": {
            "namespace_whitelist": "None",
            "save_debug_info": "False",
            "function_aliases": "None",
            "experimental_io_device": "None",
            "experimental_variable_policy": "None",
            "experimental_custom_gradients": "True"
        }
    },
    "tensorflow.saved_model.contains_saved_model": {
        "short name": "contains_saved_model",
        "parameters": {
            "export_dir": null
        }
    },
    "tensorflow.saved_model.load": {
        "short name": "load",
        "parameters": {
            "export_dir": null,
            "tags": "None",
            "options": "None"
        }
    },
    "tensorflow.saved_model.save": {
        "short name": "save",
        "parameters": {
            "obj": null,
            "export_dir": null,
            "signatures": "None",
            "options": "None"
        }
    },
    "tensorflow.sets.difference": {
        "short name": "difference",
        "parameters": {
            "a": null,
            "b": null,
            "aminusb": "True",
            "validate_indices": "True"
        }
    },
    "tensorflow.sets.intersection": {
        "short name": "intersection",
        "parameters": {
            "a": null,
            "b": null,
            "validate_indices": "True"
        }
    },
    "tensorflow.sets.size": {
        "short name": "size",
        "parameters": {
            "a": null,
            "validate_indices": "True"
        }
    },
    "tensorflow.sets.union": {
        "short name": "union",
        "parameters": {
            "a": null,
            "b": null,
            "validate_indices": "True"
        }
    },
    "tensorflow.signal.dct": {
        "short name": "dct",
        "parameters": {
            "input": null,
            "type": "2",
            "n": "None",
            "axis": "-1",
            "norm": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.fft": {
        "short name": "fft",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.signal.fft2d": {
        "short name": "fft2d",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.signal.fft3d": {
        "short name": "fft3d",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.signal.fftshift": {
        "short name": "fftshift",
        "parameters": {
            "x": null,
            "axes": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.frame": {
        "short name": "frame",
        "parameters": {
            "signal": null,
            "frame_length": null,
            "frame_step": null,
            "pad_end": "False",
            "pad_value": "0",
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.signal.hamming_window": {
        "short name": "hamming_window",
        "parameters": {
            "window_length": null,
            "periodic": "True",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.signal.hann_window": {
        "short name": "hann_window",
        "parameters": {
            "window_length": null,
            "periodic": "True",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.signal.idct": {
        "short name": "idct",
        "parameters": {
            "input": null,
            "type": "2",
            "n": "None",
            "axis": "-1",
            "norm": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.ifft": {
        "short name": "ifft",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.signal.ifft2d": {
        "short name": "ifft2d",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.signal.ifft3d": {
        "short name": "ifft3d",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.signal.ifftshift": {
        "short name": "ifftshift",
        "parameters": {
            "x": null,
            "axes": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.inverse_mdct": {
        "short name": "inverse_mdct",
        "parameters": {
            "mdcts": null,
            "window_fn": "tf.signal.vorbis_window",
            "norm": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.inverse_stensorflowt": {
        "short name": "inverse_stft",
        "parameters": {
            "stfts": null,
            "frame_length": null,
            "frame_step": null,
            "fft_length": "None",
            "window_fn": "tf.signal.hann_window",
            "name": "None"
        }
    },
    "tensorflow.signal.inverse_stensorflowt_window_fn": {
        "short name": "inverse_stft_window_fn",
        "parameters": {
            "frame_step": null,
            "forward_window_fn": "tf.signal.hann_window",
            "name": "None"
        }
    },
    "tensorflow.signal.irfft": {
        "short name": "irfft",
        "parameters": {
            "input_tensor": null,
            "fft_length": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.irfft2d": {
        "short name": "irfft2d",
        "parameters": {
            "input_tensor": null,
            "fft_length": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.irfft3d": {
        "short name": "irfft3d",
        "parameters": {
            "input_tensor": null,
            "fft_length": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.kaiser_bessel_derived_window": {
        "short name": "kaiser_bessel_derived_window",
        "parameters": {
            "window_length": null,
            "beta": "12.0",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.signal.kaiser_window": {
        "short name": "kaiser_window",
        "parameters": {
            "window_length": null,
            "beta": "12.0",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.signal.linear_to_mel_weight_matrix": {
        "short name": "linear_to_mel_weight_matrix",
        "parameters": {
            "num_mel_bins": "20",
            "num_spectrogram_bins": "129",
            "sample_rate": "8000",
            "lower_edge_hertz": "125.0",
            "upper_edge_hertz": "3800.0",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.signal.mdct": {
        "short name": "mdct",
        "parameters": {
            "signals": null,
            "frame_length": null,
            "window_fn": "tf.signal.vorbis_window",
            "pad_end": "False",
            "norm": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.mfccs_from_log_mel_spectrograms": {
        "short name": "mfccs_from_log_mel_spectrograms",
        "parameters": {
            "log_mel_spectrograms": null,
            "name": "None"
        }
    },
    "tensorflow.signal.overlap_and_add": {
        "short name": "overlap_and_add",
        "parameters": {
            "signal": null,
            "frame_step": null,
            "name": "None"
        }
    },
    "tensorflow.signal.rfft": {
        "short name": "rfft",
        "parameters": {
            "input_tensor": null,
            "fft_length": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.rfft2d": {
        "short name": "rfft2d",
        "parameters": {
            "input_tensor": null,
            "fft_length": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.rfft3d": {
        "short name": "rfft3d",
        "parameters": {
            "input_tensor": null,
            "fft_length": "None",
            "name": "None"
        }
    },
    "tensorflow.signal.stensorflowt": {
        "short name": "stft",
        "parameters": {
            "signals": null,
            "frame_length": null,
            "frame_step": null,
            "fft_length": "None",
            "window_fn": "tf.signal.hann_window",
            "pad_end": "False",
            "name": "None"
        }
    },
    "tensorflow.signal.vorbis_window": {
        "short name": "vorbis_window",
        "parameters": {
            "window_length": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.sparse.add": {
        "short name": "add",
        "parameters": {
            "a": null,
            "b": null,
            "threshold": "0"
        }
    },
    "tensorflow.sparse.bincount": {
        "short name": "bincount",
        "parameters": {
            "values": null,
            "weights": "None",
            "axis": "0",
            "minlength": "None",
            "maxlength": "None",
            "binary_output": "False",
            "name": "None"
        }
    },
    "tensorflow.sparse.concat": {
        "short name": "concat",
        "parameters": {
            "axis": null,
            "sp_inputs": null,
            "expand_nonconcat_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.sparse.cross": {
        "short name": "cross",
        "parameters": {
            "inputs": null,
            "name": "None",
            "separator": "None"
        }
    },
    "tensorflow.sparse.cross_hashed": {
        "short name": "cross_hashed",
        "parameters": {
            "inputs": null,
            "num_buckets": "0",
            "hash_key": "None",
            "name": "None"
        }
    },
    "tensorflow.sparse.expand_dims": {
        "short name": "expand_dims",
        "parameters": {
            "sp_input": null,
            "axis": "None",
            "name": "None"
        }
    },
    "tensorflow.sparse.eye": {
        "short name": "eye",
        "parameters": {
            "num_rows": null,
            "num_columns": "None",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.sparse.fill_empty_rows": {
        "short name": "fill_empty_rows",
        "parameters": {
            "sp_input": null,
            "default_value": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.from_dense": {
        "short name": "from_dense",
        "parameters": {
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.map_values": {
        "short name": "map_values",
        "parameters": {
            "op": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.sparse.mask": {
        "short name": "mask",
        "parameters": {
            "a": null,
            "mask_indices": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.maximum": {
        "short name": "maximum",
        "parameters": {
            "sp_a": null,
            "sp_b": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.minimum": {
        "short name": "minimum",
        "parameters": {
            "sp_a": null,
            "sp_b": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.reduce_max": {
        "short name": "reduce_max",
        "parameters": {
            "sp_input": null,
            "axis": "None",
            "keepdims": "None",
            "output_is_sparse": "False",
            "name": "None"
        }
    },
    "tensorflow.sparse.reduce_sum": {
        "short name": "reduce_sum",
        "parameters": {
            "sp_input": null,
            "axis": "None",
            "keepdims": "None",
            "output_is_sparse": "False",
            "name": "None"
        }
    },
    "tensorflow.sparse.reorder": {
        "short name": "reorder",
        "parameters": {
            "sp_input": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.reset_shape": {
        "short name": "reset_shape",
        "parameters": {
            "sp_input": null,
            "new_shape": "None"
        }
    },
    "tensorflow.sparse.reshape": {
        "short name": "reshape",
        "parameters": {
            "sp_input": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.retain": {
        "short name": "retain",
        "parameters": {
            "sp_input": null,
            "to_retain": null
        }
    },
    "tensorflow.sparse.segment_mean": {
        "short name": "segment_mean",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "num_segments": "None",
            "name": "None"
        }
    },
    "tensorflow.sparse.segment_sqrt_n": {
        "short name": "segment_sqrt_n",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "num_segments": "None",
            "name": "None"
        }
    },
    "tensorflow.sparse.segment_sum": {
        "short name": "segment_sum",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "num_segments": "None",
            "name": "None"
        }
    },
    "tensorflow.sparse.slice": {
        "short name": "slice",
        "parameters": {
            "sp_input": null,
            "start": null,
            "size": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.softmax": {
        "short name": "softmax",
        "parameters": {
            "sp_input": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.sparse_dense_matmul": {
        "short name": "sparse_dense_matmul",
        "parameters": {
            "sp_a": null,
            "b": null,
            "adjoint_a": "False",
            "adjoint_b": "False",
            "name": "None"
        }
    },
    "tensorflow.sparse.split": {
        "short name": "split",
        "parameters": {
            "sp_input": "None",
            "num_split": "None",
            "axis": "None",
            "name": "None"
        }
    },
    "tensorflow.sparse.to_dense": {
        "short name": "to_dense",
        "parameters": {
            "sp_input": null,
            "default_value": "None",
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.sparse.to_indicator": {
        "short name": "to_indicator",
        "parameters": {
            "sp_input": null,
            "vocab_size": null,
            "name": "None"
        }
    },
    "tensorflow.sparse.transpose": {
        "short name": "transpose",
        "parameters": {
            "sp_input": null,
            "perm": "None",
            "name": "None"
        }
    },
    "tensorflow.strings.bytes_split": {
        "short name": "bytes_split",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.strings.format": {
        "short name": "format",
        "parameters": {
            "template": null,
            "inputs": null,
            "placeholder": "'{}'",
            "summarize": "3",
            "name": "None"
        }
    },
    "tensorflow.strings.join": {
        "short name": "join",
        "parameters": {
            "inputs": null,
            "separator": "''",
            "name": "None"
        }
    },
    "tensorflow.strings.length": {
        "short name": "length",
        "parameters": {
            "input": null,
            "unit": "'BYTE'",
            "name": "None"
        }
    },
    "tensorflow.strings.lower": {
        "short name": "lower",
        "parameters": {
            "input": null,
            "encoding": "''",
            "name": "None"
        }
    },
    "tensorflow.strings.ngrams": {
        "short name": "ngrams",
        "parameters": {
            "data": null,
            "ngram_width": null,
            "separator": "' '",
            "pad_values": "None",
            "padding_width": "None",
            "preserve_short_sequences": "False",
            "name": "None"
        }
    },
    "tensorflow.strings.reduce_join": {
        "short name": "reduce_join",
        "parameters": {
            "inputs": null,
            "axis": "None",
            "keepdims": "False",
            "separator": "''",
            "name": "None"
        }
    },
    "tensorflow.strings.regex_full_match": {
        "short name": "regex_full_match",
        "parameters": {
            "input": null,
            "pattern": null,
            "name": "None"
        }
    },
    "tensorflow.strings.regex_replace": {
        "short name": "regex_replace",
        "parameters": {
            "input": null,
            "pattern": null,
            "rewrite": null,
            "replace_global": "True",
            "name": "None"
        }
    },
    "tensorflow.strings.split": {
        "short name": "split",
        "parameters": {
            "input": null,
            "sep": "None",
            "maxsplit": "-1",
            "name": "None"
        }
    },
    "tensorflow.strings.strip": {
        "short name": "strip",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.strings.substr": {
        "short name": "substr",
        "parameters": {
            "input": null,
            "pos": null,
            "len": null,
            "unit": "'BYTE'",
            "name": "None"
        }
    },
    "tensorflow.strings.to_hash_bucket": {
        "short name": "to_hash_bucket",
        "parameters": {
            "input": null,
            "num_buckets": null,
            "name": "None"
        }
    },
    "tensorflow.strings.to_hash_bucket_fast": {
        "short name": "to_hash_bucket_fast",
        "parameters": {
            "input": null,
            "num_buckets": null,
            "name": "None"
        }
    },
    "tensorflow.strings.to_hash_bucket_strong": {
        "short name": "to_hash_bucket_strong",
        "parameters": {
            "input": null,
            "num_buckets": null,
            "key": null,
            "name": "None"
        }
    },
    "tensorflow.strings.to_number": {
        "short name": "to_number",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.strings.unicode_decode": {
        "short name": "unicode_decode",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "replace_control_characters": "False",
            "name": "None"
        }
    },
    "tensorflow.strings.unicode_decode_with_offsets": {
        "short name": "unicode_decode_with_offsets",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "replace_control_characters": "False",
            "name": "None"
        }
    },
    "tensorflow.strings.unicode_encode": {
        "short name": "unicode_encode",
        "parameters": {
            "input": null,
            "output_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "name": "None"
        }
    },
    "tensorflow.strings.unicode_script": {
        "short name": "unicode_script",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.strings.unicode_split": {
        "short name": "unicode_split",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "name": "None"
        }
    },
    "tensorflow.strings.unicode_split_with_offsets": {
        "short name": "unicode_split_with_offsets",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "name": "None"
        }
    },
    "tensorflow.strings.unicode_transcode": {
        "short name": "unicode_transcode",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "output_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "replace_control_characters": "False",
            "name": "None"
        }
    },
    "tensorflow.strings.unsorted_segment_join": {
        "short name": "unsorted_segment_join",
        "parameters": {
            "inputs": null,
            "segment_ids": null,
            "num_segments": null,
            "separator": "''",
            "name": "None"
        }
    },
    "tensorflow.strings.upper": {
        "short name": "upper",
        "parameters": {
            "input": null,
            "encoding": "''",
            "name": "None"
        }
    },
    "tensorflow.summary.SummaryWriter": {
        "short name": "SummaryWriter",
        "parameters": {}
    },
    "tensorflow.summary.audio": {
        "short name": "audio",
        "parameters": {
            "name": null,
            "data": null,
            "sample_rate": null,
            "step": "None",
            "max_outputs": "3",
            "encoding": "None",
            "description": "None"
        }
    },
    "tensorflow.summary.create_file_writer": {
        "short name": "create_file_writer",
        "parameters": {
            "logdir": null,
            "max_queue": "None",
            "flush_millis": "None",
            "filename_suffix": "None",
            "name": "None",
            "experimental_trackable": "False"
        }
    },
    "tensorflow.summary.create_noop_writer": {
        "short name": "create_noop_writer",
        "parameters": {}
    },
    "tensorflow.summary.flush": {
        "short name": "flush",
        "parameters": {
            "writer": "None",
            "name": "None"
        }
    },
    "tensorflow.summary.graph": {
        "short name": "graph",
        "parameters": {
            "graph_data": null
        }
    },
    "tensorflow.summary.histogram": {
        "short name": "histogram",
        "parameters": {
            "name": null,
            "data": null,
            "step": "None",
            "buckets": "None",
            "description": "None"
        }
    },
    "tensorflow.summary.image": {
        "short name": "image",
        "parameters": {
            "name": null,
            "data": null,
            "step": "None",
            "max_outputs": "3",
            "description": "None"
        }
    },
    "tensorflow.summary.record_if": {
        "short name": "record_if",
        "parameters": {}
    },
    "tensorflow.summary.scalar": {
        "short name": "scalar",
        "parameters": {
            "name": null,
            "data": null,
            "step": "None",
            "description": "None"
        }
    },
    "tensorflow.summary.should_record_summaries": {
        "short name": "should_record_summaries",
        "parameters": {}
    },
    "tensorflow.summary.text": {
        "short name": "text",
        "parameters": {
            "name": null,
            "data": null,
            "step": "None",
            "description": "None"
        }
    },
    "tensorflow.summary.trace_export": {
        "short name": "trace_export",
        "parameters": {
            "name": null,
            "step": "None",
            "profiler_outdir": "None"
        }
    },
    "tensorflow.summary.trace_off": {
        "short name": "trace_off",
        "parameters": {}
    },
    "tensorflow.summary.trace_on": {
        "short name": "trace_on",
        "parameters": {
            "graph": "True",
            "profiler": "False"
        }
    },
    "tensorflow.summary.write": {
        "short name": "write",
        "parameters": {
            "tag": null,
            "tensor": null,
            "step": "None",
            "metadata": "None",
            "name": "None"
        }
    },
    "tensorflow.sysconfig.get_build_info": {
        "short name": "get_build_info",
        "parameters": {}
    },
    "tensorflow.sysconfig.get_compile_flags": {
        "short name": "get_compile_flags",
        "parameters": {}
    },
    "tensorflow.sysconfig.get_include": {
        "short name": "get_include",
        "parameters": {}
    },
    "tensorflow.sysconfig.get_lib": {
        "short name": "get_lib",
        "parameters": {}
    },
    "tensorflow.sysconfig.get_link_flags": {
        "short name": "get_link_flags",
        "parameters": {}
    },
    "tensorflow.test.Benchmark": {
        "short name": "Benchmark",
        "parameters": {}
    },
    "tensorflow.test.TestCase": {
        "short name": "TestCase",
        "parameters": {
            "methodName": "'runTest'"
        }
    },
    "tensorflow.test.assert_equal_graph_def": {
        "short name": "assert_equal_graph_def",
        "parameters": {
            "expected": null,
            "actual": null
        }
    },
    "tensorflow.test.benchmark_config": {
        "short name": "benchmark_config",
        "parameters": {}
    },
    "tensorflow.test.compute_gradient": {
        "short name": "compute_gradient",
        "parameters": {
            "f": null,
            "x": null,
            "delta": "None"
        }
    },
    "tensorflow.test.create_local_cluster": {
        "short name": "create_local_cluster",
        "parameters": {
            "num_workers": null,
            "num_ps": null,
            "protocol": "'grpc'",
            "worker_config": "None",
            "ps_config": "None"
        }
    },
    "tensorflow.test.disable_with_predicate": {
        "short name": "disable_with_predicate",
        "parameters": {
            "pred": null,
            "skip_message": null
        }
    },
    "tensorflow.test.gpu_device_name": {
        "short name": "gpu_device_name",
        "parameters": {}
    },
    "tensorflow.test.is_built_with_cuda": {
        "short name": "is_built_with_cuda",
        "parameters": {}
    },
    "tensorflow.test.is_built_with_gpu_support": {
        "short name": "is_built_with_gpu_support",
        "parameters": {}
    },
    "tensorflow.test.is_built_with_rocm": {
        "short name": "is_built_with_rocm",
        "parameters": {}
    },
    "tensorflow.test.is_built_with_xla": {
        "short name": "is_built_with_xla",
        "parameters": {}
    },
    "tensorflow.test.is_gpu_available": {
        "short name": "is_gpu_available",
        "parameters": {
            "cuda_only": "False",
            "min_cuda_compute_capability": "None"
        }
    },
    "tensorflow.test.main": {
        "short name": "main",
        "parameters": {
            "argv": "None"
        }
    },
    "tensorflow.test.with_eager_op_as_function": {
        "short name": "with_eager_op_as_function",
        "parameters": {
            "cls": "None",
            "only_as_function": "False"
        }
    },
    "tensorflow.tpu.XLAOptions": {
        "short name": "XLAOptions",
        "parameters": {
            "use_spmd_for_xla_partitioning": "True",
            "enable_xla_dynamic_padder": "True"
        }
    },
    "tensorflow.train.BytesList": {
        "short name": "BytesList",
        "parameters": {}
    },
    "tensorflow.train.Checkpoint": {
        "short name": "Checkpoint",
        "parameters": {
            "root": "None",
            "**kwargs": null
        }
    },
    "tensorflow.train.CheckpointManager": {
        "short name": "CheckpointManager",
        "parameters": {
            "checkpoint": null,
            "directory": null,
            "max_to_keep": null,
            "keep_checkpoint_every_n_hours": "None",
            "checkpoint_name": "'ckpt'",
            "step_counter": "None",
            "checkpoint_interval": "None",
            "init_fn": "None"
        }
    },
    "tensorflow.train.CheckpointOptions": {
        "short name": "CheckpointOptions",
        "parameters": {
            "experimental_io_device": "None",
            "experimental_enable_async_checkpoint": "False"
        }
    },
    "tensorflow.train.ClusterDef": {
        "short name": "ClusterDef",
        "parameters": {}
    },
    "tensorflow.train.ClusterSpec": {
        "short name": "ClusterSpec",
        "parameters": {
            "cluster": null
        }
    },
    "tensorflow.train.Coordinator": {
        "short name": "Coordinator",
        "parameters": {
            "clean_stop_exception_types": "None"
        }
    },
    "tensorflow.train.Example": {
        "short name": "Example",
        "parameters": {}
    },
    "tensorflow.train.ExponentialMovingAverage": {
        "short name": "ExponentialMovingAverage",
        "parameters": {
            "decay": null,
            "num_updates": "None",
            "zero_debias": "False",
            "name": "'ExponentialMovingAverage'"
        }
    },
    "tensorflow.train.Feature": {
        "short name": "Feature",
        "parameters": {}
    },
    "tensorflow.train.FeatureList": {
        "short name": "FeatureList",
        "parameters": {}
    },
    "tensorflow.train.FeatureLists": {
        "short name": "FeatureLists",
        "parameters": {}
    },
    "tensorflow.train.Features": {
        "short name": "Features",
        "parameters": {}
    },
    "tensorflow.train.FloatList": {
        "short name": "FloatList",
        "parameters": {}
    },
    "tensorflow.train.Int64List": {
        "short name": "Int64List",
        "parameters": {}
    },
    "tensorflow.train.JobDef": {
        "short name": "JobDef",
        "parameters": {}
    },
    "tensorflow.train.SequenceExample": {
        "short name": "SequenceExample",
        "parameters": {}
    },
    "tensorflow.train.ServerDef": {
        "short name": "ServerDef",
        "parameters": {}
    },
    "tensorflow.train.checkpoints_iterator": {
        "short name": "checkpoints_iterator",
        "parameters": {
            "checkpoint_dir": null,
            "min_interval_secs": "0",
            "timeout": "None",
            "timeout_fn": "None"
        }
    },
    "tensorflow.train.get_checkpoint_state": {
        "short name": "get_checkpoint_state",
        "parameters": {
            "checkpoint_dir": null,
            "latest_filename": "None"
        }
    },
    "tensorflow.train.latest_checkpoint": {
        "short name": "latest_checkpoint",
        "parameters": {
            "checkpoint_dir": null,
            "latest_filename": "None"
        }
    },
    "tensorflow.train.list_variables": {
        "short name": "list_variables",
        "parameters": {
            "ckpt_dir_or_file": null
        }
    },
    "tensorflow.train.load_checkpoint": {
        "short name": "load_checkpoint",
        "parameters": {
            "ckpt_dir_or_file": null
        }
    },
    "tensorflow.train.load_variable": {
        "short name": "load_variable",
        "parameters": {
            "ckpt_dir_or_file": null,
            "name": null
        }
    },
    "tensorflow.autograph.experimental.Feature": {
        "short name": "Feature",
        "parameters": {}
    },
    "tensorflow.autograph.experimental.do_not_convert": {
        "short name": "do_not_convert",
        "parameters": {
            "func": "None"
        }
    },
    "tensorflow.autograph.experimental.set_loop_options": {
        "short name": "set_loop_options",
        "parameters": {
            "parallel_iterations": "UNSPECIFIED",
            "swap_memory": "UNSPECIFIED",
            "maximum_iterations": "UNSPECIFIED",
            "shape_invariants": "UNSPECIFIED"
        }
    },
    "tensorflow.compat.v1.AttrValue": {
        "short name": "AttrValue",
        "parameters": {}
    },
    "tensorflow.compat.v1.ConditionalAccumulator": {
        "short name": "ConditionalAccumulator",
        "parameters": {
            "dtype": null,
            "shape": "None",
            "shared_name": "None",
            "name": "'conditional_accumulator'",
            "reduction_type": "'MEAN'"
        }
    },
    "tensorflow.compat.v1.ConditionalAccumulatorBase": {
        "short name": "ConditionalAccumulatorBase",
        "parameters": {
            "dtype": null,
            "shape": null,
            "accumulator_ref": null
        }
    },
    "tensorflow.compat.v1.ConfigProto": {
        "short name": "ConfigProto",
        "parameters": {
            "allow_soft_placement": null,
            "cluster_def": null,
            "device_count": null,
            "device_filters": null,
            "experimental": null,
            "gpu_options": null,
            "graph_options": null,
            "inter_op_parallelism_threads": null,
            "intra_op_parallelism_threads": null,
            "isolate_session_state": null,
            "log_device_placement": null,
            "operation_timeout_in_ms": null,
            "placement_period": null,
            "rpc_options": null,
            "session_inter_op_thread_pool": null,
            "share_cluster_devices_in_session": null,
            "use_per_session_threads": null
        }
    },
    "tensorflow.compat.v1.DeviceSpec": {
        "short name": "DeviceSpec",
        "parameters": {
            "job": "None",
            "replica": "None",
            "task": "None",
            "device_type": "None",
            "device_index": "None"
        }
    },
    "tensorflow.compat.v1.Dimension": {
        "short name": "Dimension",
        "parameters": {
            "value": null
        }
    },
    "tensorflow.compat.v1.Event": {
        "short name": "Event",
        "parameters": {}
    },
    "tensorflow.compat.v1.FixedLengthRecordReader": {
        "short name": "FixedLengthRecordReader",
        "parameters": {
            "record_bytes": null,
            "header_bytes": "None",
            "footer_bytes": "None",
            "hop_bytes": "None",
            "name": "None",
            "encoding": "None"
        }
    },
    "tensorflow.compat.v1.GPUOptions": {
        "short name": "GPUOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.GraphDef": {
        "short name": "GraphDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.GraphKeys": {
        "short name": "GraphKeys",
        "parameters": {}
    },
    "tensorflow.compat.v1.GraphOptions": {
        "short name": "GraphOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.HistogramProto": {
        "short name": "HistogramProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.IdentityReader": {
        "short name": "IdentityReader",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.compat.v1.InteractiveSession": {
        "short name": "InteractiveSession",
        "parameters": {
            "target": "''",
            "graph": "None",
            "config": "None"
        }
    },
    "tensorflow.compat.v1.LMDBReader": {
        "short name": "LMDBReader",
        "parameters": {
            "name": "None",
            "options": "None"
        }
    },
    "tensorflow.compat.v1.LogMessage": {
        "short name": "LogMessage",
        "parameters": {}
    },
    "tensorflow.compat.v1.MetaGraphDef": {
        "short name": "MetaGraphDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.NameAttrList": {
        "short name": "NameAttrList",
        "parameters": {}
    },
    "tensorflow.compat.v1.NodeDef": {
        "short name": "NodeDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.OptimizerOptions": {
        "short name": "OptimizerOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.ReaderBase": {
        "short name": "ReaderBase",
        "parameters": {
            "reader_ref": null,
            "supports_serialize": "False"
        }
    },
    "tensorflow.compat.v1.RunMetadata": {
        "short name": "RunMetadata",
        "parameters": {}
    },
    "tensorflow.compat.v1.RunOptions": {
        "short name": "RunOptions",
        "parameters": {}
    },
    "tensorflow.compat.v1.Session": {
        "short name": "Session",
        "parameters": {
            "target": "''",
            "graph": "None",
            "config": "None"
        }
    },
    "tensorflow.compat.v1.SessionLog": {
        "short name": "SessionLog",
        "parameters": {}
    },
    "tensorflow.compat.v1.SparseConditionalAccumulator": {
        "short name": "SparseConditionalAccumulator",
        "parameters": {
            "dtype": null,
            "shape": "None",
            "shared_name": "None",
            "name": "'sparse_conditional_accumulator'",
            "reduction_type": "'MEAN'"
        }
    },
    "tensorflow.compat.v1.SparseTensorValue": {
        "short name": "SparseTensorValue",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null
        }
    },
    "tensorflow.compat.v1.Summary": {
        "short name": "Summary",
        "parameters": {}
    },
    "tensorflow.compat.v1.SummaryMetadata": {
        "short name": "SummaryMetadata",
        "parameters": {}
    },
    "tensorflow.compat.v1.TFRecordReader": {
        "short name": "TFRecordReader",
        "parameters": {
            "name": "None",
            "options": "None"
        }
    },
    "tensorflow.compat.v1.TensorInfo": {
        "short name": "TensorInfo",
        "parameters": {}
    },
    "tensorflow.compat.v1.TextLineReader": {
        "short name": "TextLineReader",
        "parameters": {
            "skip_header_lines": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.Variable": {
        "short name": "Variable",
        "parameters": {
            "initial_value": "None",
            "trainable": "None",
            "collections": "None",
            "validate_shape": "True",
            "caching_device": "None",
            "name": "None",
            "variable_def": "None",
            "dtype": "None",
            "expected_shape": "None",
            "import_scope": "None",
            "constraint": "None",
            "use_resource": "None",
            "synchronization": "tf.VariableSynchronization.AUTO",
            "aggregation": "tf.compat.v1.VariableAggregation.NONE",
            "shape": "None"
        }
    },
    "tensorflow.compat.v1.VariableAggregation": {
        "short name": "VariableAggregation",
        "parameters": {}
    },
    "tensorflow.compat.v1.VariableScope": {
        "short name": "VariableScope",
        "parameters": {
            "reuse": null,
            "name": "''",
            "initializer": "None",
            "regularizer": "None",
            "caching_device": "None",
            "partitioner": "None",
            "custom_getter": "None",
            "name_scope": "''",
            "dtype": "tf.dtypes.float32",
            "use_resource": "None",
            "constraint": "None"
        }
    },
    "tensorflow.compat.v1.WholeFileReader": {
        "short name": "WholeFileReader",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Constant": {
        "short name": "Constant",
        "parameters": {
            "value": "0",
            "dtype": "tf.dtypes.float32",
            "verify_shape": "False"
        }
    },
    "tensorflow.compat.v1.keras.initializers.glorot_normal": {
        "short name": "glorot_normal",
        "parameters": {
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.glorot_uniform": {
        "short name": "glorot_uniform",
        "parameters": {
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.backend.name_scope": {
        "short name": "name_scope",
        "parameters": {
            "name": null,
            "default_name": "None",
            "values": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Ones": {
        "short name": "Ones",
        "parameters": {
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Orthogonal": {
        "short name": "Orthogonal",
        "parameters": {
            "gain": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.random_normal_initializer": {
        "short name": "random_normal_initializer",
        "parameters": {
            "mean": "0.0",
            "stddev": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.random_uniform_initializer": {
        "short name": "random_uniform_initializer",
        "parameters": {
            "minval": "0.0",
            "maxval": "None",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.truncated_normal_initializer": {
        "short name": "truncated_normal_initializer",
        "parameters": {
            "mean": "0.0",
            "stddev": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.uniform_unit_scaling_initializer": {
        "short name": "uniform_unit_scaling_initializer",
        "parameters": {
            "factor": "1.0",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.variable_scope": {
        "short name": "variable_scope",
        "parameters": {
            "name_or_scope": null,
            "default_name": "None",
            "values": "None",
            "initializer": "None",
            "regularizer": "None",
            "caching_device": "None",
            "partitioner": "None",
            "custom_getter": "None",
            "reuse": "None",
            "dtype": "None",
            "use_resource": "None",
            "constraint": "None",
            "auxiliary_name_scope": "True"
        }
    },
    "tensorflow.compat.v1.keras.initializers.VarianceScaling": {
        "short name": "VarianceScaling",
        "parameters": {
            "scale": "1.0",
            "mode": "'fan_in'",
            "distribution": "'truncated_normal'",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Zeros": {
        "short name": "Zeros",
        "parameters": {
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.Print": {
        "short name": "Print",
        "parameters": {
            "input_": null,
            "data": null,
            "message": "None",
            "first_n": "None",
            "summarize": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.add_check_numerics_ops": {
        "short name": "add_check_numerics_ops",
        "parameters": {}
    },
    "tensorflow.compat.v1.add_to_collection": {
        "short name": "add_to_collection",
        "parameters": {
            "name": null,
            "value": null
        }
    },
    "tensorflow.compat.v1.add_to_collections": {
        "short name": "add_to_collections",
        "parameters": {
            "names": null,
            "value": null
        }
    },
    "tensorflow.compat.v1.all_variables": {
        "short name": "all_variables",
        "parameters": {}
    },
    "tensorflow.compat.v1.arg_max": {
        "short name": "arg_max",
        "parameters": {
            "input": null,
            "dimension": null,
            "output_type": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.arg_min": {
        "short name": "arg_min",
        "parameters": {
            "input": null,
            "dimension": null,
            "output_type": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.argmax": {
        "short name": "argmax",
        "parameters": {
            "input": null,
            "axis": "None",
            "name": "None",
            "dimension": "None",
            "output_type": "tf.dtypes.int64"
        }
    },
    "tensorflow.compat.v1.argmin": {
        "short name": "argmin",
        "parameters": {
            "input": null,
            "axis": "None",
            "name": "None",
            "dimension": "None",
            "output_type": "tf.dtypes.int64"
        }
    },
    "tensorflow.compat.v1.assert_equal": {
        "short name": "assert_equal",
        "parameters": {
            "x": null,
            "y": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_greater": {
        "short name": "assert_greater",
        "parameters": {
            "x": null,
            "y": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_greater_equal": {
        "short name": "assert_greater_equal",
        "parameters": {
            "x": null,
            "y": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_integer": {
        "short name": "assert_integer",
        "parameters": {
            "x": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_less": {
        "short name": "assert_less",
        "parameters": {
            "x": null,
            "y": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_less_equal": {
        "short name": "assert_less_equal",
        "parameters": {
            "x": null,
            "y": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_near": {
        "short name": "assert_near",
        "parameters": {
            "x": null,
            "y": null,
            "rtol": "None",
            "atol": "None",
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_negative": {
        "short name": "assert_negative",
        "parameters": {
            "x": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_non_negative": {
        "short name": "assert_non_negative",
        "parameters": {
            "x": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_non_positive": {
        "short name": "assert_non_positive",
        "parameters": {
            "x": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_none_equal": {
        "short name": "assert_none_equal",
        "parameters": {
            "x": null,
            "y": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_positive": {
        "short name": "assert_positive",
        "parameters": {
            "x": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_rank": {
        "short name": "assert_rank",
        "parameters": {
            "x": null,
            "rank": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_rank_at_least": {
        "short name": "assert_rank_at_least",
        "parameters": {
            "x": null,
            "rank": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_rank_in": {
        "short name": "assert_rank_in",
        "parameters": {
            "x": null,
            "ranks": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_scalar": {
        "short name": "assert_scalar",
        "parameters": {
            "tensor": null,
            "name": "None",
            "message": "None"
        }
    },
    "tensorflow.compat.v1.assert_type": {
        "short name": "assert_type",
        "parameters": {
            "tensor": null,
            "tf_type": null,
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assert_variables_initialized": {
        "short name": "assert_variables_initialized",
        "parameters": {
            "var_list": "None"
        }
    },
    "tensorflow.compat.v1.assign": {
        "short name": "assign",
        "parameters": {
            "ref": null,
            "value": null,
            "validate_shape": "None",
            "use_locking": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assign_add": {
        "short name": "assign_add",
        "parameters": {
            "ref": null,
            "value": null,
            "use_locking": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.assign_sub": {
        "short name": "assign_sub",
        "parameters": {
            "ref": null,
            "value": null,
            "use_locking": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.batch_gather": {
        "short name": "batch_gather",
        "parameters": {
            "params": null,
            "indices": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.batch_scatter_update": {
        "short name": "batch_scatter_update",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.batch_to_space": {
        "short name": "batch_to_space",
        "parameters": {
            "input": null,
            "crops": null,
            "block_size": null,
            "name": "None",
            "block_shape": "None"
        }
    },
    "tensorflow.compat.v1.batch_to_space_nd": {
        "short name": "batch_to_space_nd",
        "parameters": {
            "input": null,
            "block_shape": null,
            "crops": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.bincount": {
        "short name": "bincount",
        "parameters": {
            "arr": null,
            "weights": "None",
            "minlength": "None",
            "maxlength": "None",
            "dtype": "tf.dtypes.int32"
        }
    },
    "tensorflow.compat.v1.boolean_mask": {
        "short name": "boolean_mask",
        "parameters": {
            "tensor": null,
            "mask": null,
            "name": "'boolean_mask'",
            "axis": "None"
        }
    },
    "tensorflow.compat.v1.case": {
        "short name": "case",
        "parameters": {
            "pred_fn_pairs": null,
            "default": "None",
            "exclusive": "False",
            "strict": "False",
            "name": "'case'"
        }
    },
    "tensorflow.compat.v1.clip_by_average_norm": {
        "short name": "clip_by_average_norm",
        "parameters": {
            "t": null,
            "clip_norm": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.colocate_with": {
        "short name": "colocate_with",
        "parameters": {
            "op": null,
            "ignore_existing": "False"
        }
    },
    "tensorflow.compat.v1.cond": {
        "short name": "cond",
        "parameters": {
            "pred": null,
            "true_fn": "None",
            "false_fn": "None",
            "strict": "False",
            "name": "None",
            "fn1": "None",
            "fn2": "None"
        }
    },
    "tensorflow.compat.v1.confusion_matrix": {
        "short name": "confusion_matrix",
        "parameters": {
            "labels": null,
            "predictions": null,
            "num_classes": "None",
            "dtype": "tf.dtypes.int32",
            "name": "None",
            "weights": "None"
        }
    },
    "tensorflow.compat.v1.constant": {
        "short name": "constant",
        "parameters": {
            "value": null,
            "dtype": "None",
            "shape": "None",
            "name": "'Const'",
            "verify_shape": "False"
        }
    },
    "tensorflow.compat.v1.container": {
        "short name": "container",
        "parameters": {
            "container_name": null
        }
    },
    "tensorflow.compat.v1.control_flow_v2_enabled": {
        "short name": "control_flow_v2_enabled",
        "parameters": {}
    },
    "tensorflow.compat.v1.convert_to_tensor": {
        "short name": "convert_to_tensor",
        "parameters": {
            "value": null,
            "dtype": "None",
            "name": "None",
            "preferred_dtype": "None",
            "dtype_hint": "None"
        }
    },
    "tensorflow.compat.v1.convert_to_tensor_or_indexed_slices": {
        "short name": "convert_to_tensor_or_indexed_slices",
        "parameters": {
            "value": null,
            "dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.convert_to_tensor_or_sparse_tensor": {
        "short name": "convert_to_tensor_or_sparse_tensor",
        "parameters": {
            "value": null,
            "dtype": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.count_nonzero": {
        "short name": "count_nonzero",
        "parameters": {
            "input_tensor": "None",
            "axis": "None",
            "keepdims": "None",
            "dtype": "tf.dtypes.int64",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None",
            "input": "None"
        }
    },
    "tensorflow.compat.v1.count_up_to": {
        "short name": "count_up_to",
        "parameters": {
            "ref": null,
            "limit": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.create_partitioned_variables": {
        "short name": "create_partitioned_variables",
        "parameters": {
            "shape": null,
            "slicing": null,
            "initializer": null,
            "dtype": "tf.dtypes.float32",
            "trainable": "True",
            "collections": "None",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.decode_csv": {
        "short name": "decode_csv",
        "parameters": {
            "records": null,
            "record_defaults": null,
            "field_delim": "','",
            "use_quote_delim": "True",
            "name": "None",
            "na_value": "''",
            "select_cols": "None"
        }
    },
    "tensorflow.compat.v1.decode_raw": {
        "short name": "decode_raw",
        "parameters": {
            "input_bytes": "None",
            "out_type": "None",
            "little_endian": "True",
            "name": "None",
            "bytes": "None"
        }
    },
    "tensorflow.compat.v1.delete_session_tensor": {
        "short name": "delete_session_tensor",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.depth_to_space": {
        "short name": "depth_to_space",
        "parameters": {
            "input": null,
            "block_size": null,
            "name": "None",
            "data_format": "'NHWC'"
        }
    },
    "tensorflow.compat.v1.device": {
        "short name": "device",
        "parameters": {
            "device_name_or_function": null
        }
    },
    "tensorflow.compat.v1.disable_control_flow_v2": {
        "short name": "disable_control_flow_v2",
        "parameters": {}
    },
    "tensorflow.compat.v1.disable_eager_execution": {
        "short name": "disable_eager_execution",
        "parameters": {}
    },
    "tensorflow.compat.v1.disable_resource_variables": {
        "short name": "disable_resource_variables",
        "parameters": {}
    },
    "tensorflow.compat.v1.disable_tensor_equality": {
        "short name": "disable_tensor_equality",
        "parameters": {}
    },
    "tensorflow.compat.v1.disable_v2_behavior": {
        "short name": "disable_v2_behavior",
        "parameters": {}
    },
    "tensorflow.compat.v1.disable_v2_tensorshape": {
        "short name": "disable_v2_tensorshape",
        "parameters": {}
    },
    "tensorflow.compat.v1.div": {
        "short name": "div",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.enable_control_flow_v2": {
        "short name": "enable_control_flow_v2",
        "parameters": {}
    },
    "tensorflow.compat.v1.enable_eager_execution": {
        "short name": "enable_eager_execution",
        "parameters": {
            "config": "None",
            "device_policy": "None",
            "execution_mode": "None"
        }
    },
    "tensorflow.compat.v1.enable_resource_variables": {
        "short name": "enable_resource_variables",
        "parameters": {}
    },
    "tensorflow.compat.v1.enable_tensor_equality": {
        "short name": "enable_tensor_equality",
        "parameters": {}
    },
    "tensorflow.compat.v1.enable_v2_behavior": {
        "short name": "enable_v2_behavior",
        "parameters": {}
    },
    "tensorflow.compat.v1.enable_v2_tensorshape": {
        "short name": "enable_v2_tensorshape",
        "parameters": {}
    },
    "tensorflow.compat.v1.executing_eagerly": {
        "short name": "executing_eagerly",
        "parameters": {}
    },
    "tensorflow.compat.v1.executing_eagerly_outside_functions": {
        "short name": "executing_eagerly_outside_functions",
        "parameters": {}
    },
    "tensorflow.compat.v1.expand_dims": {
        "short name": "expand_dims",
        "parameters": {
            "input": null,
            "axis": "None",
            "name": "None",
            "dim": "None"
        }
    },
    "tensorflow.compat.v1.extract_image_patches": {
        "short name": "extract_image_patches",
        "parameters": {
            "images": null,
            "ksizes": "None",
            "strides": "None",
            "rates": "None",
            "padding": "None",
            "name": "None",
            "sizes": "None"
        }
    },
    "tensorflow.compat.v1.fixed_size_partitioner": {
        "short name": "fixed_size_partitioner",
        "parameters": {
            "num_shards": null,
            "axis": "0"
        }
    },
    "tensorflow.compat.v1.floor_div": {
        "short name": "floor_div",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.foldl": {
        "short name": "foldl",
        "parameters": {
            "fn": null,
            "elems": null,
            "initializer": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.foldr": {
        "short name": "foldr",
        "parameters": {
            "fn": null,
            "elems": null,
            "initializer": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.gather": {
        "short name": "gather",
        "parameters": {
            "params": null,
            "indices": null,
            "validate_indices": "None",
            "name": "None",
            "axis": "None",
            "batch_dims": "0"
        }
    },
    "tensorflow.compat.v1.gather_nd": {
        "short name": "gather_nd",
        "parameters": {
            "params": null,
            "indices": null,
            "name": "None",
            "batch_dims": "0"
        }
    },
    "tensorflow.compat.v1.get_collection": {
        "short name": "get_collection",
        "parameters": {
            "key": null,
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.get_collection_ref": {
        "short name": "get_collection_ref",
        "parameters": {
            "key": null
        }
    },
    "tensorflow.compat.v1.get_default_graph": {
        "short name": "get_default_graph",
        "parameters": {}
    },
    "tensorflow.compat.v1.get_default_session": {
        "short name": "get_default_session",
        "parameters": {}
    },
    "tensorflow.compat.v1.get_local_variable": {
        "short name": "get_local_variable",
        "parameters": {
            "name": null,
            "shape": "None",
            "dtype": "None",
            "initializer": "None",
            "regularizer": "None",
            "trainable": "False",
            "collections": "None",
            "caching_device": "None",
            "partitioner": "None",
            "validate_shape": "True",
            "use_resource": "None",
            "custom_getter": "None",
            "constraint": "None",
            "synchronization": "tf.VariableSynchronization.AUTO",
            "aggregation": "tf.compat.v1.VariableAggregation.NONE"
        }
    },
    "tensorflow.compat.v1.get_seed": {
        "short name": "get_seed",
        "parameters": {
            "op_seed": null
        }
    },
    "tensorflow.compat.v1.get_session_handle": {
        "short name": "get_session_handle",
        "parameters": {
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.get_session_tensor": {
        "short name": "get_session_tensor",
        "parameters": {
            "handle": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.get_variable": {
        "short name": "get_variable",
        "parameters": {
            "name": null,
            "shape": "None",
            "dtype": "None",
            "initializer": "None",
            "regularizer": "None",
            "trainable": "None",
            "collections": "None",
            "caching_device": "None",
            "partitioner": "None",
            "validate_shape": "True",
            "use_resource": "None",
            "custom_getter": "None",
            "constraint": "None",
            "synchronization": "tf.VariableSynchronization.AUTO",
            "aggregation": "tf.compat.v1.VariableAggregation.NONE"
        }
    },
    "tensorflow.compat.v1.get_variable_scope": {
        "short name": "get_variable_scope",
        "parameters": {}
    },
    "tensorflow.compat.v1.global_variables": {
        "short name": "global_variables",
        "parameters": {
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.global_variables_initializer": {
        "short name": "global_variables_initializer",
        "parameters": {}
    },
    "tensorflow.compat.v1.gradients": {
        "short name": "gradients",
        "parameters": {
            "ys": null,
            "xs": null,
            "grad_ys": "None",
            "name": "'gradients'",
            "colocate_gradients_with_ops": "False",
            "gate_gradients": "False",
            "aggregation_method": "None",
            "stop_gradients": "None",
            "unconnected_gradients": "tf.UnconnectedGradients.NONE"
        }
    },
    "tensorflow.compat.v1.hessians": {
        "short name": "hessians",
        "parameters": {
            "ys": null,
            "xs": null,
            "name": "'hessians'",
            "colocate_gradients_with_ops": "False",
            "gate_gradients": "False",
            "aggregation_method": "None"
        }
    },
    "tensorflow.compat.v1.initialize_all_tables": {
        "short name": "initialize_all_tables",
        "parameters": {
            "name": "'init_all_tables'"
        }
    },
    "tensorflow.compat.v1.initialize_all_variables": {
        "short name": "initialize_all_variables",
        "parameters": {}
    },
    "tensorflow.compat.v1.initialize_local_variables": {
        "short name": "initialize_local_variables",
        "parameters": {}
    },
    "tensorflow.compat.v1.initialize_variables": {
        "short name": "initialize_variables",
        "parameters": {
            "var_list": null,
            "name": "'init'"
        }
    },
    "tensorflow.compat.v1.is_variable_initialized": {
        "short name": "is_variable_initialized",
        "parameters": {
            "variable": null
        }
    },
    "tensorflow.compat.v1.load_file_system_library": {
        "short name": "load_file_system_library",
        "parameters": {
            "library_filename": null
        }
    },
    "tensorflow.compat.v1.local_variables": {
        "short name": "local_variables",
        "parameters": {
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.local_variables_initializer": {
        "short name": "local_variables_initializer",
        "parameters": {}
    },
    "tensorflow.compat.v1.make_template": {
        "short name": "make_template",
        "parameters": {
            "name_": null,
            "func_": null,
            "create_scope_now_": "False",
            "unique_name_": "None",
            "custom_getter_": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.map_fn": {
        "short name": "map_fn",
        "parameters": {
            "fn": null,
            "elems": null,
            "dtype": "None",
            "parallel_iterations": "None",
            "back_prop": "True",
            "swap_memory": "False",
            "infer_shape": "True",
            "name": "None",
            "fn_output_signature": "None"
        }
    },
    "tensorflow.compat.v1.min_max_variable_partitioner": {
        "short name": "min_max_variable_partitioner",
        "parameters": {
            "max_partitions": "1",
            "axis": "0",
            "min_slice_size": "256 << 10",
            "bytes_per_string_element": "16"
        }
    },
    "tensorflow.compat.v1.model_variables": {
        "short name": "model_variables",
        "parameters": {
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.moving_average_variables": {
        "short name": "moving_average_variables",
        "parameters": {
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.multinomial": {
        "short name": "multinomial",
        "parameters": {
            "logits": null,
            "num_samples": null,
            "seed": "None",
            "name": "None",
            "output_dtype": "None"
        }
    },
    "tensorflow.compat.v1.no_regularizer": {
        "short name": "no_regularizer",
        "parameters": {
            "_": null
        }
    },
    "tensorflow.compat.v1.norm": {
        "short name": "norm",
        "parameters": {
            "tensor": null,
            "ord": "'euclidean'",
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.ones_like": {
        "short name": "ones_like",
        "parameters": {
            "tensor": null,
            "dtype": "None",
            "name": "None",
            "optimize": "True"
        }
    },
    "tensorflow.compat.v1.op_scope": {
        "short name": "op_scope",
        "parameters": {}
    },
    "tensorflow.compat.v1.pad": {
        "short name": "pad",
        "parameters": {
            "tensor": null,
            "paddings": null,
            "mode": "'CONSTANT'",
            "name": "None",
            "constant_values": "0"
        }
    },
    "tensorflow.compat.v1.parse_example": {
        "short name": "parse_example",
        "parameters": {
            "serialized": null,
            "features": null,
            "name": "None",
            "example_names": "None"
        }
    },
    "tensorflow.compat.v1.parse_single_example": {
        "short name": "parse_single_example",
        "parameters": {
            "serialized": null,
            "features": null,
            "name": "None",
            "example_names": "None"
        }
    },
    "tensorflow.compat.v1.placeholder": {
        "short name": "placeholder",
        "parameters": {
            "dtype": null,
            "shape": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.placeholder_with_default": {
        "short name": "placeholder_with_default",
        "parameters": {
            "input": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.py_func": {
        "short name": "py_func",
        "parameters": {
            "func": null,
            "inp": null,
            "Tout": null,
            "stateful": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.quantize_v2": {
        "short name": "quantize_v2",
        "parameters": {
            "input": null,
            "min_range": null,
            "max_range": null,
            "T": null,
            "mode": "'MIN_COMBINED'",
            "name": "None",
            "round_mode": "'HALF_AWAY_FROM_ZERO'",
            "narrow_range": "False",
            "axis": "None",
            "ensure_minimum_range": "0.01"
        }
    },
    "tensorflow.compat.v1.random_poisson": {
        "short name": "random_poisson",
        "parameters": {
            "lam": null,
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.reduce_all": {
        "short name": "reduce_all",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_any": {
        "short name": "reduce_any",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_join": {
        "short name": "reduce_join",
        "parameters": {
            "inputs": null,
            "axis": "None",
            "keep_dims": "None",
            "separator": "''",
            "name": "None",
            "reduction_indices": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_logsumexp": {
        "short name": "reduce_logsumexp",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_max": {
        "short name": "reduce_max",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_mean": {
        "short name": "reduce_mean",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_min": {
        "short name": "reduce_min",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_prod": {
        "short name": "reduce_prod",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.reduce_sum": {
        "short name": "reduce_sum",
        "parameters": {
            "input_tensor": null,
            "axis": "None",
            "keepdims": "None",
            "name": "None",
            "reduction_indices": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.report_uninitialized_variables": {
        "short name": "report_uninitialized_variables",
        "parameters": {
            "var_list": "None",
            "name": "'report_uninitialized_variables'"
        }
    },
    "tensorflow.compat.v1.reset_default_graph": {
        "short name": "reset_default_graph",
        "parameters": {}
    },
    "tensorflow.compat.v1.resource_variables_enabled": {
        "short name": "resource_variables_enabled",
        "parameters": {}
    },
    "tensorflow.compat.v1.reverse_sequence": {
        "short name": "reverse_sequence",
        "parameters": {
            "input": null,
            "seq_lengths": null,
            "seq_axis": "None",
            "batch_axis": "None",
            "name": "None",
            "seq_dim": "None",
            "batch_dim": "None"
        }
    },
    "tensorflow.compat.v1.scalar_mul": {
        "short name": "scalar_mul",
        "parameters": {
            "scalar": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scan": {
        "short name": "scan",
        "parameters": {
            "fn": null,
            "elems": null,
            "initializer": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "infer_shape": "True",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_add": {
        "short name": "scatter_add",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_div": {
        "short name": "scatter_div",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_max": {
        "short name": "scatter_max",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_min": {
        "short name": "scatter_min",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_mul": {
        "short name": "scatter_mul",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_nd_add": {
        "short name": "scatter_nd_add",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_nd_sub": {
        "short name": "scatter_nd_sub",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_nd_update": {
        "short name": "scatter_nd_update",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_sub": {
        "short name": "scatter_sub",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.scatter_update": {
        "short name": "scatter_update",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.serialize_many_sparse": {
        "short name": "serialize_many_sparse",
        "parameters": {
            "sp_input": null,
            "name": "None",
            "out_type": "tf.dtypes.string"
        }
    },
    "tensorflow.compat.v1.serialize_sparse": {
        "short name": "serialize_sparse",
        "parameters": {
            "sp_input": null,
            "name": "None",
            "out_type": "tf.dtypes.string"
        }
    },
    "tensorflow.compat.v1.set_random_seed": {
        "short name": "set_random_seed",
        "parameters": {
            "seed": null
        }
    },
    "tensorflow.compat.v1.setdiff1d": {
        "short name": "setdiff1d",
        "parameters": {
            "x": null,
            "y": null,
            "index_dtype": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.shape": {
        "short name": "shape",
        "parameters": {
            "input": null,
            "name": "None",
            "out_type": "tf.dtypes.int32"
        }
    },
    "tensorflow.compat.v1.size": {
        "short name": "size",
        "parameters": {
            "input": null,
            "name": "None",
            "out_type": "tf.dtypes.int32"
        }
    },
    "tensorflow.compat.v1.space_to_batch": {
        "short name": "space_to_batch",
        "parameters": {
            "input": null,
            "paddings": null,
            "block_size": "None",
            "name": "None",
            "block_shape": "None"
        }
    },
    "tensorflow.compat.v1.space_to_depth": {
        "short name": "space_to_depth",
        "parameters": {
            "input": null,
            "block_size": null,
            "name": "None",
            "data_format": "'NHWC'"
        }
    },
    "tensorflow.compat.v1.sparse_add": {
        "short name": "sparse_add",
        "parameters": {
            "a": null,
            "b": null,
            "threshold": "None",
            "thresh": "None"
        }
    },
    "tensorflow.compat.v1.sparse_concat": {
        "short name": "sparse_concat",
        "parameters": {
            "axis": null,
            "sp_inputs": null,
            "name": "None",
            "expand_nonconcat_dim": "False",
            "concat_dim": "None",
            "expand_nonconcat_dims": "None"
        }
    },
    "tensorflow.compat.v1.sparse_matmul": {
        "short name": "sparse_matmul",
        "parameters": {
            "a": null,
            "b": null,
            "transpose_a": "False",
            "transpose_b": "False",
            "a_is_sparse": "False",
            "b_is_sparse": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.sparse_merge": {
        "short name": "sparse_merge",
        "parameters": {
            "sp_ids": null,
            "sp_values": null,
            "vocab_size": null,
            "name": "None",
            "already_sorted": "False"
        }
    },
    "tensorflow.compat.v1.sparse_placeholder": {
        "short name": "sparse_placeholder",
        "parameters": {
            "dtype": null,
            "shape": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.sparse_reduce_max": {
        "short name": "sparse_reduce_max",
        "parameters": {
            "sp_input": null,
            "axis": "None",
            "keepdims": "None",
            "reduction_axes": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.sparse_reduce_max_sparse": {
        "short name": "sparse_reduce_max_sparse",
        "parameters": {
            "sp_input": null,
            "axis": "None",
            "keepdims": "None",
            "reduction_axes": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.sparse_reduce_sum": {
        "short name": "sparse_reduce_sum",
        "parameters": {
            "sp_input": null,
            "axis": "None",
            "keepdims": "None",
            "reduction_axes": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.sparse_reduce_sum_sparse": {
        "short name": "sparse_reduce_sum_sparse",
        "parameters": {
            "sp_input": null,
            "axis": "None",
            "keepdims": "None",
            "reduction_axes": "None",
            "keep_dims": "None"
        }
    },
    "tensorflow.compat.v1.sparse_segment_mean": {
        "short name": "sparse_segment_mean",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "name": "None",
            "num_segments": "None"
        }
    },
    "tensorflow.compat.v1.sparse_segment_sqrt_n": {
        "short name": "sparse_segment_sqrt_n",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "name": "None",
            "num_segments": "None"
        }
    },
    "tensorflow.compat.v1.sparse_segment_sum": {
        "short name": "sparse_segment_sum",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "name": "None",
            "num_segments": "None"
        }
    },
    "tensorflow.compat.v1.sparse_split": {
        "short name": "sparse_split",
        "parameters": {
            "keyword_required": "KeywordRequired()",
            "sp_input": "None",
            "num_split": "None",
            "axis": "None",
            "name": "None",
            "split_dim": "None"
        }
    },
    "tensorflow.compat.v1.sparse_to_dense": {
        "short name": "sparse_to_dense",
        "parameters": {
            "sparse_indices": null,
            "output_shape": null,
            "sparse_values": null,
            "default_value": "0",
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.squeeze": {
        "short name": "squeeze",
        "parameters": {
            "input": null,
            "axis": "None",
            "name": "None",
            "squeeze_dims": "None"
        }
    },
    "tensorflow.compat.v1.string_split": {
        "short name": "string_split",
        "parameters": {
            "source": null,
            "sep": "None",
            "skip_empty": "True",
            "delimiter": "None",
            "result_type": "'SparseTensor'",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.string_to_hash_bucket": {
        "short name": "string_to_hash_bucket",
        "parameters": {
            "string_tensor": "None",
            "num_buckets": "None",
            "name": "None",
            "input": "None"
        }
    },
    "tensorflow.compat.v1.string_to_number": {
        "short name": "string_to_number",
        "parameters": {
            "string_tensor": "None",
            "out_type": "tf.dtypes.float32",
            "name": "None",
            "input": "None"
        }
    },
    "tensorflow.compat.v1.substr": {
        "short name": "substr",
        "parameters": {
            "input": null,
            "pos": null,
            "len": null,
            "name": "None",
            "unit": "'BYTE'"
        }
    },
    "tensorflow.compat.v1.tables_initializer": {
        "short name": "tables_initializer",
        "parameters": {
            "name": "'init_all_tables'"
        }
    },
    "tensorflow.compat.v1.to_bfloat16": {
        "short name": "to_bfloat16",
        "parameters": {
            "x": null,
            "name": "'ToBFloat16'"
        }
    },
    "tensorflow.compat.v1.to_complex128": {
        "short name": "to_complex128",
        "parameters": {
            "x": null,
            "name": "'ToComplex128'"
        }
    },
    "tensorflow.compat.v1.to_complex64": {
        "short name": "to_complex64",
        "parameters": {
            "x": null,
            "name": "'ToComplex64'"
        }
    },
    "tensorflow.compat.v1.to_double": {
        "short name": "to_double",
        "parameters": {
            "x": null,
            "name": "'ToDouble'"
        }
    },
    "tensorflow.compat.v1.to_float": {
        "short name": "to_float",
        "parameters": {
            "x": null,
            "name": "'ToFloat'"
        }
    },
    "tensorflow.compat.v1.to_int32": {
        "short name": "to_int32",
        "parameters": {
            "x": null,
            "name": "'ToInt32'"
        }
    },
    "tensorflow.compat.v1.to_int64": {
        "short name": "to_int64",
        "parameters": {
            "x": null,
            "name": "'ToInt64'"
        }
    },
    "tensorflow.compat.v1.trainable_variables": {
        "short name": "trainable_variables",
        "parameters": {
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.transpose": {
        "short name": "transpose",
        "parameters": {
            "a": null,
            "perm": "None",
            "name": "'transpose'",
            "conjugate": "False"
        }
    },
    "tensorflow.compat.v1.tuple": {
        "short name": "tuple",
        "parameters": {
            "tensors": null,
            "name": "None",
            "control_inputs": "None"
        }
    },
    "tensorflow.compat.v1.variable_axis_size_partitioner": {
        "short name": "variable_axis_size_partitioner",
        "parameters": {
            "max_shard_bytes": null,
            "axis": "0",
            "bytes_per_string_element": "16",
            "max_shards": "None"
        }
    },
    "tensorflow.compat.v1.variable_creator_scope": {
        "short name": "variable_creator_scope",
        "parameters": {}
    },
    "tensorflow.compat.v1.variable_op_scope": {
        "short name": "variable_op_scope",
        "parameters": {}
    },
    "tensorflow.compat.v1.variables_initializer": {
        "short name": "variables_initializer",
        "parameters": {
            "var_list": null,
            "name": "'init'"
        }
    },
    "tensorflow.compat.v1.verify_tensor_all_finite": {
        "short name": "verify_tensor_all_finite",
        "parameters": {
            "t": "None",
            "msg": "None",
            "name": "None",
            "x": "None",
            "message": "None"
        }
    },
    "tensorflow.compat.v1.where": {
        "short name": "where",
        "parameters": {
            "condition": null,
            "x": "None",
            "y": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.while_loop": {
        "short name": "while_loop",
        "parameters": {
            "cond": null,
            "body": null,
            "loop_vars": null,
            "shape_invariants": "None",
            "parallel_iterations": "10",
            "back_prop": "True",
            "swap_memory": "False",
            "name": "None",
            "maximum_iterations": "None",
            "return_same_structure": "False"
        }
    },
    "tensorflow.compat.v1.wrap_function": {
        "short name": "wrap_function",
        "parameters": {
            "fn": null,
            "signature": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.zeros_like": {
        "short name": "zeros_like",
        "parameters": {
            "tensor": null,
            "dtype": "None",
            "name": "None",
            "optimize": "True"
        }
    },
    "tensorflow.config.experimental.ClusterDeviceFilters": {
        "short name": "ClusterDeviceFilters",
        "parameters": {}
    },
    "tensorflow.config.experimental.disable_mlir_bridge": {
        "short name": "disable_mlir_bridge",
        "parameters": {}
    },
    "tensorflow.config.experimental.disable_mlir_graph_optimization": {
        "short name": "disable_mlir_graph_optimization",
        "parameters": {}
    },
    "tensorflow.config.experimental.enable_mlir_bridge": {
        "short name": "enable_mlir_bridge",
        "parameters": {}
    },
    "tensorflow.config.experimental.enable_mlir_graph_optimization": {
        "short name": "enable_mlir_graph_optimization",
        "parameters": {}
    },
    "tensorflow.config.experimental.enable_op_determinism": {
        "short name": "enable_op_determinism",
        "parameters": {}
    },
    "tensorflow.config.experimental.enable_tensor_float_32_execution": {
        "short name": "enable_tensor_float_32_execution",
        "parameters": {
            "enabled": null
        }
    },
    "tensorflow.config.experimental.get_device_details": {
        "short name": "get_device_details",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.config.experimental.get_device_policy": {
        "short name": "get_device_policy",
        "parameters": {}
    },
    "tensorflow.config.experimental.get_memory_growth": {
        "short name": "get_memory_growth",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.config.experimental.get_memory_info": {
        "short name": "get_memory_info",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.config.experimental.get_memory_usage": {
        "short name": "get_memory_usage",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.config.experimental.get_synchronous_execution": {
        "short name": "get_synchronous_execution",
        "parameters": {}
    },
    "tensorflow.config.experimental.reset_memory_stats": {
        "short name": "reset_memory_stats",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.config.experimental.set_device_policy": {
        "short name": "set_device_policy",
        "parameters": {
            "device_policy": null
        }
    },
    "tensorflow.config.experimental.set_memory_growth": {
        "short name": "set_memory_growth",
        "parameters": {
            "device": null,
            "enable": null
        }
    },
    "tensorflow.config.experimental.set_synchronous_execution": {
        "short name": "set_synchronous_execution",
        "parameters": {
            "enable": null
        }
    },
    "tensorflow.config.experimental.tensor_float_32_execution_enabled": {
        "short name": "tensor_float_32_execution_enabled",
        "parameters": {}
    },
    "tensorflow.config.optimizer.get_experimental_options": {
        "short name": "get_experimental_options",
        "parameters": {}
    },
    "tensorflow.config.optimizer.get_jit": {
        "short name": "get_jit",
        "parameters": {}
    },
    "tensorflow.config.optimizer.set_experimental_options": {
        "short name": "set_experimental_options",
        "parameters": {
            "options": null
        }
    },
    "tensorflow.config.optimizer.set_jit": {
        "short name": "set_jit",
        "parameters": {}
    },
    "tensorflow.config.threading.get_inter_op_parallelism_threads": {
        "short name": "get_inter_op_parallelism_threads",
        "parameters": {}
    },
    "tensorflow.config.threading.get_intra_op_parallelism_threads": {
        "short name": "get_intra_op_parallelism_threads",
        "parameters": {}
    },
    "tensorflow.config.threading.set_inter_op_parallelism_threads": {
        "short name": "set_inter_op_parallelism_threads",
        "parameters": {
            "num_threads": null
        }
    },
    "tensorflow.config.threading.set_intra_op_parallelism_threads": {
        "short name": "set_intra_op_parallelism_threads",
        "parameters": {
            "num_threads": null
        }
    },
    "tensorflow.data.experimental.AutoShardPolicy": {
        "short name": "AutoShardPolicy",
        "parameters": {}
    },
    "tensorflow.data.experimental.AutotuneAlgorithm": {
        "short name": "AutotuneAlgorithm",
        "parameters": {}
    },
    "tensorflow.data.experimental.AutotuneOptions": {
        "short name": "AutotuneOptions",
        "parameters": {}
    },
    "tensorflow.data.experimental.CheckpointInputPipelineHook": {
        "short name": "CheckpointInputPipelineHook",
        "parameters": {
            "estimator": null,
            "external_state_policy": "None"
        }
    },
    "tensorflow.data.experimental.CsvDataset": {
        "short name": "CsvDataset",
        "parameters": {
            "filenames": null,
            "record_defaults": null,
            "compression_type": "None",
            "buffer_size": "None",
            "header": "False",
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "select_cols": "None",
            "exclude_cols": "None"
        }
    },
    "tensorflow.data.experimental.DatasetInitializer": {
        "short name": "DatasetInitializer",
        "parameters": {
            "dataset": null
        }
    },
    "tensorflow.data.experimental.DistributeOptions": {
        "short name": "DistributeOptions",
        "parameters": {}
    },
    "tensorflow.data.experimental.ExternalStatePolicy": {
        "short name": "ExternalStatePolicy",
        "parameters": {}
    },
    "tensorflow.data.experimental.OptimizationOptions": {
        "short name": "OptimizationOptions",
        "parameters": {}
    },
    "tensorflow.data.experimental.RandomDataset": {
        "short name": "RandomDataset",
        "parameters": {
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.data.experimental.Reducer": {
        "short name": "Reducer",
        "parameters": {
            "init_func": null,
            "reduce_func": null,
            "finalize_func": null
        }
    },
    "tensorflow.data.experimental.SqlDataset": {
        "short name": "SqlDataset",
        "parameters": {
            "driver_name": null,
            "data_source_name": null,
            "query": null,
            "output_types": null
        }
    },
    "tensorflow.data.experimental.TFRecordWriter": {
        "short name": "TFRecordWriter",
        "parameters": {
            "filename": null,
            "compression_type": "None"
        }
    },
    "tensorflow.data.experimental.Counter": {
        "short name": "Counter",
        "parameters": {
            "start": "0",
            "step": "1",
            "dtype": "tf.dtypes.int64"
        }
    },
    "tensorflow.data.experimental.assert_cardinality": {
        "short name": "assert_cardinality",
        "parameters": {
            "expected_cardinality": null
        }
    },
    "tensorflow.data.experimental.bucket_by_sequence_length": {
        "short name": "bucket_by_sequence_length",
        "parameters": {
            "element_length_func": null,
            "bucket_boundaries": null,
            "bucket_batch_sizes": null,
            "padded_shapes": "None",
            "padding_values": "None",
            "pad_to_bucket_boundary": "False",
            "no_padding": "False",
            "drop_remainder": "False"
        }
    },
    "tensorflow.data.experimental.cardinality": {
        "short name": "cardinality",
        "parameters": {
            "dataset": null
        }
    },
    "tensorflow.data.experimental.choose_from_datasets": {
        "short name": "choose_from_datasets",
        "parameters": {
            "datasets": null,
            "choice_dataset": null,
            "stop_on_empty_dataset": "False"
        }
    },
    "tensorflow.data.experimental.copy_to_device": {
        "short name": "copy_to_device",
        "parameters": {
            "target_device": null,
            "source_device": "'/cpu:0'"
        }
    },
    "tensorflow.data.experimental.dense_to_ragged_batch": {
        "short name": "dense_to_ragged_batch",
        "parameters": {
            "batch_size": null,
            "drop_remainder": "False",
            "row_splits_dtype": "tf.dtypes.int64"
        }
    },
    "tensorflow.data.experimental.dense_to_sparse_batch": {
        "short name": "dense_to_sparse_batch",
        "parameters": {
            "batch_size": null,
            "row_shape": null
        }
    },
    "tensorflow.data.experimental.enable_debug_mode": {
        "short name": "enable_debug_mode",
        "parameters": {}
    },
    "tensorflow.data.experimental.enumerate_dataset": {
        "short name": "enumerate_dataset",
        "parameters": {
            "start": "0"
        }
    },
    "tensorflow.data.experimental.from_variant": {
        "short name": "from_variant",
        "parameters": {
            "variant": null,
            "structure": null
        }
    },
    "tensorflow.data.experimental.get_next_as_optional": {
        "short name": "get_next_as_optional",
        "parameters": {
            "iterator": null
        }
    },
    "tensorflow.data.experimental.get_single_element": {
        "short name": "get_single_element",
        "parameters": {
            "dataset": null
        }
    },
    "tensorflow.data.experimental.get_structure": {
        "short name": "get_structure",
        "parameters": {
            "dataset_or_iterator": null
        }
    },
    "tensorflow.data.experimental.group_by_reducer": {
        "short name": "group_by_reducer",
        "parameters": {
            "key_func": null,
            "reducer": null
        }
    },
    "tensorflow.data.experimental.group_by_window": {
        "short name": "group_by_window",
        "parameters": {
            "key_func": null,
            "reduce_func": null,
            "window_size": "None",
            "window_size_func": "None"
        }
    },
    "tensorflow.data.experimental.ignore_errors": {
        "short name": "ignore_errors",
        "parameters": {
            "log_warning": "False"
        }
    },
    "tensorflow.data.experimental.index_table_from_dataset": {
        "short name": "index_table_from_dataset",
        "parameters": {
            "dataset": "None",
            "num_oov_buckets": "0",
            "vocab_size": "None",
            "default_value": "-1",
            "hasher_spec": "lookup_ops.FastHashSpec",
            "key_dtype": "tf.dtypes.string",
            "name": "None"
        }
    },
    "tensorflow.data.experimental.load": {
        "short name": "load",
        "parameters": {
            "path": null,
            "element_spec": "None",
            "compression": "None",
            "reader_func": "None"
        }
    },
    "tensorflow.data.experimental.make_batched_features_dataset": {
        "short name": "make_batched_features_dataset",
        "parameters": {
            "file_pattern": null,
            "batch_size": null,
            "features": null,
            "reader": "None",
            "label_key": "None",
            "reader_args": "None",
            "num_epochs": "None",
            "shuffle": "True",
            "shuffle_buffer_size": "10000",
            "shuffle_seed": "None",
            "prefetch_buffer_size": "None",
            "reader_num_threads": "None",
            "parser_num_threads": "None",
            "sloppy_ordering": "False",
            "drop_final_batch": "False"
        }
    },
    "tensorflow.data.experimental.make_csv_dataset": {
        "short name": "make_csv_dataset",
        "parameters": {
            "file_pattern": null,
            "batch_size": null,
            "column_names": "None",
            "column_defaults": "None",
            "label_name": "None",
            "select_columns": "None",
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "header": "True",
            "num_epochs": "None",
            "shuffle": "True",
            "shuffle_buffer_size": "10000",
            "shuffle_seed": "None",
            "prefetch_buffer_size": "None",
            "num_parallel_reads": "None",
            "sloppy": "False",
            "num_rows_for_inference": "100",
            "compression_type": "None",
            "ignore_errors": "False"
        }
    },
    "tensorflow.data.experimental.make_saveable_from_iterator": {
        "short name": "make_saveable_from_iterator",
        "parameters": {
            "iterator": null,
            "external_state_policy": "None"
        }
    },
    "tensorflow.data.experimental.map_and_batch": {
        "short name": "map_and_batch",
        "parameters": {
            "map_func": null,
            "batch_size": null,
            "num_parallel_batches": "None",
            "drop_remainder": "False",
            "num_parallel_calls": "None"
        }
    },
    "tensorflow.data.experimental.parallel_interleave": {
        "short name": "parallel_interleave",
        "parameters": {
            "map_func": null,
            "cycle_length": null,
            "block_length": "1",
            "sloppy": "False",
            "buffer_output_elements": "None",
            "prefetch_input_elements": "None"
        }
    },
    "tensorflow.data.experimental.parse_example_dataset": {
        "short name": "parse_example_dataset",
        "parameters": {
            "features": null,
            "num_parallel_calls": "1",
            "deterministic": "None"
        }
    },
    "tensorflow.data.experimental.prefetch_to_device": {
        "short name": "prefetch_to_device",
        "parameters": {
            "device": null,
            "buffer_size": "None"
        }
    },
    "tensorflow.data.experimental.rejection_resample": {
        "short name": "rejection_resample",
        "parameters": {
            "class_func": null,
            "target_dist": null,
            "initial_dist": "None",
            "seed": "None"
        }
    },
    "tensorflow.data.experimental.sample_from_datasets": {
        "short name": "sample_from_datasets",
        "parameters": {
            "datasets": null,
            "weights": "None",
            "seed": "None",
            "stop_on_empty_dataset": "False"
        }
    },
    "tensorflow.data.experimental.save": {
        "short name": "save",
        "parameters": {
            "dataset": null,
            "path": null,
            "compression": "None",
            "shard_func": "None",
            "checkpoint_args": "None"
        }
    },
    "tensorflow.data.experimental.scan": {
        "short name": "scan",
        "parameters": {
            "initial_state": null,
            "scan_func": null
        }
    },
    "tensorflow.data.experimental.shuffle_and_repeat": {
        "short name": "shuffle_and_repeat",
        "parameters": {
            "buffer_size": null,
            "count": "None",
            "seed": "None"
        }
    },
    "tensorflow.data.experimental.snapshot": {
        "short name": "snapshot",
        "parameters": {
            "path": null,
            "compression": "'AUTO'",
            "reader_func": "None",
            "shard_func": "None"
        }
    },
    "tensorflow.data.experimental.table_from_dataset": {
        "short name": "table_from_dataset",
        "parameters": {
            "dataset": "None",
            "num_oov_buckets": "0",
            "vocab_size": "None",
            "default_value": "None",
            "hasher_spec": "lookup_ops.FastHashSpec",
            "key_dtype": "tf.dtypes.string",
            "name": "None"
        }
    },
    "tensorflow.data.experimental.take_while": {
        "short name": "take_while",
        "parameters": {
            "predicate": null
        }
    },
    "tensorflow.data.experimental.to_variant": {
        "short name": "to_variant",
        "parameters": {
            "dataset": null
        }
    },
    "tensorflow.data.experimental.unbatch": {
        "short name": "unbatch",
        "parameters": {}
    },
    "tensorflow.data.experimental.unique": {
        "short name": "unique",
        "parameters": {}
    },
    "tensorflow.debugging.experimental.disable_dump_debug_info": {
        "short name": "disable_dump_debug_info",
        "parameters": {}
    },
    "tensorflow.debugging.experimental.enable_dump_debug_info": {
        "short name": "enable_dump_debug_info",
        "parameters": {
            "dump_root": null,
            "tensor_debug_mode": "DEFAULT_TENSOR_DEBUG_MODE",
            "circular_buffer_size": "1000",
            "op_regex": "None",
            "tensor_dtypes": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.ClusterResolver": {
        "short name": "ClusterResolver",
        "parameters": {}
    },
    "tensorflow.distribute.cluster_resolver.GCEClusterResolver": {
        "short name": "GCEClusterResolver",
        "parameters": {
            "project": null,
            "zone": null,
            "instance_group": null,
            "port": null,
            "task_type": "'worker'",
            "task_id": "0",
            "rpc_layer": "'grpc'",
            "credentials": "'default'",
            "service": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.KubernetesClusterResolver": {
        "short name": "KubernetesClusterResolver",
        "parameters": {
            "job_to_label_mapping": "None",
            "tf_server_port": "8470",
            "rpc_layer": "'grpc'",
            "override_client": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.SimpleClusterResolver": {
        "short name": "SimpleClusterResolver",
        "parameters": {
            "cluster_spec": null,
            "master": "''",
            "task_type": "None",
            "task_id": "None",
            "environment": "''",
            "num_accelerators": "None",
            "rpc_layer": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.SlurmClusterResolver": {
        "short name": "SlurmClusterResolver",
        "parameters": {
            "jobs": "None",
            "port_base": "8888",
            "gpus_per_node": "None",
            "gpus_per_task": "None",
            "tasks_per_node": "None",
            "auto_set_gpu": "True",
            "rpc_layer": "'grpc'"
        }
    },
    "tensorflow.distribute.cluster_resolver.TFConfigClusterResolver": {
        "short name": "TFConfigClusterResolver",
        "parameters": {
            "task_type": "None",
            "task_id": "None",
            "rpc_layer": "None",
            "environment": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver": {
        "short name": "TPUClusterResolver",
        "parameters": {
            "tpu": "None",
            "zone": "None",
            "project": "None",
            "job_name": "'worker'",
            "coordinator_name": "None",
            "coordinator_address": "None",
            "credentials": "'default'",
            "service": "None",
            "discovery_url": "None"
        }
    },
    "tensorflow.distribute.cluster_resolver.UnionResolver": {
        "short name": "UnionResolver",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.distribute.experimental.coordinator.ClusterCoordinator": {
        "short name": "ClusterCoordinator",
        "parameters": {
            "strategy": null
        }
    },
    "tensorflow.distribute.experimental.coordinator.PerWorkerValues": {
        "short name": "PerWorkerValues",
        "parameters": {
            "values": null
        }
    },
    "tensorflow.distribute.experimental.coordinator.RemoteValue": {
        "short name": "RemoteValue",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.CentralStorageStrategy": {
        "short name": "CentralStorageStrategy",
        "parameters": {
            "compute_devices": "None",
            "parameter_device": "None"
        }
    },
    "tensorflow.distribute.experimental.CommunicationImplementation": {
        "short name": "CommunicationImplementation",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.CollectiveHints": {
        "short name": "CollectiveHints",
        "parameters": {
            "bytes_per_pack": "0",
            "timeout_seconds": "None"
        }
    },
    "tensorflow.distribute.experimental.CommunicationOptions": {
        "short name": "CommunicationOptions",
        "parameters": {
            "bytes_per_pack": "0",
            "timeout_seconds": "None",
            "implementation": "tf.distribute.experimental.CollectiveCommunication.AUTO"
        }
    },
    "tensorflow.distribute.experimental.MultiWorkerMirroredStrategy": {
        "short name": "MultiWorkerMirroredStrategy",
        "parameters": {
            "communication": "tf.distribute.experimental.CollectiveCommunication.AUTO",
            "cluster_resolver": "None"
        }
    },
    "tensorflow.distribute.experimental.TPUStrategy": {
        "short name": "TPUStrategy",
        "parameters": {
            "tpu_cluster_resolver": "None",
            "device_assignment": "None"
        }
    },
    "tensorflow.distribute.experimental.ValueContext": {
        "short name": "ValueContext",
        "parameters": {
            "replica_id_in_sync_group": "0",
            "num_replicas_in_sync": "1"
        }
    },
    "tensorflow.estimator.experimental.InMemoryEvaluatorHook": {
        "short name": "InMemoryEvaluatorHook",
        "parameters": {
            "estimator": null,
            "input_fn": null,
            "steps": "None",
            "hooks": "None",
            "name": "None",
            "every_n_iter": "100"
        }
    },
    "tensorflow.estimator.experimental.LinearSDCA": {
        "short name": "LinearSDCA",
        "parameters": {
            "example_id_column": null,
            "num_loss_partitions": "1",
            "num_table_shards": "None",
            "symmetric_l1_regularization": "0.0",
            "symmetric_l2_regularization": "1.0",
            "adaptive": "False"
        }
    },
    "tensorflow.estimator.experimental.RNNClassifier": {
        "short name": "RNNClassifier",
        "parameters": {
            "sequence_feature_columns": null,
            "context_feature_columns": "None",
            "units": "None",
            "cell_type": "USE_DEFAULT",
            "rnn_cell_fn": "None",
            "return_sequences": "False",
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Adagrad'",
            "loss_reduction": "tf.losses.Reduction.SUM_OVER_BATCH_SIZE",
            "sequence_mask": "'sequence_mask'",
            "config": "None"
        }
    },
    "tensorflow.estimator.experimental.RNNEstimator": {
        "short name": "RNNEstimator",
        "parameters": {
            "head": null,
            "sequence_feature_columns": null,
            "context_feature_columns": "None",
            "units": "None",
            "cell_type": "USE_DEFAULT",
            "rnn_cell_fn": "None",
            "return_sequences": "False",
            "model_dir": "None",
            "optimizer": "'Adagrad'",
            "config": "None"
        }
    },
    "tensorflow.estimator.experimental.build_raw_supervised_input_receiver_fn": {
        "short name": "build_raw_supervised_input_receiver_fn",
        "parameters": {
            "features": null,
            "labels": null,
            "default_batch_size": "None"
        }
    },
    "tensorflow.estimator.experimental.call_logit_fn": {
        "short name": "call_logit_fn",
        "parameters": {
            "logit_fn": null,
            "features": null,
            "mode": null,
            "params": null,
            "config": null
        }
    },
    "tensorflow.estimator.experimental.make_early_stopping_hook": {
        "short name": "make_early_stopping_hook",
        "parameters": {
            "estimator": null,
            "should_stop_fn": null,
            "run_every_secs": "60",
            "run_every_steps": "None"
        }
    },
    "tensorflow.estimator.experimental.make_stop_at_checkpoint_step_hook": {
        "short name": "make_stop_at_checkpoint_step_hook",
        "parameters": {
            "estimator": null,
            "last_step": null,
            "wait_after_file_check_secs": "30"
        }
    },
    "tensorflow.estimator.experimental.stop_if_higher_hook": {
        "short name": "stop_if_higher_hook",
        "parameters": {
            "estimator": null,
            "metric_name": null,
            "threshold": null,
            "eval_dir": "None",
            "min_steps": "0",
            "run_every_secs": "60",
            "run_every_steps": "None"
        }
    },
    "tensorflow.estimator.experimental.stop_if_lower_hook": {
        "short name": "stop_if_lower_hook",
        "parameters": {
            "estimator": null,
            "metric_name": null,
            "threshold": null,
            "eval_dir": "None",
            "min_steps": "0",
            "run_every_secs": "60",
            "run_every_steps": "None"
        }
    },
    "tensorflow.estimator.experimental.stop_if_no_decrease_hook": {
        "short name": "stop_if_no_decrease_hook",
        "parameters": {
            "estimator": null,
            "metric_name": null,
            "max_steps_without_decrease": null,
            "eval_dir": "None",
            "min_steps": "0",
            "run_every_secs": "60",
            "run_every_steps": "None"
        }
    },
    "tensorflow.estimator.experimental.stop_if_no_increase_hook": {
        "short name": "stop_if_no_increase_hook",
        "parameters": {
            "estimator": null,
            "metric_name": null,
            "max_steps_without_increase": null,
            "eval_dir": "None",
            "min_steps": "0",
            "run_every_secs": "60",
            "run_every_steps": "None"
        }
    },
    "tensorflow.estimator.export.ClassificationOutput": {
        "short name": "ClassificationOutput",
        "parameters": {
            "scores": "None",
            "classes": "None"
        }
    },
    "tensorflow.estimator.export.EvalOutput": {
        "short name": "EvalOutput",
        "parameters": {
            "loss": "None",
            "predictions": "None",
            "metrics": "None"
        }
    },
    "tensorflow.estimator.export.ExportOutput": {
        "short name": "ExportOutput",
        "parameters": {}
    },
    "tensorflow.estimator.export.PredictOutput": {
        "short name": "PredictOutput",
        "parameters": {
            "outputs": null
        }
    },
    "tensorflow.estimator.export.RegressionOutput": {
        "short name": "RegressionOutput",
        "parameters": {
            "value": null
        }
    },
    "tensorflow.estimator.export.ServingInputReceiver": {
        "short name": "ServingInputReceiver",
        "parameters": {
            "features": null,
            "receiver_tensors": null,
            "receiver_tensors_alternatives": "None"
        }
    },
    "tensorflow.estimator.export.TensorServingInputReceiver": {
        "short name": "TensorServingInputReceiver",
        "parameters": {
            "features": null,
            "receiver_tensors": null,
            "receiver_tensors_alternatives": "None"
        }
    },
    "tensorflow.estimator.export.build_parsing_serving_input_receiver_fn": {
        "short name": "build_parsing_serving_input_receiver_fn",
        "parameters": {
            "feature_spec": null,
            "default_batch_size": "None"
        }
    },
    "tensorflow.estimator.export.build_raw_serving_input_receiver_fn": {
        "short name": "build_raw_serving_input_receiver_fn",
        "parameters": {
            "features": null,
            "default_batch_size": "None"
        }
    },
    "tensorflow.experimental.dlpack.from_dlpack": {
        "short name": "from_dlpack",
        "parameters": {
            "dlcapsule": null
        }
    },
    "tensorflow.experimental.dlpack.to_dlpack": {
        "short name": "to_dlpack",
        "parameters": {
            "tf_tensor": null
        }
    },
    "tensorflow.experimental.dtensor.DTensorCheckpoint": {
        "short name": "DTensorCheckpoint",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.DVariable": {
        "short name": "DVariable",
        "parameters": {
            "initial_value": null,
            "*args": null,
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.experimental.dtensor.Layout": {
        "short name": "Layout",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.Mesh": {
        "short name": "Mesh",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.call_with_layout": {
        "short name": "call_with_layout",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.check_layout": {
        "short name": "check_layout",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.client_id": {
        "short name": "client_id",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.copy_to_mesh": {
        "short name": "copy_to_mesh",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.create_distributed_mesh": {
        "short name": "create_distributed_mesh",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.create_mesh": {
        "short name": "create_mesh",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.device_name": {
        "short name": "device_name",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.enable_save_as_bf16": {
        "short name": "enable_save_as_bf16",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.fetch_layout": {
        "short name": "fetch_layout",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.full_job_name": {
        "short name": "full_job_name",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.heartbeat_enabled": {
        "short name": "heartbeat_enabled",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.initialize_multi_client": {
        "short name": "initialize_multi_client",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.initialize_tpu_system": {
        "short name": "initialize_tpu_system",
        "parameters": {
            "enable_coordination_service": "False"
        }
    },
    "tensorflow.experimental.dtensor.job_name": {
        "short name": "job_name",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.jobs": {
        "short name": "jobs",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.local_devices": {
        "short name": "local_devices",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.name_based_restore": {
        "short name": "name_based_restore",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.name_based_save": {
        "short name": "name_based_save",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.num_clients": {
        "short name": "num_clients",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.num_global_devices": {
        "short name": "num_global_devices",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.num_local_devices": {
        "short name": "num_local_devices",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.pack": {
        "short name": "pack",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.relayout": {
        "short name": "relayout",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.run_on": {
        "short name": "run_on",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.sharded_save": {
        "short name": "sharded_save",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.shutdown_tpu_system": {
        "short name": "shutdown_tpu_system",
        "parameters": {}
    },
    "tensorflow.experimental.dtensor.unpack": {
        "short name": "unpack",
        "parameters": {}
    },
    "tensorflow.experimental.numpy.bool_": {
        "short name": "bool_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.complex128": {
        "short name": "complex128",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.complex64": {
        "short name": "complex64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.float16": {
        "short name": "float16",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.float32": {
        "short name": "float32",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.float64": {
        "short name": "float64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.iinfo": {
        "short name": "iinfo",
        "parameters": {
            "int_type": null
        }
    },
    "tensorflow.experimental.numpy.inexact": {
        "short name": "inexact",
        "parameters": {}
    },
    "tensorflow.experimental.numpy.int16": {
        "short name": "int16",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.int32": {
        "short name": "int32",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.int64": {
        "short name": "int64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.int8": {
        "short name": "int8",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.object_": {
        "short name": "object_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.string_": {
        "short name": "string_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint16": {
        "short name": "uint16",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint32": {
        "short name": "uint32",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint64": {
        "short name": "uint64",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.uint8": {
        "short name": "uint8",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.unicode_": {
        "short name": "unicode_",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.abs": {
        "short name": "abs",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.absolute": {
        "short name": "absolute",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.add": {
        "short name": "add",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.all": {
        "short name": "all",
        "parameters": {
            "a": null,
            "axis": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.allclose": {
        "short name": "allclose",
        "parameters": {
            "a": null,
            "b": null,
            "rtol": "1e-05",
            "atol": "1e-08",
            "equal_nan": "False"
        }
    },
    "tensorflow.experimental.numpy.amax": {
        "short name": "amax",
        "parameters": {
            "a": null,
            "axis": "None",
            "out": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.amin": {
        "short name": "amin",
        "parameters": {
            "a": null,
            "axis": "None",
            "out": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.angle": {
        "short name": "angle",
        "parameters": {
            "z": null,
            "deg": "False"
        }
    },
    "tensorflow.experimental.numpy.any": {
        "short name": "any",
        "parameters": {
            "a": null,
            "axis": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.append": {
        "short name": "append",
        "parameters": {
            "arr": null,
            "values": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.arange": {
        "short name": "arange",
        "parameters": {
            "start": null,
            "stop": "None",
            "step": "1",
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.arccos": {
        "short name": "arccos",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.arccosh": {
        "short name": "arccosh",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.arcsin": {
        "short name": "arcsin",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.arcsinh": {
        "short name": "arcsinh",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.arctan": {
        "short name": "arctan",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.arctan2": {
        "short name": "arctan2",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.arctanh": {
        "short name": "arctanh",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.argmax": {
        "short name": "argmax",
        "parameters": {
            "a": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.argmin": {
        "short name": "argmin",
        "parameters": {
            "a": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.argsort": {
        "short name": "argsort",
        "parameters": {
            "a": null,
            "axis": "-1",
            "kind": "'quicksort'",
            "order": "None"
        }
    },
    "tensorflow.experimental.numpy.around": {
        "short name": "around",
        "parameters": {
            "a": null,
            "decimals": "0"
        }
    },
    "tensorflow.experimental.numpy.array": {
        "short name": "array",
        "parameters": {
            "val": null,
            "dtype": "None",
            "copy": "True",
            "ndmin": "0"
        }
    },
    "tensorflow.experimental.numpy.array_equal": {
        "short name": "array_equal",
        "parameters": {
            "a1": null,
            "a2": null
        }
    },
    "tensorflow.experimental.numpy.asanyarray": {
        "short name": "asanyarray",
        "parameters": {
            "a": null,
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.asarray": {
        "short name": "asarray",
        "parameters": {
            "a": null,
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.ascontiguousarray": {
        "short name": "ascontiguousarray",
        "parameters": {
            "a": null,
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.atleast_1d": {
        "short name": "atleast_1d",
        "parameters": {
            "*arys": null
        }
    },
    "tensorflow.experimental.numpy.atleast_2d": {
        "short name": "atleast_2d",
        "parameters": {
            "*arys": null
        }
    },
    "tensorflow.experimental.numpy.atleast_3d": {
        "short name": "atleast_3d",
        "parameters": {
            "*arys": null
        }
    },
    "tensorflow.experimental.numpy.average": {
        "short name": "average",
        "parameters": {
            "a": null,
            "axis": "None",
            "weights": "None",
            "returned": "False"
        }
    },
    "tensorflow.experimental.numpy.bitwise_and": {
        "short name": "bitwise_and",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.bitwise_not": {
        "short name": "bitwise_not",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.bitwise_or": {
        "short name": "bitwise_or",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.bitwise_xor": {
        "short name": "bitwise_xor",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.broadcast_arrays": {
        "short name": "broadcast_arrays",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.broadcast_to": {
        "short name": "broadcast_to",
        "parameters": {
            "array": null,
            "shape": null
        }
    },
    "tensorflow.experimental.numpy.cbrt": {
        "short name": "cbrt",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.ceil": {
        "short name": "ceil",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.clip": {
        "short name": "clip",
        "parameters": {
            "a": null,
            "a_min": null,
            "a_max": null
        }
    },
    "tensorflow.experimental.numpy.compress": {
        "short name": "compress",
        "parameters": {
            "condition": null,
            "a": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.concatenate": {
        "short name": "concatenate",
        "parameters": {
            "arys": null,
            "axis": "0"
        }
    },
    "tensorflow.experimental.numpy.conj": {
        "short name": "conj",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.conjugate": {
        "short name": "conjugate",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.copy": {
        "short name": "copy",
        "parameters": {
            "a": null
        }
    },
    "tensorflow.experimental.numpy.cos": {
        "short name": "cos",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.cosh": {
        "short name": "cosh",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.count_nonzero": {
        "short name": "count_nonzero",
        "parameters": {
            "a": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.cross": {
        "short name": "cross",
        "parameters": {
            "a": null,
            "b": null,
            "axisa": "-1",
            "axisb": "-1",
            "axisc": "-1",
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.cumprod": {
        "short name": "cumprod",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.cumsum": {
        "short name": "cumsum",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.deg2rad": {
        "short name": "deg2rad",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.diag": {
        "short name": "diag",
        "parameters": {
            "v": null,
            "k": "0"
        }
    },
    "tensorflow.experimental.numpy.diag_indices": {
        "short name": "diag_indices",
        "parameters": {
            "n": null,
            "ndim": "2"
        }
    },
    "tensorflow.experimental.numpy.diagflat": {
        "short name": "diagflat",
        "parameters": {
            "v": null,
            "k": "0"
        }
    },
    "tensorflow.experimental.numpy.diagonal": {
        "short name": "diagonal",
        "parameters": {
            "a": null,
            "offset": "0",
            "axis1": "0",
            "axis2": "1"
        }
    },
    "tensorflow.experimental.numpy.diff": {
        "short name": "diff",
        "parameters": {
            "a": null,
            "n": "1",
            "axis": "-1"
        }
    },
    "tensorflow.experimental.numpy.divide": {
        "short name": "divide",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.divmod": {
        "short name": "divmod",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.dot": {
        "short name": "dot",
        "parameters": {
            "a": null,
            "b": null
        }
    },
    "tensorflow.experimental.numpy.dsplit": {
        "short name": "dsplit",
        "parameters": {
            "ary": null,
            "indices_or_sections": null
        }
    },
    "tensorflow.experimental.numpy.dstack": {
        "short name": "dstack",
        "parameters": {
            "tup": null
        }
    },
    "tensorflow.experimental.numpy.einsum": {
        "short name": "einsum",
        "parameters": {
            "subscripts": null,
            "*operands": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.empty": {
        "short name": "empty",
        "parameters": {
            "shape": null,
            "dtype": "float"
        }
    },
    "tensorflow.experimental.numpy.empty_like": {
        "short name": "empty_like",
        "parameters": {
            "a": null,
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.equal": {
        "short name": "equal",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.exp": {
        "short name": "exp",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.exp2": {
        "short name": "exp2",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.expand_dims": {
        "short name": "expand_dims",
        "parameters": {
            "a": null,
            "axis": null
        }
    },
    "tensorflow.experimental.numpy.experimental_enable_numpy_behavior": {
        "short name": "experimental_enable_numpy_behavior",
        "parameters": {
            "prefer_float32": "False"
        }
    },
    "tensorflow.experimental.numpy.expm1": {
        "short name": "expm1",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.eye": {
        "short name": "eye",
        "parameters": {
            "N": null,
            "M": "None",
            "k": "0",
            "dtype": "float"
        }
    },
    "tensorflow.experimental.numpy.fabs": {
        "short name": "fabs",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.finfo": {
        "short name": "finfo",
        "parameters": {
            "dtype": null
        }
    },
    "tensorflow.experimental.numpy.fix": {
        "short name": "fix",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.flip": {
        "short name": "flip",
        "parameters": {
            "m": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.fliplr": {
        "short name": "fliplr",
        "parameters": {
            "m": null
        }
    },
    "tensorflow.experimental.numpy.flipud": {
        "short name": "flipud",
        "parameters": {
            "m": null
        }
    },
    "tensorflow.experimental.numpy.float_power": {
        "short name": "float_power",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.floor": {
        "short name": "floor",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.floor_divide": {
        "short name": "floor_divide",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.full": {
        "short name": "full",
        "parameters": {
            "shape": null,
            "fill_value": null,
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.full_like": {
        "short name": "full_like",
        "parameters": {
            "a": null,
            "fill_value": null,
            "dtype": "None",
            "order": "'K'",
            "subok": "True",
            "shape": "None"
        }
    },
    "tensorflow.experimental.numpy.gcd": {
        "short name": "gcd",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.geomspace": {
        "short name": "geomspace",
        "parameters": {
            "start": null,
            "stop": null,
            "num": "50",
            "endpoint": "True",
            "dtype": "None",
            "axis": "0"
        }
    },
    "tensorflow.experimental.numpy.greater": {
        "short name": "greater",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.greater_equal": {
        "short name": "greater_equal",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.heaviside": {
        "short name": "heaviside",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.hsplit": {
        "short name": "hsplit",
        "parameters": {
            "ary": null,
            "indices_or_sections": null
        }
    },
    "tensorflow.experimental.numpy.hstack": {
        "short name": "hstack",
        "parameters": {
            "tup": null
        }
    },
    "tensorflow.experimental.numpy.hypot": {
        "short name": "hypot",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.identity": {
        "short name": "identity",
        "parameters": {
            "n": null,
            "dtype": "float"
        }
    },
    "tensorflow.experimental.numpy.imag": {
        "short name": "imag",
        "parameters": {
            "val": null
        }
    },
    "tensorflow.experimental.numpy.inner": {
        "short name": "inner",
        "parameters": {
            "a": null,
            "b": null
        }
    },
    "tensorflow.experimental.numpy.isclose": {
        "short name": "isclose",
        "parameters": {
            "a": null,
            "b": null,
            "rtol": "1e-05",
            "atol": "1e-08",
            "equal_nan": "False"
        }
    },
    "tensorflow.experimental.numpy.iscomplex": {
        "short name": "iscomplex",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.iscomplexobj": {
        "short name": "iscomplexobj",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isfinite": {
        "short name": "isfinite",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isinf": {
        "short name": "isinf",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isnan": {
        "short name": "isnan",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isneginf": {
        "short name": "isneginf",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isposinf": {
        "short name": "isposinf",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isreal": {
        "short name": "isreal",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isrealobj": {
        "short name": "isrealobj",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.isscalar": {
        "short name": "isscalar",
        "parameters": {
            "num": null
        }
    },
    "tensorflow.experimental.numpy.issubdtype": {
        "short name": "issubdtype",
        "parameters": {
            "arg1": null,
            "arg2": null
        }
    },
    "tensorflow.experimental.numpy.ix_": {
        "short name": "ix_",
        "parameters": {
            "*args": null
        }
    },
    "tensorflow.experimental.numpy.kron": {
        "short name": "kron",
        "parameters": {
            "a": null,
            "b": null
        }
    },
    "tensorflow.experimental.numpy.lcm": {
        "short name": "lcm",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.less": {
        "short name": "less",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.less_equal": {
        "short name": "less_equal",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.linspace": {
        "short name": "linspace",
        "parameters": {
            "start": null,
            "stop": null,
            "num": "50",
            "endpoint": "True",
            "retstep": "False",
            "dtype": "float",
            "axis": "0"
        }
    },
    "tensorflow.experimental.numpy.log": {
        "short name": "log",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.log10": {
        "short name": "log10",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.log1p": {
        "short name": "log1p",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.log2": {
        "short name": "log2",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.logaddexp": {
        "short name": "logaddexp",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.logaddexp2": {
        "short name": "logaddexp2",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.logical_and": {
        "short name": "logical_and",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.logical_not": {
        "short name": "logical_not",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.logical_or": {
        "short name": "logical_or",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.logical_xor": {
        "short name": "logical_xor",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.logspace": {
        "short name": "logspace",
        "parameters": {
            "start": null,
            "stop": null,
            "num": "50",
            "endpoint": "True",
            "base": "10.0",
            "dtype": "None",
            "axis": "0"
        }
    },
    "tensorflow.experimental.numpy.matmul": {
        "short name": "matmul",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.max": {
        "short name": "max",
        "parameters": {
            "a": null,
            "axis": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.maximum": {
        "short name": "maximum",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.mean": {
        "short name": "mean",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None",
            "out": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.meshgrid": {
        "short name": "meshgrid",
        "parameters": {
            "*xi": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.min": {
        "short name": "min",
        "parameters": {
            "a": null,
            "axis": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.minimum": {
        "short name": "minimum",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.mod": {
        "short name": "mod",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.moveaxis": {
        "short name": "moveaxis",
        "parameters": {
            "a": null,
            "source": null,
            "destination": null
        }
    },
    "tensorflow.experimental.numpy.multiply": {
        "short name": "multiply",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.nanmean": {
        "short name": "nanmean",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.nanprod": {
        "short name": "nanprod",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None",
            "keepdims": "False"
        }
    },
    "tensorflow.experimental.numpy.nansum": {
        "short name": "nansum",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None",
            "keepdims": "False"
        }
    },
    "tensorflow.experimental.numpy.ndim": {
        "short name": "ndim",
        "parameters": {
            "a": null
        }
    },
    "tensorflow.experimental.numpy.negative": {
        "short name": "negative",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.nextafter": {
        "short name": "nextafter",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.nonzero": {
        "short name": "nonzero",
        "parameters": {
            "a": null
        }
    },
    "tensorflow.experimental.numpy.not_equal": {
        "short name": "not_equal",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.ones": {
        "short name": "ones",
        "parameters": {
            "shape": null,
            "dtype": "float"
        }
    },
    "tensorflow.experimental.numpy.ones_like": {
        "short name": "ones_like",
        "parameters": {
            "a": null,
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.outer": {
        "short name": "outer",
        "parameters": {
            "a": null,
            "b": null
        }
    },
    "tensorflow.experimental.numpy.pad": {
        "short name": "pad",
        "parameters": {
            "array": null,
            "pad_width": null,
            "mode": null,
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.polyval": {
        "short name": "polyval",
        "parameters": {
            "p": null,
            "x": null
        }
    },
    "tensorflow.experimental.numpy.positive": {
        "short name": "positive",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.power": {
        "short name": "power",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.prod": {
        "short name": "prod",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.promote_types": {
        "short name": "promote_types",
        "parameters": {
            "type1": null,
            "type2": null
        }
    },
    "tensorflow.experimental.numpy.ptp": {
        "short name": "ptp",
        "parameters": {
            "a": null,
            "axis": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.rad2deg": {
        "short name": "rad2deg",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.ravel": {
        "short name": "ravel",
        "parameters": {
            "a": null
        }
    },
    "tensorflow.experimental.numpy.real": {
        "short name": "real",
        "parameters": {
            "val": null
        }
    },
    "tensorflow.experimental.numpy.reciprocal": {
        "short name": "reciprocal",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.remainder": {
        "short name": "remainder",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.repeat": {
        "short name": "repeat",
        "parameters": {
            "a": null,
            "repeats": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.reshape": {
        "short name": "reshape",
        "parameters": {
            "a": null,
            "newshape": null,
            "order": "'C'"
        }
    },
    "tensorflow.experimental.numpy.result_type": {
        "short name": "result_type",
        "parameters": {
            "*arrays_and_dtypes": null
        }
    },
    "tensorflow.experimental.numpy.roll": {
        "short name": "roll",
        "parameters": {
            "a": null,
            "shift": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.rot90": {
        "short name": "rot90",
        "parameters": {
            "m": null,
            "k": "1",
            "axes": "(0, 1)"
        }
    },
    "tensorflow.experimental.numpy.round": {
        "short name": "round",
        "parameters": {
            "a": null,
            "decimals": "0"
        }
    },
    "tensorflow.experimental.numpy.select": {
        "short name": "select",
        "parameters": {
            "condlist": null,
            "choicelist": null,
            "default": "0"
        }
    },
    "tensorflow.experimental.numpy.shape": {
        "short name": "shape",
        "parameters": {
            "a": null
        }
    },
    "tensorflow.experimental.numpy.sign": {
        "short name": "sign",
        "parameters": {
            "x": null,
            "out": "None",
            "where": "None",
            "**kwargs": null
        }
    },
    "tensorflow.experimental.numpy.signbit": {
        "short name": "signbit",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.sin": {
        "short name": "sin",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.sinc": {
        "short name": "sinc",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.sinh": {
        "short name": "sinh",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.size": {
        "short name": "size",
        "parameters": {
            "x": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.sort": {
        "short name": "sort",
        "parameters": {
            "a": null,
            "axis": "-1",
            "kind": "'quicksort'",
            "order": "None"
        }
    },
    "tensorflow.experimental.numpy.split": {
        "short name": "split",
        "parameters": {
            "ary": null,
            "indices_or_sections": null,
            "axis": "0"
        }
    },
    "tensorflow.experimental.numpy.sqrt": {
        "short name": "sqrt",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.square": {
        "short name": "square",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.squeeze": {
        "short name": "squeeze",
        "parameters": {
            "a": null,
            "axis": "None"
        }
    },
    "tensorflow.experimental.numpy.stack": {
        "short name": "stack",
        "parameters": {
            "arrays": null,
            "axis": "0"
        }
    },
    "tensorflow.experimental.numpy.std": {
        "short name": "std",
        "parameters": {
            "a": null,
            "axis": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.subtract": {
        "short name": "subtract",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.sum": {
        "short name": "sum",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.swapaxes": {
        "short name": "swapaxes",
        "parameters": {
            "a": null,
            "axis1": null,
            "axis2": null
        }
    },
    "tensorflow.experimental.numpy.take": {
        "short name": "take",
        "parameters": {
            "a": null,
            "indices": null,
            "axis": "None",
            "out": "None",
            "mode": "'clip'"
        }
    },
    "tensorflow.experimental.numpy.take_along_axis": {
        "short name": "take_along_axis",
        "parameters": {
            "arr": null,
            "indices": null,
            "axis": null
        }
    },
    "tensorflow.experimental.numpy.tan": {
        "short name": "tan",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.tanh": {
        "short name": "tanh",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.experimental.numpy.tensordot": {
        "short name": "tensordot",
        "parameters": {
            "a": null,
            "b": null,
            "axes": "2"
        }
    },
    "tensorflow.experimental.numpy.tile": {
        "short name": "tile",
        "parameters": {
            "a": null,
            "reps": null
        }
    },
    "tensorflow.experimental.numpy.trace": {
        "short name": "trace",
        "parameters": {
            "a": null,
            "offset": "0",
            "axis1": "0",
            "axis2": "1",
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.transpose": {
        "short name": "transpose",
        "parameters": {
            "a": null,
            "axes": "None"
        }
    },
    "tensorflow.experimental.numpy.tri": {
        "short name": "tri",
        "parameters": {
            "N": null,
            "M": "None",
            "k": "0",
            "dtype": "None"
        }
    },
    "tensorflow.experimental.numpy.tril": {
        "short name": "tril",
        "parameters": {
            "m": null,
            "k": "0"
        }
    },
    "tensorflow.experimental.numpy.triu": {
        "short name": "triu",
        "parameters": {
            "m": null,
            "k": "0"
        }
    },
    "tensorflow.experimental.numpy.true_divide": {
        "short name": "true_divide",
        "parameters": {
            "x1": null,
            "x2": null
        }
    },
    "tensorflow.experimental.numpy.vander": {
        "short name": "vander",
        "parameters": {
            "x": null,
            "N": "None",
            "increasing": "False"
        }
    },
    "tensorflow.experimental.numpy.var": {
        "short name": "var",
        "parameters": {
            "a": null,
            "axis": "None",
            "dtype": "None",
            "out": "None",
            "ddof": "0",
            "keepdims": "None"
        }
    },
    "tensorflow.experimental.numpy.vdot": {
        "short name": "vdot",
        "parameters": {
            "a": null,
            "b": null
        }
    },
    "tensorflow.experimental.numpy.vsplit": {
        "short name": "vsplit",
        "parameters": {
            "ary": null,
            "indices_or_sections": null
        }
    },
    "tensorflow.experimental.numpy.vstack": {
        "short name": "vstack",
        "parameters": {
            "tup": null
        }
    },
    "tensorflow.experimental.numpy.where": {
        "short name": "where",
        "parameters": {
            "condition": null,
            "x": "None",
            "y": "None"
        }
    },
    "tensorflow.experimental.numpy.zeros": {
        "short name": "zeros",
        "parameters": {
            "shape": null,
            "dtype": "float"
        }
    },
    "tensorflow.experimental.numpy.zeros_like": {
        "short name": "zeros_like",
        "parameters": {
            "a": null,
            "dtype": "None"
        }
    },
    "tensorflow.experimental.tensorrt.ConversionParams": {
        "short name": "ConversionParams",
        "parameters": {
            "max_workspace_size_bytes": "DEFAULT_TRT_MAX_WORKSPACE_SIZE_BYTES",
            "precision_mode": "TrtPrecisionMode.FP32",
            "minimum_segment_size": "3",
            "maximum_cached_engines": "1",
            "use_calibration": "True",
            "allow_build_at_runtime": "True"
        }
    },
    "tensorflow.experimental.tensorrt.Converter": {
        "short name": "Converter",
        "parameters": {
            "input_saved_model_dir": "None",
            "input_saved_model_tags": "None",
            "input_saved_model_signature_key": "None",
            "use_dynamic_shape": "None",
            "dynamic_shape_profile_strategy": "None",
            "max_workspace_size_bytes": "DEFAULT_TRT_MAX_WORKSPACE_SIZE_BYTES",
            "precision_mode": "TrtPrecisionMode.FP32",
            "minimum_segment_size": "3",
            "maximum_cached_engines": "1",
            "use_calibration": "True",
            "allow_build_at_runtime": "True",
            "conversion_params": "None"
        }
    },
    "tensorflow.io.gfile.GFile": {
        "short name": "GFile",
        "parameters": {
            "name": null,
            "mode": "'r'"
        }
    },
    "tensorflow.io.gfile.copy": {
        "short name": "copy",
        "parameters": {
            "src": null,
            "dst": null,
            "overwrite": "False"
        }
    },
    "tensorflow.io.gfile.exists": {
        "short name": "exists",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.get_registered_schemes": {
        "short name": "get_registered_schemes",
        "parameters": {}
    },
    "tensorflow.io.gfile.glob": {
        "short name": "glob",
        "parameters": {
            "pattern": null
        }
    },
    "tensorflow.io.gfile.isdir": {
        "short name": "isdir",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.join": {
        "short name": "join",
        "parameters": {
            "path": null,
            "*paths": null
        }
    },
    "tensorflow.io.gfile.listdir": {
        "short name": "listdir",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.makedirs": {
        "short name": "makedirs",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.mkdir": {
        "short name": "mkdir",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.remove": {
        "short name": "remove",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.rename": {
        "short name": "rename",
        "parameters": {
            "src": null,
            "dst": null,
            "overwrite": "False"
        }
    },
    "tensorflow.io.gfile.rmtree": {
        "short name": "rmtree",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.stat": {
        "short name": "stat",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.io.gfile.walk": {
        "short name": "walk",
        "parameters": {
            "top": null,
            "topdown": "True",
            "onerror": "None"
        }
    },
    "tensorflow.keras.activations.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "name": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.activations.elu": {
        "short name": "elu",
        "parameters": {
            "x": null,
            "alpha": "1.0"
        }
    },
    "tensorflow.keras.activations.exponential": {
        "short name": "exponential",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.gelu": {
        "short name": "gelu",
        "parameters": {
            "x": null,
            "approximate": "False"
        }
    },
    "tensorflow.keras.activations.get": {
        "short name": "get",
        "parameters": {
            "identifier": null
        }
    },
    "tensorflow.keras.activations.hard_sigmoid": {
        "short name": "hard_sigmoid",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.linear": {
        "short name": "linear",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.relu": {
        "short name": "relu",
        "parameters": {
            "x": null,
            "alpha": "0.0",
            "max_value": "None",
            "threshold": "0.0"
        }
    },
    "tensorflow.keras.activations.selu": {
        "short name": "selu",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.serialize": {
        "short name": "serialize",
        "parameters": {
            "activation": null
        }
    },
    "tensorflow.keras.activations.sigmoid": {
        "short name": "sigmoid",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.softmax": {
        "short name": "softmax",
        "parameters": {
            "x": null,
            "axis": "-1"
        }
    },
    "tensorflow.keras.activations.softplus": {
        "short name": "softplus",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.softsign": {
        "short name": "softsign",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.swish": {
        "short name": "swish",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.activations.tanh": {
        "short name": "tanh",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.applications.densenet.DenseNet121": {
        "short name": "DenseNet121",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.densenet.DenseNet169": {
        "short name": "DenseNet169",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.densenet.DenseNet201": {
        "short name": "DenseNet201",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB0": {
        "short name": "EfficientNetB0",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB1": {
        "short name": "EfficientNetB1",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB2": {
        "short name": "EfficientNetB2",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB3": {
        "short name": "EfficientNetB3",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB4": {
        "short name": "EfficientNetB4",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB5": {
        "short name": "EfficientNetB5",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB6": {
        "short name": "EfficientNetB6",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet.EfficientNetB7": {
        "short name": "EfficientNetB7",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.EfficientNetV2B0": {
        "short name": "EfficientNetV2B0",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.EfficientNetV2B1": {
        "short name": "EfficientNetV2B1",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.EfficientNetV2B2": {
        "short name": "EfficientNetV2B2",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.EfficientNetV2B3": {
        "short name": "EfficientNetV2B3",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.EfficientNetV2L": {
        "short name": "EfficientNetV2L",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.EfficientNetV2M": {
        "short name": "EfficientNetV2M",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.EfficientNetV2S": {
        "short name": "EfficientNetV2S",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.inception_resnet_v2.InceptionResNetV2": {
        "short name": "InceptionResNetV2",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.inception_v3.InceptionV3": {
        "short name": "InceptionV3",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.mobilenet.MobileNet": {
        "short name": "MobileNet",
        "parameters": {
            "input_shape": "None",
            "alpha": "1.0",
            "depth_multiplier": "1",
            "dropout": "0.001",
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.mobilenet_v2.MobileNetV2": {
        "short name": "MobileNetV2",
        "parameters": {
            "input_shape": "None",
            "alpha": "1.0",
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.MobileNetV3Large": {
        "short name": "MobileNetV3Large",
        "parameters": {
            "input_shape": "None",
            "alpha": "1.0",
            "minimalistic": "False",
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "classes": "1000",
            "pooling": "None",
            "dropout_rate": "0.2",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.MobileNetV3Small": {
        "short name": "MobileNetV3Small",
        "parameters": {
            "input_shape": "None",
            "alpha": "1.0",
            "minimalistic": "False",
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "classes": "1000",
            "pooling": "None",
            "dropout_rate": "0.2",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.nasnet.NASNetLarge": {
        "short name": "NASNetLarge",
        "parameters": {
            "input_shape": "None",
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.nasnet.NASNetMobile": {
        "short name": "NASNetMobile",
        "parameters": {
            "input_shape": "None",
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX002": {
        "short name": "RegNetX002",
        "parameters": {
            "model_name": "'regnetx002'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX004": {
        "short name": "RegNetX004",
        "parameters": {
            "model_name": "'regnetx004'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX006": {
        "short name": "RegNetX006",
        "parameters": {
            "model_name": "'regnetx006'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX008": {
        "short name": "RegNetX008",
        "parameters": {
            "model_name": "'regnetx008'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX016": {
        "short name": "RegNetX016",
        "parameters": {
            "model_name": "'regnetx016'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX032": {
        "short name": "RegNetX032",
        "parameters": {
            "model_name": "'regnetx032'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX040": {
        "short name": "RegNetX040",
        "parameters": {
            "model_name": "'regnetx040'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX064": {
        "short name": "RegNetX064",
        "parameters": {
            "model_name": "'regnetx064'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX080": {
        "short name": "RegNetX080",
        "parameters": {
            "model_name": "'regnetx080'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX120": {
        "short name": "RegNetX120",
        "parameters": {
            "model_name": "'regnetx120'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX160": {
        "short name": "RegNetX160",
        "parameters": {
            "model_name": "'regnetx160'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetX320": {
        "short name": "RegNetX320",
        "parameters": {
            "model_name": "'regnetx320'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY002": {
        "short name": "RegNetY002",
        "parameters": {
            "model_name": "'regnety002'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY004": {
        "short name": "RegNetY004",
        "parameters": {
            "model_name": "'regnety004'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY006": {
        "short name": "RegNetY006",
        "parameters": {
            "model_name": "'regnety006'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY008": {
        "short name": "RegNetY008",
        "parameters": {
            "model_name": "'regnety008'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY016": {
        "short name": "RegNetY016",
        "parameters": {
            "model_name": "'regnety016'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY032": {
        "short name": "RegNetY032",
        "parameters": {
            "model_name": "'regnety032'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY040": {
        "short name": "RegNetY040",
        "parameters": {
            "model_name": "'regnety040'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY064": {
        "short name": "RegNetY064",
        "parameters": {
            "model_name": "'regnety064'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY080": {
        "short name": "RegNetY080",
        "parameters": {
            "model_name": "'regnety080'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY120": {
        "short name": "RegNetY120",
        "parameters": {
            "model_name": "'regnety120'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY160": {
        "short name": "RegNetY160",
        "parameters": {
            "model_name": "'regnety160'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.regnet.RegNetY320": {
        "short name": "RegNetY320",
        "parameters": {
            "model_name": "'regnety320'",
            "include_top": "True",
            "include_preprocessing": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.resnet.ResNet101": {
        "short name": "ResNet101",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.resnet_v2.ResNet101V2": {
        "short name": "ResNet101V2",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.resnet.ResNet152": {
        "short name": "ResNet152",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.resnet_v2.ResNet152V2": {
        "short name": "ResNet152V2",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.resnet50.ResNet50": {
        "short name": "ResNet50",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "**kwargs": null
        }
    },
    "tensorflow.keras.applications.resnet_v2.ResNet50V2": {
        "short name": "ResNet50V2",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.resnet_rs.ResNetRS101": {
        "short name": "ResNetRS101",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "classes": "1000",
            "input_shape": "None",
            "input_tensor": "None",
            "pooling": "None",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.resnet_rs.ResNetRS152": {
        "short name": "ResNetRS152",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "classes": "1000",
            "input_shape": "None",
            "input_tensor": "None",
            "pooling": "None",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.resnet_rs.ResNetRS200": {
        "short name": "ResNetRS200",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "classes": "1000",
            "input_shape": "None",
            "input_tensor": "None",
            "pooling": "None",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.resnet_rs.ResNetRS270": {
        "short name": "ResNetRS270",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "classes": "1000",
            "input_shape": "None",
            "input_tensor": "None",
            "pooling": "None",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.resnet_rs.ResNetRS350": {
        "short name": "ResNetRS350",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "classes": "1000",
            "input_shape": "None",
            "input_tensor": "None",
            "pooling": "None",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.resnet_rs.ResNetRS420": {
        "short name": "ResNetRS420",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "classes": "1000",
            "input_shape": "None",
            "input_tensor": "None",
            "pooling": "None",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.resnet_rs.ResNetRS50": {
        "short name": "ResNetRS50",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "classes": "1000",
            "input_shape": "None",
            "input_tensor": "None",
            "pooling": "None",
            "classifier_activation": "'softmax'",
            "include_preprocessing": "True"
        }
    },
    "tensorflow.keras.applications.vgg16.VGG16": {
        "short name": "VGG16",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.vgg19.VGG19": {
        "short name": "VGG19",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.applications.xception.Xception": {
        "short name": "Xception",
        "parameters": {
            "include_top": "True",
            "weights": "'imagenet'",
            "input_tensor": "None",
            "input_shape": "None",
            "pooling": "None",
            "classes": "1000",
            "classifier_activation": "'softmax'"
        }
    },
    "tensorflow.keras.backend.clear_session": {
        "short name": "clear_session",
        "parameters": {}
    },
    "tensorflow.keras.backend.epsilon": {
        "short name": "epsilon",
        "parameters": {}
    },
    "tensorflow.keras.backend.floatx": {
        "short name": "floatx",
        "parameters": {}
    },
    "tensorflow.keras.backend.get_uid": {
        "short name": "get_uid",
        "parameters": {
            "prefix": "''"
        }
    },
    "tensorflow.keras.backend.image_data_format": {
        "short name": "image_data_format",
        "parameters": {}
    },
    "tensorflow.keras.backend.is_keras_tensor": {
        "short name": "is_keras_tensor",
        "parameters": {
            "x": null
        }
    },
    "tensorflow.keras.backend.reset_uids": {
        "short name": "reset_uids",
        "parameters": {}
    },
    "tensorflow.keras.backend.rnn": {
        "short name": "rnn",
        "parameters": {
            "step_function": null,
            "inputs": null,
            "initial_states": null,
            "go_backwards": "False",
            "mask": "None",
            "constants": "None",
            "unroll": "False",
            "input_length": "None",
            "time_major": "False",
            "zero_output_for_mask": "False",
            "return_all_outputs": "True"
        }
    },
    "tensorflow.keras.backend.set_epsilon": {
        "short name": "set_epsilon",
        "parameters": {
            "value": null
        }
    },
    "tensorflow.keras.backend.set_floatx": {
        "short name": "set_floatx",
        "parameters": {
            "value": null
        }
    },
    "tensorflow.keras.backend.set_image_data_format": {
        "short name": "set_image_data_format",
        "parameters": {
            "data_format": null
        }
    },
    "tensorflow.keras.callbacks.BackupAndRestore": {
        "short name": "BackupAndRestore",
        "parameters": {
            "backup_dir": null
        }
    },
    "tensorflow.keras.callbacks.BaseLogger": {
        "short name": "BaseLogger",
        "parameters": {
            "stateful_metrics": "None"
        }
    },
    "tensorflow.keras.callbacks.CSVLogger": {
        "short name": "CSVLogger",
        "parameters": {
            "filename": null,
            "separator": "','",
            "append": "False"
        }
    },
    "tensorflow.keras.callbacks.Callback": {
        "short name": "Callback",
        "parameters": {}
    },
    "tensorflow.keras.callbacks.CallbackList": {
        "short name": "CallbackList",
        "parameters": {
            "callbacks": "None",
            "add_history": "False",
            "add_progbar": "False",
            "model": "None",
            "null": "params"
        }
    },
    "tensorflow.keras.callbacks.EarlyStopping": {
        "short name": "EarlyStopping",
        "parameters": {
            "monitor": "'val_loss'",
            "min_delta": "0",
            "patience": "0",
            "verbose": "0",
            "mode": "'auto'",
            "baseline": "None",
            "restore_best_weights": "False"
        }
    },
    "tensorflow.keras.callbacks.History": {
        "short name": "History",
        "parameters": {}
    },
    "tensorflow.keras.callbacks.LambdaCallback": {
        "short name": "LambdaCallback",
        "parameters": {
            "on_epoch_begin": "None",
            "on_epoch_end": "None",
            "on_batch_begin": "None",
            "on_batch_end": "None",
            "on_train_begin": "None",
            "on_train_end": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.LearningRateScheduler": {
        "short name": "LearningRateScheduler",
        "parameters": {
            "schedule": null,
            "verbose": "0"
        }
    },
    "tensorflow.keras.callbacks.ModelCheckpoint": {
        "short name": "ModelCheckpoint",
        "parameters": {
            "filepath": null,
            "monitor": "'val_loss'",
            "verbose": "0",
            "save_best_only": "False",
            "save_weights_only": "False",
            "mode": "'auto'",
            "save_freq": "'epoch'",
            "options": "None",
            "initial_value_threshold": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.ProgbarLogger": {
        "short name": "ProgbarLogger",
        "parameters": {
            "count_mode": "'samples'",
            "stateful_metrics": "None"
        }
    },
    "tensorflow.keras.callbacks.ReduceLROnPlateau": {
        "short name": "ReduceLROnPlateau",
        "parameters": {
            "monitor": "'val_loss'",
            "factor": "0.1",
            "patience": "10",
            "verbose": "0",
            "mode": "'auto'",
            "min_delta": "0.0001",
            "cooldown": "0",
            "min_lr": "0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.RemoteMonitor": {
        "short name": "RemoteMonitor",
        "parameters": {
            "root": "'http://localhost:9000'",
            "path": "'/publish/epoch/end/'",
            "field": "'data'",
            "headers": "None",
            "send_as_json": "False"
        }
    },
    "tensorflow.keras.callbacks.TensorBoard": {
        "short name": "TensorBoard",
        "parameters": {
            "log_dir": "'logs'",
            "histogram_freq": "0",
            "write_graph": "True",
            "write_images": "False",
            "write_steps_per_second": "False",
            "update_freq": "'epoch'",
            "profile_batch": "0",
            "embeddings_freq": "0",
            "embeddings_metadata": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.callbacks.TerminateOnNaN": {
        "short name": "TerminateOnNaN",
        "parameters": {}
    },
    "tensorflow.keras.constraints.Constraint": {
        "short name": "Constraint",
        "parameters": {}
    },
    "tensorflow.keras.constraints.MaxNorm": {
        "short name": "MaxNorm",
        "parameters": {
            "max_value": "2",
            "axis": "0"
        }
    },
    "tensorflow.keras.constraints.MinMaxNorm": {
        "short name": "MinMaxNorm",
        "parameters": {
            "min_value": "0.0",
            "max_value": "1.0",
            "rate": "1.0",
            "axis": "0"
        }
    },
    "tensorflow.keras.constraints.NonNeg": {
        "short name": "NonNeg",
        "parameters": {}
    },
    "tensorflow.keras.constraints.RadialConstraint": {
        "short name": "RadialConstraint",
        "parameters": {}
    },
    "tensorflow.keras.constraints.UnitNorm": {
        "short name": "UnitNorm",
        "parameters": {
            "axis": "0"
        }
    },
    "tensorflow.keras.constraints.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.constraints.get": {
        "short name": "get",
        "parameters": {
            "identifier": null
        }
    },
    "tensorflow.keras.constraints.serialize": {
        "short name": "serialize",
        "parameters": {
            "constraint": null
        }
    },
    "tensorflow.keras.estimator.model_to_estimator": {
        "short name": "model_to_estimator",
        "parameters": {
            "keras_model": "None",
            "keras_model_path": "None",
            "custom_objects": "None",
            "model_dir": "None",
            "config": "None",
            "checkpoint_format": "'checkpoint'",
            "metric_names_map": "None",
            "export_outputs": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.CosineDecay": {
        "short name": "CosineDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "alpha": "0.0",
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.CosineDecayRestarts": {
        "short name": "CosineDecayRestarts",
        "parameters": {
            "initial_learning_rate": null,
            "first_decay_steps": null,
            "t_mul": "2.0",
            "m_mul": "1.0",
            "alpha": "0.0",
            "name": "None"
        }
    },
    "tensorflow.keras.experimental.LinearModel": {
        "short name": "LinearModel",
        "parameters": {
            "units": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'zeros'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.experimental.SequenceFeatures": {
        "short name": "SequenceFeatures",
        "parameters": {
            "feature_columns": null,
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.experimental.SidecarEvaluator": {
        "short name": "SidecarEvaluator",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.experimental.WideDeepModel": {
        "short name": "WideDeepModel",
        "parameters": {
            "linear_model": null,
            "dnn_model": null,
            "activation": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.initializers.Constant": {
        "short name": "Constant",
        "parameters": {
            "value": "0"
        }
    },
    "tensorflow.keras.initializers.GlorotNormal": {
        "short name": "GlorotNormal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.GlorotUniform": {
        "short name": "GlorotUniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.HeNormal": {
        "short name": "HeNormal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.HeUniform": {
        "short name": "HeUniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.Identity": {
        "short name": "Identity",
        "parameters": {
            "gain": "1.0"
        }
    },
    "tensorflow.keras.initializers.Initializer": {
        "short name": "Initializer",
        "parameters": {}
    },
    "tensorflow.keras.initializers.LecunNormal": {
        "short name": "LecunNormal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.LecunUniform": {
        "short name": "LecunUniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.Ones": {
        "short name": "Ones",
        "parameters": {}
    },
    "tensorflow.keras.initializers.Orthogonal": {
        "short name": "Orthogonal",
        "parameters": {
            "gain": "1.0",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.RandomNormal": {
        "short name": "RandomNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.RandomUniform": {
        "short name": "RandomUniform",
        "parameters": {
            "minval": "-0.05",
            "maxval": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.TruncatedNormal": {
        "short name": "TruncatedNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.VarianceScaling": {
        "short name": "VarianceScaling",
        "parameters": {
            "scale": "1.0",
            "mode": "'fan_in'",
            "distribution": "'truncated_normal'",
            "seed": "None"
        }
    },
    "tensorflow.keras.initializers.Zeros": {
        "short name": "Zeros",
        "parameters": {}
    },
    "tensorflow.keras.initializers.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.initializers.get": {
        "short name": "get",
        "parameters": {
            "identifier": null
        }
    },
    "tensorflow.keras.initializers.serialize": {
        "short name": "serialize",
        "parameters": {
            "initializer": null
        }
    },
    "tensorflow.keras.layers.AbstractRNNCell": {
        "short name": "AbstractRNNCell",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "dynamic": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Activation": {
        "short name": "Activation",
        "parameters": {
            "activation": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ActivityRegularization": {
        "short name": "ActivityRegularization",
        "parameters": {
            "l1": "0.0",
            "l2": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Add": {
        "short name": "Add",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AdditiveAttention": {
        "short name": "AdditiveAttention",
        "parameters": {
            "use_scale": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AlphaDropout": {
        "short name": "AlphaDropout",
        "parameters": {
            "rate": null,
            "noise_shape": "None",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Attention": {
        "short name": "Attention",
        "parameters": {
            "use_scale": "False",
            "score_mode": "'dot'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Average": {
        "short name": "Average",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AveragePooling1D": {
        "short name": "AveragePooling1D",
        "parameters": {
            "pool_size": "2",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AveragePooling2D": {
        "short name": "AveragePooling2D",
        "parameters": {
            "pool_size": "(2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.AveragePooling3D": {
        "short name": "AveragePooling3D",
        "parameters": {
            "pool_size": "(2, 2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.BatchNormalization": {
        "short name": "BatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "moving_mean_initializer": "'zeros'",
            "moving_variance_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Bidirectional": {
        "short name": "Bidirectional",
        "parameters": {
            "layer": null,
            "merge_mode": "'concat'",
            "weights": "None",
            "backward_layer": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.CategoryEncoding": {
        "short name": "CategoryEncoding",
        "parameters": {
            "num_tokens": "None",
            "output_mode": "'multi_hot'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.CenterCrop": {
        "short name": "CenterCrop",
        "parameters": {
            "height": null,
            "width": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Concatenate": {
        "short name": "Concatenate",
        "parameters": {
            "axis": "-1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv1D": {
        "short name": "Conv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "groups": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv1DTranspose": {
        "short name": "Conv1DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "output_padding": "None",
            "data_format": "None",
            "dilation_rate": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv2D": {
        "short name": "Conv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "groups": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv2DTranspose": {
        "short name": "Conv2DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "output_padding": "None",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv3D": {
        "short name": "Conv3D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1, 1)",
            "groups": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Conv3DTranspose": {
        "short name": "Conv3DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "output_padding": "None",
            "data_format": "None",
            "dilation_rate": "(1, 1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ConvLSTM1D": {
        "short name": "ConvLSTM1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "1",
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ConvLSTM2D": {
        "short name": "ConvLSTM2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ConvLSTM3D": {
        "short name": "ConvLSTM3D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1, 1)",
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Cropping1D": {
        "short name": "Cropping1D",
        "parameters": {
            "cropping": "(1, 1)",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Cropping2D": {
        "short name": "Cropping2D",
        "parameters": {
            "cropping": "((0, 0), (0, 0))",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Cropping3D": {
        "short name": "Cropping3D",
        "parameters": {
            "cropping": "((1, 1), (1, 1), (1, 1))",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Dense": {
        "short name": "Dense",
        "parameters": {
            "units": null,
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.DenseFeatures": {
        "short name": "DenseFeatures",
        "parameters": {
            "feature_columns": null,
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.DepthwiseConv1D": {
        "short name": "DepthwiseConv1D",
        "parameters": {
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "depth_multiplier": "1",
            "data_format": "None",
            "dilation_rate": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.DepthwiseConv2D": {
        "short name": "DepthwiseConv2D",
        "parameters": {
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "depth_multiplier": "1",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Discretization": {
        "short name": "Discretization",
        "parameters": {
            "bin_boundaries": "None",
            "num_bins": "None",
            "epsilon": "0.01",
            "output_mode": "'int'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Dot": {
        "short name": "Dot",
        "parameters": {
            "axes": null,
            "normalize": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Dropout": {
        "short name": "Dropout",
        "parameters": {
            "rate": null,
            "noise_shape": "None",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ELU": {
        "short name": "ELU",
        "parameters": {
            "alpha": "1.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Embedding": {
        "short name": "Embedding",
        "parameters": {
            "input_dim": null,
            "output_dim": null,
            "embeddings_initializer": "'uniform'",
            "embeddings_regularizer": "None",
            "activity_regularizer": "None",
            "embeddings_constraint": "None",
            "mask_zero": "False",
            "input_length": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Flatten": {
        "short name": "Flatten",
        "parameters": {
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GRU": {
        "short name": "GRU",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "time_major": "False",
            "reset_after": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GRUCell": {
        "short name": "GRUCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "reset_after": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GaussianDropout": {
        "short name": "GaussianDropout",
        "parameters": {
            "rate": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GaussianNoise": {
        "short name": "GaussianNoise",
        "parameters": {
            "stddev": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalAveragePooling1D": {
        "short name": "GlobalAveragePooling1D",
        "parameters": {
            "data_format": "'channels_last'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalAveragePooling2D": {
        "short name": "GlobalAveragePooling2D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalAveragePooling3D": {
        "short name": "GlobalAveragePooling3D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalMaxPool1D": {
        "short name": "GlobalMaxPool1D",
        "parameters": {
            "data_format": "'channels_last'",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalMaxPool2D": {
        "short name": "GlobalMaxPool2D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.GlobalMaxPool3D": {
        "short name": "GlobalMaxPool3D",
        "parameters": {
            "data_format": "None",
            "keepdims": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Hashing": {
        "short name": "Hashing",
        "parameters": {
            "num_bins": null,
            "mask_value": "None",
            "salt": "None",
            "output_mode": "'int'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.InputLayer": {
        "short name": "InputLayer",
        "parameters": {
            "input_shape": "None",
            "batch_size": "None",
            "dtype": "None",
            "input_tensor": "None",
            "sparse": "None",
            "name": "None",
            "ragged": "None",
            "type_spec": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.InputSpec": {
        "short name": "InputSpec",
        "parameters": {
            "dtype": "None",
            "shape": "None",
            "ndim": "None",
            "max_ndim": "None",
            "min_ndim": "None",
            "axes": "None",
            "allow_last_axis_squeeze": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.layers.IntegerLookup": {
        "short name": "IntegerLookup",
        "parameters": {
            "max_tokens": "None",
            "num_oov_indices": "1",
            "mask_token": "None",
            "oov_token": "-1",
            "vocabulary": "None",
            "vocabulary_dtype": "'int64'",
            "idf_weights": "None",
            "invert": "False",
            "output_mode": "'int'",
            "sparse": "False",
            "pad_to_max_tokens": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LSTM": {
        "short name": "LSTM",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "time_major": "False",
            "unroll": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LSTMCell": {
        "short name": "LSTMCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Lambda": {
        "short name": "Lambda",
        "parameters": {
            "function": null,
            "output_shape": "None",
            "mask": "None",
            "arguments": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Layer": {
        "short name": "Layer",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "dynamic": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LayerNormalization": {
        "short name": "LayerNormalization",
        "parameters": {
            "axis": "-1",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LeakyReLU": {
        "short name": "LeakyReLU",
        "parameters": {
            "alpha": "0.3",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LocallyConnected1D": {
        "short name": "LocallyConnected1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "None",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "implementation": "1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.LocallyConnected2D": {
        "short name": "LocallyConnected2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "implementation": "1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Masking": {
        "short name": "Masking",
        "parameters": {
            "mask_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MaxPool1D": {
        "short name": "MaxPool1D",
        "parameters": {
            "pool_size": "2",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MaxPool2D": {
        "short name": "MaxPool2D",
        "parameters": {
            "pool_size": "(2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MaxPool3D": {
        "short name": "MaxPool3D",
        "parameters": {
            "pool_size": "(2, 2, 2)",
            "strides": "None",
            "padding": "'valid'",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Maximum": {
        "short name": "Maximum",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Minimum": {
        "short name": "Minimum",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.MultiHeadAttention": {
        "short name": "MultiHeadAttention",
        "parameters": {
            "num_heads": null,
            "key_dim": null,
            "value_dim": "None",
            "dropout": "0.0",
            "use_bias": "True",
            "output_shape": "None",
            "attention_axes": "None",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Multiply": {
        "short name": "Multiply",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Normalization": {
        "short name": "Normalization",
        "parameters": {
            "axis": "-1",
            "mean": "None",
            "variance": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.PReLU": {
        "short name": "PReLU",
        "parameters": {
            "alpha_initializer": "'zeros'",
            "alpha_regularizer": "None",
            "alpha_constraint": "None",
            "shared_axes": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Permute": {
        "short name": "Permute",
        "parameters": {
            "dims": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RNN": {
        "short name": "RNN",
        "parameters": {
            "cell": null,
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "time_major": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomBrightness": {
        "short name": "RandomBrightness",
        "parameters": {
            "factor": null,
            "value_range": "(0, 255)",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomContrast": {
        "short name": "RandomContrast",
        "parameters": {
            "factor": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomCrop": {
        "short name": "RandomCrop",
        "parameters": {
            "height": null,
            "width": null,
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomFlip": {
        "short name": "RandomFlip",
        "parameters": {
            "mode": "HORIZONTAL_AND_VERTICAL",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomHeight": {
        "short name": "RandomHeight",
        "parameters": {
            "factor": null,
            "interpolation": "'bilinear'",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomRotation": {
        "short name": "RandomRotation",
        "parameters": {
            "factor": null,
            "fill_mode": "'reflect'",
            "interpolation": "'bilinear'",
            "seed": "None",
            "fill_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomTranslation": {
        "short name": "RandomTranslation",
        "parameters": {
            "height_factor": null,
            "width_factor": null,
            "fill_mode": "'reflect'",
            "interpolation": "'bilinear'",
            "seed": "None",
            "fill_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomWidth": {
        "short name": "RandomWidth",
        "parameters": {
            "factor": null,
            "interpolation": "'bilinear'",
            "seed": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RandomZoom": {
        "short name": "RandomZoom",
        "parameters": {
            "height_factor": null,
            "width_factor": "None",
            "fill_mode": "'reflect'",
            "interpolation": "'bilinear'",
            "seed": "None",
            "fill_value": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ReLU": {
        "short name": "ReLU",
        "parameters": {
            "max_value": "None",
            "negative_slope": "0.0",
            "threshold": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.RepeatVector": {
        "short name": "RepeatVector",
        "parameters": {
            "n": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Rescaling": {
        "short name": "Rescaling",
        "parameters": {
            "scale": null,
            "offset": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Reshape": {
        "short name": "Reshape",
        "parameters": {
            "target_shape": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Resizing": {
        "short name": "Resizing",
        "parameters": {
            "height": null,
            "width": null,
            "interpolation": "'bilinear'",
            "crop_to_aspect_ratio": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SeparableConv1D": {
        "short name": "SeparableConv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "1",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "pointwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SeparableConv2D": {
        "short name": "SeparableConv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "None",
            "dilation_rate": "(1, 1)",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "'glorot_uniform'",
            "pointwise_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SimpleRNN": {
        "short name": "SimpleRNN",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SimpleRNNCell": {
        "short name": "SimpleRNNCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Softmax": {
        "short name": "Softmax",
        "parameters": {
            "axis": "-1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SpatialDropout1D": {
        "short name": "SpatialDropout1D",
        "parameters": {
            "rate": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SpatialDropout2D": {
        "short name": "SpatialDropout2D",
        "parameters": {
            "rate": null,
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.SpatialDropout3D": {
        "short name": "SpatialDropout3D",
        "parameters": {
            "rate": null,
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.StackedRNNCells": {
        "short name": "StackedRNNCells",
        "parameters": {
            "cells": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.StringLookup": {
        "short name": "StringLookup",
        "parameters": {
            "max_tokens": "None",
            "num_oov_indices": "1",
            "mask_token": "None",
            "oov_token": "'[UNK]'",
            "vocabulary": "None",
            "idf_weights": "None",
            "encoding": "None",
            "invert": "False",
            "output_mode": "'int'",
            "sparse": "False",
            "pad_to_max_tokens": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Subtract": {
        "short name": "Subtract",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.TextVectorization": {
        "short name": "TextVectorization",
        "parameters": {
            "max_tokens": "None",
            "standardize": "'lower_and_strip_punctuation'",
            "split": "'whitespace'",
            "ngrams": "None",
            "output_mode": "'int'",
            "output_sequence_length": "None",
            "pad_to_max_tokens": "False",
            "vocabulary": "None",
            "idf_weights": "None",
            "sparse": "False",
            "ragged": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ThresholdedReLU": {
        "short name": "ThresholdedReLU",
        "parameters": {
            "theta": "1.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.TimeDistributed": {
        "short name": "TimeDistributed",
        "parameters": {
            "layer": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UnitNormalization": {
        "short name": "UnitNormalization",
        "parameters": {
            "axis": "-1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UpSampling1D": {
        "short name": "UpSampling1D",
        "parameters": {
            "size": "2",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UpSampling2D": {
        "short name": "UpSampling2D",
        "parameters": {
            "size": "(2, 2)",
            "data_format": "None",
            "interpolation": "'nearest'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.UpSampling3D": {
        "short name": "UpSampling3D",
        "parameters": {
            "size": "(2, 2, 2)",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.Wrapper": {
        "short name": "Wrapper",
        "parameters": {
            "layer": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ZeroPadding1D": {
        "short name": "ZeroPadding1D",
        "parameters": {
            "padding": "1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ZeroPadding2D": {
        "short name": "ZeroPadding2D",
        "parameters": {
            "padding": "(1, 1)",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.ZeroPadding3D": {
        "short name": "ZeroPadding3D",
        "parameters": {
            "padding": "(1, 1, 1)",
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.add": {
        "short name": "add",
        "parameters": {
            "inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.average": {
        "short name": "average",
        "parameters": {
            "inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.concatenate": {
        "short name": "concatenate",
        "parameters": {
            "inputs": null,
            "axis": "-1",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.layers.dot": {
        "short name": "dot",
        "parameters": {
            "inputs": null,
            "axes": null,
            "normalize": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.maximum": {
        "short name": "maximum",
        "parameters": {
            "inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.minimum": {
        "short name": "minimum",
        "parameters": {
            "inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.multiply": {
        "short name": "multiply",
        "parameters": {
            "inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.serialize": {
        "short name": "serialize",
        "parameters": {
            "layer": null
        }
    },
    "tensorflow.keras.layers.subtract": {
        "short name": "subtract",
        "parameters": {
            "inputs": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.losses.BinaryCrossentropy": {
        "short name": "BinaryCrossentropy",
        "parameters": {
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'binary_crossentropy'"
        }
    },
    "tensorflow.keras.losses.BinaryFocalCrossentropy": {
        "short name": "BinaryFocalCrossentropy",
        "parameters": {
            "gamma": "2.0",
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'binary_focal_crossentropy'"
        }
    },
    "tensorflow.keras.losses.CategoricalCrossentropy": {
        "short name": "CategoricalCrossentropy",
        "parameters": {
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'categorical_crossentropy'"
        }
    },
    "tensorflow.keras.losses.CategoricalHinge": {
        "short name": "CategoricalHinge",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'categorical_hinge'"
        }
    },
    "tensorflow.keras.losses.CosineSimilarity": {
        "short name": "CosineSimilarity",
        "parameters": {
            "axis": "-1",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'cosine_similarity'"
        }
    },
    "tensorflow.keras.losses.Hinge": {
        "short name": "Hinge",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'hinge'"
        }
    },
    "tensorflow.keras.losses.Huber": {
        "short name": "Huber",
        "parameters": {
            "delta": "1.0",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'huber_loss'"
        }
    },
    "tensorflow.keras.losses.KLDivergence": {
        "short name": "KLDivergence",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'kl_divergence'"
        }
    },
    "tensorflow.keras.losses.LogCosh": {
        "short name": "LogCosh",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'log_cosh'"
        }
    },
    "tensorflow.keras.losses.Loss": {
        "short name": "Loss",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "None"
        }
    },
    "tensorflow.keras.losses.MeanAbsoluteError": {
        "short name": "MeanAbsoluteError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_absolute_error'"
        }
    },
    "tensorflow.keras.losses.MeanAbsolutePercentageError": {
        "short name": "MeanAbsolutePercentageError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_absolute_percentage_error'"
        }
    },
    "tensorflow.keras.losses.MeanSquaredError": {
        "short name": "MeanSquaredError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_squared_error'"
        }
    },
    "tensorflow.keras.losses.MeanSquaredLogarithmicError": {
        "short name": "MeanSquaredLogarithmicError",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'mean_squared_logarithmic_error'"
        }
    },
    "tensorflow.keras.losses.Poisson": {
        "short name": "Poisson",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'poisson'"
        }
    },
    "tensorflow.keras.losses.Reduction": {
        "short name": "Reduction",
        "parameters": {}
    },
    "tensorflow.keras.losses.SparseCategoricalCrossentropy": {
        "short name": "SparseCategoricalCrossentropy",
        "parameters": {
            "from_logits": "False",
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'sparse_categorical_crossentropy'"
        }
    },
    "tensorflow.keras.losses.SquaredHinge": {
        "short name": "SquaredHinge",
        "parameters": {
            "reduction": "losses_utils.ReductionV2.AUTO",
            "name": "'squared_hinge'"
        }
    },
    "tensorflow.keras.metrics.kl_divergence": {
        "short name": "kl_divergence",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.mean_absolute_error": {
        "short name": "mean_absolute_error",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.mean_absolute_percentage_error": {
        "short name": "mean_absolute_percentage_error",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.mean_squared_error": {
        "short name": "mean_squared_error",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.mean_squared_logarithmic_error": {
        "short name": "mean_squared_logarithmic_error",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.binary_crossentropy": {
        "short name": "binary_crossentropy",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1"
        }
    },
    "tensorflow.keras.metrics.binary_focal_crossentropy": {
        "short name": "binary_focal_crossentropy",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "gamma": "2.0",
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1"
        }
    },
    "tensorflow.keras.metrics.categorical_crossentropy": {
        "short name": "categorical_crossentropy",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "from_logits": "False",
            "label_smoothing": "0.0",
            "axis": "-1"
        }
    },
    "tensorflow.keras.losses.categorical_hinge": {
        "short name": "categorical_hinge",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.losses.cosine_similarity": {
        "short name": "cosine_similarity",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "axis": "-1"
        }
    },
    "tensorflow.keras.losses.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "name": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.losses.get": {
        "short name": "get",
        "parameters": {
            "identifier": null
        }
    },
    "tensorflow.keras.metrics.hinge": {
        "short name": "hinge",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.losses.huber": {
        "short name": "huber",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "delta": "1.0"
        }
    },
    "tensorflow.keras.losses.log_cosh": {
        "short name": "log_cosh",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.poisson": {
        "short name": "poisson",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.losses.serialize": {
        "short name": "serialize",
        "parameters": {
            "loss": null
        }
    },
    "tensorflow.keras.metrics.sparse_categorical_crossentropy": {
        "short name": "sparse_categorical_crossentropy",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "from_logits": "False",
            "axis": "-1"
        }
    },
    "tensorflow.keras.metrics.squared_hinge": {
        "short name": "squared_hinge",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.AUC": {
        "short name": "AUC",
        "parameters": {
            "num_thresholds": "200",
            "curve": "'ROC'",
            "summation_method": "'interpolation'",
            "name": "None",
            "dtype": "None",
            "thresholds": "None",
            "multi_label": "False",
            "num_labels": "None",
            "label_weights": "None",
            "from_logits": "False"
        }
    },
    "tensorflow.keras.metrics.Accuracy": {
        "short name": "Accuracy",
        "parameters": {
            "name": "'accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.BinaryAccuracy": {
        "short name": "BinaryAccuracy",
        "parameters": {
            "name": "'binary_accuracy'",
            "dtype": "None",
            "threshold": "0.5"
        }
    },
    "tensorflow.keras.metrics.BinaryCrossentropy": {
        "short name": "BinaryCrossentropy",
        "parameters": {
            "name": "'binary_crossentropy'",
            "dtype": "None",
            "from_logits": "False",
            "label_smoothing": "0"
        }
    },
    "tensorflow.keras.metrics.BinaryIoU": {
        "short name": "BinaryIoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.CategoricalAccuracy": {
        "short name": "CategoricalAccuracy",
        "parameters": {
            "name": "'categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.CategoricalCrossentropy": {
        "short name": "CategoricalCrossentropy",
        "parameters": {
            "name": "'categorical_crossentropy'",
            "dtype": "None",
            "from_logits": "False",
            "label_smoothing": "0"
        }
    },
    "tensorflow.keras.metrics.CategoricalHinge": {
        "short name": "CategoricalHinge",
        "parameters": {
            "name": "'categorical_hinge'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.CosineSimilarity": {
        "short name": "CosineSimilarity",
        "parameters": {
            "name": "'cosine_similarity'",
            "dtype": "None",
            "axis": "-1"
        }
    },
    "tensorflow.keras.metrics.FalseNegatives": {
        "short name": "FalseNegatives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.FalsePositives": {
        "short name": "FalsePositives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Hinge": {
        "short name": "Hinge",
        "parameters": {
            "name": "'hinge'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.IoU": {
        "short name": "IoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.KLDivergence": {
        "short name": "KLDivergence",
        "parameters": {
            "name": "'kullback_leibler_divergence'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.LogCoshError": {
        "short name": "LogCoshError",
        "parameters": {
            "name": "'logcosh'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Mean": {
        "short name": "Mean",
        "parameters": {
            "name": "'mean'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanAbsoluteError": {
        "short name": "MeanAbsoluteError",
        "parameters": {
            "name": "'mean_absolute_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanAbsolutePercentageError": {
        "short name": "MeanAbsolutePercentageError",
        "parameters": {
            "name": "'mean_absolute_percentage_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanIoU": {
        "short name": "MeanIoU",
        "parameters": {
            "num_classes": null,
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanMetricWrapper": {
        "short name": "MeanMetricWrapper",
        "parameters": {
            "fn": null,
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.metrics.MeanRelativeError": {
        "short name": "MeanRelativeError",
        "parameters": {
            "normalizer": null,
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanSquaredError": {
        "short name": "MeanSquaredError",
        "parameters": {
            "name": "'mean_squared_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanSquaredLogarithmicError": {
        "short name": "MeanSquaredLogarithmicError",
        "parameters": {
            "name": "'mean_squared_logarithmic_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.MeanTensor": {
        "short name": "MeanTensor",
        "parameters": {
            "name": "'mean_tensor'",
            "dtype": "None",
            "shape": "None"
        }
    },
    "tensorflow.keras.metrics.Metric": {
        "short name": "Metric",
        "parameters": {
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.metrics.OneHotIoU": {
        "short name": "OneHotIoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.OneHotMeanIoU": {
        "short name": "OneHotMeanIoU",
        "parameters": {}
    },
    "tensorflow.keras.metrics.Poisson": {
        "short name": "Poisson",
        "parameters": {
            "name": "'poisson'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Precision": {
        "short name": "Precision",
        "parameters": {
            "thresholds": "None",
            "top_k": "None",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.PrecisionAtRecall": {
        "short name": "PrecisionAtRecall",
        "parameters": {
            "recall": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Recall": {
        "short name": "Recall",
        "parameters": {
            "thresholds": "None",
            "top_k": "None",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.RecallAtPrecision": {
        "short name": "RecallAtPrecision",
        "parameters": {
            "precision": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.RootMeanSquaredError": {
        "short name": "RootMeanSquaredError",
        "parameters": {
            "name": "'root_mean_squared_error'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SensitivityAtSpecificity": {
        "short name": "SensitivityAtSpecificity",
        "parameters": {
            "specificity": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SparseCategoricalAccuracy": {
        "short name": "SparseCategoricalAccuracy",
        "parameters": {
            "name": "'sparse_categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SparseCategoricalCrossentropy": {
        "short name": "SparseCategoricalCrossentropy",
        "parameters": {
            "name": "'sparse_categorical_crossentropy'",
            "dtype": "None",
            "from_logits": "False",
            "axis": "-1"
        }
    },
    "tensorflow.keras.metrics.SparseTopKCategoricalAccuracy": {
        "short name": "SparseTopKCategoricalAccuracy",
        "parameters": {
            "k": "5",
            "name": "'sparse_top_k_categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SpecificityAtSensitivity": {
        "short name": "SpecificityAtSensitivity",
        "parameters": {
            "sensitivity": null,
            "num_thresholds": "200",
            "class_id": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.SquaredHinge": {
        "short name": "SquaredHinge",
        "parameters": {
            "name": "'squared_hinge'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.Sum": {
        "short name": "Sum",
        "parameters": {
            "name": "'sum'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.TopKCategoricalAccuracy": {
        "short name": "TopKCategoricalAccuracy",
        "parameters": {
            "k": "5",
            "name": "'top_k_categorical_accuracy'",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.TrueNegatives": {
        "short name": "TrueNegatives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.TruePositives": {
        "short name": "TruePositives",
        "parameters": {
            "thresholds": "None",
            "name": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.metrics.binary_accuracy": {
        "short name": "binary_accuracy",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "threshold": "0.5"
        }
    },
    "tensorflow.keras.metrics.categorical_accuracy": {
        "short name": "categorical_accuracy",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.metrics.get": {
        "short name": "get",
        "parameters": {
            "identifier": null
        }
    },
    "tensorflow.keras.metrics.serialize": {
        "short name": "serialize",
        "parameters": {
            "metric": null
        }
    },
    "tensorflow.keras.metrics.sparse_categorical_accuracy": {
        "short name": "sparse_categorical_accuracy",
        "parameters": {
            "y_true": null,
            "y_pred": null
        }
    },
    "tensorflow.keras.metrics.sparse_top_k_categorical_accuracy": {
        "short name": "sparse_top_k_categorical_accuracy",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "k": "5"
        }
    },
    "tensorflow.keras.metrics.top_k_categorical_accuracy": {
        "short name": "top_k_categorical_accuracy",
        "parameters": {
            "y_true": null,
            "y_pred": null,
            "k": "5"
        }
    },
    "tensorflow.keras.mixed_precision.LossScaleOptimizer": {
        "short name": "LossScaleOptimizer",
        "parameters": {}
    },
    "tensorflow.keras.mixed_precision.Policy": {
        "short name": "Policy",
        "parameters": {
            "name": null
        }
    },
    "tensorflow.keras.mixed_precision.global_policy": {
        "short name": "global_policy",
        "parameters": {}
    },
    "tensorflow.keras.mixed_precision.set_global_policy": {
        "short name": "set_global_policy",
        "parameters": {
            "policy": null
        }
    },
    "tensorflow.keras.models.clone_model": {
        "short name": "clone_model",
        "parameters": {
            "model": null,
            "input_tensors": "None",
            "clone_function": "None"
        }
    },
    "tensorflow.keras.models.load_model": {
        "short name": "load_model",
        "parameters": {
            "filepath": null,
            "custom_objects": "None",
            "compile": "True",
            "options": "None"
        }
    },
    "tensorflow.keras.models.model_from_config": {
        "short name": "model_from_config",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.models.model_from_json": {
        "short name": "model_from_json",
        "parameters": {
            "json_string": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.models.model_from_yaml": {
        "short name": "model_from_yaml",
        "parameters": {
            "yaml_string": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.models.save_model": {
        "short name": "save_model",
        "parameters": {
            "model": null,
            "filepath": null,
            "overwrite": "True",
            "include_optimizer": "True",
            "save_format": "None",
            "signatures": "None",
            "options": "None",
            "save_traces": "True"
        }
    },
    "tensorflow.keras.optimizers.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "name": "'Adadelta'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "name": "'Adagrad'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "name": "'Adam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Adamax": {
        "short name": "Adamax",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Adamax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Ftrl": {
        "short name": "Ftrl",
        "parameters": {
            "learning_rate": "0.001",
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "name": "'Ftrl'",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Nadam": {
        "short name": "Nadam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Nadam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "name": null,
            "gradient_aggregator": "None",
            "gradient_transformers": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "name": "'RMSprop'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "name": "'SGD'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.optimizers.get": {
        "short name": "get",
        "parameters": {
            "identifier": null
        }
    },
    "tensorflow.keras.optimizers.serialize": {
        "short name": "serialize",
        "parameters": {
            "optimizer": null
        }
    },
    "tensorflow.keras.utils.image_dataset_from_directory": {
        "short name": "image_dataset_from_directory",
        "parameters": {
            "directory": null,
            "labels": "'inferred'",
            "label_mode": "'int'",
            "class_names": "None",
            "color_mode": "'rgb'",
            "batch_size": "32",
            "image_size": "(256, 256)",
            "shuffle": "True",
            "seed": "None",
            "validation_split": "None",
            "subset": "None",
            "interpolation": "'bilinear'",
            "follow_links": "False",
            "crop_to_aspect_ratio": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.utils.text_dataset_from_directory": {
        "short name": "text_dataset_from_directory",
        "parameters": {
            "directory": null,
            "labels": "'inferred'",
            "label_mode": "'int'",
            "class_names": "None",
            "batch_size": "32",
            "max_length": "None",
            "shuffle": "True",
            "seed": "None",
            "validation_split": "None",
            "subset": "None",
            "follow_links": "False"
        }
    },
    "tensorflow.keras.utils.timeseries_dataset_from_array": {
        "short name": "timeseries_dataset_from_array",
        "parameters": {
            "data": null,
            "targets": null,
            "sequence_length": null,
            "sequence_stride": "1",
            "sampling_rate": "1",
            "batch_size": "128",
            "shuffle": "False",
            "seed": "None",
            "start_index": "None",
            "end_index": "None"
        }
    },
    "tensorflow.keras.regularizers.L1": {
        "short name": "L1",
        "parameters": {
            "l1": "0.01",
            "**kwargs": null
        }
    },
    "tensorflow.keras.regularizers.L1L2": {
        "short name": "L1L2",
        "parameters": {
            "l1": "0.0",
            "l2": "0.0"
        }
    },
    "tensorflow.keras.regularizers.L2": {
        "short name": "L2",
        "parameters": {
            "l2": "0.01",
            "**kwargs": null
        }
    },
    "tensorflow.keras.regularizers.OrthogonalRegularizer": {
        "short name": "OrthogonalRegularizer",
        "parameters": {
            "factor": "0.01",
            "mode": "'rows'"
        }
    },
    "tensorflow.keras.regularizers.Regularizer": {
        "short name": "Regularizer",
        "parameters": {}
    },
    "tensorflow.keras.regularizers.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.regularizers.get": {
        "short name": "get",
        "parameters": {
            "identifier": null
        }
    },
    "tensorflow.keras.regularizers.l1_l2": {
        "short name": "l1_l2",
        "parameters": {
            "l1": "0.01",
            "l2": "0.01"
        }
    },
    "tensorflow.keras.regularizers.serialize": {
        "short name": "serialize",
        "parameters": {
            "regularizer": null
        }
    },
    "tensorflow.keras.utils.custom_object_scope": {
        "short name": "custom_object_scope",
        "parameters": {
            "*args": null
        }
    },
    "tensorflow.keras.utils.GeneratorEnqueuer": {
        "short name": "GeneratorEnqueuer",
        "parameters": {
            "generator": null,
            "use_multiprocessing": "False",
            "random_seed": "None"
        }
    },
    "tensorflow.keras.utils.OrderedEnqueuer": {
        "short name": "OrderedEnqueuer",
        "parameters": {
            "sequence": null,
            "use_multiprocessing": "False",
            "shuffle": "False"
        }
    },
    "tensorflow.keras.utils.Progbar": {
        "short name": "Progbar",
        "parameters": {
            "target": null,
            "width": "30",
            "verbose": "1",
            "interval": "0.05",
            "stateful_metrics": "None",
            "unit_name": "'step'"
        }
    },
    "tensorflow.keras.utils.Sequence": {
        "short name": "Sequence",
        "parameters": {}
    },
    "tensorflow.keras.utils.SequenceEnqueuer": {
        "short name": "SequenceEnqueuer",
        "parameters": {
            "sequence": null,
            "use_multiprocessing": "False"
        }
    },
    "tensorflow.keras.utils.SidecarEvaluator": {
        "short name": "SidecarEvaluator",
        "parameters": {
            "model": null,
            "data": null,
            "checkpoint_dir": null,
            "steps": "None",
            "max_evaluations": "None",
            "callbacks": "None"
        }
    },
    "tensorflow.keras.utils.array_to_img": {
        "short name": "array_to_img",
        "parameters": {
            "x": null,
            "data_format": "None",
            "scale": "True",
            "dtype": "None"
        }
    },
    "tensorflow.keras.utils.deserialize_keras_object": {
        "short name": "deserialize_keras_object",
        "parameters": {
            "identifier": null,
            "module_objects": "None",
            "custom_objects": "None",
            "printable_module_name": "'object'"
        }
    },
    "tensorflow.keras.utils.disable_interactive_logging": {
        "short name": "disable_interactive_logging",
        "parameters": {}
    },
    "tensorflow.keras.utils.enable_interactive_logging": {
        "short name": "enable_interactive_logging",
        "parameters": {}
    },
    "tensorflow.keras.utils.get_custom_objects": {
        "short name": "get_custom_objects",
        "parameters": {}
    },
    "tensorflow.keras.utils.get_file": {
        "short name": "get_file",
        "parameters": {
            "fname": "None",
            "origin": "None",
            "untar": "False",
            "md5_hash": "None",
            "file_hash": "None",
            "cache_subdir": "'datasets'",
            "hash_algorithm": "'auto'",
            "extract": "False",
            "archive_format": "'auto'",
            "cache_dir": "None"
        }
    },
    "tensorflow.keras.utils.get_registered_name": {
        "short name": "get_registered_name",
        "parameters": {
            "obj": null
        }
    },
    "tensorflow.keras.utils.get_registered_object": {
        "short name": "get_registered_object",
        "parameters": {
            "name": null,
            "custom_objects": "None",
            "module_objects": "None"
        }
    },
    "tensorflow.keras.utils.get_source_inputs": {
        "short name": "get_source_inputs",
        "parameters": {
            "tensor": null,
            "layer": "None",
            "node_index": "None"
        }
    },
    "tensorflow.keras.utils.img_to_array": {
        "short name": "img_to_array",
        "parameters": {
            "img": null,
            "data_format": "None",
            "dtype": "None"
        }
    },
    "tensorflow.keras.utils.is_interactive_logging_enabled": {
        "short name": "is_interactive_logging_enabled",
        "parameters": {}
    },
    "tensorflow.keras.utils.load_img": {
        "short name": "load_img",
        "parameters": {
            "path": null,
            "grayscale": "False",
            "color_mode": "'rgb'",
            "target_size": "None",
            "interpolation": "'nearest'",
            "keep_aspect_ratio": "False"
        }
    },
    "tensorflow.keras.utils.model_to_dot": {
        "short name": "model_to_dot",
        "parameters": {
            "model": null,
            "show_shapes": "False",
            "show_dtype": "False",
            "show_layer_names": "True",
            "rankdir": "'TB'",
            "expand_nested": "False",
            "dpi": "96",
            "subgraph": "False",
            "layer_range": "None",
            "show_layer_activations": "False"
        }
    },
    "tensorflow.keras.utils.normalize": {
        "short name": "normalize",
        "parameters": {
            "x": null,
            "axis": "-1",
            "order": "2"
        }
    },
    "tensorflow.keras.utils.pack_x_y_sample_weight": {
        "short name": "pack_x_y_sample_weight",
        "parameters": {
            "x": null,
            "y": "None",
            "sample_weight": "None"
        }
    },
    "tensorflow.keras.utils.pad_sequences": {
        "short name": "pad_sequences",
        "parameters": {
            "sequences": null,
            "maxlen": "None",
            "dtype": "'int32'",
            "padding": "'pre'",
            "truncating": "'pre'",
            "value": "0.0"
        }
    },
    "tensorflow.keras.utils.plot_model": {
        "short name": "plot_model",
        "parameters": {
            "model": null,
            "to_file": "'model.png'",
            "show_shapes": "False",
            "show_dtype": "False",
            "show_layer_names": "True",
            "rankdir": "'TB'",
            "expand_nested": "False",
            "dpi": "96",
            "layer_range": "None",
            "show_layer_activations": "False"
        }
    },
    "tensorflow.keras.utils.register_keras_serializable": {
        "short name": "register_keras_serializable",
        "parameters": {
            "package": "'Custom'",
            "name": "None"
        }
    },
    "tensorflow.keras.utils.save_img": {
        "short name": "save_img",
        "parameters": {
            "path": null,
            "x": null,
            "data_format": "None",
            "file_format": "None",
            "scale": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.utils.serialize_keras_object": {
        "short name": "serialize_keras_object",
        "parameters": {
            "instance": null
        }
    },
    "tensorflow.keras.utils.set_random_seed": {
        "short name": "set_random_seed",
        "parameters": {
            "seed": null
        }
    },
    "tensorflow.keras.utils.to_categorical": {
        "short name": "to_categorical",
        "parameters": {
            "y": null,
            "num_classes": "None",
            "dtype": "'float32'"
        }
    },
    "tensorflow.keras.utils.unpack_x_y_sample_weight": {
        "short name": "unpack_x_y_sample_weight",
        "parameters": {
            "data": null
        }
    },
    "tensorflow.linalg.experimental.conjugate_gradient": {
        "short name": "conjugate_gradient",
        "parameters": {
            "operator": null,
            "rhs": null,
            "preconditioner": "None",
            "x": "None",
            "tol": "1e-05",
            "max_iter": "20",
            "name": "'conjugate_gradient'"
        }
    },
    "tensorflow.lite.experimental.Analyzer": {
        "short name": "Analyzer",
        "parameters": {}
    },
    "tensorflow.lite.experimental.OpResolverType": {
        "short name": "OpResolverType",
        "parameters": {}
    },
    "tensorflow.lite.experimental.QuantizationDebugOptions": {
        "short name": "QuantizationDebugOptions",
        "parameters": {
            "layer_debug_metrics": null,
            "model_debug_metrics": null,
            "layer_direct_compare_metrics": null,
            "denylisted_ops": null,
            "denylisted_nodes": null,
            "fully_quantize": false
        }
    },
    "tensorflow.lite.experimental.QuantizationDebugger": {
        "short name": "QuantizationDebugger",
        "parameters": {
            "quant_debug_model_path": null,
            "quant_debug_model_content": null,
            "float_model_path": null,
            "float_model_content": null,
            "debug_dataset": null,
            "debug_options": null,
            "converter": null
        }
    },
    "tensorflow.lite.experimental.load_delegate": {
        "short name": "load_delegate",
        "parameters": {
            "library": null,
            "options": "None"
        }
    },
    "tensorflow.lookup.experimental.DenseHashTable": {
        "short name": "DenseHashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "default_value": null,
            "empty_key": null,
            "deleted_key": null,
            "initial_num_buckets": "None",
            "name": "'MutableDenseHashTable'",
            "checkpoint": "True",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.lookup.experimental.MutableHashTable": {
        "short name": "MutableHashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "default_value": null,
            "name": "'MutableHashTable'",
            "checkpoint": "True",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.math.special.bessel_j0": {
        "short name": "bessel_j0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.bessel_j1": {
        "short name": "bessel_j1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.bessel_k0": {
        "short name": "bessel_k0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.bessel_k0e": {
        "short name": "bessel_k0e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.bessel_k1": {
        "short name": "bessel_k1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.bessel_k1e": {
        "short name": "bessel_k1e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.bessel_y0": {
        "short name": "bessel_y0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.bessel_y1": {
        "short name": "bessel_y1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.dawsn": {
        "short name": "dawsn",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.expint": {
        "short name": "expint",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.fresnel_cos": {
        "short name": "fresnel_cos",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.fresnel_sin": {
        "short name": "fresnel_sin",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.math.special.spence": {
        "short name": "spence",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.mlir.experimental.convert_function": {
        "short name": "convert_function",
        "parameters": {
            "concrete_function": null,
            "pass_pipeline": "'tf-standard-pipeline'",
            "show_debug_info": "False"
        }
    },
    "tensorflow.mlir.experimental.convert_graph_def": {
        "short name": "convert_graph_def",
        "parameters": {
            "graph_def": null,
            "pass_pipeline": "'tf-standard-pipeline'",
            "show_debug_info": "False"
        }
    },
    "tensorflow.nn.experimental.stateless_dropout": {
        "short name": "stateless_dropout",
        "parameters": {
            "x": null,
            "rate": null,
            "seed": null,
            "rng_alg": "None",
            "noise_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.profiler.experimental.Profile": {
        "short name": "Profile",
        "parameters": {
            "logdir": null,
            "options": "None"
        }
    },
    "tensorflow.profiler.experimental.ProfilerOptions": {
        "short name": "ProfilerOptions",
        "parameters": {
            "host_tracer_level": "2",
            "python_tracer_level": "0",
            "device_tracer_level": "1",
            "delay_ms": "None"
        }
    },
    "tensorflow.profiler.experimental.Trace": {
        "short name": "Trace",
        "parameters": {
            "name": null,
            "**kwargs": null
        }
    },
    "tensorflow.profiler.experimental.start": {
        "short name": "start",
        "parameters": {
            "logdir": null,
            "options": "None"
        }
    },
    "tensorflow.profiler.experimental.stop": {
        "short name": "stop",
        "parameters": {
            "save": "True"
        }
    },
    "tensorflow.random.experimental.index_shuffle": {
        "short name": "index_shuffle",
        "parameters": {
            "index": null,
            "seed": null,
            "max_index": null
        }
    },
    "tensorflow.random.experimental.stateless_fold_in": {
        "short name": "stateless_fold_in",
        "parameters": {
            "seed": null,
            "data": null,
            "alg": "'auto_select'"
        }
    },
    "tensorflow.random.experimental.stateless_split": {
        "short name": "stateless_split",
        "parameters": {
            "seed": null,
            "num": "2",
            "alg": "'auto_select'"
        }
    },
    "tensorflow.saved_model.experimental.TrackableResource": {
        "short name": "TrackableResource",
        "parameters": {
            "device": "''"
        }
    },
    "tensorflow.saved_model.experimental.VariablePolicy": {
        "short name": "VariablePolicy",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.DeviceAssignment": {
        "short name": "DeviceAssignment",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.HardwareFeature": {
        "short name": "HardwareFeature",
        "parameters": {
            "tpu_hardware_feature_proto": null
        }
    },
    "tensorflow.tpu.experimental.TPUSystemMetadata": {
        "short name": "TPUSystemMetadata",
        "parameters": {
            "num_cores": null,
            "num_hosts": null,
            "num_of_cores_per_host": null,
            "topology": null,
            "devices": null
        }
    },
    "tensorflow.tpu.experimental.Topology": {
        "short name": "Topology",
        "parameters": {
            "serialized": "None",
            "mesh_shape": "None",
            "device_coordinates": "None"
        }
    },
    "tensorflow.tpu.experimental.initialize_tpu_system": {
        "short name": "initialize_tpu_system",
        "parameters": {
            "cluster_resolver": "None"
        }
    },
    "tensorflow.tpu.experimental.shutdown_tpu_system": {
        "short name": "shutdown_tpu_system",
        "parameters": {
            "cluster_resolver": "None"
        }
    },
    "tensorflow.train.experimental.PythonState": {
        "short name": "PythonState",
        "parameters": {}
    },
    "tensorflow.types.experimental.Callable": {
        "short name": "Callable",
        "parameters": {}
    },
    "tensorflow.types.experimental.ConcreteFunction": {
        "short name": "ConcreteFunction",
        "parameters": {}
    },
    "tensorflow.types.experimental.GenericFunction": {
        "short name": "GenericFunction",
        "parameters": {}
    },
    "tensorflow.types.experimental.SupportsTracingProtocol": {
        "short name": "SupportsTracingProtocol",
        "parameters": {}
    },
    "tensorflow.types.experimental.TraceType": {
        "short name": "TraceType",
        "parameters": {}
    },
    "tensorflow.types.experimental.TracingContext": {
        "short name": "TracingContext",
        "parameters": {}
    },
    "tensorflow.xla.experimental.compile": {
        "short name": "compile",
        "parameters": {
            "computation": null,
            "inputs": "None"
        }
    },
    "tensorflow.xla.experimental.jit_scope": {
        "short name": "jit_scope",
        "parameters": {}
    },
    "tensorflow.compat.v1.app.run": {
        "short name": "run",
        "parameters": {
            "main": "None",
            "argv": "None"
        }
    },
    "tensorflow.compat.v1.autograph.to_code": {
        "short name": "to_code",
        "parameters": {
            "entity": null,
            "recursive": "True",
            "arg_values": "None",
            "arg_types": "None",
            "indentation": "'  '",
            "experimental_optional_features": "None"
        }
    },
    "tensorflow.compat.v1.autograph.to_graph": {
        "short name": "to_graph",
        "parameters": {
            "entity": null,
            "recursive": "True",
            "arg_values": "None",
            "arg_types": "None",
            "experimental_optional_features": "None"
        }
    },
    "tensorflow.compat.v1.data.Dataset": {
        "short name": "Dataset",
        "parameters": {}
    },
    "tensorflow.compat.v1.data.FixedLengthRecordDataset": {
        "short name": "FixedLengthRecordDataset",
        "parameters": {
            "filenames": null,
            "record_bytes": null,
            "header_bytes": "None",
            "footer_bytes": "None",
            "buffer_size": "None",
            "compression_type": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.data.Iterator": {
        "short name": "Iterator",
        "parameters": {
            "iterator_resource": null,
            "initializer": null,
            "output_types": null,
            "output_shapes": null,
            "output_classes": null
        }
    },
    "tensorflow.compat.v1.data.TFRecordDataset": {
        "short name": "TFRecordDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.data.TextLineDataset": {
        "short name": "TextLineDataset",
        "parameters": {
            "filenames": null,
            "compression_type": "None",
            "buffer_size": "None",
            "num_parallel_reads": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.data.get_output_classes": {
        "short name": "get_output_classes",
        "parameters": {
            "dataset_or_iterator": null
        }
    },
    "tensorflow.compat.v1.data.get_output_shapes": {
        "short name": "get_output_shapes",
        "parameters": {
            "dataset_or_iterator": null
        }
    },
    "tensorflow.compat.v1.data.get_output_types": {
        "short name": "get_output_types",
        "parameters": {
            "dataset_or_iterator": null
        }
    },
    "tensorflow.compat.v1.data.make_initializable_iterator": {
        "short name": "make_initializable_iterator",
        "parameters": {
            "dataset": null,
            "shared_name": "None"
        }
    },
    "tensorflow.compat.v1.data.make_one_shot_iterator": {
        "short name": "make_one_shot_iterator",
        "parameters": {
            "dataset": null
        }
    },
    "tensorflow.compat.v1.debugging.assert_shapes": {
        "short name": "assert_shapes",
        "parameters": {
            "shapes": null,
            "data": "None",
            "summarize": "None",
            "message": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.distribute.MirroredStrategy": {
        "short name": "MirroredStrategy",
        "parameters": {
            "devices": "None",
            "cross_device_ops": "None"
        }
    },
    "tensorflow.compat.v1.distribute.OneDeviceStrategy": {
        "short name": "OneDeviceStrategy",
        "parameters": {
            "device": null
        }
    },
    "tensorflow.compat.v1.distribute.ReplicaContext": {
        "short name": "ReplicaContext",
        "parameters": {
            "strategy": null,
            "replica_id_in_sync_group": null
        }
    },
    "tensorflow.compat.v1.distribute.Strategy": {
        "short name": "Strategy",
        "parameters": {
            "extended": null
        }
    },
    "tensorflow.compat.v1.distribute.StrategyExtended": {
        "short name": "StrategyExtended",
        "parameters": {
            "container_strategy": null
        }
    },
    "tensorflow.compat.v1.distribute.get_loss_reduction": {
        "short name": "get_loss_reduction",
        "parameters": {}
    },
    "tensorflow.compat.v1.distributions.Bernoulli": {
        "short name": "Bernoulli",
        "parameters": {
            "logits": "None",
            "probs": "None",
            "dtype": "tf.dtypes.int32",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Bernoulli'"
        }
    },
    "tensorflow.compat.v1.distributions.Beta": {
        "short name": "Beta",
        "parameters": {
            "concentration1": "None",
            "concentration0": "None",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Beta'"
        }
    },
    "tensorflow.compat.v1.distributions.Categorical": {
        "short name": "Categorical",
        "parameters": {
            "logits": "None",
            "probs": "None",
            "dtype": "tf.dtypes.int32",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Categorical'"
        }
    },
    "tensorflow.compat.v1.distributions.Dirichlet": {
        "short name": "Dirichlet",
        "parameters": {
            "concentration": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Dirichlet'"
        }
    },
    "tensorflow.compat.v1.distributions.DirichletMultinomial": {
        "short name": "DirichletMultinomial",
        "parameters": {
            "total_count": null,
            "concentration": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'DirichletMultinomial'"
        }
    },
    "tensorflow.compat.v1.distributions.Distribution": {
        "short name": "Distribution",
        "parameters": {
            "dtype": null,
            "reparameterization_type": null,
            "validate_args": null,
            "allow_nan_stats": null,
            "parameters": "None",
            "graph_parents": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.distributions.Exponential": {
        "short name": "Exponential",
        "parameters": {
            "rate": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Exponential'"
        }
    },
    "tensorflow.compat.v1.distributions.Gamma": {
        "short name": "Gamma",
        "parameters": {
            "concentration": null,
            "rate": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Gamma'"
        }
    },
    "tensorflow.compat.v1.distributions.Laplace": {
        "short name": "Laplace",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Laplace'"
        }
    },
    "tensorflow.compat.v1.distributions.Multinomial": {
        "short name": "Multinomial",
        "parameters": {
            "total_count": null,
            "logits": "None",
            "probs": "None",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Multinomial'"
        }
    },
    "tensorflow.compat.v1.distributions.Normal": {
        "short name": "Normal",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Normal'"
        }
    },
    "tensorflow.compat.v1.distributions.RegisterKL": {
        "short name": "RegisterKL",
        "parameters": {
            "dist_cls_a": null,
            "dist_cls_b": null
        }
    },
    "tensorflow.compat.v1.distributions.ReparameterizationType": {
        "short name": "ReparameterizationType",
        "parameters": {
            "rep_type": null
        }
    },
    "tensorflow.compat.v1.distributions.StudentT": {
        "short name": "StudentT",
        "parameters": {
            "df": null,
            "loc": null,
            "scale": null,
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'StudentT'"
        }
    },
    "tensorflow.compat.v1.distributions.Uniform": {
        "short name": "Uniform",
        "parameters": {
            "low": "0.0",
            "high": "1.0",
            "validate_args": "False",
            "allow_nan_stats": "True",
            "name": "'Uniform'"
        }
    },
    "tensorflow.compat.v1.distributions.kl_divergence": {
        "short name": "kl_divergence",
        "parameters": {
            "distribution_a": null,
            "distribution_b": null,
            "allow_nan_stats": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.errors.raise_exception_on_not_ok_status": {
        "short name": "raise_exception_on_not_ok_status",
        "parameters": {}
    },
    "tensorflow.compat.v1.errors.error_code_from_exception_type": {
        "short name": "error_code_from_exception_type",
        "parameters": {
            "cls": null
        }
    },
    "tensorflow.compat.v1.errors.exception_type_from_error_code": {
        "short name": "exception_type_from_error_code",
        "parameters": {
            "error_code": null
        }
    },
    "tensorflow.compat.v1.estimator.BaselineClassifier": {
        "short name": "BaselineClassifier",
        "parameters": {
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM"
        }
    },
    "tensorflow.compat.v1.estimator.BaselineEstimator": {
        "short name": "BaselineEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None"
        }
    },
    "tensorflow.compat.v1.estimator.BaselineRegressor": {
        "short name": "BaselineRegressor",
        "parameters": {
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM"
        }
    },
    "tensorflow.compat.v1.estimator.DNNClassifier": {
        "short name": "DNNClassifier",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False"
        }
    },
    "tensorflow.compat.v1.estimator.DNNEstimator": {
        "short name": "DNNEstimator",
        "parameters": {
            "head": null,
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "batch_norm": "False"
        }
    },
    "tensorflow.compat.v1.estimator.DNNLinearCombinedClassifier": {
        "short name": "DNNLinearCombinedClassifier",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.DNNLinearCombinedEstimator": {
        "short name": "DNNLinearCombinedEstimator",
        "parameters": {
            "head": null,
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.DNNLinearCombinedRegressor": {
        "short name": "DNNLinearCombinedRegressor",
        "parameters": {
            "model_dir": "None",
            "linear_feature_columns": "None",
            "linear_optimizer": "'Ftrl'",
            "dnn_feature_columns": "None",
            "dnn_optimizer": "'Adagrad'",
            "dnn_hidden_units": "None",
            "dnn_activation_fn": "tf.nn.relu",
            "dnn_dropout": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False",
            "linear_sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.DNNRegressor": {
        "short name": "DNNRegressor",
        "parameters": {
            "hidden_units": null,
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Adagrad'",
            "activation_fn": "tf.nn.relu",
            "dropout": "None",
            "input_layer_partitioner": "None",
            "config": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "batch_norm": "False"
        }
    },
    "tensorflow.compat.v1.estimator.Estimator": {
        "short name": "Estimator",
        "parameters": {
            "model_fn": null,
            "model_dir": "None",
            "config": "None",
            "params": "None",
            "warm_start_from": "None"
        }
    },
    "tensorflow.compat.v1.estimator.LinearClassifier": {
        "short name": "LinearClassifier",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "n_classes": "2",
            "weight_column": "None",
            "label_vocabulary": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "partitioner": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.LinearEstimator": {
        "short name": "LinearEstimator",
        "parameters": {
            "head": null,
            "feature_columns": null,
            "model_dir": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "partitioner": "None",
            "sparse_combiner": "'sum'",
            "warm_start_from": "None"
        }
    },
    "tensorflow.compat.v1.estimator.LinearRegressor": {
        "short name": "LinearRegressor",
        "parameters": {
            "feature_columns": null,
            "model_dir": "None",
            "label_dimension": "1",
            "weight_column": "None",
            "optimizer": "'Ftrl'",
            "config": "None",
            "partitioner": "None",
            "warm_start_from": "None",
            "loss_reduction": "tf.compat.v1.losses.Reduction.SUM",
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.classifier_parse_example_spec": {
        "short name": "classifier_parse_example_spec",
        "parameters": {
            "feature_columns": null,
            "label_key": null,
            "label_dtype": "tf.dtypes.int64",
            "label_default": "None",
            "weight_column": "None"
        }
    },
    "tensorflow.compat.v1.estimator.regressor_parse_example_spec": {
        "short name": "regressor_parse_example_spec",
        "parameters": {
            "feature_columns": null,
            "label_key": null,
            "label_dtype": "tf.dtypes.float32",
            "label_default": "None",
            "label_dimension": "1",
            "weight_column": "None"
        }
    },
    "tensorflow.compat.v1.experimental.output_all_intermediates": {
        "short name": "output_all_intermediates",
        "parameters": {
            "state": null
        }
    },
    "tensorflow.compat.v1.feature_column.categorical_column_with_vocabulary_file": {
        "short name": "categorical_column_with_vocabulary_file",
        "parameters": {
            "key": null,
            "vocabulary_file": null,
            "vocabulary_size": "None",
            "num_oov_buckets": "0",
            "default_value": "None",
            "dtype": "tf.dtypes.string"
        }
    },
    "tensorflow.compat.v1.feature_column.input_layer": {
        "short name": "input_layer",
        "parameters": {
            "features": null,
            "feature_columns": null,
            "weight_collections": "None",
            "trainable": "True",
            "cols_to_vars": "None",
            "cols_to_output_tensors": "None"
        }
    },
    "tensorflow.compat.v1.feature_column.linear_model": {
        "short name": "linear_model",
        "parameters": {
            "features": null,
            "feature_columns": null,
            "units": "1",
            "sparse_combiner": "'sum'",
            "weight_collections": "None",
            "trainable": "True",
            "cols_to_vars": "None"
        }
    },
    "tensorflow.compat.v1.feature_column.make_parse_example_spec": {
        "short name": "make_parse_example_spec",
        "parameters": {
            "feature_columns": null
        }
    },
    "tensorflow.compat.v1.feature_column.shared_embedding_columns": {
        "short name": "shared_embedding_columns",
        "parameters": {
            "categorical_columns": null,
            "dimension": null,
            "combiner": "'mean'",
            "initializer": "None",
            "shared_embedding_collection_name": "None",
            "ckpt_to_load_from": "None",
            "tensor_name_in_ckpt": "None",
            "max_norm": "None",
            "trainable": "True",
            "use_safe_embedding_lookup": "True"
        }
    },
    "tensorflow.compat.v1.flags.ArgumentParser": {
        "short name": "ArgumentParser",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.ArgumentSerializer": {
        "short name": "ArgumentSerializer",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.BaseListParser": {
        "short name": "BaseListParser",
        "parameters": {
            "token": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.flags.BooleanFlag": {
        "short name": "BooleanFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "short_name": "None",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.BooleanParser": {
        "short name": "BooleanParser",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.CantOpenFlagFileError": {
        "short name": "CantOpenFlagFileError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.CsvListSerializer": {
        "short name": "CsvListSerializer",
        "parameters": {
            "list_sep": null
        }
    },
    "tensorflow.compat.v1.flags.DuplicateFlagError": {
        "short name": "DuplicateFlagError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.EnumClassFlag": {
        "short name": "EnumClassFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "enum_class": null,
            "short_name": "None",
            "case_sensitive": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.EnumClassListSerializer": {
        "short name": "EnumClassListSerializer",
        "parameters": {
            "list_sep": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.flags.EnumClassParser": {
        "short name": "EnumClassParser",
        "parameters": {
            "enum_class": null,
            "case_sensitive": "True"
        }
    },
    "tensorflow.compat.v1.flags.EnumClassSerializer": {
        "short name": "EnumClassSerializer",
        "parameters": {
            "lowercase": null
        }
    },
    "tensorflow.compat.v1.flags.EnumFlag": {
        "short name": "EnumFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "enum_values": null,
            "short_name": "None",
            "case_sensitive": "True",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.EnumParser": {
        "short name": "EnumParser",
        "parameters": {
            "enum_values": null,
            "case_sensitive": "True"
        }
    },
    "tensorflow.compat.v1.flags.Error": {
        "short name": "Error",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.Flag": {
        "short name": "Flag",
        "parameters": {
            "parser": null,
            "serializer": null,
            "name": null,
            "default": null,
            "help_string": null,
            "short_name": "None",
            "boolean": "False",
            "allow_override": "False",
            "allow_override_cpp": "False",
            "allow_hide_cpp": "False",
            "allow_overwrite": "True",
            "allow_using_method_names": "False"
        }
    },
    "tensorflow.compat.v1.flags.FlagHolder": {
        "short name": "FlagHolder",
        "parameters": {
            "flag_values": null,
            "flag": null,
            "ensure_non_none_value": "False"
        }
    },
    "tensorflow.compat.v1.flags.FlagNameConflictsWithMethodError": {
        "short name": "FlagNameConflictsWithMethodError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.FlagValues": {
        "short name": "FlagValues",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.FloatParser": {
        "short name": "FloatParser",
        "parameters": {
            "lower_bound": "None",
            "upper_bound": "None"
        }
    },
    "tensorflow.compat.v1.flags.IllegalFlagValueError": {
        "short name": "IllegalFlagValueError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.IntegerParser": {
        "short name": "IntegerParser",
        "parameters": {
            "lower_bound": "None",
            "upper_bound": "None"
        }
    },
    "tensorflow.compat.v1.flags.ListParser": {
        "short name": "ListParser",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.ListSerializer": {
        "short name": "ListSerializer",
        "parameters": {
            "list_sep": null
        }
    },
    "tensorflow.compat.v1.flags.MultiEnumClassFlag": {
        "short name": "MultiEnumClassFlag",
        "parameters": {
            "name": null,
            "default": null,
            "help_string": null,
            "enum_class": null,
            "case_sensitive": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.MultiFlag": {
        "short name": "MultiFlag",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.flags.UnparsedFlagAccessError": {
        "short name": "UnparsedFlagAccessError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.UnrecognizedFlagError": {
        "short name": "UnrecognizedFlagError",
        "parameters": {
            "flagname": null,
            "flagvalue": "''",
            "suggestions": "None"
        }
    },
    "tensorflow.compat.v1.flags.ValidationError": {
        "short name": "ValidationError",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.WhitespaceSeparatedListParser": {
        "short name": "WhitespaceSeparatedListParser",
        "parameters": {
            "comma_compat": "False"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE": {
        "short name": "DEFINE",
        "parameters": {
            "parser": null,
            "name": null,
            "default": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "serializer": "None",
            "module_name": "None",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_alias": {
        "short name": "DEFINE_alias",
        "parameters": {
            "name": null,
            "original_name": null,
            "flag_values": "_flagvalues.FLAGS",
            "module_name": "None"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_bool": {
        "short name": "DEFINE_bool",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "module_name": "None",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_enum": {
        "short name": "DEFINE_enum",
        "parameters": {
            "name": null,
            "default": null,
            "enum_values": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "module_name": "None",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_enum_class": {
        "short name": "DEFINE_enum_class",
        "parameters": {
            "name": null,
            "default": null,
            "enum_class": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "module_name": "None",
            "case_sensitive": "False",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_flag": {
        "short name": "DEFINE_flag",
        "parameters": {
            "flag": null,
            "flag_values": "_flagvalues.FLAGS",
            "module_name": "None",
            "required": "False"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_float": {
        "short name": "DEFINE_float",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "lower_bound": "None",
            "upper_bound": "None",
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_integer": {
        "short name": "DEFINE_integer",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "lower_bound": "None",
            "upper_bound": "None",
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_list": {
        "short name": "DEFINE_list",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_multi": {
        "short name": "DEFINE_multi",
        "parameters": {
            "parser": null,
            "serializer": null,
            "name": null,
            "default": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "module_name": "None",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_multi_enum": {
        "short name": "DEFINE_multi_enum",
        "parameters": {
            "name": null,
            "default": null,
            "enum_values": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "case_sensitive": "True",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_multi_enum_class": {
        "short name": "DEFINE_multi_enum_class",
        "parameters": {
            "name": null,
            "default": null,
            "enum_class": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "module_name": "None",
            "case_sensitive": "False",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_multi_float": {
        "short name": "DEFINE_multi_float",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "lower_bound": "None",
            "upper_bound": "None",
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_multi_integer": {
        "short name": "DEFINE_multi_integer",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "lower_bound": "None",
            "upper_bound": "None",
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_multi_string": {
        "short name": "DEFINE_multi_string",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_spaceseplist": {
        "short name": "DEFINE_spaceseplist",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "comma_compat": "False",
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.DEFINE_string": {
        "short name": "DEFINE_string",
        "parameters": {
            "name": null,
            "default": null,
            "help": null,
            "flag_values": "_flagvalues.FLAGS",
            "required": "False",
            "null": "args"
        }
    },
    "tensorflow.compat.v1.flags.FLAGS": {
        "short name": "FLAGS",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.flags.adopt_module_key_flags": {
        "short name": "adopt_module_key_flags",
        "parameters": {
            "module": null,
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.declare_key_flag": {
        "short name": "declare_key_flag",
        "parameters": {
            "flag_name": null,
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.disclaim_key_flags": {
        "short name": "disclaim_key_flags",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.doc_to_help": {
        "short name": "doc_to_help",
        "parameters": {
            "doc": null
        }
    },
    "tensorflow.compat.v1.flags.flag_dict_to_args": {
        "short name": "flag_dict_to_args",
        "parameters": {
            "flag_map": null,
            "multi_flags": "None"
        }
    },
    "tensorflow.compat.v1.flags.get_help_width": {
        "short name": "get_help_width",
        "parameters": {}
    },
    "tensorflow.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": {
        "short name": "mark_bool_flags_as_mutual_exclusive",
        "parameters": {
            "flag_names": null,
            "required": "False",
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.mark_flag_as_required": {
        "short name": "mark_flag_as_required",
        "parameters": {
            "flag_name": null,
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.mark_flags_as_mutual_exclusive": {
        "short name": "mark_flags_as_mutual_exclusive",
        "parameters": {
            "flag_names": null,
            "required": "False",
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.mark_flags_as_required": {
        "short name": "mark_flags_as_required",
        "parameters": {
            "flag_names": null,
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.multi_flags_validator": {
        "short name": "multi_flags_validator",
        "parameters": {
            "flag_names": null,
            "message": "'Flag validation failed'",
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.register_multi_flags_validator": {
        "short name": "register_multi_flags_validator",
        "parameters": {
            "flag_names": null,
            "multi_flags_checker": null,
            "message": "'Flags validation failed'",
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.register_validator": {
        "short name": "register_validator",
        "parameters": {
            "flag_name": null,
            "checker": null,
            "message": "'Flag validation failed'",
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.flags.text_wrap": {
        "short name": "text_wrap",
        "parameters": {
            "text": null,
            "length": "None",
            "indent": "''",
            "firstline_indent": "None"
        }
    },
    "tensorflow.compat.v1.flags.validator": {
        "short name": "validator",
        "parameters": {
            "flag_name": null,
            "message": "'Flag validation failed'",
            "flag_values": "_flagvalues.FLAGS"
        }
    },
    "tensorflow.compat.v1.gfile.FastGFile": {
        "short name": "FastGFile",
        "parameters": {
            "name": null,
            "mode": "'r'"
        }
    },
    "tensorflow.compat.v1.gfile.Copy": {
        "short name": "Copy",
        "parameters": {
            "oldpath": null,
            "newpath": null,
            "overwrite": "False"
        }
    },
    "tensorflow.compat.v1.gfile.DeleteRecursively": {
        "short name": "DeleteRecursively",
        "parameters": {
            "dirname": null
        }
    },
    "tensorflow.compat.v1.gfile.Exists": {
        "short name": "Exists",
        "parameters": {
            "filename": null
        }
    },
    "tensorflow.compat.v1.gfile.Glob": {
        "short name": "Glob",
        "parameters": {
            "filename": null
        }
    },
    "tensorflow.compat.v1.gfile.IsDirectory": {
        "short name": "IsDirectory",
        "parameters": {
            "dirname": null
        }
    },
    "tensorflow.compat.v1.gfile.ListDirectory": {
        "short name": "ListDirectory",
        "parameters": {
            "dirname": null
        }
    },
    "tensorflow.compat.v1.gfile.MakeDirs": {
        "short name": "MakeDirs",
        "parameters": {
            "dirname": null
        }
    },
    "tensorflow.compat.v1.gfile.MkDir": {
        "short name": "MkDir",
        "parameters": {
            "dirname": null
        }
    },
    "tensorflow.compat.v1.gfile.Remove": {
        "short name": "Remove",
        "parameters": {
            "filename": null
        }
    },
    "tensorflow.compat.v1.gfile.Rename": {
        "short name": "Rename",
        "parameters": {
            "oldname": null,
            "newname": null,
            "overwrite": "False"
        }
    },
    "tensorflow.compat.v1.gfile.Stat": {
        "short name": "Stat",
        "parameters": {
            "filename": null
        }
    },
    "tensorflow.compat.v1.gfile.Walk": {
        "short name": "Walk",
        "parameters": {
            "top": null,
            "in_order": "True"
        }
    },
    "tensorflow.compat.v1.graph_util.convert_variables_to_constants": {
        "short name": "convert_variables_to_constants",
        "parameters": {
            "sess": null,
            "input_graph_def": null,
            "output_node_names": null,
            "variable_names_whitelist": "None",
            "variable_names_blacklist": "None"
        }
    },
    "tensorflow.compat.v1.graph_util.extract_sub_graph": {
        "short name": "extract_sub_graph",
        "parameters": {
            "graph_def": null,
            "dest_nodes": null
        }
    },
    "tensorflow.compat.v1.graph_util.must_run_on_cpu": {
        "short name": "must_run_on_cpu",
        "parameters": {
            "node": null,
            "pin_variables_on_cpu": "False"
        }
    },
    "tensorflow.compat.v1.graph_util.remove_training_nodes": {
        "short name": "remove_training_nodes",
        "parameters": {
            "input_graph": null,
            "protected_nodes": "None"
        }
    },
    "tensorflow.compat.v1.graph_util.tensor_shape_from_node_def_name": {
        "short name": "tensor_shape_from_node_def_name",
        "parameters": {
            "graph": null,
            "input_name": null
        }
    },
    "tensorflow.compat.v1.image.ResizeMethod": {
        "short name": "ResizeMethod",
        "parameters": {}
    },
    "tensorflow.compat.v1.image.crop_and_resize": {
        "short name": "crop_and_resize",
        "parameters": {
            "image": null,
            "boxes": null,
            "box_ind": "None",
            "crop_size": "None",
            "method": "'bilinear'",
            "extrapolation_value": "0",
            "name": "None",
            "box_indices": "None"
        }
    },
    "tensorflow.compat.v1.image.draw_bounding_boxes": {
        "short name": "draw_bounding_boxes",
        "parameters": {
            "images": null,
            "boxes": null,
            "name": "None",
            "colors": "None"
        }
    },
    "tensorflow.compat.v1.image.extract_glimpse": {
        "short name": "extract_glimpse",
        "parameters": {
            "input": null,
            "size": null,
            "offsets": null,
            "centered": "True",
            "normalized": "True",
            "uniform_noise": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.image.resize": {
        "short name": "resize",
        "parameters": {
            "images": null,
            "size": null,
            "method": "ResizeMethodV1.BILINEAR",
            "align_corners": "False",
            "preserve_aspect_ratio": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.image.resize_area": {
        "short name": "resize_area",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.image.resize_bicubic": {
        "short name": "resize_bicubic",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "name": "None",
            "half_pixel_centers": "False"
        }
    },
    "tensorflow.compat.v1.image.resize_bilinear": {
        "short name": "resize_bilinear",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "name": "None",
            "half_pixel_centers": "False"
        }
    },
    "tensorflow.compat.v1.image.resize_image_with_pad": {
        "short name": "resize_image_with_pad",
        "parameters": {
            "image": null,
            "target_height": null,
            "target_width": null,
            "method": "ResizeMethodV1.BILINEAR",
            "align_corners": "False"
        }
    },
    "tensorflow.compat.v1.image.resize_nearest_neighbor": {
        "short name": "resize_nearest_neighbor",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "name": "None",
            "half_pixel_centers": "False"
        }
    },
    "tensorflow.compat.v1.image.sample_distorted_bounding_box": {
        "short name": "sample_distorted_bounding_box",
        "parameters": {
            "image_size": null,
            "bounding_boxes": null,
            "seed": "None",
            "seed2": "None",
            "min_object_covered": "0.1",
            "aspect_ratio_range": "None",
            "area_range": "None",
            "max_attempts": "None",
            "use_image_if_no_bounding_boxes": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.Identity": {
        "short name": "Identity",
        "parameters": {
            "gain": "1.0",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.initializers.he_normal": {
        "short name": "he_normal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.initializers.he_uniform": {
        "short name": "he_uniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.initializers.lecun_normal": {
        "short name": "lecun_normal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.initializers.lecun_uniform": {
        "short name": "lecun_uniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.io.TFRecordCompressionType": {
        "short name": "TFRecordCompressionType",
        "parameters": {}
    },
    "tensorflow.compat.v1.io.tensorflow_record_iterator": {
        "short name": "tf_record_iterator",
        "parameters": {
            "path": null,
            "options": "None"
        }
    },
    "tensorflow.compat.v1.layers.AveragePooling1D": {
        "short name": "AveragePooling1D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.AveragePooling2D": {
        "short name": "AveragePooling2D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.AveragePooling3D": {
        "short name": "AveragePooling3D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.BatchNormalization": {
        "short name": "BatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "tf.compat.v1.zeros_initializer()",
            "gamma_initializer": "tf.compat.v1.ones_initializer()",
            "moving_mean_initializer": "tf.compat.v1.zeros_initializer()",
            "moving_variance_initializer": "tf.compat.v1.ones_initializer()",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "renorm": "False",
            "renorm_clipping": "None",
            "renorm_momentum": "0.99",
            "fused": "None",
            "trainable": "True",
            "virtual_batch_size": "None",
            "adjustment": "None",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv1D": {
        "short name": "Conv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv2D": {
        "short name": "Conv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv2DTranspose": {
        "short name": "Conv2DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv3D": {
        "short name": "Conv3D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Conv3DTranspose": {
        "short name": "Conv3DTranspose",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Dense": {
        "short name": "Dense",
        "parameters": {
            "units": null,
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Dropout": {
        "short name": "Dropout",
        "parameters": {
            "rate": "0.5",
            "noise_shape": "None",
            "seed": "None",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Flatten": {
        "short name": "Flatten",
        "parameters": {
            "data_format": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.Layer": {
        "short name": "Layer",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.MaxPooling1D": {
        "short name": "MaxPooling1D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.MaxPooling2D": {
        "short name": "MaxPooling2D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.MaxPooling3D": {
        "short name": "MaxPooling3D",
        "parameters": {
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.SeparableConv1D": {
        "short name": "SeparableConv1D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "None",
            "pointwise_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.SeparableConv2D": {
        "short name": "SeparableConv2D",
        "parameters": {
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1)",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "None",
            "pointwise_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.layers.average_pooling1d": {
        "short name": "average_pooling1d",
        "parameters": {
            "inputs": null,
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.layers.average_pooling2d": {
        "short name": "average_pooling2d",
        "parameters": {
            "inputs": null,
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.layers.average_pooling3d": {
        "short name": "average_pooling3d",
        "parameters": {
            "inputs": null,
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.layers.batch_normalization": {
        "short name": "batch_normalization",
        "parameters": {
            "inputs": null,
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "tf.compat.v1.zeros_initializer()",
            "gamma_initializer": "tf.compat.v1.ones_initializer()",
            "moving_mean_initializer": "tf.compat.v1.zeros_initializer()",
            "moving_variance_initializer": "tf.compat.v1.ones_initializer()",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "training": "False",
            "trainable": "True",
            "name": "None",
            "reuse": "None",
            "renorm": "False",
            "renorm_clipping": "None",
            "renorm_momentum": "0.99",
            "fused": "None",
            "virtual_batch_size": "None",
            "adjustment": "None"
        }
    },
    "tensorflow.compat.v1.layers.conv1d": {
        "short name": "conv1d",
        "parameters": {
            "inputs": null,
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.layers.conv2d": {
        "short name": "conv2d",
        "parameters": {
            "inputs": null,
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.layers.conv2d_transpose": {
        "short name": "conv2d_transpose",
        "parameters": {
            "inputs": null,
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.layers.conv3d": {
        "short name": "conv3d",
        "parameters": {
            "inputs": null,
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1, 1)",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.layers.conv3d_transpose": {
        "short name": "conv3d_transpose",
        "parameters": {
            "inputs": null,
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.layers.dense": {
        "short name": "dense",
        "parameters": {
            "inputs": null,
            "units": null,
            "activation": "None",
            "use_bias": "True",
            "kernel_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.layers.dropout": {
        "short name": "dropout",
        "parameters": {
            "inputs": null,
            "rate": "0.5",
            "noise_shape": "None",
            "seed": "None",
            "training": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.layers.flatten": {
        "short name": "flatten",
        "parameters": {
            "inputs": null,
            "name": "None",
            "data_format": "'channels_last'"
        }
    },
    "tensorflow.compat.v1.layers.max_pooling1d": {
        "short name": "max_pooling1d",
        "parameters": {
            "inputs": null,
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.layers.max_pooling2d": {
        "short name": "max_pooling2d",
        "parameters": {
            "inputs": null,
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.layers.max_pooling3d": {
        "short name": "max_pooling3d",
        "parameters": {
            "inputs": null,
            "pool_size": null,
            "strides": null,
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.layers.separable_conv1d": {
        "short name": "separable_conv1d",
        "parameters": {
            "inputs": null,
            "filters": null,
            "kernel_size": null,
            "strides": "1",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "1",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "None",
            "pointwise_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.layers.separable_conv2d": {
        "short name": "separable_conv2d",
        "parameters": {
            "inputs": null,
            "filters": null,
            "kernel_size": null,
            "strides": "(1, 1)",
            "padding": "'valid'",
            "data_format": "'channels_last'",
            "dilation_rate": "(1, 1)",
            "depth_multiplier": "1",
            "activation": "None",
            "use_bias": "True",
            "depthwise_initializer": "None",
            "pointwise_initializer": "None",
            "bias_initializer": "tf.compat.v1.zeros_initializer()",
            "depthwise_regularizer": "None",
            "pointwise_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "depthwise_constraint": "None",
            "pointwise_constraint": "None",
            "bias_constraint": "None",
            "trainable": "True",
            "name": "None",
            "reuse": "None"
        }
    },
    "tensorflow.compat.v1.lite.OpHint": {
        "short name": "OpHint",
        "parameters": {
            "function_name": null,
            "level": "1",
            "children_inputs_mappings": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.lite.TFLiteConverter": {
        "short name": "TFLiteConverter",
        "parameters": {
            "graph_def": null,
            "input_tensors": null,
            "output_tensors": null,
            "input_arrays_with_shape": "None",
            "output_arrays": "None",
            "experimental_debug_info_func": "None"
        }
    },
    "tensorflow.compat.v1.lite.TocoConverter": {
        "short name": "TocoConverter",
        "parameters": {}
    },
    "tensorflow.compat.v1.lite.toco_convert": {
        "short name": "toco_convert",
        "parameters": {
            "input_data": null,
            "input_tensors": null,
            "output_tensors": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.TaskLevelStatusMessage": {
        "short name": "TaskLevelStatusMessage",
        "parameters": {
            "msg": null
        }
    },
    "tensorflow.compat.v1.logging.debug": {
        "short name": "debug",
        "parameters": {
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.error": {
        "short name": "error",
        "parameters": {
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.fatal": {
        "short name": "fatal",
        "parameters": {
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.flush": {
        "short name": "flush",
        "parameters": {}
    },
    "tensorflow.compat.v1.logging.get_verbosity": {
        "short name": "get_verbosity",
        "parameters": {}
    },
    "tensorflow.compat.v1.logging.info": {
        "short name": "info",
        "parameters": {
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.log": {
        "short name": "log",
        "parameters": {
            "level": null,
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.log_every_n": {
        "short name": "log_every_n",
        "parameters": {
            "level": null,
            "msg": null,
            "n": null,
            "*args": null
        }
    },
    "tensorflow.compat.v1.logging.log_first_n": {
        "short name": "log_first_n",
        "parameters": {
            "level": null,
            "msg": null,
            "n": null,
            "*args": null
        }
    },
    "tensorflow.compat.v1.logging.log_if": {
        "short name": "log_if",
        "parameters": {
            "level": null,
            "msg": null,
            "condition": null,
            "*args": null
        }
    },
    "tensorflow.compat.v1.logging.set_verbosity": {
        "short name": "set_verbosity",
        "parameters": {
            "v": null
        }
    },
    "tensorflow.compat.v1.logging.vlog": {
        "short name": "vlog",
        "parameters": {
            "level": null,
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.warn": {
        "short name": "warn",
        "parameters": {
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.logging.warning": {
        "short name": "warning",
        "parameters": {
            "msg": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.lookup.StaticHashTable": {
        "short name": "StaticHashTable",
        "parameters": {
            "initializer": null,
            "default_value": null,
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.compat.v1.lookup.StaticVocabularyTable": {
        "short name": "StaticVocabularyTable",
        "parameters": {
            "initializer": null,
            "num_oov_buckets": null,
            "lookup_key_dtype": "None",
            "name": "None",
            "experimental_is_anonymous": "False"
        }
    },
    "tensorflow.compat.v1.losses.Reduction": {
        "short name": "Reduction",
        "parameters": {}
    },
    "tensorflow.compat.v1.losses.absolute_difference": {
        "short name": "absolute_difference",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.add_loss": {
        "short name": "add_loss",
        "parameters": {
            "loss": null,
            "loss_collection": "ops.GraphKeys.LOSSES"
        }
    },
    "tensorflow.compat.v1.losses.compute_weighted_loss": {
        "short name": "compute_weighted_loss",
        "parameters": {
            "losses": null,
            "weights": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.cosine_distance": {
        "short name": "cosine_distance",
        "parameters": {
            "labels": null,
            "predictions": null,
            "axis": "None",
            "weights": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS",
            "dim": "None"
        }
    },
    "tensorflow.compat.v1.losses.get_losses": {
        "short name": "get_losses",
        "parameters": {
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES"
        }
    },
    "tensorflow.compat.v1.losses.get_regularization_loss": {
        "short name": "get_regularization_loss",
        "parameters": {
            "scope": "None",
            "name": "'total_regularization_loss'"
        }
    },
    "tensorflow.compat.v1.losses.get_regularization_losses": {
        "short name": "get_regularization_losses",
        "parameters": {
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.losses.get_total_loss": {
        "short name": "get_total_loss",
        "parameters": {
            "add_regularization_losses": "True",
            "name": "'total_loss'",
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.losses.hinge_loss": {
        "short name": "hinge_loss",
        "parameters": {
            "labels": null,
            "logits": null,
            "weights": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.huber_loss": {
        "short name": "huber_loss",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "1.0",
            "delta": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.log_loss": {
        "short name": "log_loss",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "1.0",
            "epsilon": "1e-07",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.mean_pairwise_squared_error": {
        "short name": "mean_pairwise_squared_error",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES"
        }
    },
    "tensorflow.compat.v1.losses.mean_squared_error": {
        "short name": "mean_squared_error",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.sigmoid_cross_entropy": {
        "short name": "sigmoid_cross_entropy",
        "parameters": {
            "multi_class_labels": null,
            "logits": null,
            "weights": "1.0",
            "label_smoothing": "0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.softmax_cross_entropy": {
        "short name": "softmax_cross_entropy",
        "parameters": {
            "onehot_labels": null,
            "logits": null,
            "weights": "1.0",
            "label_smoothing": "0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.losses.sparse_softmax_cross_entropy": {
        "short name": "sparse_softmax_cross_entropy",
        "parameters": {
            "labels": null,
            "logits": null,
            "weights": "1.0",
            "scope": "None",
            "loss_collection": "ops.GraphKeys.LOSSES",
            "reduction": "Reduction.SUM_BY_NONZERO_WEIGHTS"
        }
    },
    "tensorflow.compat.v1.math.in_top_k": {
        "short name": "in_top_k",
        "parameters": {
            "predictions": null,
            "targets": null,
            "k": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.math.log_softmax": {
        "short name": "log_softmax",
        "parameters": {
            "logits": null,
            "axis": "None",
            "name": "None",
            "dim": "None"
        }
    },
    "tensorflow.compat.v1.math.softmax": {
        "short name": "softmax",
        "parameters": {
            "logits": null,
            "axis": "None",
            "name": "None",
            "dim": "None"
        }
    },
    "tensorflow.compat.v1.metrics.accuracy": {
        "short name": "accuracy",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.auc": {
        "short name": "auc",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "num_thresholds": "200",
            "metrics_collections": "None",
            "updates_collections": "None",
            "curve": "'ROC'",
            "name": "None",
            "summation_method": "'trapezoidal'",
            "thresholds": "None"
        }
    },
    "tensorflow.compat.v1.metrics.average_precision_at_k": {
        "short name": "average_precision_at_k",
        "parameters": {
            "labels": null,
            "predictions": null,
            "k": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.false_negatives": {
        "short name": "false_negatives",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.false_negatives_at_thresholds": {
        "short name": "false_negatives_at_thresholds",
        "parameters": {
            "labels": null,
            "predictions": null,
            "thresholds": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.false_positives": {
        "short name": "false_positives",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.false_positives_at_thresholds": {
        "short name": "false_positives_at_thresholds",
        "parameters": {
            "labels": null,
            "predictions": null,
            "thresholds": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean": {
        "short name": "mean",
        "parameters": {
            "values": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean_absolute_error": {
        "short name": "mean_absolute_error",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean_cosine_distance": {
        "short name": "mean_cosine_distance",
        "parameters": {
            "labels": null,
            "predictions": null,
            "dim": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean_iou": {
        "short name": "mean_iou",
        "parameters": {
            "labels": null,
            "predictions": null,
            "num_classes": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean_per_class_accuracy": {
        "short name": "mean_per_class_accuracy",
        "parameters": {
            "labels": null,
            "predictions": null,
            "num_classes": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean_relative_error": {
        "short name": "mean_relative_error",
        "parameters": {
            "labels": null,
            "predictions": null,
            "normalizer": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean_squared_error": {
        "short name": "mean_squared_error",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.mean_tensor": {
        "short name": "mean_tensor",
        "parameters": {
            "values": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.percentage_below": {
        "short name": "percentage_below",
        "parameters": {
            "values": null,
            "threshold": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.precision": {
        "short name": "precision",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.precision_at_k": {
        "short name": "precision_at_k",
        "parameters": {
            "labels": null,
            "predictions": null,
            "k": null,
            "class_id": "None",
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.precision_at_thresholds": {
        "short name": "precision_at_thresholds",
        "parameters": {
            "labels": null,
            "predictions": null,
            "thresholds": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.precision_at_top_k": {
        "short name": "precision_at_top_k",
        "parameters": {
            "labels": null,
            "predictions_idx": null,
            "k": "None",
            "class_id": "None",
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.recall": {
        "short name": "recall",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.recall_at_k": {
        "short name": "recall_at_k",
        "parameters": {
            "labels": null,
            "predictions": null,
            "k": null,
            "class_id": "None",
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.recall_at_thresholds": {
        "short name": "recall_at_thresholds",
        "parameters": {
            "labels": null,
            "predictions": null,
            "thresholds": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.recall_at_top_k": {
        "short name": "recall_at_top_k",
        "parameters": {
            "labels": null,
            "predictions_idx": null,
            "k": "None",
            "class_id": "None",
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.root_mean_squared_error": {
        "short name": "root_mean_squared_error",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.sensitivity_at_specificity": {
        "short name": "sensitivity_at_specificity",
        "parameters": {
            "labels": null,
            "predictions": null,
            "specificity": null,
            "weights": "None",
            "num_thresholds": "200",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.sparse_average_precision_at_k": {
        "short name": "sparse_average_precision_at_k",
        "parameters": {
            "labels": null,
            "predictions": null,
            "k": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.sparse_precision_at_k": {
        "short name": "sparse_precision_at_k",
        "parameters": {
            "labels": null,
            "predictions": null,
            "k": null,
            "class_id": "None",
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.specificity_at_sensitivity": {
        "short name": "specificity_at_sensitivity",
        "parameters": {
            "labels": null,
            "predictions": null,
            "sensitivity": null,
            "weights": "None",
            "num_thresholds": "200",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.true_negatives": {
        "short name": "true_negatives",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.true_negatives_at_thresholds": {
        "short name": "true_negatives_at_thresholds",
        "parameters": {
            "labels": null,
            "predictions": null,
            "thresholds": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.true_positives": {
        "short name": "true_positives",
        "parameters": {
            "labels": null,
            "predictions": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.metrics.true_positives_at_thresholds": {
        "short name": "true_positives_at_thresholds",
        "parameters": {
            "labels": null,
            "predictions": null,
            "thresholds": null,
            "weights": "None",
            "metrics_collections": "None",
            "updates_collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.mixed_precision.DynamicLossScale": {
        "short name": "DynamicLossScale",
        "parameters": {
            "initial_loss_scale": "2 ** 15",
            "increment_period": "2000",
            "multiplier": "2.0"
        }
    },
    "tensorflow.compat.v1.mixed_precision.FixedLossScale": {
        "short name": "FixedLossScale",
        "parameters": {
            "loss_scale_value": null
        }
    },
    "tensorflow.compat.v1.mixed_precision.LossScale": {
        "short name": "LossScale",
        "parameters": {}
    },
    "tensorflow.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": {
        "short name": "MixedPrecisionLossScaleOptimizer",
        "parameters": {
            "opt": null,
            "loss_scale": null
        }
    },
    "tensorflow.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": {
        "short name": "disable_mixed_precision_graph_rewrite",
        "parameters": {}
    },
    "tensorflow.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": {
        "short name": "enable_mixed_precision_graph_rewrite",
        "parameters": {
            "opt": null,
            "loss_scale": "'dynamic'"
        }
    },
    "tensorflow.compat.v1.nn.avg_pool": {
        "short name": "avg_pool",
        "parameters": {
            "value": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None",
            "input": "None"
        }
    },
    "tensorflow.compat.v1.nn.batch_norm_with_global_normalization": {
        "short name": "batch_norm_with_global_normalization",
        "parameters": {
            "t": "None",
            "m": "None",
            "v": "None",
            "beta": "None",
            "gamma": "None",
            "variance_epsilon": "None",
            "scale_after_normalization": "None",
            "name": "None",
            "input": "None",
            "mean": "None",
            "variance": "None"
        }
    },
    "tensorflow.compat.v1.nn.bidirectional_dynamic_rnn": {
        "short name": "bidirectional_dynamic_rnn",
        "parameters": {
            "cell_fw": null,
            "cell_bw": null,
            "inputs": null,
            "sequence_length": "None",
            "initial_state_fw": "None",
            "initial_state_bw": "None",
            "dtype": "None",
            "parallel_iterations": "None",
            "swap_memory": "False",
            "time_major": "False",
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv1d": {
        "short name": "conv1d",
        "parameters": {
            "value": "None",
            "filters": "None",
            "stride": "None",
            "padding": "None",
            "use_cudnn_on_gpu": "None",
            "data_format": "None",
            "name": "None",
            "input": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv2d": {
        "short name": "conv2d",
        "parameters": {
            "input": null,
            "filter": "None",
            "strides": "None",
            "padding": "None",
            "use_cudnn_on_gpu": "True",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None",
            "filters": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv2d_backprop_filter": {
        "short name": "conv2d_backprop_filter",
        "parameters": {
            "input": null,
            "filter_sizes": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "use_cudnn_on_gpu": "True",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv2d_backprop_input": {
        "short name": "conv2d_backprop_input",
        "parameters": {
            "input_sizes": null,
            "filter": "None",
            "out_backprop": "None",
            "strides": "None",
            "padding": "None",
            "use_cudnn_on_gpu": "True",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None",
            "filters": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv2d_transpose": {
        "short name": "conv2d_transpose",
        "parameters": {
            "value": "None",
            "filter": "None",
            "output_shape": "None",
            "strides": "None",
            "padding": "'SAME'",
            "data_format": "'NHWC'",
            "name": "None",
            "input": "None",
            "filters": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv3d": {
        "short name": "conv3d",
        "parameters": {
            "input": null,
            "filter": "None",
            "strides": "None",
            "padding": "None",
            "data_format": "'NDHWC'",
            "dilations": "[1, 1, 1, 1, 1]",
            "name": "None",
            "filters": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv3d_backprop_filter": {
        "short name": "conv3d_backprop_filter",
        "parameters": {
            "input": null,
            "filter_sizes": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "dilations": "[1, 1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.conv3d_transpose": {
        "short name": "conv3d_transpose",
        "parameters": {
            "value": null,
            "filter": "None",
            "output_shape": "None",
            "strides": "None",
            "padding": "'SAME'",
            "data_format": "'NDHWC'",
            "name": "None",
            "input": "None",
            "filters": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.convolution": {
        "short name": "convolution",
        "parameters": {
            "input": null,
            "filter": null,
            "padding": null,
            "strides": "None",
            "dilation_rate": "None",
            "name": "None",
            "data_format": "None",
            "filters": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.crelu": {
        "short name": "crelu",
        "parameters": {
            "features": null,
            "name": "None",
            "axis": "-1"
        }
    },
    "tensorflow.compat.v1.nn.ctc_beam_search_decoder": {
        "short name": "ctc_beam_search_decoder",
        "parameters": {
            "inputs": null,
            "sequence_length": null,
            "beam_width": "100",
            "top_paths": "1",
            "merge_repeated": "True"
        }
    },
    "tensorflow.compat.v1.nn.ctc_loss": {
        "short name": "ctc_loss",
        "parameters": {
            "labels": null,
            "inputs": "None",
            "sequence_length": "None",
            "preprocess_collapse_repeated": "False",
            "ctc_merge_repeated": "True",
            "ignore_longer_outputs_than_inputs": "False",
            "time_major": "True",
            "logits": "None"
        }
    },
    "tensorflow.compat.v1.nn.ctc_loss_v2": {
        "short name": "ctc_loss_v2",
        "parameters": {
            "labels": null,
            "logits": null,
            "label_length": null,
            "logit_length": null,
            "logits_time_major": "True",
            "unique": "None",
            "blank_index": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.depthwise_conv2d": {
        "short name": "depthwise_conv2d",
        "parameters": {
            "input": null,
            "filter": null,
            "strides": null,
            "padding": null,
            "rate": "None",
            "name": "None",
            "data_format": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.depthwise_conv2d_native": {
        "short name": "depthwise_conv2d_native",
        "parameters": {
            "input": null,
            "filter": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.dilation2d": {
        "short name": "dilation2d",
        "parameters": {
            "input": null,
            "filter": "None",
            "strides": "None",
            "rates": "None",
            "padding": "None",
            "name": "None",
            "filters": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.dropout": {
        "short name": "dropout",
        "parameters": {
            "x": null,
            "keep_prob": "None",
            "noise_shape": "None",
            "seed": "None",
            "name": "None",
            "rate": "None"
        }
    },
    "tensorflow.compat.v1.nn.dynamic_rnn": {
        "short name": "dynamic_rnn",
        "parameters": {
            "cell": null,
            "inputs": null,
            "sequence_length": "None",
            "initial_state": "None",
            "dtype": "None",
            "parallel_iterations": "None",
            "swap_memory": "False",
            "time_major": "False",
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.nn.embedding_lookup": {
        "short name": "embedding_lookup",
        "parameters": {
            "params": null,
            "ids": null,
            "partition_strategy": "'mod'",
            "name": "None",
            "validate_indices": "True",
            "max_norm": "None"
        }
    },
    "tensorflow.compat.v1.nn.embedding_lookup_sparse": {
        "short name": "embedding_lookup_sparse",
        "parameters": {
            "params": null,
            "sp_ids": null,
            "sp_weights": null,
            "partition_strategy": "'mod'",
            "name": "None",
            "combiner": "None",
            "max_norm": "None"
        }
    },
    "tensorflow.compat.v1.nn.erosion2d": {
        "short name": "erosion2d",
        "parameters": {
            "value": null,
            "kernel": null,
            "strides": null,
            "rates": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.fractional_avg_pool": {
        "short name": "fractional_avg_pool",
        "parameters": {
            "value": null,
            "pooling_ratio": null,
            "pseudo_random": "False",
            "overlapping": "False",
            "deterministic": "False",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.fractional_max_pool": {
        "short name": "fractional_max_pool",
        "parameters": {
            "value": null,
            "pooling_ratio": null,
            "pseudo_random": "False",
            "overlapping": "False",
            "deterministic": "False",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.fused_batch_norm": {
        "short name": "fused_batch_norm",
        "parameters": {
            "x": null,
            "scale": null,
            "offset": null,
            "mean": "None",
            "variance": "None",
            "epsilon": "0.001",
            "data_format": "'NHWC'",
            "is_training": "True",
            "name": "None",
            "exponential_avg_factor": "1.0"
        }
    },
    "tensorflow.compat.v1.nn.max_pool": {
        "short name": "max_pool",
        "parameters": {
            "value": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None",
            "input": "None"
        }
    },
    "tensorflow.compat.v1.nn.max_pool_with_argmax": {
        "short name": "max_pool_with_argmax",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "Targmax": "None",
            "name": "None",
            "output_dtype": "None",
            "include_batch_in_index": "False"
        }
    },
    "tensorflow.compat.v1.nn.moments": {
        "short name": "moments",
        "parameters": {
            "x": null,
            "axes": null,
            "shift": "None",
            "name": "None",
            "keep_dims": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.compat.v1.nn.nce_loss": {
        "short name": "nce_loss",
        "parameters": {
            "weights": null,
            "biases": null,
            "labels": null,
            "inputs": null,
            "num_sampled": null,
            "num_classes": null,
            "num_true": "1",
            "sampled_values": "None",
            "remove_accidental_hits": "False",
            "partition_strategy": "'mod'",
            "name": "'nce_loss'"
        }
    },
    "tensorflow.compat.v1.nn.pool": {
        "short name": "pool",
        "parameters": {
            "input": null,
            "window_shape": null,
            "pooling_type": null,
            "padding": null,
            "dilation_rate": "None",
            "strides": "None",
            "name": "None",
            "data_format": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.quantized_avg_pool": {
        "short name": "quantized_avg_pool",
        "parameters": {
            "input": null,
            "min_input": null,
            "max_input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.quantized_conv2d": {
        "short name": "quantized_conv2d",
        "parameters": {
            "input": null,
            "filter": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.quantized_max_pool": {
        "short name": "quantized_max_pool",
        "parameters": {
            "input": null,
            "min_input": null,
            "max_input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.quantized_relu_x": {
        "short name": "quantized_relu_x",
        "parameters": {
            "features": null,
            "max_value": null,
            "min_features": null,
            "max_features": null,
            "out_type": "tf.dtypes.quint8",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.raw_rnn": {
        "short name": "raw_rnn",
        "parameters": {
            "cell": null,
            "loop_fn": null,
            "parallel_iterations": "None",
            "swap_memory": "False",
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.nn.relu_layer": {
        "short name": "relu_layer",
        "parameters": {
            "x": null,
            "weights": null,
            "biases": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.safe_embedding_lookup_sparse": {
        "short name": "safe_embedding_lookup_sparse",
        "parameters": {
            "embedding_weights": null,
            "sparse_ids": null,
            "sparse_weights": "None",
            "combiner": "'mean'",
            "default_id": "None",
            "name": "None",
            "partition_strategy": "'div'",
            "max_norm": "None"
        }
    },
    "tensorflow.compat.v1.nn.sampled_softmax_loss": {
        "short name": "sampled_softmax_loss",
        "parameters": {
            "weights": null,
            "biases": null,
            "labels": null,
            "inputs": null,
            "num_sampled": null,
            "num_classes": null,
            "num_true": "1",
            "sampled_values": "None",
            "remove_accidental_hits": "True",
            "partition_strategy": "'mod'",
            "name": "'sampled_softmax_loss'",
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.nn.separable_conv2d": {
        "short name": "separable_conv2d",
        "parameters": {
            "input": null,
            "depthwise_filter": null,
            "pointwise_filter": null,
            "strides": null,
            "padding": null,
            "rate": "None",
            "name": "None",
            "data_format": "None",
            "dilations": "None"
        }
    },
    "tensorflow.compat.v1.nn.sigmoid_cross_entropy_with_logits": {
        "short name": "sigmoid_cross_entropy_with_logits",
        "parameters": {
            "_sentinel": "None",
            "labels": "None",
            "logits": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits": {
        "short name": "softmax_cross_entropy_with_logits",
        "parameters": {
            "_sentinel": "None",
            "labels": "None",
            "logits": "None",
            "dim": "-1",
            "name": "None",
            "axis": "None"
        }
    },
    "tensorflow.compat.v1.nn.softmax_cross_entropy_with_logits_v2": {
        "short name": "softmax_cross_entropy_with_logits_v2",
        "parameters": {
            "labels": null,
            "logits": null,
            "axis": "None",
            "name": "None",
            "dim": "None"
        }
    },
    "tensorflow.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": {
        "short name": "sparse_softmax_cross_entropy_with_logits",
        "parameters": {
            "_sentinel": "None",
            "labels": "None",
            "logits": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.nn.static_bidirectional_rnn": {
        "short name": "static_bidirectional_rnn",
        "parameters": {
            "cell_fw": null,
            "cell_bw": null,
            "inputs": null,
            "initial_state_fw": "None",
            "initial_state_bw": "None",
            "dtype": "None",
            "sequence_length": "None",
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.nn.static_rnn": {
        "short name": "static_rnn",
        "parameters": {
            "cell": null,
            "inputs": null,
            "initial_state": "None",
            "dtype": "None",
            "sequence_length": "None",
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.nn.static_state_saving_rnn": {
        "short name": "static_state_saving_rnn",
        "parameters": {
            "cell": null,
            "inputs": null,
            "state_saver": null,
            "state_name": null,
            "sequence_length": "None",
            "scope": "None"
        }
    },
    "tensorflow.compat.v1.nn.sufficient_statistics": {
        "short name": "sufficient_statistics",
        "parameters": {
            "x": null,
            "axes": null,
            "shift": "None",
            "keep_dims": "None",
            "name": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.compat.v1.nn.weighted_cross_entropy_with_logits": {
        "short name": "weighted_cross_entropy_with_logits",
        "parameters": {
            "labels": "None",
            "logits": "None",
            "pos_weight": "None",
            "name": "None",
            "targets": "None"
        }
    },
    "tensorflow.compat.v1.nn.weighted_moments": {
        "short name": "weighted_moments",
        "parameters": {
            "x": null,
            "axes": null,
            "frequency_weights": null,
            "name": "None",
            "keep_dims": "None",
            "keepdims": "None"
        }
    },
    "tensorflow.compat.v1.nn.xw_plus_b": {
        "short name": "xw_plus_b",
        "parameters": {
            "x": null,
            "weights": null,
            "biases": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.profiler.AdviceProto": {
        "short name": "AdviceProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.GraphNodeProto": {
        "short name": "GraphNodeProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.MultiGraphNodeProto": {
        "short name": "MultiGraphNodeProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.OpLogProto": {
        "short name": "OpLogProto",
        "parameters": {}
    },
    "tensorflow.compat.v1.profiler.ProfileOptionBuilder": {
        "short name": "ProfileOptionBuilder",
        "parameters": {
            "options": "None"
        }
    },
    "tensorflow.compat.v1.profiler.Profiler": {
        "short name": "Profiler",
        "parameters": {
            "graph": "None",
            "op_log": "None"
        }
    },
    "tensorflow.compat.v1.profiler.advise": {
        "short name": "advise",
        "parameters": {
            "graph": "None",
            "run_meta": "None",
            "options": "_DEFAULT_ADVISE_OPTIONS"
        }
    },
    "tensorflow.compat.v1.profiler.profile": {
        "short name": "profile",
        "parameters": {
            "graph": "None",
            "run_meta": "None",
            "op_log": "None",
            "cmd": "'scope'",
            "options": "_DEFAULT_PROFILE_OPTIONS"
        }
    },
    "tensorflow.compat.v1.profiler.write_op_log": {
        "short name": "write_op_log",
        "parameters": {
            "graph": null,
            "log_dir": null,
            "op_log": "None",
            "run_meta": "None",
            "add_trace": "True"
        }
    },
    "tensorflow.compat.v1.ragged.RaggedTensorValue": {
        "short name": "RaggedTensorValue",
        "parameters": {
            "values": null,
            "row_splits": null
        }
    },
    "tensorflow.compat.v1.ragged.constant_value": {
        "short name": "constant_value",
        "parameters": {
            "pylist": null,
            "dtype": "None",
            "ragged_rank": "None",
            "inner_shape": "None",
            "row_splits_dtype": "'int64'"
        }
    },
    "tensorflow.compat.v1.ragged.placeholder": {
        "short name": "placeholder",
        "parameters": {
            "dtype": null,
            "ragged_rank": null,
            "value_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.random.stateless_multinomial": {
        "short name": "stateless_multinomial",
        "parameters": {
            "logits": null,
            "num_samples": null,
            "seed": null,
            "output_dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Abort": {
        "short name": "Abort",
        "parameters": {
            "error_msg": "''",
            "exit_without_error": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Abs": {
        "short name": "Abs",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AccumulateNV2": {
        "short name": "AccumulateNV2",
        "parameters": {
            "inputs": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AccumulatorApplyGradient": {
        "short name": "AccumulatorApplyGradient",
        "parameters": {
            "handle": null,
            "local_step": null,
            "gradient": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AccumulatorNumAccumulated": {
        "short name": "AccumulatorNumAccumulated",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AccumulatorSetGlobalStep": {
        "short name": "AccumulatorSetGlobalStep",
        "parameters": {
            "handle": null,
            "new_global_step": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AccumulatorTakeGradient": {
        "short name": "AccumulatorTakeGradient",
        "parameters": {
            "handle": null,
            "num_required": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Acos": {
        "short name": "Acos",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Acosh": {
        "short name": "Acosh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Add": {
        "short name": "Add",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AddManySparseToTensorsMap": {
        "short name": "AddManySparseToTensorsMap",
        "parameters": {
            "sparse_indices": null,
            "sparse_values": null,
            "sparse_shape": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AddN": {
        "short name": "AddN",
        "parameters": {
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AddSparseToTensorsMap": {
        "short name": "AddSparseToTensorsMap",
        "parameters": {
            "sparse_indices": null,
            "sparse_values": null,
            "sparse_shape": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AddV2": {
        "short name": "AddV2",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AdjustContrast": {
        "short name": "AdjustContrast",
        "parameters": {
            "images": null,
            "contrast_factor": null,
            "min_value": null,
            "max_value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AdjustContrastv2": {
        "short name": "AdjustContrastv2",
        "parameters": {
            "images": null,
            "contrast_factor": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AdjustHue": {
        "short name": "AdjustHue",
        "parameters": {
            "images": null,
            "delta": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AdjustSaturation": {
        "short name": "AdjustSaturation",
        "parameters": {
            "images": null,
            "scale": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.All": {
        "short name": "All",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AllCandidateSampler": {
        "short name": "AllCandidateSampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AllToAll": {
        "short name": "AllToAll",
        "parameters": {
            "input": null,
            "group_assignment": null,
            "concat_dimension": null,
            "split_dimension": null,
            "split_count": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Angle": {
        "short name": "Angle",
        "parameters": {
            "input": null,
            "Tout": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousHashTable": {
        "short name": "AnonymousHashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousIterator": {
        "short name": "AnonymousIterator",
        "parameters": {
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousIteratorV2": {
        "short name": "AnonymousIteratorV2",
        "parameters": {
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousIteratorV3": {
        "short name": "AnonymousIteratorV3",
        "parameters": {
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousMemoryCache": {
        "short name": "AnonymousMemoryCache",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousMultiDeviceIterator": {
        "short name": "AnonymousMultiDeviceIterator",
        "parameters": {
            "devices": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousMultiDeviceIteratorV3": {
        "short name": "AnonymousMultiDeviceIteratorV3",
        "parameters": {
            "devices": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousMutableDenseHashTable": {
        "short name": "AnonymousMutableDenseHashTable",
        "parameters": {
            "empty_key": null,
            "deleted_key": null,
            "value_dtype": null,
            "value_shape": "[]",
            "initial_num_buckets": "131072",
            "max_load_factor": "0.8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousMutableHashTable": {
        "short name": "AnonymousMutableHashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousMutableHashTableOfTensors": {
        "short name": "AnonymousMutableHashTableOfTensors",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "value_shape": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousRandomSeedGenerator": {
        "short name": "AnonymousRandomSeedGenerator",
        "parameters": {
            "seed": null,
            "seed2": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AnonymousSeedGenerator": {
        "short name": "AnonymousSeedGenerator",
        "parameters": {
            "seed": null,
            "seed2": null,
            "reshuffle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Any": {
        "short name": "Any",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyAdaMax": {
        "short name": "ApplyAdaMax",
        "parameters": {
            "var": null,
            "m": null,
            "v": null,
            "beta1_power": null,
            "lr": null,
            "beta1": null,
            "beta2": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyAdadelta": {
        "short name": "ApplyAdadelta",
        "parameters": {
            "var": null,
            "accum": null,
            "accum_update": null,
            "lr": null,
            "rho": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyAdagrad": {
        "short name": "ApplyAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyAdagradDA": {
        "short name": "ApplyAdagradDA",
        "parameters": {
            "var": null,
            "gradient_accumulator": null,
            "gradient_squared_accumulator": null,
            "grad": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "global_step": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyAdagradV2": {
        "short name": "ApplyAdagradV2",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyAdam": {
        "short name": "ApplyAdam",
        "parameters": {
            "var": null,
            "m": null,
            "v": null,
            "beta1_power": null,
            "beta2_power": null,
            "lr": null,
            "beta1": null,
            "beta2": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyAddSign": {
        "short name": "ApplyAddSign",
        "parameters": {
            "var": null,
            "m": null,
            "lr": null,
            "alpha": null,
            "sign_decay": null,
            "beta": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyCenteredRMSProp": {
        "short name": "ApplyCenteredRMSProp",
        "parameters": {
            "var": null,
            "mg": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyFtrl": {
        "short name": "ApplyFtrl",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyFtrlV2": {
        "short name": "ApplyFtrlV2",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "l2_shrinkage": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyGradientDescent": {
        "short name": "ApplyGradientDescent",
        "parameters": {
            "var": null,
            "alpha": null,
            "delta": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyMomentum": {
        "short name": "ApplyMomentum",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "momentum": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyPowerSign": {
        "short name": "ApplyPowerSign",
        "parameters": {
            "var": null,
            "m": null,
            "lr": null,
            "logbase": null,
            "sign_decay": null,
            "beta": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyProximalAdagrad": {
        "short name": "ApplyProximalAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyProximalGradientDescent": {
        "short name": "ApplyProximalGradientDescent",
        "parameters": {
            "var": null,
            "alpha": null,
            "l1": null,
            "l2": null,
            "delta": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApplyRMSProp": {
        "short name": "ApplyRMSProp",
        "parameters": {
            "var": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ApproximateEqual": {
        "short name": "ApproximateEqual",
        "parameters": {
            "x": null,
            "y": null,
            "tolerance": "1e-05",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ArgMax": {
        "short name": "ArgMax",
        "parameters": {
            "input": null,
            "dimension": null,
            "output_type": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ArgMin": {
        "short name": "ArgMin",
        "parameters": {
            "input": null,
            "dimension": null,
            "output_type": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AsString": {
        "short name": "AsString",
        "parameters": {
            "input": null,
            "precision": "-1",
            "scientific": "False",
            "shortest": "False",
            "width": "-1",
            "fill": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Asin": {
        "short name": "Asin",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Asinh": {
        "short name": "Asinh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Assert": {
        "short name": "Assert",
        "parameters": {
            "condition": null,
            "data": null,
            "summarize": "3",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssertCardinalityDataset": {
        "short name": "AssertCardinalityDataset",
        "parameters": {
            "input_dataset": null,
            "cardinality": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssertNextDataset": {
        "short name": "AssertNextDataset",
        "parameters": {
            "input_dataset": null,
            "transformations": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssertPrevDataset": {
        "short name": "AssertPrevDataset",
        "parameters": {
            "input_dataset": null,
            "transformations": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Assign": {
        "short name": "Assign",
        "parameters": {
            "ref": null,
            "value": null,
            "validate_shape": "True",
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssignAdd": {
        "short name": "AssignAdd",
        "parameters": {
            "ref": null,
            "value": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssignAddVariableOp": {
        "short name": "AssignAddVariableOp",
        "parameters": {
            "resource": null,
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssignSub": {
        "short name": "AssignSub",
        "parameters": {
            "ref": null,
            "value": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssignSubVariableOp": {
        "short name": "AssignSubVariableOp",
        "parameters": {
            "resource": null,
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssignVariableOp": {
        "short name": "AssignVariableOp",
        "parameters": {
            "resource": null,
            "value": null,
            "validate_shape": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AssignVariableXlaConcatND": {
        "short name": "AssignVariableXlaConcatND",
        "parameters": {
            "resource": null,
            "inputs": null,
            "num_concats": null,
            "paddings": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Atan": {
        "short name": "Atan",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Atan2": {
        "short name": "Atan2",
        "parameters": {
            "y": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Atanh": {
        "short name": "Atanh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AudioSpectrogram": {
        "short name": "AudioSpectrogram",
        "parameters": {
            "input": null,
            "window_size": null,
            "stride": null,
            "magnitude_squared": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AudioSummary": {
        "short name": "AudioSummary",
        "parameters": {
            "tag": null,
            "tensor": null,
            "sample_rate": null,
            "max_outputs": "3",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AudioSummaryV2": {
        "short name": "AudioSummaryV2",
        "parameters": {
            "tag": null,
            "tensor": null,
            "sample_rate": null,
            "max_outputs": "3",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AutoShardDataset": {
        "short name": "AutoShardDataset",
        "parameters": {
            "input_dataset": null,
            "num_workers": null,
            "index": null,
            "output_types": null,
            "output_shapes": null,
            "auto_shard_policy": "0",
            "num_replicas": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AvgPool": {
        "short name": "AvgPool",
        "parameters": {
            "value": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AvgPool3D": {
        "short name": "AvgPool3D",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AvgPool3DGrad": {
        "short name": "AvgPool3DGrad",
        "parameters": {
            "orig_input_shape": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.AvgPoolGrad": {
        "short name": "AvgPoolGrad",
        "parameters": {
            "orig_input_shape": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BandedTriangularSolve": {
        "short name": "BandedTriangularSolve",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "lower": "True",
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Barrier": {
        "short name": "Barrier",
        "parameters": {
            "component_types": null,
            "shapes": "[]",
            "capacity": "-1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BarrierClose": {
        "short name": "BarrierClose",
        "parameters": {
            "handle": null,
            "cancel_pending_enqueues": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BarrierIncompleteSize": {
        "short name": "BarrierIncompleteSize",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BarrierInsertMany": {
        "short name": "BarrierInsertMany",
        "parameters": {
            "handle": null,
            "keys": null,
            "values": null,
            "component_index": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BarrierReadySize": {
        "short name": "BarrierReadySize",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BarrierTakeMany": {
        "short name": "BarrierTakeMany",
        "parameters": {
            "handle": null,
            "num_elements": null,
            "component_types": null,
            "allow_small_batch": "False",
            "wait_for_incomplete": "False",
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Batch": {
        "short name": "Batch",
        "parameters": {
            "in_tensors": null,
            "num_batch_threads": null,
            "max_batch_size": null,
            "batch_timeout_micros": null,
            "grad_timeout_micros": null,
            "max_enqueued_batches": "10",
            "allowed_batch_sizes": "[]",
            "container": "''",
            "shared_name": "''",
            "batching_queue": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchCholesky": {
        "short name": "BatchCholesky",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchCholeskyGrad": {
        "short name": "BatchCholeskyGrad",
        "parameters": {
            "l": null,
            "grad": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchDataset": {
        "short name": "BatchDataset",
        "parameters": {
            "input_dataset": null,
            "batch_size": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchDatasetV2": {
        "short name": "BatchDatasetV2",
        "parameters": {
            "input_dataset": null,
            "batch_size": null,
            "drop_remainder": null,
            "output_types": null,
            "output_shapes": null,
            "parallel_copy": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchFFT": {
        "short name": "BatchFFT",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchFFT2D": {
        "short name": "BatchFFT2D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchFFT3D": {
        "short name": "BatchFFT3D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchFunction": {
        "short name": "BatchFunction",
        "parameters": {
            "in_tensors": null,
            "captured_tensors": null,
            "f": null,
            "num_batch_threads": null,
            "max_batch_size": null,
            "batch_timeout_micros": null,
            "Tout": null,
            "max_enqueued_batches": "10",
            "allowed_batch_sizes": "[]",
            "container": "''",
            "shared_name": "''",
            "batching_queue": "''",
            "enable_large_batch_splitting": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchIFFT": {
        "short name": "BatchIFFT",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchIFFT2D": {
        "short name": "BatchIFFT2D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchIFFT3D": {
        "short name": "BatchIFFT3D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatMul": {
        "short name": "BatchMatMul",
        "parameters": {
            "x": null,
            "y": null,
            "adj_x": "False",
            "adj_y": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatMulV2": {
        "short name": "BatchMatMulV2",
        "parameters": {
            "x": null,
            "y": null,
            "adj_x": "False",
            "adj_y": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatMulV3": {
        "short name": "BatchMatMulV3",
        "parameters": {
            "x": null,
            "y": null,
            "Tout": null,
            "adj_x": "False",
            "adj_y": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixBandPart": {
        "short name": "BatchMatrixBandPart",
        "parameters": {
            "input": null,
            "num_lower": null,
            "num_upper": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixDeterminant": {
        "short name": "BatchMatrixDeterminant",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixDiag": {
        "short name": "BatchMatrixDiag",
        "parameters": {
            "diagonal": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixDiagPart": {
        "short name": "BatchMatrixDiagPart",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixInverse": {
        "short name": "BatchMatrixInverse",
        "parameters": {
            "input": null,
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixSetDiag": {
        "short name": "BatchMatrixSetDiag",
        "parameters": {
            "input": null,
            "diagonal": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixSolve": {
        "short name": "BatchMatrixSolve",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixSolveLs": {
        "short name": "BatchMatrixSolveLs",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "l2_regularizer": null,
            "fast": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchMatrixTriangularSolve": {
        "short name": "BatchMatrixTriangularSolve",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "lower": "True",
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchNormWithGlobalNormalization": {
        "short name": "BatchNormWithGlobalNormalization",
        "parameters": {
            "t": null,
            "m": null,
            "v": null,
            "beta": null,
            "gamma": null,
            "variance_epsilon": null,
            "scale_after_normalization": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchNormWithGlobalNormalizationGrad": {
        "short name": "BatchNormWithGlobalNormalizationGrad",
        "parameters": {
            "t": null,
            "m": null,
            "v": null,
            "gamma": null,
            "backprop": null,
            "variance_epsilon": null,
            "scale_after_normalization": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchSelfAdjointEig": {
        "short name": "BatchSelfAdjointEig",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchSelfAdjointEigV2": {
        "short name": "BatchSelfAdjointEigV2",
        "parameters": {
            "input": null,
            "compute_v": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchSvd": {
        "short name": "BatchSvd",
        "parameters": {
            "input": null,
            "compute_uv": "True",
            "full_matrices": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchToSpace": {
        "short name": "BatchToSpace",
        "parameters": {
            "input": null,
            "crops": null,
            "block_size": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BatchToSpaceND": {
        "short name": "BatchToSpaceND",
        "parameters": {
            "input": null,
            "block_shape": null,
            "crops": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselI0": {
        "short name": "BesselI0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselI0e": {
        "short name": "BesselI0e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselI1": {
        "short name": "BesselI1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselI1e": {
        "short name": "BesselI1e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselJ0": {
        "short name": "BesselJ0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselJ1": {
        "short name": "BesselJ1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselK0": {
        "short name": "BesselK0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselK0e": {
        "short name": "BesselK0e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselK1": {
        "short name": "BesselK1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselK1e": {
        "short name": "BesselK1e",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselY0": {
        "short name": "BesselY0",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BesselY1": {
        "short name": "BesselY1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Betainc": {
        "short name": "Betainc",
        "parameters": {
            "a": null,
            "b": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BiasAdd": {
        "short name": "BiasAdd",
        "parameters": {
            "value": null,
            "bias": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BiasAddGrad": {
        "short name": "BiasAddGrad",
        "parameters": {
            "out_backprop": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BiasAddV1": {
        "short name": "BiasAddV1",
        "parameters": {
            "value": null,
            "bias": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Bincount": {
        "short name": "Bincount",
        "parameters": {
            "arr": null,
            "size": null,
            "weights": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Bitcast": {
        "short name": "Bitcast",
        "parameters": {
            "input": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BitwiseAnd": {
        "short name": "BitwiseAnd",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BitwiseOr": {
        "short name": "BitwiseOr",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BitwiseXor": {
        "short name": "BitwiseXor",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BlockLSTM": {
        "short name": "BlockLSTM",
        "parameters": {
            "seq_len_max": null,
            "x": null,
            "cs_prev": null,
            "h_prev": null,
            "w": null,
            "wci": null,
            "wcf": null,
            "wco": null,
            "b": null,
            "forget_bias": "1",
            "cell_clip": "3",
            "use_peephole": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BlockLSTMGrad": {
        "short name": "BlockLSTMGrad",
        "parameters": {
            "seq_len_max": null,
            "x": null,
            "cs_prev": null,
            "h_prev": null,
            "w": null,
            "wci": null,
            "wcf": null,
            "wco": null,
            "b": null,
            "i": null,
            "cs": null,
            "f": null,
            "o": null,
            "ci": null,
            "co": null,
            "h": null,
            "cs_grad": null,
            "h_grad": null,
            "use_peephole": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BlockLSTMGradV2": {
        "short name": "BlockLSTMGradV2",
        "parameters": {
            "seq_len_max": null,
            "x": null,
            "cs_prev": null,
            "h_prev": null,
            "w": null,
            "wci": null,
            "wcf": null,
            "wco": null,
            "b": null,
            "i": null,
            "cs": null,
            "f": null,
            "o": null,
            "ci": null,
            "co": null,
            "h": null,
            "cs_grad": null,
            "h_grad": null,
            "use_peephole": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BlockLSTMV2": {
        "short name": "BlockLSTMV2",
        "parameters": {
            "seq_len_max": null,
            "x": null,
            "cs_prev": null,
            "h_prev": null,
            "w": null,
            "wci": null,
            "wcf": null,
            "wco": null,
            "b": null,
            "cell_clip": "0",
            "use_peephole": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesAggregateStats": {
        "short name": "BoostedTreesAggregateStats",
        "parameters": {
            "node_ids": null,
            "gradients": null,
            "hessians": null,
            "feature": null,
            "max_splits": null,
            "num_buckets": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesBucketize": {
        "short name": "BoostedTreesBucketize",
        "parameters": {
            "float_values": null,
            "bucket_boundaries": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplit": {
        "short name": "BoostedTreesCalculateBestFeatureSplit",
        "parameters": {
            "node_id_range": null,
            "stats_summary": null,
            "l1": null,
            "l2": null,
            "tree_complexity": null,
            "min_node_weight": null,
            "logits_dimension": null,
            "split_type": "'inequality'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": {
        "short name": "BoostedTreesCalculateBestFeatureSplitV2",
        "parameters": {
            "node_id_range": null,
            "stats_summaries_list": null,
            "split_types": null,
            "candidate_feature_ids": null,
            "l1": null,
            "l2": null,
            "tree_complexity": null,
            "min_node_weight": null,
            "logits_dimension": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesCalculateBestGainsPerFeature": {
        "short name": "BoostedTreesCalculateBestGainsPerFeature",
        "parameters": {
            "node_id_range": null,
            "stats_summary_list": null,
            "l1": null,
            "l2": null,
            "tree_complexity": null,
            "min_node_weight": null,
            "max_splits": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesCenterBias": {
        "short name": "BoostedTreesCenterBias",
        "parameters": {
            "tree_ensemble_handle": null,
            "mean_gradients": null,
            "mean_hessians": null,
            "l1": null,
            "l2": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesCreateEnsemble": {
        "short name": "BoostedTreesCreateEnsemble",
        "parameters": {
            "tree_ensemble_handle": null,
            "stamp_token": null,
            "tree_ensemble_serialized": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesCreateQuantileStreamResource": {
        "short name": "BoostedTreesCreateQuantileStreamResource",
        "parameters": {
            "quantile_stream_resource_handle": null,
            "epsilon": null,
            "num_streams": null,
            "max_elements": "1099511627776",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesDeserializeEnsemble": {
        "short name": "BoostedTreesDeserializeEnsemble",
        "parameters": {
            "tree_ensemble_handle": null,
            "stamp_token": null,
            "tree_ensemble_serialized": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesEnsembleResourceHandleOp": {
        "short name": "BoostedTreesEnsembleResourceHandleOp",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesExampleDebugOutputs": {
        "short name": "BoostedTreesExampleDebugOutputs",
        "parameters": {
            "tree_ensemble_handle": null,
            "bucketized_features": null,
            "logits_dimension": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesFlushQuantileSummaries": {
        "short name": "BoostedTreesFlushQuantileSummaries",
        "parameters": {
            "quantile_stream_resource_handle": null,
            "num_features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesGetEnsembleStates": {
        "short name": "BoostedTreesGetEnsembleStates",
        "parameters": {
            "tree_ensemble_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesMakeQuantileSummaries": {
        "short name": "BoostedTreesMakeQuantileSummaries",
        "parameters": {
            "float_values": null,
            "example_weights": null,
            "epsilon": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesMakeStatsSummary": {
        "short name": "BoostedTreesMakeStatsSummary",
        "parameters": {
            "node_ids": null,
            "gradients": null,
            "hessians": null,
            "bucketized_features_list": null,
            "max_splits": null,
            "num_buckets": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesPredict": {
        "short name": "BoostedTreesPredict",
        "parameters": {
            "tree_ensemble_handle": null,
            "bucketized_features": null,
            "logits_dimension": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": {
        "short name": "BoostedTreesQuantileStreamResourceAddSummaries",
        "parameters": {
            "quantile_stream_resource_handle": null,
            "summaries": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": {
        "short name": "BoostedTreesQuantileStreamResourceDeserialize",
        "parameters": {
            "quantile_stream_resource_handle": null,
            "bucket_boundaries": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceFlush": {
        "short name": "BoostedTreesQuantileStreamResourceFlush",
        "parameters": {
            "quantile_stream_resource_handle": null,
            "num_buckets": null,
            "generate_quantiles": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": {
        "short name": "BoostedTreesQuantileStreamResourceGetBucketBoundaries",
        "parameters": {
            "quantile_stream_resource_handle": null,
            "num_features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": {
        "short name": "BoostedTreesQuantileStreamResourceHandleOp",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesSerializeEnsemble": {
        "short name": "BoostedTreesSerializeEnsemble",
        "parameters": {
            "tree_ensemble_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesSparseAggregateStats": {
        "short name": "BoostedTreesSparseAggregateStats",
        "parameters": {
            "node_ids": null,
            "gradients": null,
            "hessians": null,
            "feature_indices": null,
            "feature_values": null,
            "feature_shape": null,
            "max_splits": null,
            "num_buckets": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": {
        "short name": "BoostedTreesSparseCalculateBestFeatureSplit",
        "parameters": {
            "node_id_range": null,
            "stats_summary_indices": null,
            "stats_summary_values": null,
            "stats_summary_shape": null,
            "l1": null,
            "l2": null,
            "tree_complexity": null,
            "min_node_weight": null,
            "logits_dimension": null,
            "split_type": "'inequality'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesTrainingPredict": {
        "short name": "BoostedTreesTrainingPredict",
        "parameters": {
            "tree_ensemble_handle": null,
            "cached_tree_ids": null,
            "cached_node_ids": null,
            "bucketized_features": null,
            "logits_dimension": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesUpdateEnsemble": {
        "short name": "BoostedTreesUpdateEnsemble",
        "parameters": {
            "tree_ensemble_handle": null,
            "feature_ids": null,
            "node_ids": null,
            "gains": null,
            "thresholds": null,
            "left_node_contribs": null,
            "right_node_contribs": null,
            "max_depth": null,
            "learning_rate": null,
            "pruning_mode": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BoostedTreesUpdateEnsembleV2": {
        "short name": "BoostedTreesUpdateEnsembleV2",
        "parameters": {
            "tree_ensemble_handle": null,
            "feature_ids": null,
            "dimension_ids": null,
            "node_ids": null,
            "gains": null,
            "thresholds": null,
            "left_node_contribs": null,
            "right_node_contribs": null,
            "split_types": null,
            "max_depth": null,
            "learning_rate": null,
            "pruning_mode": null,
            "logits_dimension": "1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BroadcastArgs": {
        "short name": "BroadcastArgs",
        "parameters": {
            "s0": null,
            "s1": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BroadcastGradientArgs": {
        "short name": "BroadcastGradientArgs",
        "parameters": {
            "s0": null,
            "s1": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BroadcastTo": {
        "short name": "BroadcastTo",
        "parameters": {
            "input": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Bucketize": {
        "short name": "Bucketize",
        "parameters": {
            "input": null,
            "boundaries": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.BytesProducedStatsDataset": {
        "short name": "BytesProducedStatsDataset",
        "parameters": {
            "input_dataset": null,
            "tag": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CSRSparseMatrixComponents": {
        "short name": "CSRSparseMatrixComponents",
        "parameters": {
            "csr_sparse_matrix": null,
            "index": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CSRSparseMatrixToDense": {
        "short name": "CSRSparseMatrixToDense",
        "parameters": {
            "sparse_input": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CSRSparseMatrixToSparseTensor": {
        "short name": "CSRSparseMatrixToSparseTensor",
        "parameters": {
            "sparse_matrix": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CSVDataset": {
        "short name": "CSVDataset",
        "parameters": {
            "filenames": null,
            "compression_type": null,
            "buffer_size": null,
            "header": null,
            "field_delim": null,
            "use_quote_delim": null,
            "na_value": null,
            "select_cols": null,
            "record_defaults": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CSVDatasetV2": {
        "short name": "CSVDatasetV2",
        "parameters": {
            "filenames": null,
            "compression_type": null,
            "buffer_size": null,
            "header": null,
            "field_delim": null,
            "use_quote_delim": null,
            "na_value": null,
            "select_cols": null,
            "record_defaults": null,
            "exclude_cols": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CTCBeamSearchDecoder": {
        "short name": "CTCBeamSearchDecoder",
        "parameters": {
            "inputs": null,
            "sequence_length": null,
            "beam_width": null,
            "top_paths": null,
            "merge_repeated": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CTCGreedyDecoder": {
        "short name": "CTCGreedyDecoder",
        "parameters": {
            "inputs": null,
            "sequence_length": null,
            "merge_repeated": "False",
            "blank_index": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CTCLoss": {
        "short name": "CTCLoss",
        "parameters": {
            "inputs": null,
            "labels_indices": null,
            "labels_values": null,
            "sequence_length": null,
            "preprocess_collapse_repeated": "False",
            "ctc_merge_repeated": "True",
            "ignore_longer_outputs_than_inputs": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CTCLossV2": {
        "short name": "CTCLossV2",
        "parameters": {
            "inputs": null,
            "labels_indices": null,
            "labels_values": null,
            "sequence_length": null,
            "preprocess_collapse_repeated": "False",
            "ctc_merge_repeated": "True",
            "ignore_longer_outputs_than_inputs": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CacheDataset": {
        "short name": "CacheDataset",
        "parameters": {
            "input_dataset": null,
            "filename": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CacheDatasetV2": {
        "short name": "CacheDatasetV2",
        "parameters": {
            "input_dataset": null,
            "filename": null,
            "cache": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Case": {
        "short name": "Case",
        "parameters": {
            "branch_index": null,
            "input": null,
            "Tout": null,
            "branches": null,
            "output_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Cast": {
        "short name": "Cast",
        "parameters": {
            "x": null,
            "DstT": null,
            "Truncate": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Ceil": {
        "short name": "Ceil",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CheckNumerics": {
        "short name": "CheckNumerics",
        "parameters": {
            "tensor": null,
            "message": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CheckNumericsV2": {
        "short name": "CheckNumericsV2",
        "parameters": {
            "tensor": null,
            "message": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Cholesky": {
        "short name": "Cholesky",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CholeskyGrad": {
        "short name": "CholeskyGrad",
        "parameters": {
            "l": null,
            "grad": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ChooseFastestBranchDataset": {
        "short name": "ChooseFastestBranchDataset",
        "parameters": {
            "input_dataset": null,
            "ratio_numerator": null,
            "ratio_denominator": null,
            "other_arguments": null,
            "num_elements_per_branch": null,
            "branches": null,
            "other_arguments_lengths": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ChooseFastestDataset": {
        "short name": "ChooseFastestDataset",
        "parameters": {
            "input_datasets": null,
            "num_experiments": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ClipByValue": {
        "short name": "ClipByValue",
        "parameters": {
            "t": null,
            "clip_value_min": null,
            "clip_value_max": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CloseSummaryWriter": {
        "short name": "CloseSummaryWriter",
        "parameters": {
            "writer": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveAllToAllV3": {
        "short name": "CollectiveAllToAllV3",
        "parameters": {
            "input": null,
            "communicator": null,
            "group_assignment": null,
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveAssignGroupV2": {
        "short name": "CollectiveAssignGroupV2",
        "parameters": {
            "group_assignment": null,
            "device_index": null,
            "base_key": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveBcastRecv": {
        "short name": "CollectiveBcastRecv",
        "parameters": {
            "T": null,
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "shape": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveBcastRecvV2": {
        "short name": "CollectiveBcastRecvV2",
        "parameters": {
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "shape": null,
            "T": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveBcastSend": {
        "short name": "CollectiveBcastSend",
        "parameters": {
            "input": null,
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "shape": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveBcastSendV2": {
        "short name": "CollectiveBcastSendV2",
        "parameters": {
            "input": null,
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveGather": {
        "short name": "CollectiveGather",
        "parameters": {
            "input": null,
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "shape": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveGatherV2": {
        "short name": "CollectiveGatherV2",
        "parameters": {
            "input": null,
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "ordering_token": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveInitializeCommunicator": {
        "short name": "CollectiveInitializeCommunicator",
        "parameters": {
            "group_key": null,
            "rank": null,
            "group_size": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectivePermute": {
        "short name": "CollectivePermute",
        "parameters": {
            "input": null,
            "source_target_pairs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveReduce": {
        "short name": "CollectiveReduce",
        "parameters": {
            "input": null,
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "merge_op": null,
            "final_op": null,
            "subdiv_offsets": null,
            "wait_for": "[]",
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveReduceV2": {
        "short name": "CollectiveReduceV2",
        "parameters": {
            "input": null,
            "group_size": null,
            "group_key": null,
            "instance_key": null,
            "ordering_token": null,
            "merge_op": null,
            "final_op": null,
            "communication_hint": "'auto'",
            "timeout_seconds": "0",
            "max_subdivs_per_device": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CollectiveReduceV3": {
        "short name": "CollectiveReduceV3",
        "parameters": {
            "input": null,
            "communicator": null,
            "group_assignment": null,
            "reduction": null,
            "timeout_seconds": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CombinedNonMaxSuppression": {
        "short name": "CombinedNonMaxSuppression",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size_per_class": null,
            "max_total_size": null,
            "iou_threshold": null,
            "score_threshold": null,
            "pad_per_class": "False",
            "clip_boxes": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Complex": {
        "short name": "Complex",
        "parameters": {
            "real": null,
            "imag": null,
            "Tout": "tf.dtypes.complex64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ComplexAbs": {
        "short name": "ComplexAbs",
        "parameters": {
            "x": null,
            "Tout": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CompositeTensorVariantFromComponents": {
        "short name": "CompositeTensorVariantFromComponents",
        "parameters": {
            "components": null,
            "metadata": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CompositeTensorVariantToComponents": {
        "short name": "CompositeTensorVariantToComponents",
        "parameters": {
            "encoded": null,
            "metadata": null,
            "Tcomponents": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CompressElement": {
        "short name": "CompressElement",
        "parameters": {
            "components": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ComputeAccidentalHits": {
        "short name": "ComputeAccidentalHits",
        "parameters": {
            "true_classes": null,
            "sampled_candidates": null,
            "num_true": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ComputeBatchSize": {
        "short name": "ComputeBatchSize",
        "parameters": {
            "input_dataset": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Concat": {
        "short name": "Concat",
        "parameters": {
            "concat_dim": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConcatOffset": {
        "short name": "ConcatOffset",
        "parameters": {
            "concat_dim": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConcatV2": {
        "short name": "ConcatV2",
        "parameters": {
            "values": null,
            "axis": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConcatenateDataset": {
        "short name": "ConcatenateDataset",
        "parameters": {
            "input_dataset": null,
            "another_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConditionalAccumulator": {
        "short name": "ConditionalAccumulator",
        "parameters": {
            "dtype": null,
            "shape": null,
            "container": "''",
            "shared_name": "''",
            "reduction_type": "'MEAN'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConfigureDistributedTPU": {
        "short name": "ConfigureDistributedTPU",
        "parameters": {
            "embedding_config": "''",
            "tpu_embedding_config": "''",
            "is_global_init": "False",
            "enable_whole_mesh_compilations": "False",
            "compilation_failure_closes_chips": "True",
            "tpu_cancellation_closes_chips": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConfigureTPUEmbedding": {
        "short name": "ConfigureTPUEmbedding",
        "parameters": {
            "config": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conj": {
        "short name": "Conj",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConjugateTranspose": {
        "short name": "ConjugateTranspose",
        "parameters": {
            "x": null,
            "perm": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Const": {
        "short name": "Const",
        "parameters": {
            "value": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ConsumeMutexLock": {
        "short name": "ConsumeMutexLock",
        "parameters": {
            "mutex_lock": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ControlTrigger": {
        "short name": "ControlTrigger",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv2D": {
        "short name": "Conv2D",
        "parameters": {
            "input": null,
            "filter": null,
            "strides": null,
            "padding": null,
            "use_cudnn_on_gpu": "True",
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv2DBackpropFilter": {
        "short name": "Conv2DBackpropFilter",
        "parameters": {
            "input": null,
            "filter_sizes": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "use_cudnn_on_gpu": "True",
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv2DBackpropInput": {
        "short name": "Conv2DBackpropInput",
        "parameters": {
            "input_sizes": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "use_cudnn_on_gpu": "True",
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv3D": {
        "short name": "Conv3D",
        "parameters": {
            "input": null,
            "filter": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "dilations": "[1, 1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv3DBackpropFilter": {
        "short name": "Conv3DBackpropFilter",
        "parameters": {
            "input": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "dilations": "[1, 1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv3DBackpropFilterV2": {
        "short name": "Conv3DBackpropFilterV2",
        "parameters": {
            "input": null,
            "filter_sizes": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "dilations": "[1, 1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv3DBackpropInput": {
        "short name": "Conv3DBackpropInput",
        "parameters": {
            "input": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "dilations": "[1, 1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Conv3DBackpropInputV2": {
        "short name": "Conv3DBackpropInputV2",
        "parameters": {
            "input_sizes": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "dilations": "[1, 1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Copy": {
        "short name": "Copy",
        "parameters": {
            "input": null,
            "tensor_name": "''",
            "debug_ops_spec": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CopyHost": {
        "short name": "CopyHost",
        "parameters": {
            "input": null,
            "tensor_name": "''",
            "debug_ops_spec": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Cos": {
        "short name": "Cos",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Cosh": {
        "short name": "Cosh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CountUpTo": {
        "short name": "CountUpTo",
        "parameters": {
            "ref": null,
            "limit": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CreateSummaryDbWriter": {
        "short name": "CreateSummaryDbWriter",
        "parameters": {
            "writer": null,
            "db_uri": null,
            "experiment_name": null,
            "run_name": null,
            "user_name": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CreateSummaryFileWriter": {
        "short name": "CreateSummaryFileWriter",
        "parameters": {
            "writer": null,
            "logdir": null,
            "max_queue": null,
            "flush_millis": null,
            "filename_suffix": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CropAndResize": {
        "short name": "CropAndResize",
        "parameters": {
            "image": null,
            "boxes": null,
            "box_ind": null,
            "crop_size": null,
            "method": "'bilinear'",
            "extrapolation_value": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CropAndResizeGradBoxes": {
        "short name": "CropAndResizeGradBoxes",
        "parameters": {
            "grads": null,
            "image": null,
            "boxes": null,
            "box_ind": null,
            "method": "'bilinear'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CropAndResizeGradImage": {
        "short name": "CropAndResizeGradImage",
        "parameters": {
            "grads": null,
            "boxes": null,
            "box_ind": null,
            "image_size": null,
            "T": null,
            "method": "'bilinear'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Cross": {
        "short name": "Cross",
        "parameters": {
            "a": null,
            "b": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CrossReplicaSum": {
        "short name": "CrossReplicaSum",
        "parameters": {
            "input": null,
            "group_assignment": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNN": {
        "short name": "CudnnRNN",
        "parameters": {
            "input": null,
            "input_h": null,
            "input_c": null,
            "params": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNBackprop": {
        "short name": "CudnnRNNBackprop",
        "parameters": {
            "input": null,
            "input_h": null,
            "input_c": null,
            "params": null,
            "output": null,
            "output_h": null,
            "output_c": null,
            "output_backprop": null,
            "output_h_backprop": null,
            "output_c_backprop": null,
            "reserve_space": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNBackpropV2": {
        "short name": "CudnnRNNBackpropV2",
        "parameters": {
            "input": null,
            "input_h": null,
            "input_c": null,
            "params": null,
            "output": null,
            "output_h": null,
            "output_c": null,
            "output_backprop": null,
            "output_h_backprop": null,
            "output_c_backprop": null,
            "reserve_space": null,
            "host_reserved": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNBackpropV3": {
        "short name": "CudnnRNNBackpropV3",
        "parameters": {
            "input": null,
            "input_h": null,
            "input_c": null,
            "params": null,
            "sequence_lengths": null,
            "output": null,
            "output_h": null,
            "output_c": null,
            "output_backprop": null,
            "output_h_backprop": null,
            "output_c_backprop": null,
            "reserve_space": null,
            "host_reserved": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "num_proj": "0",
            "time_major": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNCanonicalToParams": {
        "short name": "CudnnRNNCanonicalToParams",
        "parameters": {
            "num_layers": null,
            "num_units": null,
            "input_size": null,
            "weights": null,
            "biases": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNCanonicalToParamsV2": {
        "short name": "CudnnRNNCanonicalToParamsV2",
        "parameters": {
            "num_layers": null,
            "num_units": null,
            "input_size": null,
            "weights": null,
            "biases": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "num_proj": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNParamsSize": {
        "short name": "CudnnRNNParamsSize",
        "parameters": {
            "num_layers": null,
            "num_units": null,
            "input_size": null,
            "T": null,
            "S": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "num_proj": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNParamsToCanonical": {
        "short name": "CudnnRNNParamsToCanonical",
        "parameters": {
            "num_layers": null,
            "num_units": null,
            "input_size": null,
            "params": null,
            "num_params": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNParamsToCanonicalV2": {
        "short name": "CudnnRNNParamsToCanonicalV2",
        "parameters": {
            "num_layers": null,
            "num_units": null,
            "input_size": null,
            "params": null,
            "num_params_weights": null,
            "num_params_biases": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "num_proj": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNV2": {
        "short name": "CudnnRNNV2",
        "parameters": {
            "input": null,
            "input_h": null,
            "input_c": null,
            "params": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CudnnRNNV3": {
        "short name": "CudnnRNNV3",
        "parameters": {
            "input": null,
            "input_h": null,
            "input_c": null,
            "params": null,
            "sequence_lengths": null,
            "rnn_mode": "'lstm'",
            "input_mode": "'linear_input'",
            "direction": "'unidirectional'",
            "dropout": "0",
            "seed": "0",
            "seed2": "0",
            "num_proj": "0",
            "is_training": "True",
            "time_major": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Cumprod": {
        "short name": "Cumprod",
        "parameters": {
            "x": null,
            "axis": null,
            "exclusive": "False",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Cumsum": {
        "short name": "Cumsum",
        "parameters": {
            "x": null,
            "axis": null,
            "exclusive": "False",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.CumulativeLogsumexp": {
        "short name": "CumulativeLogsumexp",
        "parameters": {
            "x": null,
            "axis": null,
            "exclusive": "False",
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DataFormatDimMap": {
        "short name": "DataFormatDimMap",
        "parameters": {
            "x": null,
            "src_format": "'NHWC'",
            "dst_format": "'NCHW'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DataFormatVecPermute": {
        "short name": "DataFormatVecPermute",
        "parameters": {
            "x": null,
            "src_format": "'NHWC'",
            "dst_format": "'NCHW'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DataServiceDataset": {
        "short name": "DataServiceDataset",
        "parameters": {
            "dataset_id": null,
            "processing_mode": null,
            "address": null,
            "protocol": null,
            "job_name": null,
            "max_outstanding_requests": null,
            "iteration_counter": null,
            "output_types": null,
            "output_shapes": null,
            "task_refresh_interval_hint_ms": "-1",
            "data_transfer_protocol": "''",
            "target_workers": "'AUTO'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DataServiceDatasetV2": {
        "short name": "DataServiceDatasetV2",
        "parameters": {
            "dataset_id": null,
            "processing_mode": null,
            "address": null,
            "protocol": null,
            "job_name": null,
            "consumer_index": null,
            "num_consumers": null,
            "max_outstanding_requests": null,
            "iteration_counter": null,
            "output_types": null,
            "output_shapes": null,
            "task_refresh_interval_hint_ms": "-1",
            "data_transfer_protocol": "''",
            "target_workers": "'AUTO'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DataServiceDatasetV3": {
        "short name": "DataServiceDatasetV3",
        "parameters": {
            "dataset_id": null,
            "processing_mode": null,
            "address": null,
            "protocol": null,
            "job_name": null,
            "consumer_index": null,
            "num_consumers": null,
            "max_outstanding_requests": null,
            "iteration_counter": null,
            "output_types": null,
            "output_shapes": null,
            "uncompress_fn": null,
            "task_refresh_interval_hint_ms": "-1",
            "data_transfer_protocol": "''",
            "target_workers": "'AUTO'",
            "uncompress": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DatasetCardinality": {
        "short name": "DatasetCardinality",
        "parameters": {
            "input_dataset": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DatasetFromGraph": {
        "short name": "DatasetFromGraph",
        "parameters": {
            "graph_def": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DatasetToGraph": {
        "short name": "DatasetToGraph",
        "parameters": {
            "input_dataset": null,
            "stateful_whitelist": "[]",
            "allow_stateful": "False",
            "strip_device_assignment": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DatasetToGraphV2": {
        "short name": "DatasetToGraphV2",
        "parameters": {
            "input_dataset": null,
            "external_state_policy": "0",
            "strip_device_assignment": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DatasetToSingleElement": {
        "short name": "DatasetToSingleElement",
        "parameters": {
            "dataset": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DatasetToTFRecord": {
        "short name": "DatasetToTFRecord",
        "parameters": {
            "input_dataset": null,
            "filename": null,
            "compression_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Dawsn": {
        "short name": "Dawsn",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DebugGradientIdentity": {
        "short name": "DebugGradientIdentity",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DebugGradientRefIdentity": {
        "short name": "DebugGradientRefIdentity",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DebugIdentity": {
        "short name": "DebugIdentity",
        "parameters": {
            "input": null,
            "device_name": "''",
            "tensor_name": "''",
            "debug_urls": "[]",
            "gated_grpc": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DebugIdentityV2": {
        "short name": "DebugIdentityV2",
        "parameters": {
            "input": null,
            "tfdbg_context_id": "''",
            "op_name": "''",
            "output_slot": "-1",
            "tensor_debug_mode": "-1",
            "debug_urls": "[]",
            "circular_buffer_size": "1000",
            "tfdbg_run_id": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DebugNanCount": {
        "short name": "DebugNanCount",
        "parameters": {
            "input": null,
            "device_name": "''",
            "tensor_name": "''",
            "debug_urls": "[]",
            "gated_grpc": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DebugNumericSummary": {
        "short name": "DebugNumericSummary",
        "parameters": {
            "input": null,
            "device_name": "''",
            "tensor_name": "''",
            "debug_urls": "[]",
            "lower_bound": "float('-inf')",
            "upper_bound": "float('inf')",
            "mute_if_healthy": "False",
            "gated_grpc": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DebugNumericSummaryV2": {
        "short name": "DebugNumericSummaryV2",
        "parameters": {
            "input": null,
            "output_dtype": "tf.dtypes.float32",
            "tensor_debug_mode": "-1",
            "tensor_id": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeAndCropJpeg": {
        "short name": "DecodeAndCropJpeg",
        "parameters": {
            "contents": null,
            "crop_window": null,
            "channels": "0",
            "ratio": "1",
            "fancy_upscaling": "True",
            "try_recover_truncated": "False",
            "acceptable_fraction": "1",
            "dct_method": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeBase64": {
        "short name": "DecodeBase64",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeBmp": {
        "short name": "DecodeBmp",
        "parameters": {
            "contents": null,
            "channels": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeCSV": {
        "short name": "DecodeCSV",
        "parameters": {
            "records": null,
            "record_defaults": null,
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "select_cols": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeCompressed": {
        "short name": "DecodeCompressed",
        "parameters": {
            "bytes": null,
            "compression_type": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeGif": {
        "short name": "DecodeGif",
        "parameters": {
            "contents": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeImage": {
        "short name": "DecodeImage",
        "parameters": {
            "contents": null,
            "channels": "0",
            "dtype": "tf.dtypes.uint8",
            "expand_animations": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeJSONExample": {
        "short name": "DecodeJSONExample",
        "parameters": {
            "json_examples": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeJpeg": {
        "short name": "DecodeJpeg",
        "parameters": {
            "contents": null,
            "channels": "0",
            "ratio": "1",
            "fancy_upscaling": "True",
            "try_recover_truncated": "False",
            "acceptable_fraction": "1",
            "dct_method": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodePaddedRaw": {
        "short name": "DecodePaddedRaw",
        "parameters": {
            "input_bytes": null,
            "fixed_length": null,
            "out_type": null,
            "little_endian": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodePng": {
        "short name": "DecodePng",
        "parameters": {
            "contents": null,
            "channels": "0",
            "dtype": "tf.dtypes.uint8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeProtoV2": {
        "short name": "DecodeProtoV2",
        "parameters": {
            "bytes": null,
            "message_type": null,
            "field_names": null,
            "output_types": null,
            "descriptor_source": "'local://'",
            "message_format": "'binary'",
            "sanitize": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeRaw": {
        "short name": "DecodeRaw",
        "parameters": {
            "bytes": null,
            "out_type": null,
            "little_endian": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DecodeWav": {
        "short name": "DecodeWav",
        "parameters": {
            "contents": null,
            "desired_channels": "-1",
            "desired_samples": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeepCopy": {
        "short name": "DeepCopy",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeleteIterator": {
        "short name": "DeleteIterator",
        "parameters": {
            "handle": null,
            "deleter": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeleteMemoryCache": {
        "short name": "DeleteMemoryCache",
        "parameters": {
            "handle": null,
            "deleter": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeleteMultiDeviceIterator": {
        "short name": "DeleteMultiDeviceIterator",
        "parameters": {
            "multi_device_iterator": null,
            "iterators": null,
            "deleter": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeleteRandomSeedGenerator": {
        "short name": "DeleteRandomSeedGenerator",
        "parameters": {
            "handle": null,
            "deleter": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeleteSeedGenerator": {
        "short name": "DeleteSeedGenerator",
        "parameters": {
            "handle": null,
            "deleter": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeleteSessionTensor": {
        "short name": "DeleteSessionTensor",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DenseBincount": {
        "short name": "DenseBincount",
        "parameters": {
            "input": null,
            "size": null,
            "weights": null,
            "binary_output": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DenseCountSparseOutput": {
        "short name": "DenseCountSparseOutput",
        "parameters": {
            "values": null,
            "weights": null,
            "binary_output": null,
            "minlength": "-1",
            "maxlength": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DenseToCSRSparseMatrix": {
        "short name": "DenseToCSRSparseMatrix",
        "parameters": {
            "dense_input": null,
            "indices": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DenseToDenseSetOperation": {
        "short name": "DenseToDenseSetOperation",
        "parameters": {
            "set1": null,
            "set2": null,
            "set_operation": null,
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DenseToSparseBatchDataset": {
        "short name": "DenseToSparseBatchDataset",
        "parameters": {
            "input_dataset": null,
            "batch_size": null,
            "row_shape": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DenseToSparseSetOperation": {
        "short name": "DenseToSparseSetOperation",
        "parameters": {
            "set1": null,
            "set2_indices": null,
            "set2_values": null,
            "set2_shape": null,
            "set_operation": null,
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DepthToSpace": {
        "short name": "DepthToSpace",
        "parameters": {
            "input": null,
            "block_size": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DepthwiseConv2dNative": {
        "short name": "DepthwiseConv2dNative",
        "parameters": {
            "input": null,
            "filter": null,
            "strides": null,
            "padding": null,
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropFilter": {
        "short name": "DepthwiseConv2dNativeBackpropFilter",
        "parameters": {
            "input": null,
            "filter_sizes": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DepthwiseConv2dNativeBackpropInput": {
        "short name": "DepthwiseConv2dNativeBackpropInput",
        "parameters": {
            "input_sizes": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "padding": null,
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Dequantize": {
        "short name": "Dequantize",
        "parameters": {
            "input": null,
            "min_range": null,
            "max_range": null,
            "mode": "'MIN_COMBINED'",
            "narrow_range": "False",
            "axis": "-1",
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeserializeIterator": {
        "short name": "DeserializeIterator",
        "parameters": {
            "resource_handle": null,
            "serialized": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeserializeManySparse": {
        "short name": "DeserializeManySparse",
        "parameters": {
            "serialized_sparse": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeserializeSparse": {
        "short name": "DeserializeSparse",
        "parameters": {
            "serialized_sparse": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DestroyResourceOp": {
        "short name": "DestroyResourceOp",
        "parameters": {
            "resource": null,
            "ignore_lookup_error": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DestroyTemporaryVariable": {
        "short name": "DestroyTemporaryVariable",
        "parameters": {
            "ref": null,
            "var_name": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DeviceIndex": {
        "short name": "DeviceIndex",
        "parameters": {
            "device_names": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Diag": {
        "short name": "Diag",
        "parameters": {
            "diagonal": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DiagPart": {
        "short name": "DiagPart",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Digamma": {
        "short name": "Digamma",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Dilation2D": {
        "short name": "Dilation2D",
        "parameters": {
            "input": null,
            "filter": null,
            "strides": null,
            "rates": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Dilation2DBackpropFilter": {
        "short name": "Dilation2DBackpropFilter",
        "parameters": {
            "input": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "rates": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Dilation2DBackpropInput": {
        "short name": "Dilation2DBackpropInput",
        "parameters": {
            "input": null,
            "filter": null,
            "out_backprop": null,
            "strides": null,
            "rates": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DirectedInterleaveDataset": {
        "short name": "DirectedInterleaveDataset",
        "parameters": {
            "selector_input_dataset": null,
            "data_input_datasets": null,
            "output_types": null,
            "output_shapes": null,
            "stop_on_empty_dataset": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Div": {
        "short name": "Div",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DivNoNan": {
        "short name": "DivNoNan",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DrawBoundingBoxes": {
        "short name": "DrawBoundingBoxes",
        "parameters": {
            "images": null,
            "boxes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DrawBoundingBoxesV2": {
        "short name": "DrawBoundingBoxesV2",
        "parameters": {
            "images": null,
            "boxes": null,
            "colors": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DummyIterationCounter": {
        "short name": "DummyIterationCounter",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DummyMemoryCache": {
        "short name": "DummyMemoryCache",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DummySeedGenerator": {
        "short name": "DummySeedGenerator",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DynamicEnqueueTPUEmbeddingArbitraryTensorBatch": {
        "short name": "DynamicEnqueueTPUEmbeddingArbitraryTensorBatch",
        "parameters": {
            "sample_indices_or_row_splits": null,
            "embedding_indices": null,
            "aggregation_weights": null,
            "mode_override": null,
            "device_ordinal": null,
            "combiners": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DynamicPartition": {
        "short name": "DynamicPartition",
        "parameters": {
            "data": null,
            "partitions": null,
            "num_partitions": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.DynamicStitch": {
        "short name": "DynamicStitch",
        "parameters": {
            "indices": null,
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EagerPyFunc": {
        "short name": "EagerPyFunc",
        "parameters": {
            "input": null,
            "token": null,
            "Tout": null,
            "is_async": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EditDistance": {
        "short name": "EditDistance",
        "parameters": {
            "hypothesis_indices": null,
            "hypothesis_values": null,
            "hypothesis_shape": null,
            "truth_indices": null,
            "truth_values": null,
            "truth_shape": null,
            "normalize": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Eig": {
        "short name": "Eig",
        "parameters": {
            "input": null,
            "Tout": null,
            "compute_v": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Einsum": {
        "short name": "Einsum",
        "parameters": {
            "inputs": null,
            "equation": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Elu": {
        "short name": "Elu",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EluGrad": {
        "short name": "EluGrad",
        "parameters": {
            "gradients": null,
            "outputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Empty": {
        "short name": "Empty",
        "parameters": {
            "shape": null,
            "dtype": null,
            "init": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EmptyTensorList": {
        "short name": "EmptyTensorList",
        "parameters": {
            "element_shape": null,
            "max_num_elements": null,
            "element_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EncodeBase64": {
        "short name": "EncodeBase64",
        "parameters": {
            "input": null,
            "pad": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EncodeJpeg": {
        "short name": "EncodeJpeg",
        "parameters": {
            "image": null,
            "format": "''",
            "quality": "95",
            "progressive": "False",
            "optimize_size": "False",
            "chroma_downsampling": "True",
            "density_unit": "'in'",
            "x_density": "300",
            "y_density": "300",
            "xmp_metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EncodeJpegVariableQuality": {
        "short name": "EncodeJpegVariableQuality",
        "parameters": {
            "images": null,
            "quality": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EncodePng": {
        "short name": "EncodePng",
        "parameters": {
            "image": null,
            "compression": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EncodeProto": {
        "short name": "EncodeProto",
        "parameters": {
            "sizes": null,
            "values": null,
            "field_names": null,
            "message_type": null,
            "descriptor_source": "'local://'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EncodeWav": {
        "short name": "EncodeWav",
        "parameters": {
            "audio": null,
            "sample_rate": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EnqueueTPUEmbeddingArbitraryTensorBatch": {
        "short name": "EnqueueTPUEmbeddingArbitraryTensorBatch",
        "parameters": {
            "sample_indices_or_row_splits": null,
            "embedding_indices": null,
            "aggregation_weights": null,
            "mode_override": null,
            "device_ordinal": "-1",
            "combiners": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EnqueueTPUEmbeddingIntegerBatch": {
        "short name": "EnqueueTPUEmbeddingIntegerBatch",
        "parameters": {
            "batch": null,
            "mode_override": null,
            "device_ordinal": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": {
        "short name": "EnqueueTPUEmbeddingRaggedTensorBatch",
        "parameters": {
            "sample_splits": null,
            "embedding_indices": null,
            "aggregation_weights": null,
            "mode_override": null,
            "table_ids": null,
            "device_ordinal": "-1",
            "combiners": "[]",
            "max_sequence_lengths": "[]",
            "num_features": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseBatch": {
        "short name": "EnqueueTPUEmbeddingSparseBatch",
        "parameters": {
            "sample_indices": null,
            "embedding_indices": null,
            "aggregation_weights": null,
            "mode_override": null,
            "device_ordinal": "-1",
            "combiners": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": {
        "short name": "EnqueueTPUEmbeddingSparseTensorBatch",
        "parameters": {
            "sample_indices": null,
            "embedding_indices": null,
            "aggregation_weights": null,
            "mode_override": null,
            "table_ids": null,
            "device_ordinal": "-1",
            "combiners": "[]",
            "max_sequence_lengths": "[]",
            "num_features": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EnsureShape": {
        "short name": "EnsureShape",
        "parameters": {
            "input": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Enter": {
        "short name": "Enter",
        "parameters": {
            "data": null,
            "frame_name": null,
            "is_constant": "False",
            "parallel_iterations": "10",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Equal": {
        "short name": "Equal",
        "parameters": {
            "x": null,
            "y": null,
            "incompatible_shape_error": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Erf": {
        "short name": "Erf",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Erfc": {
        "short name": "Erfc",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Erfinv": {
        "short name": "Erfinv",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.EuclideanNorm": {
        "short name": "EuclideanNorm",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Exit": {
        "short name": "Exit",
        "parameters": {
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Exp": {
        "short name": "Exp",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExpandDims": {
        "short name": "ExpandDims",
        "parameters": {
            "input": null,
            "axis": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalAssertNextDataset": {
        "short name": "ExperimentalAssertNextDataset",
        "parameters": {
            "input_dataset": null,
            "transformations": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalAutoShardDataset": {
        "short name": "ExperimentalAutoShardDataset",
        "parameters": {
            "input_dataset": null,
            "num_workers": null,
            "index": null,
            "output_types": null,
            "output_shapes": null,
            "auto_shard_policy": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalBytesProducedStatsDataset": {
        "short name": "ExperimentalBytesProducedStatsDataset",
        "parameters": {
            "input_dataset": null,
            "tag": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalCSVDataset": {
        "short name": "ExperimentalCSVDataset",
        "parameters": {
            "filenames": null,
            "compression_type": null,
            "buffer_size": null,
            "header": null,
            "field_delim": null,
            "use_quote_delim": null,
            "na_value": null,
            "select_cols": null,
            "record_defaults": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalChooseFastestDataset": {
        "short name": "ExperimentalChooseFastestDataset",
        "parameters": {
            "input_datasets": null,
            "num_experiments": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalDatasetCardinality": {
        "short name": "ExperimentalDatasetCardinality",
        "parameters": {
            "input_dataset": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalDatasetToTFRecord": {
        "short name": "ExperimentalDatasetToTFRecord",
        "parameters": {
            "input_dataset": null,
            "filename": null,
            "compression_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalDenseToSparseBatchDataset": {
        "short name": "ExperimentalDenseToSparseBatchDataset",
        "parameters": {
            "input_dataset": null,
            "batch_size": null,
            "row_shape": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalDirectedInterleaveDataset": {
        "short name": "ExperimentalDirectedInterleaveDataset",
        "parameters": {
            "selector_input_dataset": null,
            "data_input_datasets": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalGroupByReducerDataset": {
        "short name": "ExperimentalGroupByReducerDataset",
        "parameters": {
            "input_dataset": null,
            "key_func_other_arguments": null,
            "init_func_other_arguments": null,
            "reduce_func_other_arguments": null,
            "finalize_func_other_arguments": null,
            "key_func": null,
            "init_func": null,
            "reduce_func": null,
            "finalize_func": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalGroupByWindowDataset": {
        "short name": "ExperimentalGroupByWindowDataset",
        "parameters": {
            "input_dataset": null,
            "key_func_other_arguments": null,
            "reduce_func_other_arguments": null,
            "window_size_func_other_arguments": null,
            "key_func": null,
            "reduce_func": null,
            "window_size_func": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalIgnoreErrorsDataset": {
        "short name": "ExperimentalIgnoreErrorsDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "log_warning": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalIteratorGetDevice": {
        "short name": "ExperimentalIteratorGetDevice",
        "parameters": {
            "resource": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalLMDBDataset": {
        "short name": "ExperimentalLMDBDataset",
        "parameters": {
            "filenames": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalLatencyStatsDataset": {
        "short name": "ExperimentalLatencyStatsDataset",
        "parameters": {
            "input_dataset": null,
            "tag": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalMapAndBatchDataset": {
        "short name": "ExperimentalMapAndBatchDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "batch_size": null,
            "num_parallel_calls": null,
            "drop_remainder": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "preserve_cardinality": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalMapDataset": {
        "short name": "ExperimentalMapDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "use_inter_op_parallelism": "True",
            "preserve_cardinality": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalMatchingFilesDataset": {
        "short name": "ExperimentalMatchingFilesDataset",
        "parameters": {
            "patterns": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalMaxIntraOpParallelismDataset": {
        "short name": "ExperimentalMaxIntraOpParallelismDataset",
        "parameters": {
            "input_dataset": null,
            "max_intra_op_parallelism": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalNonSerializableDataset": {
        "short name": "ExperimentalNonSerializableDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalParallelInterleaveDataset": {
        "short name": "ExperimentalParallelInterleaveDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "cycle_length": null,
            "block_length": null,
            "sloppy": null,
            "buffer_output_elements": null,
            "prefetch_input_elements": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalParseExampleDataset": {
        "short name": "ExperimentalParseExampleDataset",
        "parameters": {
            "input_dataset": null,
            "num_parallel_calls": null,
            "dense_defaults": null,
            "sparse_keys": null,
            "dense_keys": null,
            "sparse_types": null,
            "dense_shapes": null,
            "output_types": null,
            "output_shapes": null,
            "sloppy": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalPrivateThreadPoolDataset": {
        "short name": "ExperimentalPrivateThreadPoolDataset",
        "parameters": {
            "input_dataset": null,
            "num_threads": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalRandomDataset": {
        "short name": "ExperimentalRandomDataset",
        "parameters": {
            "seed": null,
            "seed2": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalRebatchDataset": {
        "short name": "ExperimentalRebatchDataset",
        "parameters": {
            "input_dataset": null,
            "num_replicas": null,
            "output_types": null,
            "output_shapes": null,
            "use_fallback": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalScanDataset": {
        "short name": "ExperimentalScanDataset",
        "parameters": {
            "input_dataset": null,
            "initial_state": null,
            "other_arguments": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "preserve_cardinality": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalSetStatsAggregatorDataset": {
        "short name": "ExperimentalSetStatsAggregatorDataset",
        "parameters": {
            "input_dataset": null,
            "stats_aggregator": null,
            "tag": null,
            "counter_prefix": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalSleepDataset": {
        "short name": "ExperimentalSleepDataset",
        "parameters": {
            "input_dataset": null,
            "sleep_microseconds": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalSlidingWindowDataset": {
        "short name": "ExperimentalSlidingWindowDataset",
        "parameters": {
            "input_dataset": null,
            "window_size": null,
            "window_shift": null,
            "window_stride": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalSqlDataset": {
        "short name": "ExperimentalSqlDataset",
        "parameters": {
            "driver_name": null,
            "data_source_name": null,
            "query": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalStatsAggregatorHandle": {
        "short name": "ExperimentalStatsAggregatorHandle",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalStatsAggregatorSummary": {
        "short name": "ExperimentalStatsAggregatorSummary",
        "parameters": {
            "iterator": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalTakeWhileDataset": {
        "short name": "ExperimentalTakeWhileDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "predicate": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalThreadPoolDataset": {
        "short name": "ExperimentalThreadPoolDataset",
        "parameters": {
            "input_dataset": null,
            "thread_pool": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalThreadPoolHandle": {
        "short name": "ExperimentalThreadPoolHandle",
        "parameters": {
            "num_threads": null,
            "display_name": null,
            "max_intra_op_parallelism": "1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalUnbatchDataset": {
        "short name": "ExperimentalUnbatchDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExperimentalUniqueDataset": {
        "short name": "ExperimentalUniqueDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Expint": {
        "short name": "Expint",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Expm1": {
        "short name": "Expm1",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExtractGlimpse": {
        "short name": "ExtractGlimpse",
        "parameters": {
            "input": null,
            "size": null,
            "offsets": null,
            "centered": "True",
            "normalized": "True",
            "uniform_noise": "True",
            "noise": "'uniform'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExtractGlimpseV2": {
        "short name": "ExtractGlimpseV2",
        "parameters": {
            "input": null,
            "size": null,
            "offsets": null,
            "centered": "True",
            "normalized": "True",
            "uniform_noise": "True",
            "noise": "'uniform'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExtractImagePatches": {
        "short name": "ExtractImagePatches",
        "parameters": {
            "images": null,
            "ksizes": null,
            "strides": null,
            "rates": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExtractJpegShape": {
        "short name": "ExtractJpegShape",
        "parameters": {
            "contents": null,
            "output_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ExtractVolumePatches": {
        "short name": "ExtractVolumePatches",
        "parameters": {
            "input": null,
            "ksizes": null,
            "strides": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FFT": {
        "short name": "FFT",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FFT2D": {
        "short name": "FFT2D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FFT3D": {
        "short name": "FFT3D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FIFOQueue": {
        "short name": "FIFOQueue",
        "parameters": {
            "component_types": null,
            "shapes": "[]",
            "capacity": "-1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FIFOQueueV2": {
        "short name": "FIFOQueueV2",
        "parameters": {
            "component_types": null,
            "shapes": "[]",
            "capacity": "-1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Fact": {
        "short name": "Fact",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeParam": {
        "short name": "FakeParam",
        "parameters": {
            "dtype": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgs": {
        "short name": "FakeQuantWithMinMaxArgs",
        "parameters": {
            "inputs": null,
            "min": "-6",
            "max": "6",
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeQuantWithMinMaxArgsGradient": {
        "short name": "FakeQuantWithMinMaxArgsGradient",
        "parameters": {
            "gradients": null,
            "inputs": null,
            "min": "-6",
            "max": "6",
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeQuantWithMinMaxVars": {
        "short name": "FakeQuantWithMinMaxVars",
        "parameters": {
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsGradient": {
        "short name": "FakeQuantWithMinMaxVarsGradient",
        "parameters": {
            "gradients": null,
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannel": {
        "short name": "FakeQuantWithMinMaxVarsPerChannel",
        "parameters": {
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": {
        "short name": "FakeQuantWithMinMaxVarsPerChannelGradient",
        "parameters": {
            "gradients": null,
            "inputs": null,
            "min": null,
            "max": null,
            "num_bits": "8",
            "narrow_range": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FakeQueue": {
        "short name": "FakeQueue",
        "parameters": {
            "resource": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Fill": {
        "short name": "Fill",
        "parameters": {
            "dims": null,
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FilterByLastComponentDataset": {
        "short name": "FilterByLastComponentDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FilterDataset": {
        "short name": "FilterDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "predicate": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FinalizeDataset": {
        "short name": "FinalizeDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "has_captured_ref": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Fingerprint": {
        "short name": "Fingerprint",
        "parameters": {
            "data": null,
            "method": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FixedLengthRecordDataset": {
        "short name": "FixedLengthRecordDataset",
        "parameters": {
            "filenames": null,
            "header_bytes": null,
            "record_bytes": null,
            "footer_bytes": null,
            "buffer_size": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FixedLengthRecordDatasetV2": {
        "short name": "FixedLengthRecordDatasetV2",
        "parameters": {
            "filenames": null,
            "header_bytes": null,
            "record_bytes": null,
            "footer_bytes": null,
            "buffer_size": null,
            "compression_type": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FixedLengthRecordReader": {
        "short name": "FixedLengthRecordReader",
        "parameters": {
            "record_bytes": null,
            "header_bytes": "0",
            "footer_bytes": "0",
            "hop_bytes": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FixedLengthRecordReaderV2": {
        "short name": "FixedLengthRecordReaderV2",
        "parameters": {
            "record_bytes": null,
            "header_bytes": "0",
            "footer_bytes": "0",
            "hop_bytes": "0",
            "container": "''",
            "shared_name": "''",
            "encoding": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FixedUnigramCandidateSampler": {
        "short name": "FixedUnigramCandidateSampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "vocab_file": "''",
            "distortion": "1",
            "num_reserved_ids": "0",
            "num_shards": "1",
            "shard": "0",
            "unigrams": "[]",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FlatMapDataset": {
        "short name": "FlatMapDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Floor": {
        "short name": "Floor",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FloorDiv": {
        "short name": "FloorDiv",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FloorMod": {
        "short name": "FloorMod",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FlushSummaryWriter": {
        "short name": "FlushSummaryWriter",
        "parameters": {
            "writer": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.For": {
        "short name": "For",
        "parameters": {
            "start": null,
            "limit": null,
            "delta": null,
            "input": null,
            "body": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FractionalAvgPool": {
        "short name": "FractionalAvgPool",
        "parameters": {
            "value": null,
            "pooling_ratio": null,
            "pseudo_random": "False",
            "overlapping": "False",
            "deterministic": "False",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FractionalAvgPoolGrad": {
        "short name": "FractionalAvgPoolGrad",
        "parameters": {
            "orig_input_tensor_shape": null,
            "out_backprop": null,
            "row_pooling_sequence": null,
            "col_pooling_sequence": null,
            "overlapping": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FractionalMaxPool": {
        "short name": "FractionalMaxPool",
        "parameters": {
            "value": null,
            "pooling_ratio": null,
            "pseudo_random": "False",
            "overlapping": "False",
            "deterministic": "False",
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FractionalMaxPoolGrad": {
        "short name": "FractionalMaxPoolGrad",
        "parameters": {
            "orig_input": null,
            "orig_output": null,
            "out_backprop": null,
            "row_pooling_sequence": null,
            "col_pooling_sequence": null,
            "overlapping": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FresnelCos": {
        "short name": "FresnelCos",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FresnelSin": {
        "short name": "FresnelSin",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedBatchNorm": {
        "short name": "FusedBatchNorm",
        "parameters": {
            "x": null,
            "scale": null,
            "offset": null,
            "mean": null,
            "variance": null,
            "epsilon": "0.0001",
            "exponential_avg_factor": "1",
            "data_format": "'NHWC'",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedBatchNormGrad": {
        "short name": "FusedBatchNormGrad",
        "parameters": {
            "y_backprop": null,
            "x": null,
            "scale": null,
            "reserve_space_1": null,
            "reserve_space_2": null,
            "epsilon": "0.0001",
            "data_format": "'NHWC'",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedBatchNormGradV2": {
        "short name": "FusedBatchNormGradV2",
        "parameters": {
            "y_backprop": null,
            "x": null,
            "scale": null,
            "reserve_space_1": null,
            "reserve_space_2": null,
            "epsilon": "0.0001",
            "data_format": "'NHWC'",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedBatchNormGradV3": {
        "short name": "FusedBatchNormGradV3",
        "parameters": {
            "y_backprop": null,
            "x": null,
            "scale": null,
            "reserve_space_1": null,
            "reserve_space_2": null,
            "reserve_space_3": null,
            "epsilon": "0.0001",
            "data_format": "'NHWC'",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedBatchNormV2": {
        "short name": "FusedBatchNormV2",
        "parameters": {
            "x": null,
            "scale": null,
            "offset": null,
            "mean": null,
            "variance": null,
            "epsilon": "0.0001",
            "exponential_avg_factor": "1",
            "data_format": "'NHWC'",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedBatchNormV3": {
        "short name": "FusedBatchNormV3",
        "parameters": {
            "x": null,
            "scale": null,
            "offset": null,
            "mean": null,
            "variance": null,
            "epsilon": "0.0001",
            "exponential_avg_factor": "1",
            "data_format": "'NHWC'",
            "is_training": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedPadConv2D": {
        "short name": "FusedPadConv2D",
        "parameters": {
            "input": null,
            "paddings": null,
            "filter": null,
            "mode": null,
            "strides": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.FusedResizeAndPadConv2D": {
        "short name": "FusedResizeAndPadConv2D",
        "parameters": {
            "input": null,
            "size": null,
            "paddings": null,
            "filter": null,
            "mode": null,
            "strides": null,
            "padding": null,
            "resize_align_corners": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GRUBlockCell": {
        "short name": "GRUBlockCell",
        "parameters": {
            "x": null,
            "h_prev": null,
            "w_ru": null,
            "w_c": null,
            "b_ru": null,
            "b_c": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GRUBlockCellGrad": {
        "short name": "GRUBlockCellGrad",
        "parameters": {
            "x": null,
            "h_prev": null,
            "w_ru": null,
            "w_c": null,
            "b_ru": null,
            "b_c": null,
            "r": null,
            "u": null,
            "c": null,
            "d_h": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Gather": {
        "short name": "Gather",
        "parameters": {
            "params": null,
            "indices": null,
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GatherNd": {
        "short name": "GatherNd",
        "parameters": {
            "params": null,
            "indices": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GatherV2": {
        "short name": "GatherV2",
        "parameters": {
            "params": null,
            "indices": null,
            "axis": null,
            "batch_dims": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GenerateBoundingBoxProposals": {
        "short name": "GenerateBoundingBoxProposals",
        "parameters": {
            "scores": null,
            "bbox_deltas": null,
            "image_info": null,
            "anchors": null,
            "nms_threshold": null,
            "pre_nms_topn": null,
            "min_size": null,
            "post_nms_topn": "300",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GenerateVocabRemapping": {
        "short name": "GenerateVocabRemapping",
        "parameters": {
            "new_vocab_file": null,
            "old_vocab_file": null,
            "new_vocab_offset": null,
            "num_new_vocab": null,
            "old_vocab_size": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GeneratorDataset": {
        "short name": "GeneratorDataset",
        "parameters": {
            "init_func_other_args": null,
            "next_func_other_args": null,
            "finalize_func_other_args": null,
            "init_func": null,
            "next_func": null,
            "finalize_func": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GetElementAtIndex": {
        "short name": "GetElementAtIndex",
        "parameters": {
            "dataset": null,
            "index": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GetOptions": {
        "short name": "GetOptions",
        "parameters": {
            "input_dataset": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GetSessionHandle": {
        "short name": "GetSessionHandle",
        "parameters": {
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GetSessionHandleV2": {
        "short name": "GetSessionHandleV2",
        "parameters": {
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GetSessionTensor": {
        "short name": "GetSessionTensor",
        "parameters": {
            "handle": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Greater": {
        "short name": "Greater",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GreaterEqual": {
        "short name": "GreaterEqual",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GroupByReducerDataset": {
        "short name": "GroupByReducerDataset",
        "parameters": {
            "input_dataset": null,
            "key_func_other_arguments": null,
            "init_func_other_arguments": null,
            "reduce_func_other_arguments": null,
            "finalize_func_other_arguments": null,
            "key_func": null,
            "init_func": null,
            "reduce_func": null,
            "finalize_func": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GroupByWindowDataset": {
        "short name": "GroupByWindowDataset",
        "parameters": {
            "input_dataset": null,
            "key_func_other_arguments": null,
            "reduce_func_other_arguments": null,
            "window_size_func_other_arguments": null,
            "key_func": null,
            "reduce_func": null,
            "window_size_func": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.GuaranteeConst": {
        "short name": "GuaranteeConst",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.HSVToRGB": {
        "short name": "HSVToRGB",
        "parameters": {
            "images": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.HashTable": {
        "short name": "HashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.HashTableV2": {
        "short name": "HashTableV2",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.HistogramFixedWidth": {
        "short name": "HistogramFixedWidth",
        "parameters": {
            "values": null,
            "value_range": null,
            "nbins": null,
            "dtype": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.HistogramSummary": {
        "short name": "HistogramSummary",
        "parameters": {
            "tag": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IFFT": {
        "short name": "IFFT",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IFFT2D": {
        "short name": "IFFT2D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IFFT3D": {
        "short name": "IFFT3D",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IRFFT": {
        "short name": "IRFFT",
        "parameters": {
            "input": null,
            "fft_length": null,
            "Treal": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IRFFT2D": {
        "short name": "IRFFT2D",
        "parameters": {
            "input": null,
            "fft_length": null,
            "Treal": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IRFFT3D": {
        "short name": "IRFFT3D",
        "parameters": {
            "input": null,
            "fft_length": null,
            "Treal": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Identity": {
        "short name": "Identity",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IdentityN": {
        "short name": "IdentityN",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IdentityReader": {
        "short name": "IdentityReader",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IdentityReaderV2": {
        "short name": "IdentityReaderV2",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.If": {
        "short name": "If",
        "parameters": {
            "cond": null,
            "input": null,
            "Tout": null,
            "then_branch": null,
            "else_branch": null,
            "output_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Igamma": {
        "short name": "Igamma",
        "parameters": {
            "a": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IgammaGradA": {
        "short name": "IgammaGradA",
        "parameters": {
            "a": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Igammac": {
        "short name": "Igammac",
        "parameters": {
            "a": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IgnoreErrorsDataset": {
        "short name": "IgnoreErrorsDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "log_warning": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Imag": {
        "short name": "Imag",
        "parameters": {
            "input": null,
            "Tout": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ImageProjectiveTransformV2": {
        "short name": "ImageProjectiveTransformV2",
        "parameters": {
            "images": null,
            "transforms": null,
            "output_shape": null,
            "interpolation": null,
            "fill_mode": "'CONSTANT'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ImageProjectiveTransformV3": {
        "short name": "ImageProjectiveTransformV3",
        "parameters": {
            "images": null,
            "transforms": null,
            "output_shape": null,
            "fill_value": null,
            "interpolation": null,
            "fill_mode": "'CONSTANT'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ImageSummary": {
        "short name": "ImageSummary",
        "parameters": {}
    },
    "tensorflow.raw_ops.ImmutableConst": {
        "short name": "ImmutableConst",
        "parameters": {
            "dtype": null,
            "shape": null,
            "memory_region_name": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ImportEvent": {
        "short name": "ImportEvent",
        "parameters": {
            "writer": null,
            "event": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InTopK": {
        "short name": "InTopK",
        "parameters": {
            "predictions": null,
            "targets": null,
            "k": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InTopKV2": {
        "short name": "InTopKV2",
        "parameters": {
            "predictions": null,
            "targets": null,
            "k": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InfeedDequeue": {
        "short name": "InfeedDequeue",
        "parameters": {
            "dtype": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InfeedDequeueTuple": {
        "short name": "InfeedDequeueTuple",
        "parameters": {
            "dtypes": null,
            "shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InfeedEnqueue": {
        "short name": "InfeedEnqueue",
        "parameters": {
            "input": null,
            "shape": "[]",
            "layout": "[]",
            "device_ordinal": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InfeedEnqueuePrelinearizedBuffer": {
        "short name": "InfeedEnqueuePrelinearizedBuffer",
        "parameters": {
            "input": null,
            "device_ordinal": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InfeedEnqueueTuple": {
        "short name": "InfeedEnqueueTuple",
        "parameters": {
            "inputs": null,
            "shapes": null,
            "layouts": "[]",
            "device_ordinal": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InitializeTable": {
        "short name": "InitializeTable",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InitializeTableFromDataset": {
        "short name": "InitializeTableFromDataset",
        "parameters": {
            "table_handle": null,
            "dataset": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InitializeTableFromTextFile": {
        "short name": "InitializeTableFromTextFile",
        "parameters": {
            "table_handle": null,
            "filename": null,
            "key_index": null,
            "value_index": null,
            "vocab_size": "-1",
            "delimiter": "'\\t'",
            "offset": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InitializeTableFromTextFileV2": {
        "short name": "InitializeTableFromTextFileV2",
        "parameters": {
            "table_handle": null,
            "filename": null,
            "key_index": null,
            "value_index": null,
            "vocab_size": "-1",
            "delimiter": "'\\t'",
            "offset": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InitializeTableV2": {
        "short name": "InitializeTableV2",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InplaceAdd": {
        "short name": "InplaceAdd",
        "parameters": {
            "x": null,
            "i": null,
            "v": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InplaceSub": {
        "short name": "InplaceSub",
        "parameters": {
            "x": null,
            "i": null,
            "v": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InplaceUpdate": {
        "short name": "InplaceUpdate",
        "parameters": {
            "x": null,
            "i": null,
            "v": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InterleaveDataset": {
        "short name": "InterleaveDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "cycle_length": null,
            "block_length": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Inv": {
        "short name": "Inv",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InvGrad": {
        "short name": "InvGrad",
        "parameters": {
            "y": null,
            "dy": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Invert": {
        "short name": "Invert",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.InvertPermutation": {
        "short name": "InvertPermutation",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsBoostedTreesEnsembleInitialized": {
        "short name": "IsBoostedTreesEnsembleInitialized",
        "parameters": {
            "tree_ensemble_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": {
        "short name": "IsBoostedTreesQuantileStreamResourceInitialized",
        "parameters": {
            "quantile_stream_resource_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsFinite": {
        "short name": "IsFinite",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsInf": {
        "short name": "IsInf",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsNan": {
        "short name": "IsNan",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsTPUEmbeddingInitialized": {
        "short name": "IsTPUEmbeddingInitialized",
        "parameters": {
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsVariableInitialized": {
        "short name": "IsVariableInitialized",
        "parameters": {
            "ref": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IsotonicRegression": {
        "short name": "IsotonicRegression",
        "parameters": {
            "input": null,
            "output_dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Iterator": {
        "short name": "Iterator",
        "parameters": {
            "shared_name": null,
            "container": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorFromStringHandle": {
        "short name": "IteratorFromStringHandle",
        "parameters": {
            "string_handle": null,
            "output_types": "[]",
            "output_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorFromStringHandleV2": {
        "short name": "IteratorFromStringHandleV2",
        "parameters": {
            "string_handle": null,
            "output_types": "[]",
            "output_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorGetDevice": {
        "short name": "IteratorGetDevice",
        "parameters": {
            "resource": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorGetNext": {
        "short name": "IteratorGetNext",
        "parameters": {
            "iterator": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorGetNextAsOptional": {
        "short name": "IteratorGetNextAsOptional",
        "parameters": {
            "iterator": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorGetNextSync": {
        "short name": "IteratorGetNextSync",
        "parameters": {
            "iterator": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorToStringHandle": {
        "short name": "IteratorToStringHandle",
        "parameters": {
            "resource_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.IteratorV2": {
        "short name": "IteratorV2",
        "parameters": {
            "shared_name": null,
            "container": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.L2Loss": {
        "short name": "L2Loss",
        "parameters": {
            "t": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LMDBDataset": {
        "short name": "LMDBDataset",
        "parameters": {
            "filenames": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LMDBReader": {
        "short name": "LMDBReader",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LRN": {
        "short name": "LRN",
        "parameters": {
            "input": null,
            "depth_radius": "5",
            "bias": "1",
            "alpha": "1",
            "beta": "0.5",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LRNGrad": {
        "short name": "LRNGrad",
        "parameters": {
            "input_grads": null,
            "input_image": null,
            "output_image": null,
            "depth_radius": "5",
            "bias": "1",
            "alpha": "1",
            "beta": "0.5",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LSTMBlockCell": {
        "short name": "LSTMBlockCell",
        "parameters": {
            "x": null,
            "cs_prev": null,
            "h_prev": null,
            "w": null,
            "wci": null,
            "wcf": null,
            "wco": null,
            "b": null,
            "forget_bias": "1",
            "cell_clip": "3",
            "use_peephole": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LSTMBlockCellGrad": {
        "short name": "LSTMBlockCellGrad",
        "parameters": {
            "x": null,
            "cs_prev": null,
            "h_prev": null,
            "w": null,
            "wci": null,
            "wcf": null,
            "wco": null,
            "b": null,
            "i": null,
            "cs": null,
            "f": null,
            "o": null,
            "ci": null,
            "co": null,
            "cs_grad": null,
            "h_grad": null,
            "use_peephole": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LatencyStatsDataset": {
        "short name": "LatencyStatsDataset",
        "parameters": {
            "input_dataset": null,
            "tag": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LeakyRelu": {
        "short name": "LeakyRelu",
        "parameters": {
            "features": null,
            "alpha": "0.2",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LeakyReluGrad": {
        "short name": "LeakyReluGrad",
        "parameters": {
            "gradients": null,
            "features": null,
            "alpha": "0.2",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LearnedUnigramCandidateSampler": {
        "short name": "LearnedUnigramCandidateSampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LeftShift": {
        "short name": "LeftShift",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LegacyParallelInterleaveDatasetV2": {
        "short name": "LegacyParallelInterleaveDatasetV2",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "cycle_length": null,
            "block_length": null,
            "buffer_output_elements": null,
            "prefetch_input_elements": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "deterministic": "'default'",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Less": {
        "short name": "Less",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LessEqual": {
        "short name": "LessEqual",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Lgamma": {
        "short name": "Lgamma",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LinSpace": {
        "short name": "LinSpace",
        "parameters": {
            "start": null,
            "stop": null,
            "num": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ListDiff": {
        "short name": "ListDiff",
        "parameters": {
            "x": null,
            "y": null,
            "out_idx": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadAndRemapMatrix": {
        "short name": "LoadAndRemapMatrix",
        "parameters": {
            "ckpt_path": null,
            "old_tensor_name": null,
            "row_remapping": null,
            "col_remapping": null,
            "initializing_values": null,
            "num_rows": null,
            "num_cols": null,
            "max_rows_in_memory": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadDataset": {
        "short name": "LoadDataset",
        "parameters": {
            "path": null,
            "reader_func_other_args": null,
            "output_types": null,
            "output_shapes": null,
            "reader_func": null,
            "compression": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingADAMParameters": {
        "short name": "LoadTPUEmbeddingADAMParameters",
        "parameters": {
            "parameters": null,
            "momenta": null,
            "velocities": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingAdadeltaParameters": {
        "short name": "LoadTPUEmbeddingAdadeltaParameters",
        "parameters": {
            "parameters": null,
            "accumulators": null,
            "updates": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradMomentumParameters": {
        "short name": "LoadTPUEmbeddingAdagradMomentumParameters",
        "parameters": {
            "parameters": null,
            "accumulators": null,
            "momenta": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingAdagradParameters": {
        "short name": "LoadTPUEmbeddingAdagradParameters",
        "parameters": {
            "parameters": null,
            "accumulators": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": {
        "short name": "LoadTPUEmbeddingCenteredRMSPropParameters",
        "parameters": {
            "parameters": null,
            "ms": null,
            "mom": null,
            "mg": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingFTRLParameters": {
        "short name": "LoadTPUEmbeddingFTRLParameters",
        "parameters": {
            "parameters": null,
            "accumulators": null,
            "linears": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingFrequencyEstimatorParameters": {
        "short name": "LoadTPUEmbeddingFrequencyEstimatorParameters",
        "parameters": {
            "parameters": null,
            "last_hit_step": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": {
        "short name": "LoadTPUEmbeddingMDLAdagradLightParameters",
        "parameters": {
            "parameters": null,
            "accumulators": null,
            "weights": null,
            "benefits": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingMomentumParameters": {
        "short name": "LoadTPUEmbeddingMomentumParameters",
        "parameters": {
            "parameters": null,
            "momenta": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": {
        "short name": "LoadTPUEmbeddingProximalAdagradParameters",
        "parameters": {
            "parameters": null,
            "accumulators": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingProximalYogiParameters": {
        "short name": "LoadTPUEmbeddingProximalYogiParameters",
        "parameters": {
            "parameters": null,
            "v": null,
            "m": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingRMSPropParameters": {
        "short name": "LoadTPUEmbeddingRMSPropParameters",
        "parameters": {
            "parameters": null,
            "ms": null,
            "mom": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": {
        "short name": "LoadTPUEmbeddingStochasticGradientDescentParameters",
        "parameters": {
            "parameters": null,
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Log": {
        "short name": "Log",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Log1p": {
        "short name": "Log1p",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LogMatrixDeterminant": {
        "short name": "LogMatrixDeterminant",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LogSoftmax": {
        "short name": "LogSoftmax",
        "parameters": {
            "logits": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LogUniformCandidateSampler": {
        "short name": "LogUniformCandidateSampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LogicalAnd": {
        "short name": "LogicalAnd",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LogicalNot": {
        "short name": "LogicalNot",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LogicalOr": {
        "short name": "LogicalOr",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableExport": {
        "short name": "LookupTableExport",
        "parameters": {
            "table_handle": null,
            "Tkeys": null,
            "Tvalues": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableExportV2": {
        "short name": "LookupTableExportV2",
        "parameters": {
            "table_handle": null,
            "Tkeys": null,
            "Tvalues": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableFind": {
        "short name": "LookupTableFind",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "default_value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableFindV2": {
        "short name": "LookupTableFindV2",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "default_value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableImport": {
        "short name": "LookupTableImport",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableImportV2": {
        "short name": "LookupTableImportV2",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableInsert": {
        "short name": "LookupTableInsert",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableInsertV2": {
        "short name": "LookupTableInsertV2",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableRemoveV2": {
        "short name": "LookupTableRemoveV2",
        "parameters": {
            "table_handle": null,
            "keys": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableSize": {
        "short name": "LookupTableSize",
        "parameters": {
            "table_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LookupTableSizeV2": {
        "short name": "LookupTableSizeV2",
        "parameters": {
            "table_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LoopCond": {
        "short name": "LoopCond",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.LowerBound": {
        "short name": "LowerBound",
        "parameters": {
            "sorted_inputs": null,
            "values": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Lu": {
        "short name": "Lu",
        "parameters": {
            "input": null,
            "output_idx_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MakeIterator": {
        "short name": "MakeIterator",
        "parameters": {
            "dataset": null,
            "iterator": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapAndBatchDataset": {
        "short name": "MapAndBatchDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "batch_size": null,
            "num_parallel_calls": null,
            "drop_remainder": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "preserve_cardinality": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapClear": {
        "short name": "MapClear",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapDataset": {
        "short name": "MapDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "use_inter_op_parallelism": "True",
            "preserve_cardinality": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapDefun": {
        "short name": "MapDefun",
        "parameters": {
            "arguments": null,
            "captured_inputs": null,
            "output_types": null,
            "output_shapes": null,
            "f": null,
            "max_intra_op_parallelism": "1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapIncompleteSize": {
        "short name": "MapIncompleteSize",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapPeek": {
        "short name": "MapPeek",
        "parameters": {
            "key": null,
            "indices": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapSize": {
        "short name": "MapSize",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapStage": {
        "short name": "MapStage",
        "parameters": {
            "key": null,
            "indices": null,
            "values": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapUnstage": {
        "short name": "MapUnstage",
        "parameters": {
            "key": null,
            "indices": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MapUnstageNoKey": {
        "short name": "MapUnstageNoKey",
        "parameters": {
            "indices": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatMul": {
        "short name": "MatMul",
        "parameters": {
            "a": null,
            "b": null,
            "transpose_a": "False",
            "transpose_b": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatchingFiles": {
        "short name": "MatchingFiles",
        "parameters": {
            "pattern": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatchingFilesDataset": {
        "short name": "MatchingFilesDataset",
        "parameters": {
            "patterns": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixBandPart": {
        "short name": "MatrixBandPart",
        "parameters": {
            "input": null,
            "num_lower": null,
            "num_upper": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixDeterminant": {
        "short name": "MatrixDeterminant",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixDiag": {
        "short name": "MatrixDiag",
        "parameters": {
            "diagonal": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixDiagPart": {
        "short name": "MatrixDiagPart",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixDiagPartV2": {
        "short name": "MatrixDiagPartV2",
        "parameters": {
            "input": null,
            "k": null,
            "padding_value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixDiagPartV3": {
        "short name": "MatrixDiagPartV3",
        "parameters": {
            "input": null,
            "k": null,
            "padding_value": null,
            "align": "'RIGHT_LEFT'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixDiagV2": {
        "short name": "MatrixDiagV2",
        "parameters": {
            "diagonal": null,
            "k": null,
            "num_rows": null,
            "num_cols": null,
            "padding_value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixDiagV3": {
        "short name": "MatrixDiagV3",
        "parameters": {
            "diagonal": null,
            "k": null,
            "num_rows": null,
            "num_cols": null,
            "padding_value": null,
            "align": "'RIGHT_LEFT'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixExponential": {
        "short name": "MatrixExponential",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixInverse": {
        "short name": "MatrixInverse",
        "parameters": {
            "input": null,
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixLogarithm": {
        "short name": "MatrixLogarithm",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixSetDiag": {
        "short name": "MatrixSetDiag",
        "parameters": {
            "input": null,
            "diagonal": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixSetDiagV2": {
        "short name": "MatrixSetDiagV2",
        "parameters": {
            "input": null,
            "diagonal": null,
            "k": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixSetDiagV3": {
        "short name": "MatrixSetDiagV3",
        "parameters": {
            "input": null,
            "diagonal": null,
            "k": null,
            "align": "'RIGHT_LEFT'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixSolve": {
        "short name": "MatrixSolve",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixSolveLs": {
        "short name": "MatrixSolveLs",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "l2_regularizer": null,
            "fast": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixSquareRoot": {
        "short name": "MatrixSquareRoot",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MatrixTriangularSolve": {
        "short name": "MatrixTriangularSolve",
        "parameters": {
            "matrix": null,
            "rhs": null,
            "lower": "True",
            "adjoint": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Max": {
        "short name": "Max",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxIntraOpParallelismDataset": {
        "short name": "MaxIntraOpParallelismDataset",
        "parameters": {
            "input_dataset": null,
            "max_intra_op_parallelism": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPool": {
        "short name": "MaxPool",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPool3D": {
        "short name": "MaxPool3D",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPool3DGrad": {
        "short name": "MaxPool3DGrad",
        "parameters": {
            "orig_input": null,
            "orig_output": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPool3DGradGrad": {
        "short name": "MaxPool3DGradGrad",
        "parameters": {
            "orig_input": null,
            "orig_output": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NDHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolGrad": {
        "short name": "MaxPoolGrad",
        "parameters": {
            "orig_input": null,
            "orig_output": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "explicit_paddings": "[]",
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolGradGrad": {
        "short name": "MaxPoolGradGrad",
        "parameters": {
            "orig_input": null,
            "orig_output": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolGradGradV2": {
        "short name": "MaxPoolGradGradV2",
        "parameters": {
            "orig_input": null,
            "orig_output": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolGradGradWithArgmax": {
        "short name": "MaxPoolGradGradWithArgmax",
        "parameters": {
            "input": null,
            "grad": null,
            "argmax": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "include_batch_in_index": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolGradV2": {
        "short name": "MaxPoolGradV2",
        "parameters": {
            "orig_input": null,
            "orig_output": null,
            "grad": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolGradWithArgmax": {
        "short name": "MaxPoolGradWithArgmax",
        "parameters": {
            "input": null,
            "grad": null,
            "argmax": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "include_batch_in_index": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolV2": {
        "short name": "MaxPoolV2",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MaxPoolWithArgmax": {
        "short name": "MaxPoolWithArgmax",
        "parameters": {
            "input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "Targmax": "tf.dtypes.int64",
            "include_batch_in_index": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Maximum": {
        "short name": "Maximum",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Mean": {
        "short name": "Mean",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Merge": {
        "short name": "Merge",
        "parameters": {
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MergeSummary": {
        "short name": "MergeSummary",
        "parameters": {
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MergeV2Checkpoints": {
        "short name": "MergeV2Checkpoints",
        "parameters": {
            "checkpoint_prefixes": null,
            "destination_prefix": null,
            "delete_old_dirs": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Mfcc": {
        "short name": "Mfcc",
        "parameters": {
            "spectrogram": null,
            "sample_rate": null,
            "upper_frequency_limit": "4000",
            "lower_frequency_limit": "20",
            "filterbank_channel_count": "40",
            "dct_coefficient_count": "13",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Min": {
        "short name": "Min",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Minimum": {
        "short name": "Minimum",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MirrorPad": {
        "short name": "MirrorPad",
        "parameters": {
            "input": null,
            "paddings": null,
            "mode": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MirrorPadGrad": {
        "short name": "MirrorPadGrad",
        "parameters": {
            "input": null,
            "paddings": null,
            "mode": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Mod": {
        "short name": "Mod",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ModelDataset": {
        "short name": "ModelDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "algorithm": "0",
            "cpu_budget": "0",
            "ram_budget": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Mul": {
        "short name": "Mul",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MulNoNan": {
        "short name": "MulNoNan",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MultiDeviceIterator": {
        "short name": "MultiDeviceIterator",
        "parameters": {
            "devices": null,
            "shared_name": null,
            "container": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MultiDeviceIteratorFromStringHandle": {
        "short name": "MultiDeviceIteratorFromStringHandle",
        "parameters": {
            "string_handle": null,
            "output_types": "[]",
            "output_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MultiDeviceIteratorGetNextFromShard": {
        "short name": "MultiDeviceIteratorGetNextFromShard",
        "parameters": {
            "multi_device_iterator": null,
            "shard_num": null,
            "incarnation_id": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MultiDeviceIteratorInit": {
        "short name": "MultiDeviceIteratorInit",
        "parameters": {
            "dataset": null,
            "multi_device_iterator": null,
            "max_buffer_size": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MultiDeviceIteratorToStringHandle": {
        "short name": "MultiDeviceIteratorToStringHandle",
        "parameters": {
            "multi_device_iterator": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Multinomial": {
        "short name": "Multinomial",
        "parameters": {
            "logits": null,
            "num_samples": null,
            "seed": "0",
            "seed2": "0",
            "output_dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutableDenseHashTable": {
        "short name": "MutableDenseHashTable",
        "parameters": {
            "empty_key": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "value_shape": "[]",
            "initial_num_buckets": "131072",
            "max_load_factor": "0.8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutableDenseHashTableV2": {
        "short name": "MutableDenseHashTableV2",
        "parameters": {
            "empty_key": null,
            "deleted_key": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "value_shape": "[]",
            "initial_num_buckets": "131072",
            "max_load_factor": "0.8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutableHashTable": {
        "short name": "MutableHashTable",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutableHashTableOfTensors": {
        "short name": "MutableHashTableOfTensors",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "value_shape": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutableHashTableOfTensorsV2": {
        "short name": "MutableHashTableOfTensorsV2",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "value_shape": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutableHashTableV2": {
        "short name": "MutableHashTableV2",
        "parameters": {
            "key_dtype": null,
            "value_dtype": null,
            "container": "''",
            "shared_name": "''",
            "use_node_name_sharing": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutexLock": {
        "short name": "MutexLock",
        "parameters": {
            "mutex": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.MutexV2": {
        "short name": "MutexV2",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NcclAllReduce": {
        "short name": "NcclAllReduce",
        "parameters": {
            "input": null,
            "reduction": null,
            "num_devices": null,
            "shared_name": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NcclBroadcast": {
        "short name": "NcclBroadcast",
        "parameters": {
            "input": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NcclReduce": {
        "short name": "NcclReduce",
        "parameters": {
            "input": null,
            "reduction": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Ndtri": {
        "short name": "Ndtri",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Neg": {
        "short name": "Neg",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NextAfter": {
        "short name": "NextAfter",
        "parameters": {
            "x1": null,
            "x2": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NextIteration": {
        "short name": "NextIteration",
        "parameters": {
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NoOp": {
        "short name": "NoOp",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonDeterministicInts": {
        "short name": "NonDeterministicInts",
        "parameters": {
            "shape": null,
            "dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonMaxSuppression": {
        "short name": "NonMaxSuppression",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": "0.5",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonMaxSuppressionV2": {
        "short name": "NonMaxSuppressionV2",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonMaxSuppressionV3": {
        "short name": "NonMaxSuppressionV3",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": null,
            "score_threshold": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonMaxSuppressionV4": {
        "short name": "NonMaxSuppressionV4",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": null,
            "score_threshold": null,
            "pad_to_max_output_size": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonMaxSuppressionV5": {
        "short name": "NonMaxSuppressionV5",
        "parameters": {
            "boxes": null,
            "scores": null,
            "max_output_size": null,
            "iou_threshold": null,
            "score_threshold": null,
            "soft_nms_sigma": null,
            "pad_to_max_output_size": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonMaxSuppressionWithOverlaps": {
        "short name": "NonMaxSuppressionWithOverlaps",
        "parameters": {
            "overlaps": null,
            "scores": null,
            "max_output_size": null,
            "overlap_threshold": null,
            "score_threshold": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NonSerializableDataset": {
        "short name": "NonSerializableDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NotEqual": {
        "short name": "NotEqual",
        "parameters": {
            "x": null,
            "y": null,
            "incompatible_shape_error": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.NthElement": {
        "short name": "NthElement",
        "parameters": {
            "input": null,
            "n": null,
            "reverse": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OneHot": {
        "short name": "OneHot",
        "parameters": {
            "indices": null,
            "depth": null,
            "on_value": null,
            "off_value": null,
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OneShotIterator": {
        "short name": "OneShotIterator",
        "parameters": {
            "dataset_factory": null,
            "output_types": null,
            "output_shapes": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OnesLike": {
        "short name": "OnesLike",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OptimizeDataset": {
        "short name": "OptimizeDataset",
        "parameters": {
            "input_dataset": null,
            "optimizations": null,
            "output_types": null,
            "output_shapes": null,
            "optimization_configs": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OptimizeDatasetV2": {
        "short name": "OptimizeDatasetV2",
        "parameters": {
            "input_dataset": null,
            "optimizations_enabled": null,
            "optimizations_disabled": null,
            "optimizations_default": null,
            "output_types": null,
            "output_shapes": null,
            "optimization_configs": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OptionalFromValue": {
        "short name": "OptionalFromValue",
        "parameters": {
            "components": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OptionalGetValue": {
        "short name": "OptionalGetValue",
        "parameters": {
            "optional": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OptionalHasValue": {
        "short name": "OptionalHasValue",
        "parameters": {
            "optional": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OptionalNone": {
        "short name": "OptionalNone",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OptionsDataset": {
        "short name": "OptionsDataset",
        "parameters": {
            "input_dataset": null,
            "serialized_options": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OrderedMapClear": {
        "short name": "OrderedMapClear",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OrderedMapIncompleteSize": {
        "short name": "OrderedMapIncompleteSize",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OrderedMapPeek": {
        "short name": "OrderedMapPeek",
        "parameters": {
            "key": null,
            "indices": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OrderedMapSize": {
        "short name": "OrderedMapSize",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OrderedMapStage": {
        "short name": "OrderedMapStage",
        "parameters": {
            "key": null,
            "indices": null,
            "values": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OrderedMapUnstage": {
        "short name": "OrderedMapUnstage",
        "parameters": {
            "key": null,
            "indices": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OrderedMapUnstageNoKey": {
        "short name": "OrderedMapUnstageNoKey",
        "parameters": {
            "indices": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OutensorfloweedDequeue": {
        "short name": "OutfeedDequeue",
        "parameters": {
            "dtype": null,
            "shape": null,
            "device_ordinal": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OutensorfloweedDequeueTuple": {
        "short name": "OutfeedDequeueTuple",
        "parameters": {
            "dtypes": null,
            "shapes": null,
            "device_ordinal": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OutensorfloweedDequeueTupleV2": {
        "short name": "OutfeedDequeueTupleV2",
        "parameters": {
            "device_ordinal": null,
            "dtypes": null,
            "shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OutensorfloweedDequeueV2": {
        "short name": "OutfeedDequeueV2",
        "parameters": {
            "device_ordinal": null,
            "dtype": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OutensorfloweedEnqueue": {
        "short name": "OutfeedEnqueue",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.OutensorfloweedEnqueueTuple": {
        "short name": "OutfeedEnqueueTuple",
        "parameters": {
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Pack": {
        "short name": "Pack",
        "parameters": {
            "values": null,
            "axis": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Pad": {
        "short name": "Pad",
        "parameters": {
            "input": null,
            "paddings": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PadV2": {
        "short name": "PadV2",
        "parameters": {
            "input": null,
            "paddings": null,
            "constant_values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PaddedBatchDataset": {
        "short name": "PaddedBatchDataset",
        "parameters": {
            "input_dataset": null,
            "batch_size": null,
            "padded_shapes": null,
            "padding_values": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PaddedBatchDatasetV2": {
        "short name": "PaddedBatchDatasetV2",
        "parameters": {
            "input_dataset": null,
            "batch_size": null,
            "padded_shapes": null,
            "padding_values": null,
            "drop_remainder": null,
            "output_shapes": null,
            "parallel_copy": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PaddingFIFOQueue": {
        "short name": "PaddingFIFOQueue",
        "parameters": {
            "component_types": null,
            "shapes": "[]",
            "capacity": "-1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PaddingFIFOQueueV2": {
        "short name": "PaddingFIFOQueueV2",
        "parameters": {
            "component_types": null,
            "shapes": "[]",
            "capacity": "-1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelBatchDataset": {
        "short name": "ParallelBatchDataset",
        "parameters": {
            "input_dataset": null,
            "batch_size": null,
            "num_parallel_calls": null,
            "drop_remainder": null,
            "output_types": null,
            "output_shapes": null,
            "parallel_copy": "False",
            "deterministic": "'default'",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelConcat": {
        "short name": "ParallelConcat",
        "parameters": {
            "values": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelDynamicStitch": {
        "short name": "ParallelDynamicStitch",
        "parameters": {
            "indices": null,
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelFilterDataset": {
        "short name": "ParallelFilterDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "num_parallel_calls": null,
            "predicate": null,
            "output_types": null,
            "output_shapes": null,
            "deterministic": "'default'",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelInterleaveDataset": {
        "short name": "ParallelInterleaveDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "cycle_length": null,
            "block_length": null,
            "sloppy": null,
            "buffer_output_elements": null,
            "prefetch_input_elements": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelInterleaveDatasetV2": {
        "short name": "ParallelInterleaveDatasetV2",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "cycle_length": null,
            "block_length": null,
            "num_parallel_calls": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "sloppy": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelInterleaveDatasetV3": {
        "short name": "ParallelInterleaveDatasetV3",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "cycle_length": null,
            "block_length": null,
            "num_parallel_calls": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "deterministic": "'default'",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelInterleaveDatasetV4": {
        "short name": "ParallelInterleaveDatasetV4",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "cycle_length": null,
            "block_length": null,
            "buffer_output_elements": null,
            "prefetch_input_elements": null,
            "num_parallel_calls": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "deterministic": "'default'",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelMapDataset": {
        "short name": "ParallelMapDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "num_parallel_calls": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "use_inter_op_parallelism": "True",
            "sloppy": "False",
            "preserve_cardinality": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParallelMapDatasetV2": {
        "short name": "ParallelMapDatasetV2",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "num_parallel_calls": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "use_inter_op_parallelism": "True",
            "deterministic": "'default'",
            "preserve_cardinality": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParameterizedTruncatedNormal": {
        "short name": "ParameterizedTruncatedNormal",
        "parameters": {
            "shape": null,
            "means": null,
            "stdevs": null,
            "minvals": null,
            "maxvals": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseExample": {
        "short name": "ParseExample",
        "parameters": {
            "serialized": null,
            "names": null,
            "sparse_keys": null,
            "dense_keys": null,
            "dense_defaults": null,
            "sparse_types": null,
            "dense_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseExampleDataset": {
        "short name": "ParseExampleDataset",
        "parameters": {
            "input_dataset": null,
            "num_parallel_calls": null,
            "dense_defaults": null,
            "sparse_keys": null,
            "dense_keys": null,
            "sparse_types": null,
            "dense_shapes": null,
            "output_types": null,
            "output_shapes": null,
            "sloppy": "False",
            "ragged_keys": "[]",
            "ragged_value_types": "[]",
            "ragged_split_types": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseExampleDatasetV2": {
        "short name": "ParseExampleDatasetV2",
        "parameters": {
            "input_dataset": null,
            "num_parallel_calls": null,
            "dense_defaults": null,
            "sparse_keys": null,
            "dense_keys": null,
            "sparse_types": null,
            "dense_shapes": null,
            "output_types": null,
            "output_shapes": null,
            "deterministic": "'default'",
            "ragged_keys": "[]",
            "ragged_value_types": "[]",
            "ragged_split_types": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseExampleV2": {
        "short name": "ParseExampleV2",
        "parameters": {
            "serialized": null,
            "names": null,
            "sparse_keys": null,
            "dense_keys": null,
            "ragged_keys": null,
            "dense_defaults": null,
            "num_sparse": null,
            "sparse_types": null,
            "ragged_value_types": null,
            "ragged_split_types": null,
            "dense_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseSequenceExample": {
        "short name": "ParseSequenceExample",
        "parameters": {
            "serialized": null,
            "debug_name": null,
            "context_dense_defaults": null,
            "feature_list_dense_missing_assumed_empty": null,
            "context_sparse_keys": null,
            "context_dense_keys": null,
            "feature_list_sparse_keys": null,
            "feature_list_dense_keys": null,
            "Ncontext_sparse": "0",
            "Ncontext_dense": "0",
            "Nfeature_list_sparse": "0",
            "Nfeature_list_dense": "0",
            "context_sparse_types": "[]",
            "feature_list_dense_types": "[]",
            "context_dense_shapes": "[]",
            "feature_list_sparse_types": "[]",
            "feature_list_dense_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseSequenceExampleV2": {
        "short name": "ParseSequenceExampleV2",
        "parameters": {
            "serialized": null,
            "debug_name": null,
            "context_sparse_keys": null,
            "context_dense_keys": null,
            "context_ragged_keys": null,
            "feature_list_sparse_keys": null,
            "feature_list_dense_keys": null,
            "feature_list_ragged_keys": null,
            "feature_list_dense_missing_assumed_empty": null,
            "context_dense_defaults": null,
            "Ncontext_sparse": "0",
            "context_sparse_types": "[]",
            "context_ragged_value_types": "[]",
            "context_ragged_split_types": "[]",
            "context_dense_shapes": "[]",
            "Nfeature_list_sparse": "0",
            "Nfeature_list_dense": "0",
            "feature_list_dense_types": "[]",
            "feature_list_sparse_types": "[]",
            "feature_list_ragged_value_types": "[]",
            "feature_list_ragged_split_types": "[]",
            "feature_list_dense_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseSingleExample": {
        "short name": "ParseSingleExample",
        "parameters": {
            "serialized": null,
            "dense_defaults": null,
            "num_sparse": null,
            "sparse_keys": null,
            "dense_keys": null,
            "sparse_types": null,
            "dense_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseSingleSequenceExample": {
        "short name": "ParseSingleSequenceExample",
        "parameters": {
            "serialized": null,
            "feature_list_dense_missing_assumed_empty": null,
            "context_sparse_keys": null,
            "context_dense_keys": null,
            "feature_list_sparse_keys": null,
            "feature_list_dense_keys": null,
            "context_dense_defaults": null,
            "debug_name": null,
            "context_sparse_types": "[]",
            "feature_list_dense_types": "[]",
            "context_dense_shapes": "[]",
            "feature_list_sparse_types": "[]",
            "feature_list_dense_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ParseTensor": {
        "short name": "ParseTensor",
        "parameters": {
            "serialized": null,
            "out_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PartitionedCall": {
        "short name": "PartitionedCall",
        "parameters": {
            "args": null,
            "Tout": null,
            "f": null,
            "config": "''",
            "config_proto": "''",
            "executor_type": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Placeholder": {
        "short name": "Placeholder",
        "parameters": {
            "dtype": null,
            "shape": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PlaceholderV2": {
        "short name": "PlaceholderV2",
        "parameters": {
            "dtype": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PlaceholderWithDefault": {
        "short name": "PlaceholderWithDefault",
        "parameters": {
            "input": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Polygamma": {
        "short name": "Polygamma",
        "parameters": {
            "a": null,
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PopulationCount": {
        "short name": "PopulationCount",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Pow": {
        "short name": "Pow",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PrefetchDataset": {
        "short name": "PrefetchDataset",
        "parameters": {
            "input_dataset": null,
            "buffer_size": null,
            "output_types": null,
            "output_shapes": null,
            "slack_period": "0",
            "legacy_autotune": "True",
            "buffer_size_min": "0",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Prelinearize": {
        "short name": "Prelinearize",
        "parameters": {
            "input": null,
            "shape": "[]",
            "layout": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PrelinearizeTuple": {
        "short name": "PrelinearizeTuple",
        "parameters": {
            "inputs": null,
            "shapes": null,
            "layouts": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PreventGradient": {
        "short name": "PreventGradient",
        "parameters": {
            "input": null,
            "message": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Print": {
        "short name": "Print",
        "parameters": {
            "input": null,
            "data": null,
            "message": "''",
            "first_n": "-1",
            "summarize": "3",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PrintV2": {
        "short name": "PrintV2",
        "parameters": {
            "input": null,
            "output_stream": "'stderr'",
            "end": "'\\n'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PriorityQueue": {
        "short name": "PriorityQueue",
        "parameters": {
            "shapes": null,
            "component_types": "[]",
            "capacity": "-1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PriorityQueueV2": {
        "short name": "PriorityQueueV2",
        "parameters": {
            "shapes": null,
            "component_types": "[]",
            "capacity": "-1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PrivateThreadPoolDataset": {
        "short name": "PrivateThreadPoolDataset",
        "parameters": {
            "input_dataset": null,
            "num_threads": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Prod": {
        "short name": "Prod",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PyFunc": {
        "short name": "PyFunc",
        "parameters": {
            "input": null,
            "token": null,
            "Tout": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.PyFuncStateless": {
        "short name": "PyFuncStateless",
        "parameters": {
            "input": null,
            "token": null,
            "Tout": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Qr": {
        "short name": "Qr",
        "parameters": {
            "input": null,
            "full_matrices": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizeAndDequantize": {
        "short name": "QuantizeAndDequantize",
        "parameters": {
            "input": null,
            "signed_input": "True",
            "num_bits": "8",
            "range_given": "False",
            "input_min": "0",
            "input_max": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizeAndDequantizeV2": {
        "short name": "QuantizeAndDequantizeV2",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "signed_input": "True",
            "num_bits": "8",
            "range_given": "False",
            "round_mode": "'HALF_TO_EVEN'",
            "narrow_range": "False",
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizeAndDequantizeV3": {
        "short name": "QuantizeAndDequantizeV3",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "num_bits": null,
            "signed_input": "True",
            "range_given": "True",
            "narrow_range": "False",
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizeAndDequantizeV4": {
        "short name": "QuantizeAndDequantizeV4",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "signed_input": "True",
            "num_bits": "8",
            "range_given": "False",
            "round_mode": "'HALF_TO_EVEN'",
            "narrow_range": "False",
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizeAndDequantizeV4Grad": {
        "short name": "QuantizeAndDequantizeV4Grad",
        "parameters": {
            "gradients": null,
            "input": null,
            "input_min": null,
            "input_max": null,
            "axis": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizeDownAndShrinkRange": {
        "short name": "QuantizeDownAndShrinkRange",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "out_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizeV2": {
        "short name": "QuantizeV2",
        "parameters": {
            "input": null,
            "min_range": null,
            "max_range": null,
            "T": null,
            "mode": "'MIN_COMBINED'",
            "round_mode": "'HALF_AWAY_FROM_ZERO'",
            "narrow_range": "False",
            "axis": "-1",
            "ensure_minimum_range": "0.01",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedAdd": {
        "short name": "QuantizedAdd",
        "parameters": {
            "x": null,
            "y": null,
            "min_x": null,
            "max_x": null,
            "min_y": null,
            "max_y": null,
            "Toutput": "tf.dtypes.qint32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedAvgPool": {
        "short name": "QuantizedAvgPool",
        "parameters": {
            "input": null,
            "min_input": null,
            "max_input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedBatchNormWithGlobalNormalization": {
        "short name": "QuantizedBatchNormWithGlobalNormalization",
        "parameters": {
            "t": null,
            "t_min": null,
            "t_max": null,
            "m": null,
            "m_min": null,
            "m_max": null,
            "v": null,
            "v_min": null,
            "v_max": null,
            "beta": null,
            "beta_min": null,
            "beta_max": null,
            "gamma": null,
            "gamma_min": null,
            "gamma_max": null,
            "out_type": null,
            "variance_epsilon": null,
            "scale_after_normalization": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedBiasAdd": {
        "short name": "QuantizedBiasAdd",
        "parameters": {
            "input": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_bias": null,
            "max_bias": null,
            "out_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConcat": {
        "short name": "QuantizedConcat",
        "parameters": {
            "concat_dim": null,
            "values": null,
            "input_mins": null,
            "input_maxes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2D": {
        "short name": "QuantizedConv2D",
        "parameters": {
            "input": null,
            "filter": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DAndRelu": {
        "short name": "QuantizedConv2DAndRelu",
        "parameters": {
            "input": null,
            "filter": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DAndReluAndRequantize": {
        "short name": "QuantizedConv2DAndReluAndRequantize",
        "parameters": {
            "input": null,
            "filter": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.quint8",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DAndRequantize": {
        "short name": "QuantizedConv2DAndRequantize",
        "parameters": {
            "input": null,
            "filter": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint8",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DPerChannel": {
        "short name": "QuantizedConv2DPerChannel",
        "parameters": {
            "input": null,
            "filter": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DWithBias": {
        "short name": "QuantizedConv2DWithBias",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRelu": {
        "short name": "QuantizedConv2DWithBiasAndRelu",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": {
        "short name": "QuantizedConv2DWithBiasAndReluAndRequantize",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.quint8",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DWithBiasAndRequantize": {
        "short name": "QuantizedConv2DWithBiasAndRequantize",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint8",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": {
        "short name": "QuantizedConv2DWithBiasSignedSumAndReluAndRequantize",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "summand": null,
            "min_summand": null,
            "max_summand": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.quint8",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndRelu": {
        "short name": "QuantizedConv2DWithBiasSumAndRelu",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "summand": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": {
        "short name": "QuantizedConv2DWithBiasSumAndReluAndRequantize",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "summand": null,
            "min_summand": null,
            "max_summand": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.quint8",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedDepthwiseConv2D": {
        "short name": "QuantizedDepthwiseConv2D",
        "parameters": {
            "input": null,
            "filter": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBias": {
        "short name": "QuantizedDepthwiseConv2DWithBias",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": {
        "short name": "QuantizedDepthwiseConv2DWithBiasAndRelu",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.qint32",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": {
        "short name": "QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize",
        "parameters": {
            "input": null,
            "filter": null,
            "bias": null,
            "min_input": null,
            "max_input": null,
            "min_filter": null,
            "max_filter": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "strides": null,
            "padding": null,
            "out_type": "tf.dtypes.quint8",
            "dilations": "[1, 1, 1, 1]",
            "padding_list": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedInstanceNorm": {
        "short name": "QuantizedInstanceNorm",
        "parameters": {
            "x": null,
            "x_min": null,
            "x_max": null,
            "output_range_given": "False",
            "given_y_min": "0",
            "given_y_max": "0",
            "variance_epsilon": "1e-05",
            "min_separation": "0.001",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMatMul": {
        "short name": "QuantizedMatMul",
        "parameters": {
            "a": null,
            "b": null,
            "min_a": null,
            "max_a": null,
            "min_b": null,
            "max_b": null,
            "Toutput": "tf.dtypes.qint32",
            "transpose_a": "False",
            "transpose_b": "False",
            "Tactivation": "tf.dtypes.quint8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMatMulWithBias": {
        "short name": "QuantizedMatMulWithBias",
        "parameters": {
            "a": null,
            "b": null,
            "bias": null,
            "min_a": null,
            "max_a": null,
            "min_b": null,
            "max_b": null,
            "Toutput": "tf.dtypes.qint32",
            "transpose_a": "False",
            "transpose_b": "False",
            "input_quant_mode": "'MIN_FIRST'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndDequantize": {
        "short name": "QuantizedMatMulWithBiasAndDequantize",
        "parameters": {
            "a": null,
            "b": null,
            "bias": null,
            "min_a": null,
            "max_a": null,
            "min_b": null,
            "max_b": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "Toutput": null,
            "transpose_a": "False",
            "transpose_b": "False",
            "input_quant_mode": "'MIN_FIRST'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRelu": {
        "short name": "QuantizedMatMulWithBiasAndRelu",
        "parameters": {
            "a": null,
            "b": null,
            "bias": null,
            "min_a": null,
            "max_a": null,
            "min_b": null,
            "max_b": null,
            "Toutput": "tf.dtypes.qint32",
            "transpose_a": "False",
            "transpose_b": "False",
            "input_quant_mode": "'MIN_FIRST'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": {
        "short name": "QuantizedMatMulWithBiasAndReluAndRequantize",
        "parameters": {
            "a": null,
            "b": null,
            "bias": null,
            "min_a": null,
            "max_a": null,
            "min_b": null,
            "max_b": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "Toutput": "tf.dtypes.quint8",
            "transpose_a": "False",
            "transpose_b": "False",
            "input_quant_mode": "'MIN_FIRST'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMatMulWithBiasAndRequantize": {
        "short name": "QuantizedMatMulWithBiasAndRequantize",
        "parameters": {
            "a": null,
            "b": null,
            "bias": null,
            "min_a": null,
            "max_a": null,
            "min_b": null,
            "max_b": null,
            "min_freezed_output": null,
            "max_freezed_output": null,
            "Toutput": "tf.dtypes.quint8",
            "transpose_a": "False",
            "transpose_b": "False",
            "input_quant_mode": "'MIN_FIRST'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMaxPool": {
        "short name": "QuantizedMaxPool",
        "parameters": {
            "input": null,
            "min_input": null,
            "max_input": null,
            "ksize": null,
            "strides": null,
            "padding": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedMul": {
        "short name": "QuantizedMul",
        "parameters": {
            "x": null,
            "y": null,
            "min_x": null,
            "max_x": null,
            "min_y": null,
            "max_y": null,
            "Toutput": "tf.dtypes.qint32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedRelu": {
        "short name": "QuantizedRelu",
        "parameters": {
            "features": null,
            "min_features": null,
            "max_features": null,
            "out_type": "tf.dtypes.quint8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedRelu6": {
        "short name": "QuantizedRelu6",
        "parameters": {
            "features": null,
            "min_features": null,
            "max_features": null,
            "out_type": "tf.dtypes.quint8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedReluX": {
        "short name": "QuantizedReluX",
        "parameters": {
            "features": null,
            "max_value": null,
            "min_features": null,
            "max_features": null,
            "out_type": "tf.dtypes.quint8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedReshape": {
        "short name": "QuantizedReshape",
        "parameters": {
            "tensor": null,
            "shape": null,
            "input_min": null,
            "input_max": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QuantizedResizeBilinear": {
        "short name": "QuantizedResizeBilinear",
        "parameters": {
            "images": null,
            "size": null,
            "min": null,
            "max": null,
            "align_corners": "False",
            "half_pixel_centers": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueClose": {
        "short name": "QueueClose",
        "parameters": {
            "handle": null,
            "cancel_pending_enqueues": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueCloseV2": {
        "short name": "QueueCloseV2",
        "parameters": {
            "handle": null,
            "cancel_pending_enqueues": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueDequeue": {
        "short name": "QueueDequeue",
        "parameters": {
            "handle": null,
            "component_types": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueDequeueMany": {
        "short name": "QueueDequeueMany",
        "parameters": {
            "handle": null,
            "n": null,
            "component_types": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueDequeueManyV2": {
        "short name": "QueueDequeueManyV2",
        "parameters": {
            "handle": null,
            "n": null,
            "component_types": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueDequeueUpTo": {
        "short name": "QueueDequeueUpTo",
        "parameters": {
            "handle": null,
            "n": null,
            "component_types": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueDequeueUpToV2": {
        "short name": "QueueDequeueUpToV2",
        "parameters": {
            "handle": null,
            "n": null,
            "component_types": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueDequeueV2": {
        "short name": "QueueDequeueV2",
        "parameters": {
            "handle": null,
            "component_types": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueEnqueue": {
        "short name": "QueueEnqueue",
        "parameters": {
            "handle": null,
            "components": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueEnqueueMany": {
        "short name": "QueueEnqueueMany",
        "parameters": {
            "handle": null,
            "components": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueEnqueueManyV2": {
        "short name": "QueueEnqueueManyV2",
        "parameters": {
            "handle": null,
            "components": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueEnqueueV2": {
        "short name": "QueueEnqueueV2",
        "parameters": {
            "handle": null,
            "components": null,
            "timeout_ms": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueIsClosed": {
        "short name": "QueueIsClosed",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueIsClosedV2": {
        "short name": "QueueIsClosedV2",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueSize": {
        "short name": "QueueSize",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.QueueSizeV2": {
        "short name": "QueueSizeV2",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RFFT": {
        "short name": "RFFT",
        "parameters": {
            "input": null,
            "fft_length": null,
            "Tcomplex": "tf.dtypes.complex64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RFFT2D": {
        "short name": "RFFT2D",
        "parameters": {
            "input": null,
            "fft_length": null,
            "Tcomplex": "tf.dtypes.complex64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RFFT3D": {
        "short name": "RFFT3D",
        "parameters": {
            "input": null,
            "fft_length": null,
            "Tcomplex": "tf.dtypes.complex64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RGBToHSV": {
        "short name": "RGBToHSV",
        "parameters": {
            "images": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedBincount": {
        "short name": "RaggedBincount",
        "parameters": {
            "splits": null,
            "values": null,
            "size": null,
            "weights": null,
            "binary_output": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedCountSparseOutput": {
        "short name": "RaggedCountSparseOutput",
        "parameters": {
            "splits": null,
            "values": null,
            "weights": null,
            "binary_output": null,
            "minlength": "-1",
            "maxlength": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedCross": {
        "short name": "RaggedCross",
        "parameters": {
            "ragged_values": null,
            "ragged_row_splits": null,
            "sparse_indices": null,
            "sparse_values": null,
            "sparse_shape": null,
            "dense_inputs": null,
            "input_order": null,
            "hashed_output": null,
            "num_buckets": null,
            "hash_key": null,
            "out_values_type": null,
            "out_row_splits_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedGather": {
        "short name": "RaggedGather",
        "parameters": {
            "params_nested_splits": null,
            "params_dense_values": null,
            "indices": null,
            "OUTPUT_RAGGED_RANK": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedRange": {
        "short name": "RaggedRange",
        "parameters": {
            "starts": null,
            "limits": null,
            "deltas": null,
            "Tsplits": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedTensorFromVariant": {
        "short name": "RaggedTensorFromVariant",
        "parameters": {
            "encoded_ragged": null,
            "input_ragged_rank": null,
            "output_ragged_rank": null,
            "Tvalues": null,
            "Tsplits": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedTensorToSparse": {
        "short name": "RaggedTensorToSparse",
        "parameters": {
            "rt_nested_splits": null,
            "rt_dense_values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedTensorToTensor": {
        "short name": "RaggedTensorToTensor",
        "parameters": {
            "shape": null,
            "values": null,
            "default_value": null,
            "row_partition_tensors": null,
            "row_partition_types": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedTensorToVariant": {
        "short name": "RaggedTensorToVariant",
        "parameters": {
            "rt_nested_splits": null,
            "rt_dense_values": null,
            "batched_input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RaggedTensorToVariantGradient": {
        "short name": "RaggedTensorToVariantGradient",
        "parameters": {
            "encoded_ragged_grad": null,
            "row_splits": null,
            "dense_values_shape": null,
            "Tvalues": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomCrop": {
        "short name": "RandomCrop",
        "parameters": {
            "image": null,
            "size": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomDataset": {
        "short name": "RandomDataset",
        "parameters": {
            "seed": null,
            "seed2": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomGamma": {
        "short name": "RandomGamma",
        "parameters": {
            "shape": null,
            "alpha": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomGammaGrad": {
        "short name": "RandomGammaGrad",
        "parameters": {
            "alpha": null,
            "sample": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomIndexShuffle": {
        "short name": "RandomIndexShuffle",
        "parameters": {
            "index": null,
            "seed": null,
            "max_index": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomPoisson": {
        "short name": "RandomPoisson",
        "parameters": {
            "shape": null,
            "rate": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomPoissonV2": {
        "short name": "RandomPoissonV2",
        "parameters": {
            "shape": null,
            "rate": null,
            "seed": "0",
            "seed2": "0",
            "dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomShuffle": {
        "short name": "RandomShuffle",
        "parameters": {
            "value": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomShuffleQueue": {
        "short name": "RandomShuffleQueue",
        "parameters": {
            "component_types": null,
            "shapes": "[]",
            "capacity": "-1",
            "min_after_dequeue": "0",
            "seed": "0",
            "seed2": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomShuffleQueueV2": {
        "short name": "RandomShuffleQueueV2",
        "parameters": {
            "component_types": null,
            "shapes": "[]",
            "capacity": "-1",
            "min_after_dequeue": "0",
            "seed": "0",
            "seed2": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomStandardNormal": {
        "short name": "RandomStandardNormal",
        "parameters": {
            "shape": null,
            "dtype": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomUniform": {
        "short name": "RandomUniform",
        "parameters": {
            "shape": null,
            "dtype": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RandomUniformInt": {
        "short name": "RandomUniformInt",
        "parameters": {
            "shape": null,
            "minval": null,
            "maxval": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Range": {
        "short name": "Range",
        "parameters": {
            "start": null,
            "limit": null,
            "delta": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RangeDataset": {
        "short name": "RangeDataset",
        "parameters": {
            "start": null,
            "stop": null,
            "step": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Rank": {
        "short name": "Rank",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReadFile": {
        "short name": "ReadFile",
        "parameters": {
            "filename": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReadVariableOp": {
        "short name": "ReadVariableOp",
        "parameters": {
            "resource": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReadVariableXlaSplitND": {
        "short name": "ReadVariableXlaSplitND",
        "parameters": {
            "resource": null,
            "T": null,
            "N": null,
            "num_splits": null,
            "paddings": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderNumRecordsProduced": {
        "short name": "ReaderNumRecordsProduced",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderNumRecordsProducedV2": {
        "short name": "ReaderNumRecordsProducedV2",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompleted": {
        "short name": "ReaderNumWorkUnitsCompleted",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderNumWorkUnitsCompletedV2": {
        "short name": "ReaderNumWorkUnitsCompletedV2",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderRead": {
        "short name": "ReaderRead",
        "parameters": {
            "reader_handle": null,
            "queue_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderReadUpTo": {
        "short name": "ReaderReadUpTo",
        "parameters": {
            "reader_handle": null,
            "queue_handle": null,
            "num_records": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderReadUpToV2": {
        "short name": "ReaderReadUpToV2",
        "parameters": {
            "reader_handle": null,
            "queue_handle": null,
            "num_records": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderReadV2": {
        "short name": "ReaderReadV2",
        "parameters": {
            "reader_handle": null,
            "queue_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderReset": {
        "short name": "ReaderReset",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderResetV2": {
        "short name": "ReaderResetV2",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderRestoreState": {
        "short name": "ReaderRestoreState",
        "parameters": {
            "reader_handle": null,
            "state": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderRestoreStateV2": {
        "short name": "ReaderRestoreStateV2",
        "parameters": {
            "reader_handle": null,
            "state": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderSerializeState": {
        "short name": "ReaderSerializeState",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReaderSerializeStateV2": {
        "short name": "ReaderSerializeStateV2",
        "parameters": {
            "reader_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Real": {
        "short name": "Real",
        "parameters": {
            "input": null,
            "Tout": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RealDiv": {
        "short name": "RealDiv",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RebatchDataset": {
        "short name": "RebatchDataset",
        "parameters": {
            "input_dataset": null,
            "num_replicas": null,
            "output_types": null,
            "output_shapes": null,
            "use_fallback": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RebatchDatasetV2": {
        "short name": "RebatchDatasetV2",
        "parameters": {
            "input_dataset": null,
            "batch_sizes": null,
            "drop_remainder": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Reciprocal": {
        "short name": "Reciprocal",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReciprocalGrad": {
        "short name": "ReciprocalGrad",
        "parameters": {
            "y": null,
            "dy": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RecordInput": {
        "short name": "RecordInput",
        "parameters": {
            "file_pattern": null,
            "file_random_seed": "301",
            "file_shuffle_shift_ratio": "0",
            "file_buffer_size": "10000",
            "file_parallelism": "16",
            "batch_size": "32",
            "compression_type": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Recv": {
        "short name": "Recv",
        "parameters": {
            "tensor_type": null,
            "tensor_name": null,
            "send_device": null,
            "send_device_incarnation": null,
            "recv_device": null,
            "client_terminated": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RecvTPUEmbeddingActivations": {
        "short name": "RecvTPUEmbeddingActivations",
        "parameters": {
            "num_outputs": null,
            "config": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReduceDataset": {
        "short name": "ReduceDataset",
        "parameters": {
            "input_dataset": null,
            "initial_state": null,
            "other_arguments": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "use_inter_op_parallelism": "True",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReduceJoin": {
        "short name": "ReduceJoin",
        "parameters": {
            "inputs": null,
            "reduction_indices": null,
            "keep_dims": "False",
            "separator": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RefEnter": {
        "short name": "RefEnter",
        "parameters": {
            "data": null,
            "frame_name": null,
            "is_constant": "False",
            "parallel_iterations": "10",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RefExit": {
        "short name": "RefExit",
        "parameters": {
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RefIdentity": {
        "short name": "RefIdentity",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RefMerge": {
        "short name": "RefMerge",
        "parameters": {
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RefNextIteration": {
        "short name": "RefNextIteration",
        "parameters": {
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RefSelect": {
        "short name": "RefSelect",
        "parameters": {
            "index": null,
            "inputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RefSwitch": {
        "short name": "RefSwitch",
        "parameters": {
            "data": null,
            "pred": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RegexFullMatch": {
        "short name": "RegexFullMatch",
        "parameters": {
            "input": null,
            "pattern": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RegexReplace": {
        "short name": "RegexReplace",
        "parameters": {
            "input": null,
            "pattern": null,
            "rewrite": null,
            "replace_global": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RegisterDataset": {
        "short name": "RegisterDataset",
        "parameters": {
            "dataset": null,
            "address": null,
            "protocol": null,
            "external_state_policy": null,
            "element_spec": "''",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Relu": {
        "short name": "Relu",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Relu6": {
        "short name": "Relu6",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Relu6Grad": {
        "short name": "Relu6Grad",
        "parameters": {
            "gradients": null,
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReluGrad": {
        "short name": "ReluGrad",
        "parameters": {
            "gradients": null,
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RemoteCall": {
        "short name": "RemoteCall",
        "parameters": {
            "target": null,
            "args": null,
            "Tout": null,
            "f": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RepeatDataset": {
        "short name": "RepeatDataset",
        "parameters": {
            "input_dataset": null,
            "count": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RequantizationRange": {
        "short name": "RequantizationRange",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RequantizationRangePerChannel": {
        "short name": "RequantizationRangePerChannel",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "clip_value_max": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Requantize": {
        "short name": "Requantize",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "requested_output_min": null,
            "requested_output_max": null,
            "out_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RequantizePerChannel": {
        "short name": "RequantizePerChannel",
        "parameters": {
            "input": null,
            "input_min": null,
            "input_max": null,
            "requested_output_min": null,
            "requested_output_max": null,
            "out_type": "tf.dtypes.quint8",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Reshape": {
        "short name": "Reshape",
        "parameters": {
            "tensor": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResizeArea": {
        "short name": "ResizeArea",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResizeBicubic": {
        "short name": "ResizeBicubic",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "half_pixel_centers": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResizeBicubicGrad": {
        "short name": "ResizeBicubicGrad",
        "parameters": {
            "grads": null,
            "original_image": null,
            "align_corners": "False",
            "half_pixel_centers": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResizeBilinear": {
        "short name": "ResizeBilinear",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "half_pixel_centers": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResizeBilinearGrad": {
        "short name": "ResizeBilinearGrad",
        "parameters": {
            "grads": null,
            "original_image": null,
            "align_corners": "False",
            "half_pixel_centers": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResizeNearestNeighbor": {
        "short name": "ResizeNearestNeighbor",
        "parameters": {
            "images": null,
            "size": null,
            "align_corners": "False",
            "half_pixel_centers": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResizeNearestNeighborGrad": {
        "short name": "ResizeNearestNeighborGrad",
        "parameters": {
            "grads": null,
            "size": null,
            "align_corners": "False",
            "half_pixel_centers": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceAccumulatorApplyGradient": {
        "short name": "ResourceAccumulatorApplyGradient",
        "parameters": {
            "handle": null,
            "local_step": null,
            "gradient": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceAccumulatorNumAccumulated": {
        "short name": "ResourceAccumulatorNumAccumulated",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceAccumulatorSetGlobalStep": {
        "short name": "ResourceAccumulatorSetGlobalStep",
        "parameters": {
            "handle": null,
            "new_global_step": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceAccumulatorTakeGradient": {
        "short name": "ResourceAccumulatorTakeGradient",
        "parameters": {
            "handle": null,
            "num_required": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAdaMax": {
        "short name": "ResourceApplyAdaMax",
        "parameters": {
            "var": null,
            "m": null,
            "v": null,
            "beta1_power": null,
            "lr": null,
            "beta1": null,
            "beta2": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAdadelta": {
        "short name": "ResourceApplyAdadelta",
        "parameters": {
            "var": null,
            "accum": null,
            "accum_update": null,
            "lr": null,
            "rho": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAdagrad": {
        "short name": "ResourceApplyAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAdagradDA": {
        "short name": "ResourceApplyAdagradDA",
        "parameters": {
            "var": null,
            "gradient_accumulator": null,
            "gradient_squared_accumulator": null,
            "grad": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "global_step": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAdagradV2": {
        "short name": "ResourceApplyAdagradV2",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAdam": {
        "short name": "ResourceApplyAdam",
        "parameters": {
            "var": null,
            "m": null,
            "v": null,
            "beta1_power": null,
            "beta2_power": null,
            "lr": null,
            "beta1": null,
            "beta2": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAdamWithAmsgrad": {
        "short name": "ResourceApplyAdamWithAmsgrad",
        "parameters": {
            "var": null,
            "m": null,
            "v": null,
            "vhat": null,
            "beta1_power": null,
            "beta2_power": null,
            "lr": null,
            "beta1": null,
            "beta2": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyAddSign": {
        "short name": "ResourceApplyAddSign",
        "parameters": {
            "var": null,
            "m": null,
            "lr": null,
            "alpha": null,
            "sign_decay": null,
            "beta": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyCenteredRMSProp": {
        "short name": "ResourceApplyCenteredRMSProp",
        "parameters": {
            "var": null,
            "mg": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyFtrl": {
        "short name": "ResourceApplyFtrl",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyFtrlV2": {
        "short name": "ResourceApplyFtrlV2",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "l2_shrinkage": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyGradientDescent": {
        "short name": "ResourceApplyGradientDescent",
        "parameters": {
            "var": null,
            "alpha": null,
            "delta": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyKerasMomentum": {
        "short name": "ResourceApplyKerasMomentum",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "momentum": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyMomentum": {
        "short name": "ResourceApplyMomentum",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "momentum": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyPowerSign": {
        "short name": "ResourceApplyPowerSign",
        "parameters": {
            "var": null,
            "m": null,
            "lr": null,
            "logbase": null,
            "sign_decay": null,
            "beta": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyProximalAdagrad": {
        "short name": "ResourceApplyProximalAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyProximalGradientDescent": {
        "short name": "ResourceApplyProximalGradientDescent",
        "parameters": {
            "var": null,
            "alpha": null,
            "l1": null,
            "l2": null,
            "delta": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceApplyRMSProp": {
        "short name": "ResourceApplyRMSProp",
        "parameters": {
            "var": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceConditionalAccumulator": {
        "short name": "ResourceConditionalAccumulator",
        "parameters": {
            "dtype": null,
            "shape": null,
            "container": "''",
            "shared_name": "''",
            "reduction_type": "'MEAN'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceCountUpTo": {
        "short name": "ResourceCountUpTo",
        "parameters": {
            "resource": null,
            "limit": null,
            "T": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceGather": {
        "short name": "ResourceGather",
        "parameters": {
            "resource": null,
            "indices": null,
            "dtype": null,
            "batch_dims": "0",
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceGatherNd": {
        "short name": "ResourceGatherNd",
        "parameters": {
            "resource": null,
            "indices": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterAdd": {
        "short name": "ResourceScatterAdd",
        "parameters": {
            "resource": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterDiv": {
        "short name": "ResourceScatterDiv",
        "parameters": {
            "resource": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterMax": {
        "short name": "ResourceScatterMax",
        "parameters": {
            "resource": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterMin": {
        "short name": "ResourceScatterMin",
        "parameters": {
            "resource": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterMul": {
        "short name": "ResourceScatterMul",
        "parameters": {
            "resource": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterNdAdd": {
        "short name": "ResourceScatterNdAdd",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterNdMax": {
        "short name": "ResourceScatterNdMax",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterNdMin": {
        "short name": "ResourceScatterNdMin",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterNdSub": {
        "short name": "ResourceScatterNdSub",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterNdUpdate": {
        "short name": "ResourceScatterNdUpdate",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterSub": {
        "short name": "ResourceScatterSub",
        "parameters": {
            "resource": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceScatterUpdate": {
        "short name": "ResourceScatterUpdate",
        "parameters": {
            "resource": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyAdadelta": {
        "short name": "ResourceSparseApplyAdadelta",
        "parameters": {
            "var": null,
            "accum": null,
            "accum_update": null,
            "lr": null,
            "rho": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyAdagrad": {
        "short name": "ResourceSparseApplyAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyAdagradDA": {
        "short name": "ResourceSparseApplyAdagradDA",
        "parameters": {
            "var": null,
            "gradient_accumulator": null,
            "gradient_squared_accumulator": null,
            "grad": null,
            "indices": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "global_step": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyAdagradV2": {
        "short name": "ResourceSparseApplyAdagradV2",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyCenteredRMSProp": {
        "short name": "ResourceSparseApplyCenteredRMSProp",
        "parameters": {
            "var": null,
            "mg": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyFtrl": {
        "short name": "ResourceSparseApplyFtrl",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "indices": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyFtrlV2": {
        "short name": "ResourceSparseApplyFtrlV2",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "indices": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "l2_shrinkage": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyKerasMomentum": {
        "short name": "ResourceSparseApplyKerasMomentum",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "indices": null,
            "momentum": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyMomentum": {
        "short name": "ResourceSparseApplyMomentum",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "indices": null,
            "momentum": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyProximalAdagrad": {
        "short name": "ResourceSparseApplyProximalAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyProximalGradientDescent": {
        "short name": "ResourceSparseApplyProximalGradientDescent",
        "parameters": {
            "var": null,
            "alpha": null,
            "l1": null,
            "l2": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceSparseApplyRMSProp": {
        "short name": "ResourceSparseApplyRMSProp",
        "parameters": {
            "var": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ResourceStridedSliceAssign": {
        "short name": "ResourceStridedSliceAssign",
        "parameters": {
            "ref": null,
            "begin": null,
            "end": null,
            "strides": null,
            "value": null,
            "begin_mask": "0",
            "end_mask": "0",
            "ellipsis_mask": "0",
            "new_axis_mask": "0",
            "shrink_axis_mask": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Restore": {
        "short name": "Restore",
        "parameters": {
            "file_pattern": null,
            "tensor_name": null,
            "dt": null,
            "preferred_shard": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RestoreSlice": {
        "short name": "RestoreSlice",
        "parameters": {
            "file_pattern": null,
            "tensor_name": null,
            "shape_and_slice": null,
            "dt": null,
            "preferred_shard": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RestoreV2": {
        "short name": "RestoreV2",
        "parameters": {
            "prefix": null,
            "tensor_names": null,
            "shape_and_slices": null,
            "dtypes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingADAMParameters": {
        "short name": "RetrieveTPUEmbeddingADAMParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": {
        "short name": "RetrieveTPUEmbeddingAdadeltaParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradMomentumParameters": {
        "short name": "RetrieveTPUEmbeddingAdagradMomentumParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingAdagradParameters": {
        "short name": "RetrieveTPUEmbeddingAdagradParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": {
        "short name": "RetrieveTPUEmbeddingCenteredRMSPropParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFTRLParameters": {
        "short name": "RetrieveTPUEmbeddingFTRLParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingFrequencyEstimatorParameters": {
        "short name": "RetrieveTPUEmbeddingFrequencyEstimatorParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": {
        "short name": "RetrieveTPUEmbeddingMDLAdagradLightParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingMomentumParameters": {
        "short name": "RetrieveTPUEmbeddingMomentumParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": {
        "short name": "RetrieveTPUEmbeddingProximalAdagradParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": {
        "short name": "RetrieveTPUEmbeddingProximalYogiParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": {
        "short name": "RetrieveTPUEmbeddingRMSPropParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": {
        "short name": "RetrieveTPUEmbeddingStochasticGradientDescentParameters",
        "parameters": {
            "num_shards": null,
            "shard_id": null,
            "table_id": "-1",
            "table_name": "''",
            "config": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Reverse": {
        "short name": "Reverse",
        "parameters": {
            "tensor": null,
            "dims": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReverseSequence": {
        "short name": "ReverseSequence",
        "parameters": {
            "input": null,
            "seq_lengths": null,
            "seq_dim": null,
            "batch_dim": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ReverseV2": {
        "short name": "ReverseV2",
        "parameters": {
            "tensor": null,
            "axis": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RightShift": {
        "short name": "RightShift",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Rint": {
        "short name": "Rint",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RngReadAndSkip": {
        "short name": "RngReadAndSkip",
        "parameters": {
            "resource": null,
            "alg": null,
            "delta": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RngSkip": {
        "short name": "RngSkip",
        "parameters": {
            "resource": null,
            "algorithm": null,
            "delta": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Roll": {
        "short name": "Roll",
        "parameters": {
            "input": null,
            "shift": null,
            "axis": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Round": {
        "short name": "Round",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Rsqrt": {
        "short name": "Rsqrt",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.RsqrtGrad": {
        "short name": "RsqrtGrad",
        "parameters": {
            "y": null,
            "dy": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SampleDistortedBoundingBox": {
        "short name": "SampleDistortedBoundingBox",
        "parameters": {
            "image_size": null,
            "bounding_boxes": null,
            "seed": "0",
            "seed2": "0",
            "min_object_covered": "0.1",
            "aspect_ratio_range": "[0.75, 1.33]",
            "area_range": "[0.05, 1]",
            "max_attempts": "100",
            "use_image_if_no_bounding_boxes": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SampleDistortedBoundingBoxV2": {
        "short name": "SampleDistortedBoundingBoxV2",
        "parameters": {
            "image_size": null,
            "bounding_boxes": null,
            "min_object_covered": null,
            "seed": "0",
            "seed2": "0",
            "aspect_ratio_range": "[0.75, 1.33]",
            "area_range": "[0.05, 1]",
            "max_attempts": "100",
            "use_image_if_no_bounding_boxes": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SamplingDataset": {
        "short name": "SamplingDataset",
        "parameters": {
            "input_dataset": null,
            "rate": null,
            "seed": null,
            "seed2": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Save": {
        "short name": "Save",
        "parameters": {
            "filename": null,
            "tensor_names": null,
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SaveDataset": {
        "short name": "SaveDataset",
        "parameters": {
            "input_dataset": null,
            "path": null,
            "shard_func_other_args": null,
            "shard_func": null,
            "compression": "''",
            "use_shard_func": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SaveDatasetV2": {
        "short name": "SaveDatasetV2",
        "parameters": {
            "input_dataset": null,
            "path": null,
            "shard_func_other_args": null,
            "shard_func": null,
            "output_types": null,
            "output_shapes": null,
            "compression": "''",
            "use_shard_func": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SaveSlices": {
        "short name": "SaveSlices",
        "parameters": {
            "filename": null,
            "tensor_names": null,
            "shapes_and_slices": null,
            "data": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SaveV2": {
        "short name": "SaveV2",
        "parameters": {
            "prefix": null,
            "tensor_names": null,
            "shape_and_slices": null,
            "tensors": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScalarSummary": {
        "short name": "ScalarSummary",
        "parameters": {
            "tags": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScaleAndTranslate": {
        "short name": "ScaleAndTranslate",
        "parameters": {
            "images": null,
            "size": null,
            "scale": null,
            "translation": null,
            "kernel_type": "'lanczos3'",
            "antialias": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScaleAndTranslateGrad": {
        "short name": "ScaleAndTranslateGrad",
        "parameters": {
            "grads": null,
            "original_image": null,
            "scale": null,
            "translation": null,
            "kernel_type": "'lanczos3'",
            "antialias": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScanDataset": {
        "short name": "ScanDataset",
        "parameters": {
            "input_dataset": null,
            "initial_state": null,
            "other_arguments": null,
            "f": null,
            "output_types": null,
            "output_shapes": null,
            "preserve_cardinality": "False",
            "use_default_device": "True",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterAdd": {
        "short name": "ScatterAdd",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterDiv": {
        "short name": "ScatterDiv",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterMax": {
        "short name": "ScatterMax",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterMin": {
        "short name": "ScatterMin",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterMul": {
        "short name": "ScatterMul",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterNd": {
        "short name": "ScatterNd",
        "parameters": {
            "indices": null,
            "updates": null,
            "shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterNdAdd": {
        "short name": "ScatterNdAdd",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterNdMax": {
        "short name": "ScatterNdMax",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterNdMin": {
        "short name": "ScatterNdMin",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterNdNonAliasingAdd": {
        "short name": "ScatterNdNonAliasingAdd",
        "parameters": {
            "input": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterNdSub": {
        "short name": "ScatterNdSub",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterNdUpdate": {
        "short name": "ScatterNdUpdate",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterSub": {
        "short name": "ScatterSub",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ScatterUpdate": {
        "short name": "ScatterUpdate",
        "parameters": {
            "ref": null,
            "indices": null,
            "updates": null,
            "use_locking": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SdcaFprint": {
        "short name": "SdcaFprint",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SdcaOptimizer": {
        "short name": "SdcaOptimizer",
        "parameters": {
            "sparse_example_indices": null,
            "sparse_feature_indices": null,
            "sparse_feature_values": null,
            "dense_features": null,
            "example_weights": null,
            "example_labels": null,
            "sparse_indices": null,
            "sparse_weights": null,
            "dense_weights": null,
            "example_state_data": null,
            "loss_type": null,
            "l1": null,
            "l2": null,
            "num_loss_partitions": null,
            "num_inner_iterations": null,
            "adaptative": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SdcaOptimizerV2": {
        "short name": "SdcaOptimizerV2",
        "parameters": {
            "sparse_example_indices": null,
            "sparse_feature_indices": null,
            "sparse_feature_values": null,
            "dense_features": null,
            "example_weights": null,
            "example_labels": null,
            "sparse_indices": null,
            "sparse_weights": null,
            "dense_weights": null,
            "example_state_data": null,
            "loss_type": null,
            "l1": null,
            "l2": null,
            "num_loss_partitions": null,
            "num_inner_iterations": null,
            "adaptive": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SdcaShrinkL1": {
        "short name": "SdcaShrinkL1",
        "parameters": {
            "weights": null,
            "l1": null,
            "l2": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SegmentMax": {
        "short name": "SegmentMax",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SegmentMean": {
        "short name": "SegmentMean",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SegmentMin": {
        "short name": "SegmentMin",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SegmentProd": {
        "short name": "SegmentProd",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SegmentSum": {
        "short name": "SegmentSum",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Select": {
        "short name": "Select",
        "parameters": {
            "condition": null,
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SelectV2": {
        "short name": "SelectV2",
        "parameters": {
            "condition": null,
            "t": null,
            "e": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SelfAdjointEig": {
        "short name": "SelfAdjointEig",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SelfAdjointEigV2": {
        "short name": "SelfAdjointEigV2",
        "parameters": {
            "input": null,
            "compute_v": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Selu": {
        "short name": "Selu",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SeluGrad": {
        "short name": "SeluGrad",
        "parameters": {
            "gradients": null,
            "outputs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Send": {
        "short name": "Send",
        "parameters": {
            "tensor": null,
            "tensor_name": null,
            "send_device": null,
            "send_device_incarnation": null,
            "recv_device": null,
            "client_terminated": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SendTPUEmbeddingGradients": {
        "short name": "SendTPUEmbeddingGradients",
        "parameters": {
            "inputs": null,
            "learning_rates": null,
            "config": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SerializeIterator": {
        "short name": "SerializeIterator",
        "parameters": {
            "resource_handle": null,
            "external_state_policy": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SerializeManySparse": {
        "short name": "SerializeManySparse",
        "parameters": {
            "sparse_indices": null,
            "sparse_values": null,
            "sparse_shape": null,
            "out_type": "tf.dtypes.string",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SerializeSparse": {
        "short name": "SerializeSparse",
        "parameters": {
            "sparse_indices": null,
            "sparse_values": null,
            "sparse_shape": null,
            "out_type": "tf.dtypes.string",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SerializeTensor": {
        "short name": "SerializeTensor",
        "parameters": {
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SetSize": {
        "short name": "SetSize",
        "parameters": {
            "set_indices": null,
            "set_values": null,
            "set_shape": null,
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SetStatsAggregatorDataset": {
        "short name": "SetStatsAggregatorDataset",
        "parameters": {
            "input_dataset": null,
            "stats_aggregator": null,
            "tag": null,
            "counter_prefix": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Shape": {
        "short name": "Shape",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShapeN": {
        "short name": "ShapeN",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShardDataset": {
        "short name": "ShardDataset",
        "parameters": {
            "input_dataset": null,
            "num_shards": null,
            "index": null,
            "output_types": null,
            "output_shapes": null,
            "require_non_empty": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShardedFilename": {
        "short name": "ShardedFilename",
        "parameters": {
            "basename": null,
            "shard": null,
            "num_shards": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShardedFilespec": {
        "short name": "ShardedFilespec",
        "parameters": {
            "basename": null,
            "num_shards": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShuffleAndRepeatDataset": {
        "short name": "ShuffleAndRepeatDataset",
        "parameters": {
            "input_dataset": null,
            "buffer_size": null,
            "seed": null,
            "seed2": null,
            "count": null,
            "output_types": null,
            "output_shapes": null,
            "reshuffle_each_iteration": "True",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShuffleAndRepeatDatasetV2": {
        "short name": "ShuffleAndRepeatDatasetV2",
        "parameters": {
            "input_dataset": null,
            "buffer_size": null,
            "seed": null,
            "seed2": null,
            "count": null,
            "seed_generator": null,
            "output_types": null,
            "output_shapes": null,
            "reshuffle_each_iteration": "True",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShuffleDataset": {
        "short name": "ShuffleDataset",
        "parameters": {
            "input_dataset": null,
            "buffer_size": null,
            "seed": null,
            "seed2": null,
            "output_types": null,
            "output_shapes": null,
            "reshuffle_each_iteration": "True",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShuffleDatasetV2": {
        "short name": "ShuffleDatasetV2",
        "parameters": {
            "input_dataset": null,
            "buffer_size": null,
            "seed_generator": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShuffleDatasetV3": {
        "short name": "ShuffleDatasetV3",
        "parameters": {
            "input_dataset": null,
            "buffer_size": null,
            "seed": null,
            "seed2": null,
            "seed_generator": null,
            "output_types": null,
            "output_shapes": null,
            "reshuffle_each_iteration": "True",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ShutdownDistributedTPU": {
        "short name": "ShutdownDistributedTPU",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Sigmoid": {
        "short name": "Sigmoid",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SigmoidGrad": {
        "short name": "SigmoidGrad",
        "parameters": {
            "y": null,
            "dy": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Sign": {
        "short name": "Sign",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Sin": {
        "short name": "Sin",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Sinh": {
        "short name": "Sinh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Size": {
        "short name": "Size",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SkipDataset": {
        "short name": "SkipDataset",
        "parameters": {
            "input_dataset": null,
            "count": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SleepDataset": {
        "short name": "SleepDataset",
        "parameters": {
            "input_dataset": null,
            "sleep_microseconds": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Slice": {
        "short name": "Slice",
        "parameters": {
            "input": null,
            "begin": null,
            "size": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SlidingWindowDataset": {
        "short name": "SlidingWindowDataset",
        "parameters": {
            "input_dataset": null,
            "window_size": null,
            "window_shift": null,
            "window_stride": null,
            "output_types": null,
            "output_shapes": null,
            "drop_remainder": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Snapshot": {
        "short name": "Snapshot",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SnapshotDataset": {
        "short name": "SnapshotDataset",
        "parameters": {
            "input_dataset": null,
            "path": null,
            "output_types": null,
            "output_shapes": null,
            "compression": "''",
            "reader_path_prefix": "''",
            "writer_path_prefix": "''",
            "shard_size_bytes": "10737418240",
            "pending_snapshot_expiry_seconds": "86400",
            "num_reader_threads": "1",
            "reader_buffer_size": "1",
            "num_writer_threads": "1",
            "writer_buffer_size": "1",
            "shuffle_on_read": "False",
            "seed": "0",
            "seed2": "0",
            "mode": "'auto'",
            "snapshot_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SnapshotDatasetReader": {
        "short name": "SnapshotDatasetReader",
        "parameters": {
            "shard_dir": null,
            "start_index": null,
            "output_types": null,
            "output_shapes": null,
            "version": null,
            "compression": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SnapshotDatasetV2": {
        "short name": "SnapshotDatasetV2",
        "parameters": {
            "input_dataset": null,
            "path": null,
            "reader_func_other_args": null,
            "shard_func_other_args": null,
            "output_types": null,
            "output_shapes": null,
            "reader_func": null,
            "shard_func": null,
            "compression": "''",
            "reader_prefix": "''",
            "writer_prefix": "''",
            "hash_valid": "False",
            "hash": "0",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SnapshotNestedDatasetReader": {
        "short name": "SnapshotNestedDatasetReader",
        "parameters": {
            "inputs": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SobolSample": {
        "short name": "SobolSample",
        "parameters": {
            "dim": null,
            "num_results": null,
            "skip": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Softmax": {
        "short name": "Softmax",
        "parameters": {
            "logits": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SoftmaxCrossEntropyWithLogits": {
        "short name": "SoftmaxCrossEntropyWithLogits",
        "parameters": {
            "features": null,
            "labels": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Softplus": {
        "short name": "Softplus",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SoftplusGrad": {
        "short name": "SoftplusGrad",
        "parameters": {
            "gradients": null,
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Softsign": {
        "short name": "Softsign",
        "parameters": {
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SoftsignGrad": {
        "short name": "SoftsignGrad",
        "parameters": {
            "gradients": null,
            "features": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SpaceToBatch": {
        "short name": "SpaceToBatch",
        "parameters": {
            "input": null,
            "paddings": null,
            "block_size": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SpaceToBatchND": {
        "short name": "SpaceToBatchND",
        "parameters": {
            "input": null,
            "block_shape": null,
            "paddings": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SpaceToDepth": {
        "short name": "SpaceToDepth",
        "parameters": {
            "input": null,
            "block_size": null,
            "data_format": "'NHWC'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseAccumulatorApplyGradient": {
        "short name": "SparseAccumulatorApplyGradient",
        "parameters": {
            "handle": null,
            "local_step": null,
            "gradient_indices": null,
            "gradient_values": null,
            "gradient_shape": null,
            "has_known_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseAccumulatorTakeGradient": {
        "short name": "SparseAccumulatorTakeGradient",
        "parameters": {
            "handle": null,
            "num_required": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseAdd": {
        "short name": "SparseAdd",
        "parameters": {
            "a_indices": null,
            "a_values": null,
            "a_shape": null,
            "b_indices": null,
            "b_values": null,
            "b_shape": null,
            "thresh": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseAddGrad": {
        "short name": "SparseAddGrad",
        "parameters": {
            "backprop_val_grad": null,
            "a_indices": null,
            "b_indices": null,
            "sum_indices": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyAdadelta": {
        "short name": "SparseApplyAdadelta",
        "parameters": {
            "var": null,
            "accum": null,
            "accum_update": null,
            "lr": null,
            "rho": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyAdagrad": {
        "short name": "SparseApplyAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyAdagradDA": {
        "short name": "SparseApplyAdagradDA",
        "parameters": {
            "var": null,
            "gradient_accumulator": null,
            "gradient_squared_accumulator": null,
            "grad": null,
            "indices": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "global_step": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyAdagradV2": {
        "short name": "SparseApplyAdagradV2",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "update_slots": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyCenteredRMSProp": {
        "short name": "SparseApplyCenteredRMSProp",
        "parameters": {
            "var": null,
            "mg": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyFtrl": {
        "short name": "SparseApplyFtrl",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "indices": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyFtrlV2": {
        "short name": "SparseApplyFtrlV2",
        "parameters": {
            "var": null,
            "accum": null,
            "linear": null,
            "grad": null,
            "indices": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "l2_shrinkage": null,
            "lr_power": null,
            "use_locking": "False",
            "multiply_linear_by_lr": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyMomentum": {
        "short name": "SparseApplyMomentum",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "grad": null,
            "indices": null,
            "momentum": null,
            "use_locking": "False",
            "use_nesterov": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyProximalAdagrad": {
        "short name": "SparseApplyProximalAdagrad",
        "parameters": {
            "var": null,
            "accum": null,
            "lr": null,
            "l1": null,
            "l2": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyProximalGradientDescent": {
        "short name": "SparseApplyProximalGradientDescent",
        "parameters": {
            "var": null,
            "alpha": null,
            "l1": null,
            "l2": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseApplyRMSProp": {
        "short name": "SparseApplyRMSProp",
        "parameters": {
            "var": null,
            "ms": null,
            "mom": null,
            "lr": null,
            "rho": null,
            "momentum": null,
            "epsilon": null,
            "grad": null,
            "indices": null,
            "use_locking": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseBincount": {
        "short name": "SparseBincount",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null,
            "size": null,
            "weights": null,
            "binary_output": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseConcat": {
        "short name": "SparseConcat",
        "parameters": {
            "indices": null,
            "values": null,
            "shapes": null,
            "concat_dim": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseConditionalAccumulator": {
        "short name": "SparseConditionalAccumulator",
        "parameters": {
            "dtype": null,
            "shape": null,
            "container": "''",
            "shared_name": "''",
            "reduction_type": "'MEAN'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseCountSparseOutput": {
        "short name": "SparseCountSparseOutput",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null,
            "weights": null,
            "binary_output": null,
            "minlength": "-1",
            "maxlength": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseCross": {
        "short name": "SparseCross",
        "parameters": {
            "indices": null,
            "values": null,
            "shapes": null,
            "dense_inputs": null,
            "hashed_output": null,
            "num_buckets": null,
            "hash_key": null,
            "out_type": null,
            "internal_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseCrossHashed": {
        "short name": "SparseCrossHashed",
        "parameters": {
            "indices": null,
            "values": null,
            "shapes": null,
            "dense_inputs": null,
            "num_buckets": null,
            "strong_hash": null,
            "salt": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseCrossV2": {
        "short name": "SparseCrossV2",
        "parameters": {
            "indices": null,
            "values": null,
            "shapes": null,
            "dense_inputs": null,
            "sep": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseDenseCwiseAdd": {
        "short name": "SparseDenseCwiseAdd",
        "parameters": {
            "sp_indices": null,
            "sp_values": null,
            "sp_shape": null,
            "dense": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseDenseCwiseDiv": {
        "short name": "SparseDenseCwiseDiv",
        "parameters": {
            "sp_indices": null,
            "sp_values": null,
            "sp_shape": null,
            "dense": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseDenseCwiseMul": {
        "short name": "SparseDenseCwiseMul",
        "parameters": {
            "sp_indices": null,
            "sp_values": null,
            "sp_shape": null,
            "dense": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseFillEmptyRows": {
        "short name": "SparseFillEmptyRows",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null,
            "default_value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseFillEmptyRowsGrad": {
        "short name": "SparseFillEmptyRowsGrad",
        "parameters": {
            "reverse_index_map": null,
            "grad_values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatMul": {
        "short name": "SparseMatMul",
        "parameters": {
            "a": null,
            "b": null,
            "transpose_a": "False",
            "transpose_b": "False",
            "a_is_sparse": "False",
            "b_is_sparse": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixAdd": {
        "short name": "SparseMatrixAdd",
        "parameters": {
            "a": null,
            "b": null,
            "alpha": null,
            "beta": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixMatMul": {
        "short name": "SparseMatrixMatMul",
        "parameters": {
            "a": null,
            "b": null,
            "transpose_a": "False",
            "transpose_b": "False",
            "adjoint_a": "False",
            "adjoint_b": "False",
            "transpose_output": "False",
            "conjugate_output": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixMul": {
        "short name": "SparseMatrixMul",
        "parameters": {
            "a": null,
            "b": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixNNZ": {
        "short name": "SparseMatrixNNZ",
        "parameters": {
            "sparse_matrix": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixOrderingAMD": {
        "short name": "SparseMatrixOrderingAMD",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixSoftmax": {
        "short name": "SparseMatrixSoftmax",
        "parameters": {
            "logits": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixSoftmaxGrad": {
        "short name": "SparseMatrixSoftmaxGrad",
        "parameters": {
            "softmax": null,
            "grad_softmax": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixSparseCholesky": {
        "short name": "SparseMatrixSparseCholesky",
        "parameters": {
            "input": null,
            "permutation": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixSparseMatMul": {
        "short name": "SparseMatrixSparseMatMul",
        "parameters": {
            "a": null,
            "b": null,
            "type": null,
            "transpose_a": "False",
            "transpose_b": "False",
            "adjoint_a": "False",
            "adjoint_b": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixTranspose": {
        "short name": "SparseMatrixTranspose",
        "parameters": {
            "input": null,
            "type": null,
            "conjugate": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseMatrixZeros": {
        "short name": "SparseMatrixZeros",
        "parameters": {
            "dense_shape": null,
            "type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseReduceMax": {
        "short name": "SparseReduceMax",
        "parameters": {
            "input_indices": null,
            "input_values": null,
            "input_shape": null,
            "reduction_axes": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseReduceMaxSparse": {
        "short name": "SparseReduceMaxSparse",
        "parameters": {
            "input_indices": null,
            "input_values": null,
            "input_shape": null,
            "reduction_axes": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseReduceSum": {
        "short name": "SparseReduceSum",
        "parameters": {
            "input_indices": null,
            "input_values": null,
            "input_shape": null,
            "reduction_axes": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseReduceSumSparse": {
        "short name": "SparseReduceSumSparse",
        "parameters": {
            "input_indices": null,
            "input_values": null,
            "input_shape": null,
            "reduction_axes": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseReorder": {
        "short name": "SparseReorder",
        "parameters": {
            "input_indices": null,
            "input_values": null,
            "input_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseReshape": {
        "short name": "SparseReshape",
        "parameters": {
            "input_indices": null,
            "input_shape": null,
            "new_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentMean": {
        "short name": "SparseSegmentMean",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentMeanGrad": {
        "short name": "SparseSegmentMeanGrad",
        "parameters": {
            "grad": null,
            "indices": null,
            "segment_ids": null,
            "output_dim0": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentMeanWithNumSegments": {
        "short name": "SparseSegmentMeanWithNumSegments",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentSqrtN": {
        "short name": "SparseSegmentSqrtN",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentSqrtNGrad": {
        "short name": "SparseSegmentSqrtNGrad",
        "parameters": {
            "grad": null,
            "indices": null,
            "segment_ids": null,
            "output_dim0": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentSqrtNWithNumSegments": {
        "short name": "SparseSegmentSqrtNWithNumSegments",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentSum": {
        "short name": "SparseSegmentSum",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentSumGrad": {
        "short name": "SparseSegmentSumGrad",
        "parameters": {
            "grad": null,
            "indices": null,
            "segment_ids": null,
            "output_dim0": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSegmentSumWithNumSegments": {
        "short name": "SparseSegmentSumWithNumSegments",
        "parameters": {
            "data": null,
            "indices": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSlice": {
        "short name": "SparseSlice",
        "parameters": {
            "indices": null,
            "values": null,
            "shape": null,
            "start": null,
            "size": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSliceGrad": {
        "short name": "SparseSliceGrad",
        "parameters": {
            "backprop_val_grad": null,
            "input_indices": null,
            "input_start": null,
            "output_indices": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSoftmax": {
        "short name": "SparseSoftmax",
        "parameters": {
            "sp_indices": null,
            "sp_values": null,
            "sp_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSoftmaxCrossEntropyWithLogits": {
        "short name": "SparseSoftmaxCrossEntropyWithLogits",
        "parameters": {
            "features": null,
            "labels": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSparseMaximum": {
        "short name": "SparseSparseMaximum",
        "parameters": {
            "a_indices": null,
            "a_values": null,
            "a_shape": null,
            "b_indices": null,
            "b_values": null,
            "b_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSparseMinimum": {
        "short name": "SparseSparseMinimum",
        "parameters": {
            "a_indices": null,
            "a_values": null,
            "a_shape": null,
            "b_indices": null,
            "b_values": null,
            "b_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseSplit": {
        "short name": "SparseSplit",
        "parameters": {
            "split_dim": null,
            "indices": null,
            "values": null,
            "shape": null,
            "num_split": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseTensorDenseAdd": {
        "short name": "SparseTensorDenseAdd",
        "parameters": {
            "a_indices": null,
            "a_values": null,
            "a_shape": null,
            "b": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseTensorDenseMatMul": {
        "short name": "SparseTensorDenseMatMul",
        "parameters": {
            "a_indices": null,
            "a_values": null,
            "a_shape": null,
            "b": null,
            "adjoint_a": "False",
            "adjoint_b": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseTensorSliceDataset": {
        "short name": "SparseTensorSliceDataset",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseTensorToCSRSparseMatrix": {
        "short name": "SparseTensorToCSRSparseMatrix",
        "parameters": {
            "indices": null,
            "values": null,
            "dense_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseToDense": {
        "short name": "SparseToDense",
        "parameters": {
            "sparse_indices": null,
            "output_shape": null,
            "sparse_values": null,
            "default_value": null,
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SparseToSparseSetOperation": {
        "short name": "SparseToSparseSetOperation",
        "parameters": {
            "set1_indices": null,
            "set1_values": null,
            "set1_shape": null,
            "set2_indices": null,
            "set2_values": null,
            "set2_shape": null,
            "set_operation": null,
            "validate_indices": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Spence": {
        "short name": "Spence",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Split": {
        "short name": "Split",
        "parameters": {
            "axis": null,
            "value": null,
            "num_split": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SplitV": {
        "short name": "SplitV",
        "parameters": {
            "value": null,
            "size_splits": null,
            "axis": null,
            "num_split": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SqlDataset": {
        "short name": "SqlDataset",
        "parameters": {
            "driver_name": null,
            "data_source_name": null,
            "query": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Sqrt": {
        "short name": "Sqrt",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SqrtGrad": {
        "short name": "SqrtGrad",
        "parameters": {
            "y": null,
            "dy": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Square": {
        "short name": "Square",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SquaredDifference": {
        "short name": "SquaredDifference",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Squeeze": {
        "short name": "Squeeze",
        "parameters": {
            "input": null,
            "axis": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Stack": {
        "short name": "Stack",
        "parameters": {
            "elem_type": null,
            "stack_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StackClose": {
        "short name": "StackClose",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StackCloseV2": {
        "short name": "StackCloseV2",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StackPop": {
        "short name": "StackPop",
        "parameters": {
            "handle": null,
            "elem_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StackPopV2": {
        "short name": "StackPopV2",
        "parameters": {
            "handle": null,
            "elem_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StackPush": {
        "short name": "StackPush",
        "parameters": {
            "handle": null,
            "elem": null,
            "swap_memory": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StackPushV2": {
        "short name": "StackPushV2",
        "parameters": {
            "handle": null,
            "elem": null,
            "swap_memory": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StackV2": {
        "short name": "StackV2",
        "parameters": {
            "max_size": null,
            "elem_type": null,
            "stack_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Stage": {
        "short name": "Stage",
        "parameters": {
            "values": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StageClear": {
        "short name": "StageClear",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StagePeek": {
        "short name": "StagePeek",
        "parameters": {
            "index": null,
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StageSize": {
        "short name": "StageSize",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulPartitionedCall": {
        "short name": "StatefulPartitionedCall",
        "parameters": {
            "args": null,
            "Tout": null,
            "f": null,
            "config": "''",
            "config_proto": "''",
            "executor_type": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulRandomBinomial": {
        "short name": "StatefulRandomBinomial",
        "parameters": {
            "resource": null,
            "algorithm": null,
            "shape": null,
            "counts": null,
            "probs": null,
            "dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulStandardNormal": {
        "short name": "StatefulStandardNormal",
        "parameters": {
            "resource": null,
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulStandardNormalV2": {
        "short name": "StatefulStandardNormalV2",
        "parameters": {
            "resource": null,
            "algorithm": null,
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulTruncatedNormal": {
        "short name": "StatefulTruncatedNormal",
        "parameters": {
            "resource": null,
            "algorithm": null,
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulUniform": {
        "short name": "StatefulUniform",
        "parameters": {
            "resource": null,
            "algorithm": null,
            "shape": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulUniformFullInt": {
        "short name": "StatefulUniformFullInt",
        "parameters": {
            "resource": null,
            "algorithm": null,
            "shape": null,
            "dtype": "tf.dtypes.uint64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatefulUniformInt": {
        "short name": "StatefulUniformInt",
        "parameters": {
            "resource": null,
            "algorithm": null,
            "shape": null,
            "minval": null,
            "maxval": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessCase": {
        "short name": "StatelessCase",
        "parameters": {
            "branch_index": null,
            "input": null,
            "Tout": null,
            "branches": null,
            "output_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessIf": {
        "short name": "StatelessIf",
        "parameters": {
            "cond": null,
            "input": null,
            "Tout": null,
            "then_branch": null,
            "else_branch": null,
            "output_shapes": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessMultinomial": {
        "short name": "StatelessMultinomial",
        "parameters": {
            "logits": null,
            "num_samples": null,
            "seed": null,
            "output_dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessParameterizedTruncatedNormal": {
        "short name": "StatelessParameterizedTruncatedNormal",
        "parameters": {
            "shape": null,
            "seed": null,
            "means": null,
            "stddevs": null,
            "minvals": null,
            "maxvals": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomBinomial": {
        "short name": "StatelessRandomBinomial",
        "parameters": {
            "shape": null,
            "seed": null,
            "counts": null,
            "probs": null,
            "dtype": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomGammaV2": {
        "short name": "StatelessRandomGammaV2",
        "parameters": {
            "shape": null,
            "seed": null,
            "alpha": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomGetAlg": {
        "short name": "StatelessRandomGetAlg",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomGetKeyCounter": {
        "short name": "StatelessRandomGetKeyCounter",
        "parameters": {
            "seed": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomGetKeyCounterAlg": {
        "short name": "StatelessRandomGetKeyCounterAlg",
        "parameters": {
            "seed": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomNormal": {
        "short name": "StatelessRandomNormal",
        "parameters": {
            "shape": null,
            "seed": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomNormalV2": {
        "short name": "StatelessRandomNormalV2",
        "parameters": {
            "shape": null,
            "key": null,
            "counter": null,
            "alg": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomPoisson": {
        "short name": "StatelessRandomPoisson",
        "parameters": {
            "shape": null,
            "seed": null,
            "lam": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomUniform": {
        "short name": "StatelessRandomUniform",
        "parameters": {
            "shape": null,
            "seed": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomUniformFullInt": {
        "short name": "StatelessRandomUniformFullInt",
        "parameters": {
            "shape": null,
            "seed": null,
            "dtype": "tf.dtypes.uint64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomUniformFullIntV2": {
        "short name": "StatelessRandomUniformFullIntV2",
        "parameters": {
            "shape": null,
            "key": null,
            "counter": null,
            "alg": null,
            "dtype": "tf.dtypes.uint64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomUniformInt": {
        "short name": "StatelessRandomUniformInt",
        "parameters": {
            "shape": null,
            "seed": null,
            "minval": null,
            "maxval": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomUniformIntV2": {
        "short name": "StatelessRandomUniformIntV2",
        "parameters": {
            "shape": null,
            "key": null,
            "counter": null,
            "alg": null,
            "minval": null,
            "maxval": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessRandomUniformV2": {
        "short name": "StatelessRandomUniformV2",
        "parameters": {
            "shape": null,
            "key": null,
            "counter": null,
            "alg": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessSampleDistortedBoundingBox": {
        "short name": "StatelessSampleDistortedBoundingBox",
        "parameters": {
            "image_size": null,
            "bounding_boxes": null,
            "min_object_covered": null,
            "seed": null,
            "aspect_ratio_range": "[0.75, 1.33]",
            "area_range": "[0.05, 1]",
            "max_attempts": "100",
            "use_image_if_no_bounding_boxes": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessTruncatedNormal": {
        "short name": "StatelessTruncatedNormal",
        "parameters": {
            "shape": null,
            "seed": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessTruncatedNormalV2": {
        "short name": "StatelessTruncatedNormalV2",
        "parameters": {
            "shape": null,
            "key": null,
            "counter": null,
            "alg": null,
            "dtype": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatelessWhile": {
        "short name": "StatelessWhile",
        "parameters": {
            "input": null,
            "cond": null,
            "body": null,
            "output_shapes": "[]",
            "parallel_iterations": "10",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StaticRegexFullMatch": {
        "short name": "StaticRegexFullMatch",
        "parameters": {
            "input": null,
            "pattern": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StaticRegexReplace": {
        "short name": "StaticRegexReplace",
        "parameters": {
            "input": null,
            "pattern": null,
            "rewrite": null,
            "replace_global": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatsAggregatorHandle": {
        "short name": "StatsAggregatorHandle",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatsAggregatorHandleV2": {
        "short name": "StatsAggregatorHandleV2",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatsAggregatorSetSummaryWriter": {
        "short name": "StatsAggregatorSetSummaryWriter",
        "parameters": {
            "stats_aggregator": null,
            "summary": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StatsAggregatorSummary": {
        "short name": "StatsAggregatorSummary",
        "parameters": {
            "iterator": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StopGradient": {
        "short name": "StopGradient",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StridedSlice": {
        "short name": "StridedSlice",
        "parameters": {
            "input": null,
            "begin": null,
            "end": null,
            "strides": null,
            "begin_mask": "0",
            "end_mask": "0",
            "ellipsis_mask": "0",
            "new_axis_mask": "0",
            "shrink_axis_mask": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StridedSliceAssign": {
        "short name": "StridedSliceAssign",
        "parameters": {
            "ref": null,
            "begin": null,
            "end": null,
            "strides": null,
            "value": null,
            "begin_mask": "0",
            "end_mask": "0",
            "ellipsis_mask": "0",
            "new_axis_mask": "0",
            "shrink_axis_mask": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StridedSliceGrad": {
        "short name": "StridedSliceGrad",
        "parameters": {
            "shape": null,
            "begin": null,
            "end": null,
            "strides": null,
            "dy": null,
            "begin_mask": "0",
            "end_mask": "0",
            "ellipsis_mask": "0",
            "new_axis_mask": "0",
            "shrink_axis_mask": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringFormat": {
        "short name": "StringFormat",
        "parameters": {
            "inputs": null,
            "template": "'%s'",
            "placeholder": "'%s'",
            "summarize": "3",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringJoin": {
        "short name": "StringJoin",
        "parameters": {
            "inputs": null,
            "separator": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringLength": {
        "short name": "StringLength",
        "parameters": {
            "input": null,
            "unit": "'BYTE'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringLower": {
        "short name": "StringLower",
        "parameters": {
            "input": null,
            "encoding": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringNGrams": {
        "short name": "StringNGrams",
        "parameters": {
            "data": null,
            "data_splits": null,
            "separator": null,
            "ngram_widths": null,
            "left_pad": null,
            "right_pad": null,
            "pad_width": null,
            "preserve_short_sequences": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringSplit": {
        "short name": "StringSplit",
        "parameters": {
            "input": null,
            "delimiter": null,
            "skip_empty": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringSplitV2": {
        "short name": "StringSplitV2",
        "parameters": {
            "input": null,
            "sep": null,
            "maxsplit": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringStrip": {
        "short name": "StringStrip",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringToHashBucket": {
        "short name": "StringToHashBucket",
        "parameters": {
            "string_tensor": null,
            "num_buckets": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringToHashBucketFast": {
        "short name": "StringToHashBucketFast",
        "parameters": {
            "input": null,
            "num_buckets": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringToHashBucketStrong": {
        "short name": "StringToHashBucketStrong",
        "parameters": {
            "input": null,
            "num_buckets": null,
            "key": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringToNumber": {
        "short name": "StringToNumber",
        "parameters": {
            "string_tensor": null,
            "out_type": "tf.dtypes.float32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.StringUpper": {
        "short name": "StringUpper",
        "parameters": {
            "input": null,
            "encoding": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Sub": {
        "short name": "Sub",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Substr": {
        "short name": "Substr",
        "parameters": {
            "input": null,
            "pos": null,
            "len": null,
            "unit": "'BYTE'",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Sum": {
        "short name": "Sum",
        "parameters": {
            "input": null,
            "axis": null,
            "keep_dims": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SummaryWriter": {
        "short name": "SummaryWriter",
        "parameters": {
            "shared_name": "''",
            "container": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Svd": {
        "short name": "Svd",
        "parameters": {
            "input": null,
            "compute_uv": "True",
            "full_matrices": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Switch": {
        "short name": "Switch",
        "parameters": {
            "data": null,
            "pred": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.SymbolicGradient": {
        "short name": "SymbolicGradient",
        "parameters": {
            "input": null,
            "Tout": null,
            "f": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TFRecordDataset": {
        "short name": "TFRecordDataset",
        "parameters": {
            "filenames": null,
            "compression_type": null,
            "buffer_size": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TFRecordReader": {
        "short name": "TFRecordReader",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "compression_type": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TFRecordReaderV2": {
        "short name": "TFRecordReaderV2",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "compression_type": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUCompilationResult": {
        "short name": "TPUCompilationResult",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUEmbeddingActivations": {
        "short name": "TPUEmbeddingActivations",
        "parameters": {
            "embedding_variable": null,
            "sliced_activations": null,
            "table_id": null,
            "lookup_id": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUOrdinalSelector": {
        "short name": "TPUOrdinalSelector",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUPartitionedCall": {
        "short name": "TPUPartitionedCall",
        "parameters": {
            "args": null,
            "device_ordinal": null,
            "Tout": null,
            "f": null,
            "autotuner_thresh": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUPartitionedInput": {
        "short name": "TPUPartitionedInput",
        "parameters": {
            "inputs": null,
            "partition_dim": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUPartitionedOutput": {
        "short name": "TPUPartitionedOutput",
        "parameters": {
            "inputs": null,
            "num_splits": null,
            "partition_dim": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUReplicateMetadata": {
        "short name": "TPUReplicateMetadata",
        "parameters": {
            "num_replicas": null,
            "num_cores_per_replica": "1",
            "topology": "''",
            "use_tpu": "True",
            "device_assignment": "[]",
            "computation_shape": "[]",
            "host_compute_core": "[]",
            "padding_map": "[]",
            "step_marker_location": "'STEP_MARK_AT_ENTRY'",
            "allow_soft_placement": "False",
            "use_spmd_for_xla_partitioning": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUReplicatedInput": {
        "short name": "TPUReplicatedInput",
        "parameters": {
            "inputs": null,
            "is_mirrored_variable": "False",
            "index": "-1",
            "is_packed": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TPUReplicatedOutput": {
        "short name": "TPUReplicatedOutput",
        "parameters": {
            "input": null,
            "num_replicas": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TakeDataset": {
        "short name": "TakeDataset",
        "parameters": {
            "input_dataset": null,
            "count": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TakeManySparseFromTensorsMap": {
        "short name": "TakeManySparseFromTensorsMap",
        "parameters": {
            "sparse_handles": null,
            "dtype": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TakeWhileDataset": {
        "short name": "TakeWhileDataset",
        "parameters": {
            "input_dataset": null,
            "other_arguments": null,
            "predicate": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Tan": {
        "short name": "Tan",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Tanh": {
        "short name": "Tanh",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TanhGrad": {
        "short name": "TanhGrad",
        "parameters": {
            "y": null,
            "dy": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TemporaryVariable": {
        "short name": "TemporaryVariable",
        "parameters": {
            "shape": null,
            "dtype": null,
            "var_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArray": {
        "short name": "TensorArray",
        "parameters": {
            "size": null,
            "dtype": null,
            "dynamic_size": "False",
            "clear_after_read": "True",
            "tensor_array_name": "''",
            "element_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayClose": {
        "short name": "TensorArrayClose",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayCloseV2": {
        "short name": "TensorArrayCloseV2",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayCloseV3": {
        "short name": "TensorArrayCloseV3",
        "parameters": {
            "handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayConcat": {
        "short name": "TensorArrayConcat",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "dtype": null,
            "element_shape_except0": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayConcatV2": {
        "short name": "TensorArrayConcatV2",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "dtype": null,
            "element_shape_except0": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayConcatV3": {
        "short name": "TensorArrayConcatV3",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "dtype": null,
            "element_shape_except0": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayGather": {
        "short name": "TensorArrayGather",
        "parameters": {
            "handle": null,
            "indices": null,
            "flow_in": null,
            "dtype": null,
            "element_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayGatherV2": {
        "short name": "TensorArrayGatherV2",
        "parameters": {
            "handle": null,
            "indices": null,
            "flow_in": null,
            "dtype": null,
            "element_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayGatherV3": {
        "short name": "TensorArrayGatherV3",
        "parameters": {
            "handle": null,
            "indices": null,
            "flow_in": null,
            "dtype": null,
            "element_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayGrad": {
        "short name": "TensorArrayGrad",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "source": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayGradV2": {
        "short name": "TensorArrayGradV2",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "source": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayGradV3": {
        "short name": "TensorArrayGradV3",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "source": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayGradWithShape": {
        "short name": "TensorArrayGradWithShape",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "shape_to_prepend": null,
            "source": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayPack": {
        "short name": "TensorArrayPack",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "dtype": null,
            "element_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayRead": {
        "short name": "TensorArrayRead",
        "parameters": {
            "handle": null,
            "index": null,
            "flow_in": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayReadV2": {
        "short name": "TensorArrayReadV2",
        "parameters": {
            "handle": null,
            "index": null,
            "flow_in": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayReadV3": {
        "short name": "TensorArrayReadV3",
        "parameters": {
            "handle": null,
            "index": null,
            "flow_in": null,
            "dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayScatter": {
        "short name": "TensorArrayScatter",
        "parameters": {
            "handle": null,
            "indices": null,
            "value": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayScatterV2": {
        "short name": "TensorArrayScatterV2",
        "parameters": {
            "handle": null,
            "indices": null,
            "value": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayScatterV3": {
        "short name": "TensorArrayScatterV3",
        "parameters": {
            "handle": null,
            "indices": null,
            "value": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArraySize": {
        "short name": "TensorArraySize",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArraySizeV2": {
        "short name": "TensorArraySizeV2",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArraySizeV3": {
        "short name": "TensorArraySizeV3",
        "parameters": {
            "handle": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArraySplit": {
        "short name": "TensorArraySplit",
        "parameters": {
            "handle": null,
            "value": null,
            "lengths": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArraySplitV2": {
        "short name": "TensorArraySplitV2",
        "parameters": {
            "handle": null,
            "value": null,
            "lengths": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArraySplitV3": {
        "short name": "TensorArraySplitV3",
        "parameters": {
            "handle": null,
            "value": null,
            "lengths": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayUnpack": {
        "short name": "TensorArrayUnpack",
        "parameters": {
            "handle": null,
            "value": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayV2": {
        "short name": "TensorArrayV2",
        "parameters": {
            "size": null,
            "dtype": null,
            "element_shape": "None",
            "dynamic_size": "False",
            "clear_after_read": "True",
            "tensor_array_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayV3": {
        "short name": "TensorArrayV3",
        "parameters": {
            "size": null,
            "dtype": null,
            "element_shape": "None",
            "dynamic_size": "False",
            "clear_after_read": "True",
            "identical_element_shapes": "False",
            "tensor_array_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayWrite": {
        "short name": "TensorArrayWrite",
        "parameters": {
            "handle": null,
            "index": null,
            "value": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayWriteV2": {
        "short name": "TensorArrayWriteV2",
        "parameters": {
            "handle": null,
            "index": null,
            "value": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorArrayWriteV3": {
        "short name": "TensorArrayWriteV3",
        "parameters": {
            "handle": null,
            "index": null,
            "value": null,
            "flow_in": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorDataset": {
        "short name": "TensorDataset",
        "parameters": {
            "components": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListConcat": {
        "short name": "TensorListConcat",
        "parameters": {
            "input_handle": null,
            "element_dtype": null,
            "element_shape": "None",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListConcatLists": {
        "short name": "TensorListConcatLists",
        "parameters": {
            "input_a": null,
            "input_b": null,
            "element_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListConcatV2": {
        "short name": "TensorListConcatV2",
        "parameters": {
            "input_handle": null,
            "element_shape": null,
            "leading_dims": null,
            "element_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListElementShape": {
        "short name": "TensorListElementShape",
        "parameters": {
            "input_handle": null,
            "shape_type": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListFromTensor": {
        "short name": "TensorListFromTensor",
        "parameters": {
            "tensor": null,
            "element_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListGather": {
        "short name": "TensorListGather",
        "parameters": {
            "input_handle": null,
            "indices": null,
            "element_shape": null,
            "element_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListGetItem": {
        "short name": "TensorListGetItem",
        "parameters": {
            "input_handle": null,
            "index": null,
            "element_shape": null,
            "element_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListLength": {
        "short name": "TensorListLength",
        "parameters": {
            "input_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListPopBack": {
        "short name": "TensorListPopBack",
        "parameters": {
            "input_handle": null,
            "element_shape": null,
            "element_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListPushBack": {
        "short name": "TensorListPushBack",
        "parameters": {
            "input_handle": null,
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListPushBackBatch": {
        "short name": "TensorListPushBackBatch",
        "parameters": {
            "input_handles": null,
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListReserve": {
        "short name": "TensorListReserve",
        "parameters": {
            "element_shape": null,
            "num_elements": null,
            "element_dtype": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListResize": {
        "short name": "TensorListResize",
        "parameters": {
            "input_handle": null,
            "size": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListScatter": {
        "short name": "TensorListScatter",
        "parameters": {
            "tensor": null,
            "indices": null,
            "element_shape": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListScatterIntoExistingList": {
        "short name": "TensorListScatterIntoExistingList",
        "parameters": {
            "input_handle": null,
            "tensor": null,
            "indices": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListScatterV2": {
        "short name": "TensorListScatterV2",
        "parameters": {
            "tensor": null,
            "indices": null,
            "element_shape": null,
            "num_elements": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListSetItem": {
        "short name": "TensorListSetItem",
        "parameters": {
            "input_handle": null,
            "index": null,
            "item": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListSplit": {
        "short name": "TensorListSplit",
        "parameters": {
            "tensor": null,
            "element_shape": null,
            "lengths": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorListStack": {
        "short name": "TensorListStack",
        "parameters": {
            "input_handle": null,
            "element_shape": null,
            "element_dtype": null,
            "num_elements": "-1",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorScatterAdd": {
        "short name": "TensorScatterAdd",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorScatterMax": {
        "short name": "TensorScatterMax",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorScatterMin": {
        "short name": "TensorScatterMin",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorScatterSub": {
        "short name": "TensorScatterSub",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorScatterUpdate": {
        "short name": "TensorScatterUpdate",
        "parameters": {
            "tensor": null,
            "indices": null,
            "updates": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorSliceDataset": {
        "short name": "TensorSliceDataset",
        "parameters": {
            "components": null,
            "output_shapes": null,
            "is_files": "False",
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorStridedSliceUpdate": {
        "short name": "TensorStridedSliceUpdate",
        "parameters": {
            "input": null,
            "begin": null,
            "end": null,
            "strides": null,
            "value": null,
            "begin_mask": "0",
            "end_mask": "0",
            "ellipsis_mask": "0",
            "new_axis_mask": "0",
            "shrink_axis_mask": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorSummary": {
        "short name": "TensorSummary",
        "parameters": {
            "tensor": null,
            "description": "''",
            "labels": "[]",
            "display_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TensorSummaryV2": {
        "short name": "TensorSummaryV2",
        "parameters": {
            "tag": null,
            "tensor": null,
            "serialized_summary_metadata": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TextLineDataset": {
        "short name": "TextLineDataset",
        "parameters": {
            "filenames": null,
            "compression_type": null,
            "buffer_size": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TextLineReader": {
        "short name": "TextLineReader",
        "parameters": {
            "skip_header_lines": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TextLineReaderV2": {
        "short name": "TextLineReaderV2",
        "parameters": {
            "skip_header_lines": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ThreadPoolDataset": {
        "short name": "ThreadPoolDataset",
        "parameters": {
            "input_dataset": null,
            "thread_pool": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ThreadPoolHandle": {
        "short name": "ThreadPoolHandle",
        "parameters": {
            "num_threads": null,
            "display_name": null,
            "max_intra_op_parallelism": "1",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ThreadUnsafeUnigramCandidateSampler": {
        "short name": "ThreadUnsafeUnigramCandidateSampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Tile": {
        "short name": "Tile",
        "parameters": {
            "input": null,
            "multiples": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TileGrad": {
        "short name": "TileGrad",
        "parameters": {
            "input": null,
            "multiples": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Timestamp": {
        "short name": "Timestamp",
        "parameters": {
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ToBool": {
        "short name": "ToBool",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TopK": {
        "short name": "TopK",
        "parameters": {
            "input": null,
            "k": null,
            "sorted": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TopKV2": {
        "short name": "TopKV2",
        "parameters": {
            "input": null,
            "k": null,
            "sorted": "True",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Transpose": {
        "short name": "Transpose",
        "parameters": {
            "x": null,
            "perm": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TridiagonalMatMul": {
        "short name": "TridiagonalMatMul",
        "parameters": {
            "superdiag": null,
            "maindiag": null,
            "subdiag": null,
            "rhs": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TridiagonalSolve": {
        "short name": "TridiagonalSolve",
        "parameters": {
            "diagonals": null,
            "rhs": null,
            "partial_pivoting": "True",
            "perturb_singular": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TruncateDiv": {
        "short name": "TruncateDiv",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TruncateMod": {
        "short name": "TruncateMod",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.TruncatedNormal": {
        "short name": "TruncatedNormal",
        "parameters": {
            "shape": null,
            "dtype": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Unbatch": {
        "short name": "Unbatch",
        "parameters": {
            "batched_tensor": null,
            "batch_index": null,
            "id": null,
            "timeout_micros": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnbatchDataset": {
        "short name": "UnbatchDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnbatchGrad": {
        "short name": "UnbatchGrad",
        "parameters": {
            "original_input": null,
            "batch_index": null,
            "grad": null,
            "id": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UncompressElement": {
        "short name": "UncompressElement",
        "parameters": {
            "compressed": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnicodeDecode": {
        "short name": "UnicodeDecode",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "replace_control_characters": "False",
            "Tsplits": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnicodeDecodeWithOffsets": {
        "short name": "UnicodeDecodeWithOffsets",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "replace_control_characters": "False",
            "Tsplits": "tf.dtypes.int64",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnicodeEncode": {
        "short name": "UnicodeEncode",
        "parameters": {
            "input_values": null,
            "input_splits": null,
            "output_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnicodeScript": {
        "short name": "UnicodeScript",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnicodeTranscode": {
        "short name": "UnicodeTranscode",
        "parameters": {
            "input": null,
            "input_encoding": null,
            "output_encoding": null,
            "errors": "'replace'",
            "replacement_char": "65533",
            "replace_control_characters": "False",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UniformCandidateSampler": {
        "short name": "UniformCandidateSampler",
        "parameters": {
            "true_classes": null,
            "num_true": null,
            "num_sampled": null,
            "unique": null,
            "range_max": null,
            "seed": "0",
            "seed2": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Unique": {
        "short name": "Unique",
        "parameters": {
            "x": null,
            "out_idx": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UniqueDataset": {
        "short name": "UniqueDataset",
        "parameters": {
            "input_dataset": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UniqueV2": {
        "short name": "UniqueV2",
        "parameters": {
            "x": null,
            "axis": null,
            "out_idx": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UniqueWithCounts": {
        "short name": "UniqueWithCounts",
        "parameters": {
            "x": null,
            "out_idx": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UniqueWithCountsV2": {
        "short name": "UniqueWithCountsV2",
        "parameters": {
            "x": null,
            "axis": null,
            "out_idx": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Unpack": {
        "short name": "Unpack",
        "parameters": {
            "value": null,
            "num": null,
            "axis": "0",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnravelIndex": {
        "short name": "UnravelIndex",
        "parameters": {
            "indices": null,
            "dims": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnsortedSegmentJoin": {
        "short name": "UnsortedSegmentJoin",
        "parameters": {
            "inputs": null,
            "segment_ids": null,
            "num_segments": null,
            "separator": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnsortedSegmentMax": {
        "short name": "UnsortedSegmentMax",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnsortedSegmentMin": {
        "short name": "UnsortedSegmentMin",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnsortedSegmentProd": {
        "short name": "UnsortedSegmentProd",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnsortedSegmentSum": {
        "short name": "UnsortedSegmentSum",
        "parameters": {
            "data": null,
            "segment_ids": null,
            "num_segments": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Unstage": {
        "short name": "Unstage",
        "parameters": {
            "dtypes": null,
            "capacity": "0",
            "memory_limit": "0",
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UnwrapDatasetVariant": {
        "short name": "UnwrapDatasetVariant",
        "parameters": {
            "input_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.UpperBound": {
        "short name": "UpperBound",
        "parameters": {
            "sorted_inputs": null,
            "values": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.VarHandleOp": {
        "short name": "VarHandleOp",
        "parameters": {
            "dtype": null,
            "shape": null,
            "container": "''",
            "shared_name": "''",
            "allowed_devices": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.VarIsInitializedOp": {
        "short name": "VarIsInitializedOp",
        "parameters": {
            "resource": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Variable": {
        "short name": "Variable",
        "parameters": {
            "shape": null,
            "dtype": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.VariableShape": {
        "short name": "VariableShape",
        "parameters": {
            "input": null,
            "out_type": "tf.dtypes.int32",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.VariableV2": {
        "short name": "VariableV2",
        "parameters": {
            "shape": null,
            "dtype": null,
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Where": {
        "short name": "Where",
        "parameters": {
            "condition": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.While": {
        "short name": "While",
        "parameters": {
            "input": null,
            "cond": null,
            "body": null,
            "output_shapes": "[]",
            "parallel_iterations": "10",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WholeFileReader": {
        "short name": "WholeFileReader",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WholeFileReaderV2": {
        "short name": "WholeFileReaderV2",
        "parameters": {
            "container": "''",
            "shared_name": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WindowDataset": {
        "short name": "WindowDataset",
        "parameters": {
            "input_dataset": null,
            "size": null,
            "shift": null,
            "stride": null,
            "drop_remainder": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WindowOp": {
        "short name": "WindowOp",
        "parameters": {
            "inputs": null,
            "output_types": null,
            "output_shapes": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WorkerHeartbeat": {
        "short name": "WorkerHeartbeat",
        "parameters": {
            "request": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WrapDatasetVariant": {
        "short name": "WrapDatasetVariant",
        "parameters": {
            "input_handle": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteAudioSummary": {
        "short name": "WriteAudioSummary",
        "parameters": {
            "writer": null,
            "step": null,
            "tag": null,
            "tensor": null,
            "sample_rate": null,
            "max_outputs": "3",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteFile": {
        "short name": "WriteFile",
        "parameters": {
            "filename": null,
            "contents": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteGraphSummary": {
        "short name": "WriteGraphSummary",
        "parameters": {
            "writer": null,
            "step": null,
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteHistogramSummary": {
        "short name": "WriteHistogramSummary",
        "parameters": {
            "writer": null,
            "step": null,
            "tag": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteImageSummary": {
        "short name": "WriteImageSummary",
        "parameters": {
            "writer": null,
            "step": null,
            "tag": null,
            "tensor": null,
            "bad_color": null,
            "max_images": "3",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteRawProtoSummary": {
        "short name": "WriteRawProtoSummary",
        "parameters": {
            "writer": null,
            "step": null,
            "tensor": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteScalarSummary": {
        "short name": "WriteScalarSummary",
        "parameters": {
            "writer": null,
            "step": null,
            "tag": null,
            "value": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.WriteSummary": {
        "short name": "WriteSummary",
        "parameters": {
            "writer": null,
            "step": null,
            "tensor": null,
            "tag": null,
            "summary_metadata": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Xdivy": {
        "short name": "Xdivy",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.XlaConcatND": {
        "short name": "XlaConcatND",
        "parameters": {
            "inputs": null,
            "num_concats": null,
            "paddings": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.XlaSplitND": {
        "short name": "XlaSplitND",
        "parameters": {
            "input": null,
            "N": null,
            "num_splits": null,
            "paddings": "[]",
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Xlog1py": {
        "short name": "Xlog1py",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Xlogy": {
        "short name": "Xlogy",
        "parameters": {
            "x": null,
            "y": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ZerosLike": {
        "short name": "ZerosLike",
        "parameters": {
            "x": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.Zeta": {
        "short name": "Zeta",
        "parameters": {
            "x": null,
            "q": null,
            "name": "None"
        }
    },
    "tensorflow.raw_ops.ZipDataset": {
        "short name": "ZipDataset",
        "parameters": {
            "input_datasets": null,
            "output_types": null,
            "output_shapes": null,
            "metadata": "''",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.resource_loader.get_data_files_path": {
        "short name": "get_data_files_path",
        "parameters": {}
    },
    "tensorflow.compat.v1.resource_loader.get_path_to_datafile": {
        "short name": "get_path_to_datafile",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.compat.v1.resource_loader.get_root_dir_with_all_resources": {
        "short name": "get_root_dir_with_all_resources",
        "parameters": {}
    },
    "tensorflow.compat.v1.resource_loader.load_resource": {
        "short name": "load_resource",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.compat.v1.resource_loader.readahead_file_path": {
        "short name": "readahead_file_path",
        "parameters": {
            "path": null,
            "readahead": "'128M'"
        }
    },
    "tensorflow.compat.v1.saved_model.Builder": {
        "short name": "Builder",
        "parameters": {
            "export_dir": null
        }
    },
    "tensorflow.compat.v1.saved_model.build_signature_def": {
        "short name": "build_signature_def",
        "parameters": {
            "inputs": "None",
            "outputs": "None",
            "method_name": "None"
        }
    },
    "tensorflow.compat.v1.saved_model.build_tensor_info": {
        "short name": "build_tensor_info",
        "parameters": {
            "tensor": null
        }
    },
    "tensorflow.compat.v1.saved_model.classification_signature_def": {
        "short name": "classification_signature_def",
        "parameters": {
            "examples": null,
            "classes": null,
            "scores": null
        }
    },
    "tensorflow.compat.v1.saved_model.contains_saved_model": {
        "short name": "contains_saved_model",
        "parameters": {
            "export_dir": null
        }
    },
    "tensorflow.compat.v1.saved_model.get_tensor_from_tensor_info": {
        "short name": "get_tensor_from_tensor_info",
        "parameters": {
            "tensor_info": null,
            "graph": "None",
            "import_scope": "None"
        }
    },
    "tensorflow.compat.v1.saved_model.is_valid_signature": {
        "short name": "is_valid_signature",
        "parameters": {
            "signature_def": null
        }
    },
    "tensorflow.compat.v1.saved_model.load": {
        "short name": "load",
        "parameters": {
            "sess": null,
            "tags": null,
            "export_dir": null,
            "import_scope": "None",
            "null": "saver_kwargs"
        }
    },
    "tensorflow.compat.v1.saved_model.main_op_with_restore": {
        "short name": "main_op_with_restore",
        "parameters": {
            "restore_op_name": null
        }
    },
    "tensorflow.compat.v1.saved_model.predict_signature_def": {
        "short name": "predict_signature_def",
        "parameters": {
            "inputs": null,
            "outputs": null
        }
    },
    "tensorflow.compat.v1.saved_model.regression_signature_def": {
        "short name": "regression_signature_def",
        "parameters": {
            "examples": null,
            "predictions": null
        }
    },
    "tensorflow.compat.v1.saved_model.simple_save": {
        "short name": "simple_save",
        "parameters": {
            "session": null,
            "export_dir": null,
            "inputs": null,
            "outputs": null,
            "legacy_init_op": "None"
        }
    },
    "tensorflow.compat.v1.strings.length": {
        "short name": "length",
        "parameters": {
            "input": null,
            "name": "None",
            "unit": "'BYTE'"
        }
    },
    "tensorflow.compat.v1.strings.split": {
        "short name": "split",
        "parameters": {
            "input": "None",
            "sep": "None",
            "maxsplit": "-1",
            "result_type": "'SparseTensor'",
            "source": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.strings.substr": {
        "short name": "substr",
        "parameters": {
            "input": null,
            "pos": null,
            "len": null,
            "name": "None",
            "unit": "'BYTE'"
        }
    },
    "tensorflow.compat.v1.summary.FileWriter": {
        "short name": "FileWriter",
        "parameters": {
            "logdir": null,
            "graph": "None",
            "max_queue": "10",
            "flush_secs": "120",
            "graph_def": "None",
            "filename_suffix": "None",
            "session": "None"
        }
    },
    "tensorflow.compat.v1.summary.FileWriterCache": {
        "short name": "FileWriterCache",
        "parameters": {}
    },
    "tensorflow.compat.v1.summary.SummaryDescription": {
        "short name": "SummaryDescription",
        "parameters": {}
    },
    "tensorflow.compat.v1.summary.TaggedRunMetadata": {
        "short name": "TaggedRunMetadata",
        "parameters": {}
    },
    "tensorflow.compat.v1.summary.all_v2_summary_ops": {
        "short name": "all_v2_summary_ops",
        "parameters": {}
    },
    "tensorflow.compat.v1.summary.audio": {
        "short name": "audio",
        "parameters": {
            "name": null,
            "tensor": null,
            "sample_rate": null,
            "max_outputs": "3",
            "collections": "None",
            "family": "None"
        }
    },
    "tensorflow.compat.v1.summary.get_summary_description": {
        "short name": "get_summary_description",
        "parameters": {
            "node_def": null
        }
    },
    "tensorflow.compat.v1.summary.histogram": {
        "short name": "histogram",
        "parameters": {
            "name": null,
            "values": null,
            "collections": "None",
            "family": "None"
        }
    },
    "tensorflow.compat.v1.summary.image": {
        "short name": "image",
        "parameters": {
            "name": null,
            "tensor": null,
            "max_outputs": "3",
            "collections": "None",
            "family": "None"
        }
    },
    "tensorflow.compat.v1.summary.initialize": {
        "short name": "initialize",
        "parameters": {
            "graph": "None",
            "session": "None"
        }
    },
    "tensorflow.compat.v1.summary.merge": {
        "short name": "merge",
        "parameters": {
            "inputs": null,
            "collections": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.summary.merge_all": {
        "short name": "merge_all",
        "parameters": {
            "key": "_ops.GraphKeys.SUMMARIES",
            "scope": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.summary.scalar": {
        "short name": "scalar",
        "parameters": {
            "name": null,
            "tensor": null,
            "collections": "None",
            "family": "None"
        }
    },
    "tensorflow.compat.v1.summary.tensor_summary": {
        "short name": "tensor_summary",
        "parameters": {
            "name": null,
            "tensor": null,
            "summary_description": "None",
            "collections": "None",
            "summary_metadata": "None",
            "family": "None",
            "display_name": "None"
        }
    },
    "tensorflow.compat.v1.summary.text": {
        "short name": "text",
        "parameters": {
            "name": null,
            "tensor": null,
            "collections": "None"
        }
    },
    "tensorflow.compat.v1.test.StubOutForTesting": {
        "short name": "StubOutForTesting",
        "parameters": {}
    },
    "tensorflow.compat.v1.test.assert_equal_graph_def": {
        "short name": "assert_equal_graph_def",
        "parameters": {
            "actual": null,
            "expected": null,
            "checkpoint_v2": "False",
            "hash_table_shared_name": "False"
        }
    },
    "tensorflow.compat.v1.test.compute_gradient": {
        "short name": "compute_gradient",
        "parameters": {
            "x": null,
            "x_shape": null,
            "y": null,
            "y_shape": null,
            "x_init_value": "None",
            "delta": "0.001",
            "init_targets": "None",
            "extra_feed_dict": "None"
        }
    },
    "tensorflow.compat.v1.test.compute_gradient_error": {
        "short name": "compute_gradient_error",
        "parameters": {
            "x": null,
            "x_shape": null,
            "y": null,
            "y_shape": null,
            "x_init_value": "None",
            "delta": "0.001",
            "init_targets": "None",
            "extra_feed_dict": "None"
        }
    },
    "tensorflow.compat.v1.test.get_temp_dir": {
        "short name": "get_temp_dir",
        "parameters": {}
    },
    "tensorflow.compat.v1.test.test_src_dir_path": {
        "short name": "test_src_dir_path",
        "parameters": {
            "relative_path": null
        }
    },
    "tensorflow.compat.v1.tpu.CrossShardOptimizer": {
        "short name": "CrossShardOptimizer",
        "parameters": {
            "opt": null,
            "reduction": "losses.Reduction.MEAN",
            "name": "'CrossShardOptimizer'",
            "group_assignment": "None"
        }
    },
    "tensorflow.compat.v1.tpu.PaddingSpec": {
        "short name": "PaddingSpec",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.batch_parallel": {
        "short name": "batch_parallel",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.bfloat16_scope": {
        "short name": "bfloat16_scope",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.core": {
        "short name": "core",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.cross_replica_sum": {
        "short name": "cross_replica_sum",
        "parameters": {
            "x": null,
            "group_assignment": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.tpu.initialize_system": {
        "short name": "initialize_system",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.outside_compilation": {
        "short name": "outside_compilation",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.replicate": {
        "short name": "replicate",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.rewrite": {
        "short name": "rewrite",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.shard": {
        "short name": "shard",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.shutdown_system": {
        "short name": "shutdown_system",
        "parameters": {}
    },
    "tensorflow.compat.v1.train.AdadeltaOptimizer": {
        "short name": "AdadeltaOptimizer",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-08",
            "use_locking": "False",
            "name": "'Adadelta'"
        }
    },
    "tensorflow.compat.v1.train.AdagradDAOptimizer": {
        "short name": "AdagradDAOptimizer",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "initial_gradient_squared_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'AdagradDA'"
        }
    },
    "tensorflow.compat.v1.train.AdagradOptimizer": {
        "short name": "AdagradOptimizer",
        "parameters": {
            "learning_rate": null,
            "initial_accumulator_value": "0.1",
            "use_locking": "False",
            "name": "'Adagrad'"
        }
    },
    "tensorflow.compat.v1.train.AdamOptimizer": {
        "short name": "AdamOptimizer",
        "parameters": {
            "learning_rate": "0.001",
            "beta1": "0.9",
            "beta2": "0.999",
            "epsilon": "1e-08",
            "use_locking": "False",
            "name": "'Adam'"
        }
    },
    "tensorflow.compat.v1.train.Checkpoint": {
        "short name": "Checkpoint",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.train.ChiefSessionCreator": {
        "short name": "ChiefSessionCreator",
        "parameters": {
            "scaffold": "None",
            "master": "''",
            "config": "None",
            "checkpoint_dir": "None",
            "checkpoint_filename_with_path": "None"
        }
    },
    "tensorflow.compat.v1.train.FtrlOptimizer": {
        "short name": "FtrlOptimizer",
        "parameters": {
            "learning_rate": null,
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'Ftrl'",
            "accum_name": "None",
            "linear_name": "None",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "None"
        }
    },
    "tensorflow.compat.v1.train.GradientDescentOptimizer": {
        "short name": "GradientDescentOptimizer",
        "parameters": {
            "learning_rate": null,
            "use_locking": "False",
            "name": "'GradientDescent'"
        }
    },
    "tensorflow.compat.v1.train.LooperThread": {
        "short name": "LooperThread",
        "parameters": {
            "coord": null,
            "timer_interval_secs": null,
            "target": "None",
            "args": "None",
            "kwargs": "None"
        }
    },
    "tensorflow.compat.v1.train.MomentumOptimizer": {
        "short name": "MomentumOptimizer",
        "parameters": {
            "learning_rate": null,
            "momentum": null,
            "use_locking": "False",
            "name": "'Momentum'",
            "use_nesterov": "False"
        }
    },
    "tensorflow.compat.v1.train.MonitoredSession": {
        "short name": "MonitoredSession",
        "parameters": {
            "session_creator": "None",
            "hooks": "None",
            "stop_grace_period_secs": "120"
        }
    },
    "tensorflow.compat.v1.train.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "use_locking": null,
            "name": null
        }
    },
    "tensorflow.compat.v1.train.ProximalAdagradOptimizer": {
        "short name": "ProximalAdagradOptimizer",
        "parameters": {
            "learning_rate": null,
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'ProximalAdagrad'"
        }
    },
    "tensorflow.compat.v1.train.ProximalGradientDescentOptimizer": {
        "short name": "ProximalGradientDescentOptimizer",
        "parameters": {
            "learning_rate": null,
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "use_locking": "False",
            "name": "'ProximalGradientDescent'"
        }
    },
    "tensorflow.compat.v1.train.QueueRunner": {
        "short name": "QueueRunner",
        "parameters": {
            "queue": "None",
            "enqueue_ops": "None",
            "close_op": "None",
            "cancel_op": "None",
            "queue_closed_exception_types": "None",
            "queue_runner_def": "None",
            "import_scope": "None"
        }
    },
    "tensorflow.compat.v1.train.RMSPropOptimizer": {
        "short name": "RMSPropOptimizer",
        "parameters": {
            "learning_rate": null,
            "decay": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-10",
            "use_locking": "False",
            "centered": "False",
            "name": "'RMSProp'"
        }
    },
    "tensorflow.compat.v1.train.Saver": {
        "short name": "Saver",
        "parameters": {
            "var_list": "None",
            "reshape": "False",
            "sharded": "False",
            "max_to_keep": "5",
            "keep_checkpoint_every_n_hours": "10000.0",
            "name": "None",
            "restore_sequentially": "False",
            "saver_def": "None",
            "builder": "None",
            "defer_build": "False",
            "allow_empty": "False",
            "write_version": "saver_pb2.SaverDef.V2",
            "pad_step_number": "False",
            "save_relative_paths": "False",
            "filename": "None"
        }
    },
    "tensorflow.compat.v1.train.SaverDef": {
        "short name": "SaverDef",
        "parameters": {}
    },
    "tensorflow.compat.v1.train.Scaffold": {
        "short name": "Scaffold",
        "parameters": {
            "init_op": "None",
            "init_feed_dict": "None",
            "init_fn": "None",
            "ready_op": "None",
            "ready_for_local_init_op": "None",
            "local_init_op": "None",
            "summary_op": "None",
            "saver": "None",
            "copy_from_scaffold": "None",
            "local_init_feed_dict": "None"
        }
    },
    "tensorflow.compat.v1.train.SessionCreator": {
        "short name": "SessionCreator",
        "parameters": {}
    },
    "tensorflow.compat.v1.train.SessionManager": {
        "short name": "SessionManager",
        "parameters": {
            "local_init_op": "None",
            "ready_op": "None",
            "ready_for_local_init_op": "None",
            "graph": "None",
            "recovery_wait_secs": "30",
            "local_init_run_options": "None",
            "local_init_feed_dict": "None"
        }
    },
    "tensorflow.compat.v1.train.SingularMonitoredSession": {
        "short name": "SingularMonitoredSession",
        "parameters": {
            "hooks": "None",
            "scaffold": "None",
            "master": "''",
            "config": "None",
            "checkpoint_dir": "None",
            "stop_grace_period_secs": "120",
            "checkpoint_filename_with_path": "None"
        }
    },
    "tensorflow.compat.v1.train.Supervisor": {
        "short name": "Supervisor",
        "parameters": {
            "graph": "None",
            "ready_op": "USE_DEFAULT",
            "ready_for_local_init_op": "USE_DEFAULT",
            "is_chief": "True",
            "init_op": "USE_DEFAULT",
            "init_feed_dict": "None",
            "local_init_op": "USE_DEFAULT",
            "logdir": "None",
            "summary_op": "USE_DEFAULT",
            "saver": "USE_DEFAULT",
            "global_step": "USE_DEFAULT",
            "save_summaries_secs": "120",
            "save_model_secs": "600",
            "recovery_wait_secs": "30",
            "stop_grace_secs": "120",
            "checkpoint_basename": "'model.ckpt'",
            "session_manager": "None",
            "summary_writer": "USE_DEFAULT",
            "init_fn": "None",
            "local_init_run_options": "None"
        }
    },
    "tensorflow.compat.v1.train.SyncReplicasOptimizer": {
        "short name": "SyncReplicasOptimizer",
        "parameters": {
            "opt": null,
            "replicas_to_aggregate": null,
            "total_num_replicas": "None",
            "variable_averages": "None",
            "variables_to_average": "None",
            "use_locking": "False",
            "name": "'sync_replicas'"
        }
    },
    "tensorflow.compat.v1.train.WorkerSessionCreator": {
        "short name": "WorkerSessionCreator",
        "parameters": {
            "scaffold": "None",
            "master": "''",
            "config": "None",
            "max_wait_secs": "30 * 60"
        }
    },
    "tensorflow.compat.v1.train.MonitoredTrainingSession": {
        "short name": "MonitoredTrainingSession",
        "parameters": {
            "master": "''",
            "is_chief": "True",
            "checkpoint_dir": "None",
            "scaffold": "None",
            "hooks": "None",
            "chief_only_hooks": "None",
            "save_checkpoint_secs": "USE_DEFAULT",
            "save_summaries_steps": "USE_DEFAULT",
            "save_summaries_secs": "USE_DEFAULT",
            "config": "None",
            "stop_grace_period_secs": "120",
            "log_step_count_steps": "100",
            "max_wait_secs": "7200",
            "save_checkpoint_steps": "USE_DEFAULT",
            "summary_dir": "None",
            "save_graph_def": "True"
        }
    },
    "tensorflow.compat.v1.train.NewCheckpointReader": {
        "short name": "NewCheckpointReader",
        "parameters": {
            "filepattern": null
        }
    },
    "tensorflow.compat.v1.train.add_queue_runner": {
        "short name": "add_queue_runner",
        "parameters": {
            "qr": null,
            "collection": "ops.GraphKeys.QUEUE_RUNNERS"
        }
    },
    "tensorflow.compat.v1.train.assert_global_step": {
        "short name": "assert_global_step",
        "parameters": {
            "global_step_tensor": null
        }
    },
    "tensorflow.compat.v1.train.basic_train_loop": {
        "short name": "basic_train_loop",
        "parameters": {
            "supervisor": null,
            "train_step_fn": null,
            "args": "None",
            "kwargs": "None",
            "master": "''"
        }
    },
    "tensorflow.compat.v1.train.batch": {
        "short name": "batch",
        "parameters": {
            "tensors": null,
            "batch_size": null,
            "num_threads": "1",
            "capacity": "32",
            "enqueue_many": "False",
            "shapes": "None",
            "dynamic_pad": "False",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.batch_join": {
        "short name": "batch_join",
        "parameters": {
            "tensors_list": null,
            "batch_size": null,
            "capacity": "32",
            "enqueue_many": "False",
            "shapes": "None",
            "dynamic_pad": "False",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.checkpoint_exists": {
        "short name": "checkpoint_exists",
        "parameters": {
            "checkpoint_prefix": null
        }
    },
    "tensorflow.compat.v1.train.cosine_decay": {
        "short name": "cosine_decay",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "decay_steps": null,
            "alpha": "0.0",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.cosine_decay_restarts": {
        "short name": "cosine_decay_restarts",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "first_decay_steps": null,
            "t_mul": "2.0",
            "m_mul": "1.0",
            "alpha": "0.0",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.create_global_step": {
        "short name": "create_global_step",
        "parameters": {
            "graph": "None"
        }
    },
    "tensorflow.compat.v1.train.do_quantize_training_on_graphdef": {
        "short name": "do_quantize_training_on_graphdef",
        "parameters": {
            "input_graph": null,
            "num_bits": null
        }
    },
    "tensorflow.compat.v1.train.exponential_decay": {
        "short name": "exponential_decay",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "decay_steps": null,
            "decay_rate": null,
            "staircase": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.export_meta_graph": {
        "short name": "export_meta_graph",
        "parameters": {
            "filename": "None",
            "meta_info_def": "None",
            "graph_def": "None",
            "saver_def": "None",
            "collection_list": "None",
            "as_text": "False",
            "graph": "None",
            "export_scope": "None",
            "clear_devices": "False",
            "clear_extraneous_savers": "False",
            "strip_default_attrs": "False",
            "save_debug_info": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.train.generate_checkpoint_state_proto": {
        "short name": "generate_checkpoint_state_proto",
        "parameters": {
            "save_dir": null,
            "model_checkpoint_path": null,
            "all_model_checkpoint_paths": "None",
            "all_model_checkpoint_timestamps": "None",
            "last_preserved_timestamp": "None"
        }
    },
    "tensorflow.compat.v1.train.get_checkpoint_mtimes": {
        "short name": "get_checkpoint_mtimes",
        "parameters": {
            "checkpoint_prefixes": null
        }
    },
    "tensorflow.compat.v1.train.get_global_step": {
        "short name": "get_global_step",
        "parameters": {
            "graph": "None"
        }
    },
    "tensorflow.compat.v1.train.get_or_create_global_step": {
        "short name": "get_or_create_global_step",
        "parameters": {
            "graph": "None"
        }
    },
    "tensorflow.compat.v1.train.global_step": {
        "short name": "global_step",
        "parameters": {
            "sess": null,
            "global_step_tensor": null
        }
    },
    "tensorflow.compat.v1.train.import_meta_graph": {
        "short name": "import_meta_graph",
        "parameters": {
            "meta_graph_or_file": null,
            "clear_devices": "False",
            "import_scope": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.train.init_from_checkpoint": {
        "short name": "init_from_checkpoint",
        "parameters": {
            "ckpt_dir_or_file": null,
            "assignment_map": null
        }
    },
    "tensorflow.compat.v1.train.input_producer": {
        "short name": "input_producer",
        "parameters": {
            "input_tensor": null,
            "element_shape": "None",
            "num_epochs": "None",
            "shuffle": "True",
            "seed": "None",
            "capacity": "32",
            "shared_name": "None",
            "summary_name": "None",
            "name": "None",
            "cancel_op": "None"
        }
    },
    "tensorflow.compat.v1.train.inverse_time_decay": {
        "short name": "inverse_time_decay",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "decay_steps": null,
            "decay_rate": null,
            "staircase": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.limit_epochs": {
        "short name": "limit_epochs",
        "parameters": {
            "tensor": null,
            "num_epochs": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.linear_cosine_decay": {
        "short name": "linear_cosine_decay",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "decay_steps": null,
            "num_periods": "0.5",
            "alpha": "0.0",
            "beta": "0.001",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.maybe_batch": {
        "short name": "maybe_batch",
        "parameters": {
            "tensors": null,
            "keep_input": null,
            "batch_size": null,
            "num_threads": "1",
            "capacity": "32",
            "enqueue_many": "False",
            "shapes": "None",
            "dynamic_pad": "False",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.maybe_batch_join": {
        "short name": "maybe_batch_join",
        "parameters": {
            "tensors_list": null,
            "keep_input": null,
            "batch_size": null,
            "capacity": "32",
            "enqueue_many": "False",
            "shapes": "None",
            "dynamic_pad": "False",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.maybe_shuffle_batch": {
        "short name": "maybe_shuffle_batch",
        "parameters": {
            "tensors": null,
            "batch_size": null,
            "capacity": null,
            "min_after_dequeue": null,
            "keep_input": null,
            "num_threads": "1",
            "seed": "None",
            "enqueue_many": "False",
            "shapes": "None",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.maybe_shuffle_batch_join": {
        "short name": "maybe_shuffle_batch_join",
        "parameters": {
            "tensors_list": null,
            "batch_size": null,
            "capacity": null,
            "min_after_dequeue": null,
            "keep_input": null,
            "seed": "None",
            "enqueue_many": "False",
            "shapes": "None",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.natural_exp_decay": {
        "short name": "natural_exp_decay",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "decay_steps": null,
            "decay_rate": null,
            "staircase": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.noisy_linear_cosine_decay": {
        "short name": "noisy_linear_cosine_decay",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "decay_steps": null,
            "initial_variance": "1.0",
            "variance_decay": "0.55",
            "num_periods": "0.5",
            "alpha": "0.0",
            "beta": "0.001",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.piecewise_constant": {
        "short name": "piecewise_constant",
        "parameters": {
            "x": null,
            "boundaries": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.polynomial_decay": {
        "short name": "polynomial_decay",
        "parameters": {
            "learning_rate": null,
            "global_step": null,
            "decay_steps": null,
            "end_learning_rate": "0.0001",
            "power": "1.0",
            "cycle": "False",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.range_input_producer": {
        "short name": "range_input_producer",
        "parameters": {
            "limit": null,
            "num_epochs": "None",
            "shuffle": "True",
            "seed": "None",
            "capacity": "32",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.remove_checkpoint": {
        "short name": "remove_checkpoint",
        "parameters": {
            "checkpoint_prefix": null,
            "checkpoint_format_version": "saver_pb2.SaverDef.V2",
            "meta_graph_suffix": "'meta'"
        }
    },
    "tensorflow.compat.v1.train.replica_device_setter": {
        "short name": "replica_device_setter",
        "parameters": {
            "ps_tasks": "0",
            "ps_device": "'/job:ps'",
            "worker_device": "'/job:worker'",
            "merge_devices": "True",
            "cluster": "None",
            "ps_ops": "None",
            "ps_strategy": "None"
        }
    },
    "tensorflow.compat.v1.train.sdca_fprint": {
        "short name": "sdca_fprint",
        "parameters": {
            "input": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.sdca_optimizer": {
        "short name": "sdca_optimizer",
        "parameters": {
            "sparse_example_indices": null,
            "sparse_feature_indices": null,
            "sparse_feature_values": null,
            "dense_features": null,
            "example_weights": null,
            "example_labels": null,
            "sparse_indices": null,
            "sparse_weights": null,
            "dense_weights": null,
            "example_state_data": null,
            "loss_type": null,
            "l1": null,
            "l2": null,
            "num_loss_partitions": null,
            "num_inner_iterations": null,
            "adaptative": "True",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.sdca_shrink_l1": {
        "short name": "sdca_shrink_l1",
        "parameters": {
            "weights": null,
            "l1": null,
            "l2": null,
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.shuffle_batch": {
        "short name": "shuffle_batch",
        "parameters": {
            "tensors": null,
            "batch_size": null,
            "capacity": null,
            "min_after_dequeue": null,
            "num_threads": "1",
            "seed": "None",
            "enqueue_many": "False",
            "shapes": "None",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.shuffle_batch_join": {
        "short name": "shuffle_batch_join",
        "parameters": {
            "tensors_list": null,
            "batch_size": null,
            "capacity": null,
            "min_after_dequeue": null,
            "seed": "None",
            "enqueue_many": "False",
            "shapes": "None",
            "allow_smaller_final_batch": "False",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.slice_input_producer": {
        "short name": "slice_input_producer",
        "parameters": {
            "tensor_list": null,
            "num_epochs": "None",
            "shuffle": "True",
            "seed": "None",
            "capacity": "32",
            "shared_name": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.train.start_queue_runners": {
        "short name": "start_queue_runners",
        "parameters": {
            "sess": "None",
            "coord": "None",
            "daemon": "True",
            "start": "True",
            "collection": "ops.GraphKeys.QUEUE_RUNNERS"
        }
    },
    "tensorflow.compat.v1.train.string_input_producer": {
        "short name": "string_input_producer",
        "parameters": {
            "string_tensor": null,
            "num_epochs": "None",
            "shuffle": "True",
            "seed": "None",
            "capacity": "32",
            "shared_name": "None",
            "name": "None",
            "cancel_op": "None"
        }
    },
    "tensorflow.compat.v1.train.summary_iterator": {
        "short name": "summary_iterator",
        "parameters": {
            "path": null
        }
    },
    "tensorflow.compat.v1.train.update_checkpoint_state": {
        "short name": "update_checkpoint_state",
        "parameters": {
            "save_dir": null,
            "model_checkpoint_path": null,
            "all_model_checkpoint_paths": "None",
            "latest_filename": "None",
            "all_model_checkpoint_timestamps": "None",
            "last_preserved_timestamp": "None"
        }
    },
    "tensorflow.compat.v1.train.warm_start": {
        "short name": "warm_start",
        "parameters": {
            "ckpt_to_initialize_from": null,
            "vars_to_warm_start": "'.*'",
            "var_name_to_vocab_info": "None",
            "var_name_to_prev_var_name": "None"
        }
    },
    "tensorflow.compat.v1.user_ops.my_fact": {
        "short name": "my_fact",
        "parameters": {}
    },
    "tensorflow.data.experimental.service.DispatchServer": {
        "short name": "DispatchServer",
        "parameters": {
            "config": "None",
            "start": "True"
        }
    },
    "tensorflow.data.experimental.service.DispatcherConfig": {
        "short name": "DispatcherConfig",
        "parameters": {
            "port": "0",
            "protocol": "None",
            "work_dir": "None",
            "fault_tolerant_mode": "False",
            "worker_addresses": "None",
            "job_gc_check_interval_ms": "None",
            "job_gc_timeout_ms": "None"
        }
    },
    "tensorflow.data.experimental.service.ShardingPolicy": {
        "short name": "ShardingPolicy",
        "parameters": {}
    },
    "tensorflow.data.experimental.service.WorkerConfig": {
        "short name": "WorkerConfig",
        "parameters": {
            "dispatcher_address": null,
            "worker_address": "None",
            "port": "0",
            "protocol": "None",
            "heartbeat_interval_ms": "None",
            "dispatcher_timeout_ms": "None"
        }
    },
    "tensorflow.data.experimental.service.WorkerServer": {
        "short name": "WorkerServer",
        "parameters": {
            "config": null,
            "start": "True"
        }
    },
    "tensorflow.data.experimental.service.distribute": {
        "short name": "distribute",
        "parameters": {
            "processing_mode": null,
            "service": null,
            "job_name": "None",
            "consumer_index": "None",
            "num_consumers": "None",
            "max_outstanding_requests": "None",
            "data_transfer_protocol": "None",
            "compression": "'AUTO'",
            "target_workers": "'AUTO'"
        }
    },
    "tensorflow.data.experimental.service.from_dataset_id": {
        "short name": "from_dataset_id",
        "parameters": {
            "processing_mode": null,
            "service": null,
            "dataset_id": null,
            "element_spec": "None",
            "job_name": "None",
            "consumer_index": "None",
            "num_consumers": "None",
            "max_outstanding_requests": "None",
            "data_transfer_protocol": "None",
            "target_workers": "'AUTO'"
        }
    },
    "tensorflow.data.experimental.service.register_dataset": {
        "short name": "register_dataset",
        "parameters": {
            "service": null,
            "dataset": null,
            "compression": "'AUTO'"
        }
    },
    "tensorflow.distribute.experimental.partitioners.FixedShardsPartitioner": {
        "short name": "FixedShardsPartitioner",
        "parameters": {
            "num_shards": null
        }
    },
    "tensorflow.distribute.experimental.partitioners.MaxSizePartitioner": {
        "short name": "MaxSizePartitioner",
        "parameters": {
            "max_shard_bytes": null,
            "max_shards": "None",
            "bytes_per_string": "16"
        }
    },
    "tensorflow.distribute.experimental.partitioners.MinSizePartitioner": {
        "short name": "MinSizePartitioner",
        "parameters": {
            "min_shard_bytes": "256 << 10",
            "max_shards": "1",
            "bytes_per_string": "16"
        }
    },
    "tensorflow.distribute.experimental.partitioners.Partitioner": {
        "short name": "Partitioner",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.rpc.Client": {
        "short name": "Client",
        "parameters": {}
    },
    "tensorflow.distribute.experimental.rpc.Server": {
        "short name": "Server",
        "parameters": {}
    },
    "tensorflow.experimental.numpy.random.poisson": {
        "short name": "poisson",
        "parameters": {
            "lam": "1.0",
            "size": "None"
        }
    },
    "tensorflow.experimental.numpy.random.rand": {
        "short name": "rand",
        "parameters": {
            "*size": null
        }
    },
    "tensorflow.experimental.numpy.random.randint": {
        "short name": "randint",
        "parameters": {
            "low": null,
            "high": "None",
            "size": "None",
            "dtype": "tf.experimental.numpy.int64"
        }
    },
    "tensorflow.experimental.numpy.random.randn": {
        "short name": "randn",
        "parameters": {
            "*args": null
        }
    },
    "tensorflow.experimental.numpy.random.random": {
        "short name": "random",
        "parameters": {
            "size": "None"
        }
    },
    "tensorflow.experimental.numpy.random.seed": {
        "short name": "seed",
        "parameters": {
            "s": null
        }
    },
    "tensorflow.experimental.numpy.random.standard_normal": {
        "short name": "standard_normal",
        "parameters": {
            "size": "None"
        }
    },
    "tensorflow.experimental.numpy.random.uniform": {
        "short name": "uniform",
        "parameters": {
            "low": "0.0",
            "high": "1.0",
            "size": "None"
        }
    },
    "tensorflow.keras.applications.densenet.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.densenet.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.efficientnet.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.efficientnet.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.efficientnet_v2.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.imagenet_utils.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.imagenet_utils.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None",
            "mode": "'caffe'"
        }
    },
    "tensorflow.keras.applications.inception_resnet_v2.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.inception_resnet_v2.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.inception_v3.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.inception_v3.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.mobilenet.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.mobilenet.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.mobilenet_v2.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.mobilenet_v2.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.mobilenet_v3.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.mobilenet_v3.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.nasnet.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.nasnet.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.regnet.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.regnet.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.resnet50.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.resnet50.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.resnet_rs.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.resnet_rs.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.resnet_v2.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.resnet_v2.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.vgg16.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.vgg16.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.vgg19.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.vgg19.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.applications.xception.decode_predictions": {
        "short name": "decode_predictions",
        "parameters": {
            "preds": null,
            "top": "5"
        }
    },
    "tensorflow.keras.applications.xception.preprocess_input": {
        "short name": "preprocess_input",
        "parameters": {
            "x": null,
            "data_format": "None"
        }
    },
    "tensorflow.keras.backend.experimental.disable_tensorflow_random_generator": {
        "short name": "disable_tf_random_generator",
        "parameters": {}
    },
    "tensorflow.keras.backend.experimental.enable_tensorflow_random_generator": {
        "short name": "enable_tf_random_generator",
        "parameters": {}
    },
    "tensorflow.keras.backend.experimental.is_tensorflow_random_generator_enabled": {
        "short name": "is_tf_random_generator_enabled",
        "parameters": {}
    },
    "tensorflow.keras.callbacks.experimental.BackupAndRestore": {
        "short name": "BackupAndRestore",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "tensorflow.keras.datasets.boston_housing.load_data": {
        "short name": "load_data",
        "parameters": {
            "path": "'boston_housing.npz'",
            "test_split": "0.2",
            "seed": "113"
        }
    },
    "tensorflow.keras.datasets.cifar10.load_data": {
        "short name": "load_data",
        "parameters": {}
    },
    "tensorflow.keras.datasets.cifar100.load_data": {
        "short name": "load_data",
        "parameters": {
            "label_mode": "'fine'"
        }
    },
    "tensorflow.keras.datasets.fashion_mnist.load_data": {
        "short name": "load_data",
        "parameters": {}
    },
    "tensorflow.keras.datasets.imdb.get_word_index": {
        "short name": "get_word_index",
        "parameters": {
            "path": "'imdb_word_index.json'"
        }
    },
    "tensorflow.keras.datasets.imdb.load_data": {
        "short name": "load_data",
        "parameters": {
            "path": "'imdb.npz'",
            "num_words": "None",
            "skip_top": "0",
            "maxlen": "None",
            "seed": "113",
            "start_char": "1",
            "oov_char": "2",
            "index_from": "3",
            "**kwargs": null
        }
    },
    "tensorflow.keras.datasets.mnist.load_data": {
        "short name": "load_data",
        "parameters": {
            "path": "'mnist.npz'"
        }
    },
    "tensorflow.keras.datasets.reuters.get_word_index": {
        "short name": "get_word_index",
        "parameters": {
            "path": "'reuters_word_index.json'"
        }
    },
    "tensorflow.keras.datasets.reuters.load_data": {
        "short name": "load_data",
        "parameters": {
            "path": "'reuters.npz'",
            "num_words": "None",
            "skip_top": "0",
            "maxlen": "None",
            "test_split": "0.2",
            "seed": "113",
            "start_char": "1",
            "oov_char": "2",
            "index_from": "3",
            "**kwargs": null
        }
    },
    "tensorflow.keras.dtensor.experimental.LayoutMap": {
        "short name": "LayoutMap",
        "parameters": {
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.layout_map_scope": {
        "short name": "layout_map_scope",
        "parameters": {}
    },
    "tensorflow.keras.layers.experimental.EinsumDense": {
        "short name": "EinsumDense",
        "parameters": {
            "equation": null,
            "output_shape": null,
            "activation": "None",
            "bias_axes": "None",
            "kernel_initializer": "'glorot_uniform'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "bias_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.experimental.RandomFourierFeatures": {
        "short name": "RandomFourierFeatures",
        "parameters": {
            "output_dim": null,
            "kernel_initializer": "'gaussian'",
            "scale": "None",
            "trainable": "False",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.experimental.SyncBatchNormalization": {
        "short name": "SyncBatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "moving_mean_initializer": "'zeros'",
            "moving_variance_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adadelta'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adagrad'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.AdamW": {
        "short name": "AdamW",
        "parameters": {
            "learning_rate": "0.001",
            "weight_decay": "0.004",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'AdamW'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Adamax": {
        "short name": "Adamax",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Adamax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Ftrl": {
        "short name": "Ftrl",
        "parameters": {
            "learning_rate": "0.001",
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "0.0",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Ftrl'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Nadam": {
        "short name": "Nadam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'Nadam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "name": null,
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "100",
            "jit_compile": "True",
            "name": "'RMSprop'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.experimental.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "amsgrad": "False",
            "clipnorm": "None",
            "clipvalue": "None",
            "global_clipnorm": "None",
            "use_ema": "False",
            "ema_momentum": "0.99",
            "ema_overwrite_frequency": "None",
            "jit_compile": "True",
            "name": "'SGD'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "name": "'Adadelta'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "name": "'Adagrad'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "name": "'Adam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Adamax": {
        "short name": "Adamax",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Adamax'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Ftrl": {
        "short name": "Ftrl",
        "parameters": {
            "learning_rate": "0.001",
            "learning_rate_power": "-0.5",
            "initial_accumulator_value": "0.1",
            "l1_regularization_strength": "0.0",
            "l2_regularization_strength": "0.0",
            "name": "'Ftrl'",
            "l2_shrinkage_regularization_strength": "0.0",
            "beta": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Nadam": {
        "short name": "Nadam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "name": "'Nadam'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "name": null,
            "gradient_aggregator": "None",
            "gradient_transformers": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "name": "'RMSprop'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.legacy.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "name": "'SGD'",
            "**kwargs": null
        }
    },
    "tensorflow.keras.optimizers.schedules.ExponentialDecay": {
        "short name": "ExponentialDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "decay_rate": null,
            "staircase": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.InverseTimeDecay": {
        "short name": "InverseTimeDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "decay_rate": null,
            "staircase": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule": {
        "short name": "LearningRateSchedule",
        "parameters": {}
    },
    "tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay": {
        "short name": "PiecewiseConstantDecay",
        "parameters": {
            "boundaries": null,
            "values": null,
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.PolynomialDecay": {
        "short name": "PolynomialDecay",
        "parameters": {
            "initial_learning_rate": null,
            "decay_steps": null,
            "end_learning_rate": "0.0001",
            "power": "1.0",
            "cycle": "False",
            "name": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.deserialize": {
        "short name": "deserialize",
        "parameters": {
            "config": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.keras.optimizers.schedules.serialize": {
        "short name": "serialize",
        "parameters": {
            "learning_rate_schedule": null
        }
    },
    "tensorflow.keras.preprocessing.image.DirectoryIterator": {
        "short name": "DirectoryIterator",
        "parameters": {
            "directory": null,
            "image_data_generator": null,
            "target_size": "(256, 256)",
            "color_mode": "'rgb'",
            "classes": "None",
            "class_mode": "'categorical'",
            "batch_size": "32",
            "shuffle": "True",
            "seed": "None",
            "data_format": "None",
            "save_to_dir": "None",
            "save_prefix": "''",
            "save_format": "'png'",
            "follow_links": "False",
            "subset": "None",
            "interpolation": "'nearest'",
            "keep_aspect_ratio": "False",
            "dtype": "None"
        }
    },
    "tensorflow.keras.preprocessing.image.ImageDataGenerator": {
        "short name": "ImageDataGenerator",
        "parameters": {
            "featurewise_center": "False",
            "samplewise_center": "False",
            "featurewise_std_normalization": "False",
            "samplewise_std_normalization": "False",
            "zca_whitening": "False",
            "zca_epsilon": "1e-06",
            "rotation_range": "0",
            "width_shift_range": "0.0",
            "height_shift_range": "0.0",
            "brightness_range": "None",
            "shear_range": "0.0",
            "zoom_range": "0.0",
            "channel_shift_range": "0.0",
            "fill_mode": "'nearest'",
            "cval": "0.0",
            "horizontal_flip": "False",
            "vertical_flip": "False",
            "rescale": "None",
            "preprocessing_function": "None",
            "data_format": "None",
            "validation_split": "0.0",
            "interpolation_order": "1",
            "dtype": "None"
        }
    },
    "tensorflow.keras.preprocessing.image.Iterator": {
        "short name": "Iterator",
        "parameters": {
            "n": null,
            "batch_size": null,
            "shuffle": null,
            "seed": null
        }
    },
    "tensorflow.keras.preprocessing.image.NumpyArrayIterator": {
        "short name": "NumpyArrayIterator",
        "parameters": {
            "x": null,
            "y": null,
            "image_data_generator": null,
            "batch_size": "32",
            "shuffle": "False",
            "sample_weight": "None",
            "seed": "None",
            "data_format": "None",
            "save_to_dir": "None",
            "save_prefix": "''",
            "save_format": "'png'",
            "subset": "None",
            "ignore_class_split": "False",
            "dtype": "None"
        }
    },
    "tensorflow.keras.preprocessing.image.apply_affine_transform": {
        "short name": "apply_affine_transform",
        "parameters": {
            "x": null,
            "theta": "0",
            "tx": "0",
            "ty": "0",
            "shear": "0",
            "zx": "1",
            "zy": "1",
            "row_axis": "1",
            "col_axis": "2",
            "channel_axis": "0",
            "fill_mode": "'nearest'",
            "cval": "0.0",
            "order": "1"
        }
    },
    "tensorflow.keras.preprocessing.image.apply_brightness_shift": {
        "short name": "apply_brightness_shift",
        "parameters": {
            "x": null,
            "brightness": null,
            "scale": "True"
        }
    },
    "tensorflow.keras.preprocessing.image.apply_channel_shift": {
        "short name": "apply_channel_shift",
        "parameters": {
            "x": null,
            "intensity": null,
            "channel_axis": "0"
        }
    },
    "tensorflow.keras.preprocessing.image.random_brightness": {
        "short name": "random_brightness",
        "parameters": {
            "x": null,
            "brightness_range": null,
            "scale": "True"
        }
    },
    "tensorflow.keras.preprocessing.image.random_channel_shift": {
        "short name": "random_channel_shift",
        "parameters": {
            "x": null,
            "intensity_range": null,
            "channel_axis": "0"
        }
    },
    "tensorflow.keras.preprocessing.image.random_rotation": {
        "short name": "random_rotation",
        "parameters": {
            "x": null,
            "rg": null,
            "row_axis": "1",
            "col_axis": "2",
            "channel_axis": "0",
            "fill_mode": "'nearest'",
            "cval": "0.0",
            "interpolation_order": "1"
        }
    },
    "tensorflow.keras.preprocessing.image.random_shear": {
        "short name": "random_shear",
        "parameters": {
            "x": null,
            "intensity": null,
            "row_axis": "1",
            "col_axis": "2",
            "channel_axis": "0",
            "fill_mode": "'nearest'",
            "cval": "0.0",
            "interpolation_order": "1"
        }
    },
    "tensorflow.keras.preprocessing.image.random_shift": {
        "short name": "random_shift",
        "parameters": {
            "x": null,
            "wrg": null,
            "hrg": null,
            "row_axis": "1",
            "col_axis": "2",
            "channel_axis": "0",
            "fill_mode": "'nearest'",
            "cval": "0.0",
            "interpolation_order": "1"
        }
    },
    "tensorflow.keras.preprocessing.image.random_zoom": {
        "short name": "random_zoom",
        "parameters": {
            "x": null,
            "zoom_range": null,
            "row_axis": "1",
            "col_axis": "2",
            "channel_axis": "0",
            "fill_mode": "'nearest'",
            "cval": "0.0",
            "interpolation_order": "1"
        }
    },
    "tensorflow.keras.preprocessing.image.smart_resize": {
        "short name": "smart_resize",
        "parameters": {
            "x": null,
            "size": null,
            "interpolation": "'bilinear'"
        }
    },
    "tensorflow.keras.preprocessing.sequence.TimeseriesGenerator": {
        "short name": "TimeseriesGenerator",
        "parameters": {
            "data": null,
            "targets": null,
            "length": null,
            "sampling_rate": "1",
            "stride": "1",
            "start_index": "0",
            "end_index": "None",
            "shuffle": "False",
            "reverse": "False",
            "batch_size": "128"
        }
    },
    "tensorflow.keras.preprocessing.sequence.make_sampling_table": {
        "short name": "make_sampling_table",
        "parameters": {
            "size": null,
            "sampling_factor": "1e-05"
        }
    },
    "tensorflow.keras.preprocessing.sequence.skipgrams": {
        "short name": "skipgrams",
        "parameters": {
            "sequence": null,
            "vocabulary_size": null,
            "window_size": "4",
            "negative_samples": "1.0",
            "shuffle": "True",
            "categorical": "False",
            "sampling_table": "None",
            "seed": "None"
        }
    },
    "tensorflow.keras.preprocessing.text.Tokenizer": {
        "short name": "Tokenizer",
        "parameters": {
            "num_words": "None",
            "filters": "'!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~\\t\\n'",
            "lower": "True",
            "split": "' '",
            "char_level": "False",
            "oov_token": "None",
            "analyzer": "None",
            "**kwargs": null
        }
    },
    "tensorflow.keras.preprocessing.text.hashing_trick": {
        "short name": "hashing_trick",
        "parameters": {
            "text": null,
            "n": null,
            "hash_function": "None",
            "filters": "'!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~\\t\\n'",
            "lower": "True",
            "split": "' '",
            "analyzer": "None"
        }
    },
    "tensorflow.keras.preprocessing.text.one_hot": {
        "short name": "one_hot",
        "parameters": {
            "input_text": null,
            "n": null,
            "filters": "'!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~\\t\\n'",
            "lower": "True",
            "split": "' '",
            "analyzer": "None"
        }
    },
    "tensorflow.keras.preprocessing.text.text_to_word_sequence": {
        "short name": "text_to_word_sequence",
        "parameters": {
            "input_text": null,
            "filters": "'!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~\\t\\n'",
            "lower": "True",
            "split": "' '"
        }
    },
    "tensorflow.keras.preprocessing.text.tokenizer_from_json": {
        "short name": "tokenizer_from_json",
        "parameters": {
            "json_string": null
        }
    },
    "tensorflow.keras.utils.experimental.DatasetCreator": {
        "short name": "DatasetCreator",
        "parameters": {
            "dataset_fn": null,
            "input_options": "None"
        }
    },
    "tensorflow.lite.experimental.authoring.compatible": {
        "short name": "compatible",
        "parameters": {
            "target": "None",
            "converter_target_spec": "None",
            "**kwargs": null
        }
    },
    "tensorflow.profiler.experimental.client.monitor": {
        "short name": "monitor",
        "parameters": {
            "service_addr": null,
            "duration_ms": null,
            "level": "1"
        }
    },
    "tensorflow.profiler.experimental.client.trace": {
        "short name": "trace",
        "parameters": {
            "service_addr": null,
            "logdir": null,
            "duration_ms": null,
            "worker_list": "''",
            "num_tracing_attempts": "3",
            "options": "None"
        }
    },
    "tensorflow.profiler.experimental.server.start": {
        "short name": "start",
        "parameters": {
            "port": null
        }
    },
    "tensorflow.tpu.experimental.embedding.Adagrad": {
        "short name": "Adagrad",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.AdagradMomentum": {
        "short name": "AdagradMomentum",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.Adam": {
        "short name": "Adam",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.FTRL": {
        "short name": "FTRL",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.FeatureConfig": {
        "short name": "FeatureConfig",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.SGD": {
        "short name": "SGD",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TPUEmbedding": {
        "short name": "TPUEmbedding",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TPUEmbeddingForServing": {
        "short name": "TPUEmbeddingForServing",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TPUEmbeddingV0": {
        "short name": "TPUEmbeddingV0",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.TableConfig": {
        "short name": "TableConfig",
        "parameters": {}
    },
    "tensorflow.tpu.experimental.embedding.serving_embedding_lookup": {
        "short name": "serving_embedding_lookup",
        "parameters": {}
    },
    "tensorflow.compat.v1.data.experimental.CsvDataset": {
        "short name": "CsvDataset",
        "parameters": {
            "filenames": null,
            "record_defaults": null,
            "compression_type": "None",
            "buffer_size": "None",
            "header": "False",
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "select_cols": "None",
            "exclude_cols": "None"
        }
    },
    "tensorflow.compat.v1.data.experimental.RandomDataset": {
        "short name": "RandomDataset",
        "parameters": {
            "seed": "None",
            "name": "None"
        }
    },
    "tensorflow.compat.v1.data.experimental.SqlDataset": {
        "short name": "SqlDataset",
        "parameters": {
            "driver_name": null,
            "data_source_name": null,
            "query": null,
            "output_types": null
        }
    },
    "tensorflow.compat.v1.data.experimental.Counter": {
        "short name": "Counter",
        "parameters": {
            "start": "0",
            "step": "1",
            "dtype": "tf.dtypes.int64"
        }
    },
    "tensorflow.compat.v1.data.experimental.RaggedTensorStructure": {
        "short name": "RaggedTensorStructure",
        "parameters": {
            "dtype": null,
            "shape": null,
            "ragged_rank": null
        }
    },
    "tensorflow.compat.v1.data.experimental.SparseTensorStructure": {
        "short name": "SparseTensorStructure",
        "parameters": {
            "dtype": null,
            "shape": null
        }
    },
    "tensorflow.compat.v1.data.experimental.TensorArrayStructure": {
        "short name": "TensorArrayStructure",
        "parameters": {
            "dtype": null,
            "element_shape": null,
            "dynamic_size": null,
            "infer_shape": null
        }
    },
    "tensorflow.compat.v1.data.experimental.TensorStructure": {
        "short name": "TensorStructure",
        "parameters": {
            "dtype": null,
            "shape": null
        }
    },
    "tensorflow.compat.v1.data.experimental.choose_from_datasets": {
        "short name": "choose_from_datasets",
        "parameters": {
            "datasets": null,
            "choice_dataset": null,
            "stop_on_empty_dataset": "False"
        }
    },
    "tensorflow.compat.v1.data.experimental.make_batched_features_dataset": {
        "short name": "make_batched_features_dataset",
        "parameters": {
            "file_pattern": null,
            "batch_size": null,
            "features": null,
            "reader": "None",
            "label_key": "None",
            "reader_args": "None",
            "num_epochs": "None",
            "shuffle": "True",
            "shuffle_buffer_size": "10000",
            "shuffle_seed": "None",
            "prefetch_buffer_size": "None",
            "reader_num_threads": "None",
            "parser_num_threads": "None",
            "sloppy_ordering": "False",
            "drop_final_batch": "False"
        }
    },
    "tensorflow.compat.v1.data.experimental.make_csv_dataset": {
        "short name": "make_csv_dataset",
        "parameters": {
            "file_pattern": null,
            "batch_size": null,
            "column_names": "None",
            "column_defaults": "None",
            "label_name": "None",
            "select_columns": "None",
            "field_delim": "','",
            "use_quote_delim": "True",
            "na_value": "''",
            "header": "True",
            "num_epochs": "None",
            "shuffle": "True",
            "shuffle_buffer_size": "10000",
            "shuffle_seed": "None",
            "prefetch_buffer_size": "None",
            "num_parallel_reads": "None",
            "sloppy": "False",
            "num_rows_for_inference": "100",
            "compression_type": "None",
            "ignore_errors": "False"
        }
    },
    "tensorflow.compat.v1.data.experimental.map_and_batch_with_legacy_function": {
        "short name": "map_and_batch_with_legacy_function",
        "parameters": {
            "map_func": null,
            "batch_size": null,
            "num_parallel_batches": "None",
            "drop_remainder": "False",
            "num_parallel_calls": "None"
        }
    },
    "tensorflow.compat.v1.data.experimental.sample_from_datasets": {
        "short name": "sample_from_datasets",
        "parameters": {
            "datasets": null,
            "weights": "None",
            "seed": "None",
            "stop_on_empty_dataset": "False"
        }
    },
    "tensorflow.compat.v1.distribute.experimental.CentralStorageStrategy": {
        "short name": "CentralStorageStrategy",
        "parameters": {
            "compute_devices": "None",
            "parameter_device": "None"
        }
    },
    "tensorflow.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": {
        "short name": "MultiWorkerMirroredStrategy",
        "parameters": {
            "communication": "tf.distribute.experimental.CollectiveCommunication.AUTO",
            "cluster_resolver": "None"
        }
    },
    "tensorflow.compat.v1.distribute.experimental.ParameterServerStrategy": {
        "short name": "ParameterServerStrategy",
        "parameters": {
            "cluster_resolver": "None"
        }
    },
    "tensorflow.compat.v1.distribute.experimental.TPUStrategy": {
        "short name": "TPUStrategy",
        "parameters": {
            "tpu_cluster_resolver": "None",
            "steps_per_run": "None",
            "device_assignment": "None"
        }
    },
    "tensorflow.compat.v1.estimator.experimental.KMeans": {
        "short name": "KMeans",
        "parameters": {
            "num_clusters": null,
            "model_dir": "None",
            "initial_clusters": "RANDOM_INIT",
            "distance_metric": "SQUARED_EUCLIDEAN_DISTANCE",
            "seed": "None",
            "use_mini_batch": "True",
            "mini_batch_steps_per_iteration": "1",
            "kmeans_plus_plus_num_retries": "2",
            "relative_tolerance": "None",
            "config": "None",
            "feature_columns": "None"
        }
    },
    "tensorflow.compat.v1.estimator.experimental.dnn_logit_fn_builder": {
        "short name": "dnn_logit_fn_builder",
        "parameters": {
            "units": null,
            "hidden_units": null,
            "feature_columns": null,
            "activation_fn": null,
            "dropout": null,
            "input_layer_partitioner": null,
            "batch_norm": null
        }
    },
    "tensorflow.compat.v1.estimator.experimental.linear_logit_fn_builder": {
        "short name": "linear_logit_fn_builder",
        "parameters": {
            "units": null,
            "feature_columns": null,
            "sparse_combiner": "'sum'"
        }
    },
    "tensorflow.compat.v1.estimator.inputs.numpy_input_fn": {
        "short name": "numpy_input_fn",
        "parameters": {
            "x": null,
            "y": "None",
            "batch_size": "128",
            "num_epochs": "1",
            "shuffle": "None",
            "queue_capacity": "1000",
            "num_threads": "1"
        }
    },
    "tensorflow.compat.v1.estimator.inputs.pandas_input_fn": {
        "short name": "pandas_input_fn",
        "parameters": {
            "x": null,
            "y": "None",
            "batch_size": "128",
            "num_epochs": "1",
            "shuffle": "None",
            "queue_capacity": "1000",
            "num_threads": "1",
            "target_column": "'target'"
        }
    },
    "tensorflow.compat.v1.estimator.tpu.InputPipelineConfig": {
        "short name": "InputPipelineConfig",
        "parameters": {}
    },
    "tensorflow.compat.v1.estimator.tpu.RunConfig": {
        "short name": "RunConfig",
        "parameters": {
            "tpu_config": "None",
            "evaluation_master": "None",
            "master": "None",
            "cluster": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.estimator.tpu.TPUConfig": {
        "short name": "TPUConfig",
        "parameters": {
            "iterations_per_loop": "2",
            "num_shards": "None",
            "num_cores_per_replica": "None",
            "per_host_input_for_training": "True",
            "tpu_job_name": "None",
            "initial_infeed_sleep_secs": "None",
            "input_partition_dims": "None",
            "eval_training_input_configuration": "InputPipelineConfig.PER_HOST_V1",
            "experimental_host_call_every_n_steps": "1",
            "experimental_allow_per_host_v2_parallel_get_next": "False",
            "experimental_feed_hook": "None"
        }
    },
    "tensorflow.compat.v1.estimator.tpu.TPUEstimator": {
        "short name": "TPUEstimator",
        "parameters": {
            "model_fn": "None",
            "model_dir": "None",
            "config": "None",
            "params": "None",
            "use_tpu": "True",
            "train_batch_size": "None",
            "eval_batch_size": "None",
            "predict_batch_size": "None",
            "batch_axis": "None",
            "eval_on_tpu": "True",
            "export_to_tpu": "True",
            "export_to_cpu": "True",
            "warm_start_from": "None",
            "embedding_config_spec": "None",
            "export_saved_model_api_version": "ExportSavedModelApiVersion.V1"
        }
    },
    "tensorflow.compat.v1.estimator.tpu.TPUEstimatorSpec": {
        "short name": "TPUEstimatorSpec",
        "parameters": {
            "mode": null,
            "predictions": "None",
            "loss": "None",
            "train_op": "None",
            "eval_metrics": "None",
            "export_outputs": "None",
            "scaffold_fn": "None",
            "host_call": "None",
            "training_hooks": "None",
            "evaluation_hooks": "None",
            "prediction_hooks": "None"
        }
    },
    "tensorflow.compat.v1.keras.backend.get_session": {
        "short name": "get_session",
        "parameters": {
            "op_input_list": "()"
        }
    },
    "tensorflow.compat.v1.keras.backend.set_session": {
        "short name": "set_session",
        "parameters": {
            "session": null
        }
    },
    "tensorflow.compat.v1.keras.callbacks.TensorBoard": {
        "short name": "TensorBoard",
        "parameters": {
            "log_dir": "'./logs'",
            "histogram_freq": "0",
            "batch_size": "32",
            "write_graph": "True",
            "write_grads": "False",
            "write_images": "False",
            "embeddings_freq": "0",
            "embeddings_layer_names": "None",
            "embeddings_metadata": "None",
            "embeddings_data": "None",
            "update_freq": "'epoch'",
            "profile_batch": "2"
        }
    },
    "tensorflow.compat.v1.keras.estimator.model_to_estimator": {
        "short name": "model_to_estimator",
        "parameters": {
            "keras_model": "None",
            "keras_model_path": "None",
            "custom_objects": "None",
            "model_dir": "None",
            "config": "None",
            "checkpoint_format": "'saver'",
            "metric_names_map": "None",
            "export_outputs": "None"
        }
    },
    "tensorflow.compat.v1.keras.experimental.export_saved_model": {
        "short name": "export_saved_model",
        "parameters": {
            "model": null,
            "saved_model_path": null,
            "custom_objects": "None",
            "as_text": "False",
            "input_signature": "None",
            "serving_only": "False"
        }
    },
    "tensorflow.compat.v1.keras.experimental.load_from_saved_model": {
        "short name": "load_from_saved_model",
        "parameters": {
            "saved_model_path": null,
            "custom_objects": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.RandomNormal": {
        "short name": "RandomNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.RandomUniform": {
        "short name": "RandomUniform",
        "parameters": {
            "minval": "-0.05",
            "maxval": "0.05",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.TruncatedNormal": {
        "short name": "TruncatedNormal",
        "parameters": {
            "mean": "0.0",
            "stddev": "0.05",
            "seed": "None",
            "dtype": "tf.dtypes.float32"
        }
    },
    "tensorflow.compat.v1.keras.initializers.he_normal": {
        "short name": "he_normal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.he_uniform": {
        "short name": "he_uniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.lecun_normal": {
        "short name": "lecun_normal",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.initializers.lecun_uniform": {
        "short name": "lecun_uniform",
        "parameters": {
            "seed": "None"
        }
    },
    "tensorflow.compat.v1.keras.layers.BatchNormalization": {
        "short name": "BatchNormalization",
        "parameters": {
            "axis": "-1",
            "momentum": "0.99",
            "epsilon": "0.001",
            "center": "True",
            "scale": "True",
            "beta_initializer": "'zeros'",
            "gamma_initializer": "'ones'",
            "moving_mean_initializer": "'zeros'",
            "moving_variance_initializer": "'ones'",
            "beta_regularizer": "None",
            "gamma_regularizer": "None",
            "beta_constraint": "None",
            "gamma_constraint": "None",
            "renorm": "False",
            "renorm_clipping": "None",
            "renorm_momentum": "0.99",
            "fused": "None",
            "trainable": "True",
            "virtual_batch_size": "None",
            "adjustment": "None",
            "name": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.CuDNNGRU": {
        "short name": "CuDNNGRU",
        "parameters": {
            "units": null,
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.CuDNNLSTM": {
        "short name": "CuDNNLSTM",
        "parameters": {
            "units": null,
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.DenseFeatures": {
        "short name": "DenseFeatures",
        "parameters": {
            "feature_columns": null,
            "trainable": "True",
            "name": "None",
            "partitioner": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.GRU": {
        "short name": "GRU",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "reset_after": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.GRUCell": {
        "short name": "GRUCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "reset_after": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.LSTM": {
        "short name": "LSTM",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "activity_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "return_sequences": "False",
            "return_state": "False",
            "go_backwards": "False",
            "stateful": "False",
            "unroll": "False",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.LSTMCell": {
        "short name": "LSTMCell",
        "parameters": {
            "units": null,
            "activation": "'tanh'",
            "recurrent_activation": "'hard_sigmoid'",
            "use_bias": "True",
            "kernel_initializer": "'glorot_uniform'",
            "recurrent_initializer": "'orthogonal'",
            "bias_initializer": "'zeros'",
            "unit_forget_bias": "True",
            "kernel_regularizer": "None",
            "recurrent_regularizer": "None",
            "bias_regularizer": "None",
            "kernel_constraint": "None",
            "recurrent_constraint": "None",
            "bias_constraint": "None",
            "dropout": "0.0",
            "recurrent_dropout": "0.0",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.keras.layers.disable_v2_dtype_behavior": {
        "short name": "disable_v2_dtype_behavior",
        "parameters": {}
    },
    "tensorflow.compat.v1.keras.layers.enable_v2_dtype_behavior": {
        "short name": "enable_v2_dtype_behavior",
        "parameters": {}
    },
    "tensorflow.compat.v1.keras.utils.DeterministicRandomTestTool": {
        "short name": "DeterministicRandomTestTool",
        "parameters": {}
    },
    "tensorflow.compat.v1.keras.utils.get_or_create_layer": {
        "short name": "get_or_create_layer",
        "parameters": {
            "name": null,
            "create_layer_method": null
        }
    },
    "tensorflow.compat.v1.keras.utils.track_tensorflow1_style_variables": {
        "short name": "track_tf1_style_variables",
        "parameters": {
            "method": null
        }
    },
    "tensorflow.compat.v1.layers.experimental.keras_style_scope": {
        "short name": "keras_style_scope",
        "parameters": {}
    },
    "tensorflow.compat.v1.layers.experimental.set_keras_style": {
        "short name": "set_keras_style",
        "parameters": {}
    },
    "tensorflow.compat.v1.lite.experimental.convert_op_hints_to_stubs": {
        "short name": "convert_op_hints_to_stubs",
        "parameters": {
            "session": "None",
            "graph_def": "None",
            "write_callback": "lambda graph_def, comments: None"
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.BasicLSTMCell": {
        "short name": "BasicLSTMCell",
        "parameters": {
            "num_units": null,
            "forget_bias": "1.0",
            "state_is_tuple": "True",
            "activation": "None",
            "reuse": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.BasicRNNCell": {
        "short name": "BasicRNNCell",
        "parameters": {
            "num_units": null,
            "activation": "None",
            "reuse": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.DeviceWrapper": {
        "short name": "DeviceWrapper",
        "parameters": {
            "cell": null,
            "device": null,
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.DropoutWrapper": {
        "short name": "DropoutWrapper",
        "parameters": {
            "cell": null,
            "input_keep_prob": "1.0",
            "output_keep_prob": "1.0",
            "state_keep_prob": "1.0",
            "variational_recurrent": "False",
            "input_size": "None",
            "dtype": "None",
            "seed": "None",
            "dropout_state_filter_visitor": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.GRUCell": {
        "short name": "GRUCell",
        "parameters": {
            "num_units": null,
            "activation": "None",
            "reuse": "None",
            "kernel_initializer": "None",
            "bias_initializer": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.LSTMCell": {
        "short name": "LSTMCell",
        "parameters": {
            "num_units": null,
            "use_peepholes": "False",
            "cell_clip": "None",
            "initializer": "None",
            "num_proj": "None",
            "proj_clip": "None",
            "num_unit_shards": "None",
            "num_proj_shards": "None",
            "forget_bias": "1.0",
            "state_is_tuple": "True",
            "activation": "None",
            "reuse": "None",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.LSTMStateTuple": {
        "short name": "LSTMStateTuple",
        "parameters": {
            "c": null,
            "h": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.MultiRNNCell": {
        "short name": "MultiRNNCell",
        "parameters": {
            "cells": null,
            "state_is_tuple": "True"
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.RNNCell": {
        "short name": "RNNCell",
        "parameters": {
            "trainable": "True",
            "name": "None",
            "dtype": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.nn.rnn_cell.ResidualWrapper": {
        "short name": "ResidualWrapper",
        "parameters": {
            "cell": null,
            "residual_fn": "None",
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.saved_model.main_op.main_op": {
        "short name": "main_op",
        "parameters": {}
    },
    "tensorflow.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": {
        "short name": "MethodNameUpdater",
        "parameters": {
            "export_dir": null
        }
    },
    "tensorflow.compat.v1.tpu.experimental.AdagradParameters": {
        "short name": "AdagradParameters",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.experimental.AdamParameters": {
        "short name": "AdamParameters",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.experimental.FtrlParameters": {
        "short name": "FtrlParameters",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.experimental.StochasticGradientDescentParameters": {
        "short name": "StochasticGradientDescentParameters",
        "parameters": {}
    },
    "tensorflow.compat.v1.tpu.experimental.embedding_column": {
        "short name": "embedding_column",
        "parameters": {
            "categorical_column": null,
            "dimension": null,
            "combiner": "'mean'",
            "initializer": "None",
            "max_sequence_length": "0",
            "learning_rate_fn": "None",
            "embedding_lookup_device": "None",
            "tensor_core_shape": "None",
            "use_safe_embedding_lookup": "True"
        }
    },
    "tensorflow.compat.v1.tpu.experimental.shared_embedding_columns": {
        "short name": "shared_embedding_columns",
        "parameters": {
            "categorical_columns": null,
            "dimension": null,
            "combiner": "'mean'",
            "initializer": "None",
            "shared_embedding_collection_name": "None",
            "max_sequence_lengths": "None",
            "learning_rate_fn": "None",
            "embedding_lookup_device": "None",
            "tensor_core_shape": "None",
            "use_safe_embedding_lookup": "True"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.95",
            "epsilon": "1e-07",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "name": "'Adadelta'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "learning_rate": "0.001",
            "initial_accumulator_value": "0.1",
            "epsilon": "1e-07",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "name": "'Adagrad'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.Adam": {
        "short name": "Adam",
        "parameters": {
            "learning_rate": "0.001",
            "beta_1": "0.9",
            "beta_2": "0.999",
            "epsilon": "1e-07",
            "amsgrad": "False",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "name": "'Adam'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "learning_rate": "0.001",
            "rho": "0.9",
            "momentum": "0.0",
            "epsilon": "1e-07",
            "centered": "False",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "jit_compile": "False",
            "name": "'RMSprop'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.dtensor.experimental.optimizers.SGD": {
        "short name": "SGD",
        "parameters": {
            "learning_rate": "0.01",
            "momentum": "0.0",
            "nesterov": "False",
            "amsgrad": "False",
            "gradients_clip_option": "None",
            "ema_option": "None",
            "jit_compile": "False",
            "name": "'SGD'",
            "mesh": "None"
        }
    },
    "tensorflow.keras.layers.experimental.preprocessing.HashedCrossing": {
        "short name": "HashedCrossing",
        "parameters": {
            "num_bins": null,
            "output_mode": "'int'",
            "sparse": "False",
            "**kwargs": null
        }
    },
    "tensorflow.keras.layers.experimental.preprocessing.PreprocessingLayer": {
        "short name": "PreprocessingLayer",
        "parameters": {
            "**kwargs": null
        }
    },
    "tensorflow.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": {
        "short name": "EmbeddingConfigSpec",
        "parameters": {
            "feature_columns": "None",
            "optimization_parameters": "None",
            "clipping_limit": "None",
            "pipeline_execution_with_tensor_core": "False",
            "experimental_gradient_multiplier_fn": "None",
            "feature_to_config_dict": "None",
            "table_to_config_dict": "None",
            "partition_strategy": "'div'",
            "profile_data_directory": "None"
        }
    }
}