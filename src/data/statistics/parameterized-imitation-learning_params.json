{
    "3d_eval.py": {
        "torch": {
            "load_30": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_138": {
                "variable": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.process_images(self.data.rgb, True)",
                            "Call"
                        ],
                        [
                            "cv2.resize(img, (160, 120))",
                            "Call"
                        ],
                        [
                            "np.array(rgb).astype(np.float32)",
                            "Call"
                        ],
                        [
                            "2 * ((rgb - np.amin(rgb)) / (np.amax(rgb) - np.amin(rgb))) - 1",
                            "BinOp"
                        ],
                        [
                            "torch.from_numpy(rgb).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "rgb.view(1, rgb.shape[0], rgb.shape[1], rgb.shape[2]).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "rgb.view(1, 1, rgb.shape[0], rgb.shape[1])",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_68": {
                "variable": {
                    "value": "eof_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(eof)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Tensor_71": {
                "variable": {
                    "value": "tau_input",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "save_81": {
                "obj": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.process_images(self.data.rgb, True)",
                            "Call"
                        ],
                        [
                            "cv2.resize(img, (160, 120))",
                            "Call"
                        ],
                        [
                            "np.array(rgb).astype(np.float32)",
                            "Call"
                        ],
                        [
                            "2 * ((rgb - np.amin(rgb)) / (np.amax(rgb) - np.amin(rgb))) - 1",
                            "BinOp"
                        ],
                        [
                            "torch.from_numpy(rgb).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "rgb.view(1, rgb.shape[0], rgb.shape[1], rgb.shape[2]).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "rgb.view(1, 1, rgb.shape[0], rgb.shape[1])",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "/home/amazon/Desktop/rgb_tensor.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_82": {
                "obj": {
                    "value": "depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.process_images(self.data.depth, False)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "/home/amazon/Desktop/depth_tensor.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_83": {
                "obj": {
                    "value": "eof",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pos + eof[:-3]",
                            "BinOp"
                        ],
                        [
                            "eof + pos",
                            "BinOp"
                        ]
                    ]
                },
                "f": {
                    "value": "/home/amazon/Desktop/eof_tensor.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_84": {
                "obj": {
                    "value": "tau_input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.Tensor(tau).to(eof_input).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "/home/amazon/Desktop/tau.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_88": {
                "obj": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "out.squeeze()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "/home/amazon/Desktop/out.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_89": {
                "obj": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "/home/amazon/Desktop/aux.pt",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "mellow.py": {
        "torch": {
            "max_13": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "exp_15": {
                "input": {
                    "value": "beta * (x - mm)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_14": {
                "input": {
                    "value": "1 / x.size(dim) * torch.sum(torch.exp(omega * (x - c)))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_14": {
                "input": {
                    "value": "torch.exp(omega * (x - c))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_14": {
                "input": {
                    "value": "omega * (x - c)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "modeltests.py": {
        "torch": {
            "device_22": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "add_87": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.mul(alpha, x.view(original_shape[0], -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "beta",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "params[:, 1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_212": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_213": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_219": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "feature.view(-1, self.height * self.width)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_220": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.pos_x * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_221": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.pos_y * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_222": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_237": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "args[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "*args[1:]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_238": {
                "variable": {
                    "value": "coords",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "width",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "height",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_253": {
                "variable": {
                    "value": "self.lin1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "k",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_254": {
                "variable": {
                    "value": "self.lin2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "k",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_262": {
                "variable": {
                    "value": "soft",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "data.permute(0, 2, 3, 1).view(temp_shape)",
                            "Call"
                        ],
                        [
                            "self.lin2(torch.tanh(self.lin1(atn)))",
                            "Call"
                        ],
                        [
                            "self.lin(data.view(data.shape[0], data.shape[1], 1, -1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_273": {
                "variable": {
                    "value": "self.lin",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "width * height",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_277": {
                "variable": {
                    "value": "soft",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "data.permute(0, 2, 3, 1).view(temp_shape)",
                            "Call"
                        ],
                        [
                            "self.lin2(torch.tanh(self.lin1(atn)))",
                            "Call"
                        ],
                        [
                            "self.lin(data.view(data.shape[0], data.shape[1], 1, -1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_306": {
                "variable": {
                    "value": "self.film",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3, 32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_312": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(64 * 3 + 3, 256)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_319": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_rgb]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_33": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_172": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.pow(grad, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_261": {
                "input": {
                    "value": "self.lin1(atn)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_306": {
                "in_features": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_307": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_308": {
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_309": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_310": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3 * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_312": {
                "in_features": {
                    "value": "64 * 3 + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_313": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_314": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_405": {
                "tensors": {
                    "value": "[ss1, ss2, ss3, tau]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_158": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_160": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_323": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.add(torch.mul(alpha, x.view(original_shape[0], -1)), beta).view(original_shape)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_rgb], dim=1)",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv1(F.relu(x)), spatial_params[:, 0])",
                            "Call"
                        ],
                        [
                            "self.ca1(self.sa1(x))",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv2(F.relu(x)), spatial_params[:, 1])",
                            "Call"
                        ],
                        [
                            "self.ca2(self.sa2(x))",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv3(F.relu(x)), spatial_params[:, 2])",
                            "Call"
                        ],
                        [
                            "self.ca3(self.sa3(x))",
                            "Call"
                        ],
                        [
                            "self.classifier(torch.cat([ss1, ss2, ss3, tau], dim=1))",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_350": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.add(torch.mul(alpha, x.view(original_shape[0], -1)), beta).view(original_shape)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_rgb], dim=1)",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv1(F.relu(x)), spatial_params[:, 0])",
                            "Call"
                        ],
                        [
                            "self.ca1(self.sa1(x))",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv2(F.relu(x)), spatial_params[:, 1])",
                            "Call"
                        ],
                        [
                            "self.ca2(self.sa2(x))",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv3(F.relu(x)), spatial_params[:, 2])",
                            "Call"
                        ],
                        [
                            "self.ca3(self.sa3(x))",
                            "Call"
                        ],
                        [
                            "self.classifier(torch.cat([ss1, ss2, ss3, tau], dim=1))",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_377": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.add(torch.mul(alpha, x.view(original_shape[0], -1)), beta).view(original_shape)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_rgb], dim=1)",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv1(F.relu(x)), spatial_params[:, 0])",
                            "Call"
                        ],
                        [
                            "self.ca1(self.sa1(x))",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv2(F.relu(x)), spatial_params[:, 1])",
                            "Call"
                        ],
                        [
                            "self.ca2(self.sa2(x))",
                            "Call"
                        ],
                        [
                            "apply_film(True, self.conv3(F.relu(x)), spatial_params[:, 2])",
                            "Call"
                        ],
                        [
                            "self.ca3(self.sa3(x))",
                            "Call"
                        ],
                        [
                            "self.classifier(torch.cat([ss1, ss2, ss3, tau], dim=1))",
                            "Call"
                        ]
                    ]
                }
            },
            "any_51": {
                "input": {
                    "value": "torch.isnan(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MSELoss_61": {
                "variable": {
                    "value": "l2_crit",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mul_87": {
                "input": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "params[:, 0]",
                            "Subscript"
                        ]
                    ]
                },
                "other": {
                    "value": "x.view(original_shape[0], -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_163": {
                "variable": {
                    "value": "state[max_exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "pow_172": {
                "input": {
                    "value": "grad",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "p.grad.data",
                            "Attribute"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_181": {
                "input": {
                    "value": "max_exp_avg_sq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "max_exp_avg_sq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "stack_239": {
                "tensors": {
                    "value": "[torch.arange(height).float()] * width",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_240": {
                "tensors": {
                    "value": "[torch.arange(width).float()] * height",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "isnan_51": {
                "input": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs",
                            "Name"
                        ]
                    ]
                }
            },
            "MSELoss_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_64": {
                "input": {
                    "value": "param",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model.parameters()",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "arange_239": {
                "start": {
                    "value": "height",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_240": {
                "start": {
                    "value": "width",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/crnn.py": {
        "torch": {
            "Adam_297": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.layer1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_43": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.aux1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.aux2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_75": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_94": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl2(output)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "variable": {
                    "value": "self.layer1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_119": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_122": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_132": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_133": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_142": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, 53)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_188": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_189": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_199": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature / self.temperature",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_200": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_x) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_201": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_y) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_202": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_218": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_219": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_220": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_59": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_79": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(torch.cat([x_rgb, x_depth], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.layer2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.layer3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.layer4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.aux1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_88": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[aux, x, eofs[:, i, :], taus[:, i, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_126": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_146": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([x_rgb, x_depth], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_147": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_148": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_149": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_167": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_181": {
                "variable": {
                    "value": "self.temperature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(1) * temperature",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataLoader_299": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GRU_62": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_94": {
                "tensors": {
                    "value": "[output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRU_129": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_164": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_295": {
                "f": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'cuda:{}'.format(sys.argv[2])",
                            "Call"
                        ],
                        [
                            "'cuda:1'",
                            "MethodArgument"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_146": {
                "tensors": {
                    "value": "[x_rgb, x_depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_332": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_333": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_335": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_336": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_optim_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_79": {
                "tensors": {
                    "value": "[x_rgb, x_depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_181": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_321": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/models/crnn.py": {
        "torch": {
            "Adam_235": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_43": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.aux1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.aux2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_75": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_94": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl2(output)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_123": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_124": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_134": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature / self.temperature",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_135": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_x) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_136": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_y) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_137": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_153": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_154": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_155": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_59": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_77": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.layer1_rgb(rgb[:, i, :, :, :]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.layer2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.layer3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.layer4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.aux1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_88": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[aux, x, eofs[:, i, :], taus[:, i, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_116": {
                "variable": {
                    "value": "self.temperature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(1) * temperature",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataLoader_237": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GRU_62": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_94": {
                "tensors": {
                    "value": "[output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_233": {
                "f": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'cuda:{}'.format(sys.argv[3])",
                            "Call"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "save_273": {
                "obj": {
                    "value": "{'epoch': epoch, 'model_state_dict': model.state_dict(), 'optimizer_state_dict': optimizer.state_dict(), 'test_loss': cost, 'train_loss': train_loss}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + '/lowest.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_280": {
                "obj": {
                    "value": "{'epoch': epoch, 'model_state_dict': model.state_dict(), 'optimizer_state_dict': optimizer.state_dict(), 'test_loss': cost, 'train_loss': train_loss}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + '/' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_116": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/models/imitation_net.py": {
        "torch": {
            "Adam_264": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.009",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_30": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.layer1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.aux1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.aux2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "102",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.gripper_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_61": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([x_rgb, x_depth], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_62": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_63": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_64": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.aux1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_67": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.aux2(aux)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_68": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_69": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl2(torch.cat([aux, x, eof], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_94": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_95": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_105": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature / self.temperature",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_106": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_x) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_107": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_y) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_108": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_124": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_125": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_126": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_127": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "bmm_142": {
                "variable": {
                    "value": "num",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target.view(bs, 1, n)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "output.view(bs, n, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "bmm_143": {
                "variable": {
                    "value": "den",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.norm(target.view(bs, n, 1), p=2, dim=1, keepdim=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "torch.norm(output.view(bs, n, 1), p=2, dim=1, keepdim=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_144": {
                "variable": {
                    "value": "c_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.acos(num / den)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_302": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "results/hover_blue/full_implementation",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Parameter_87": {
                "variable": {
                    "value": "self.temperature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(1) * temperature",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataLoader_266": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_319": {
                "f": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'torch_imp'",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_326": {
                "ndarray": {
                    "value": "np.reshape(depth_image, (1, 1, depth_image.shape[0], -1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_327": {
                "ndarray": {
                    "value": "np.reshape(rgb_image, (1, 3, rgb_image.shape[0], -1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_328": {
                "ndarray": {
                    "value": "np.reshape(np.array(eof), (1, 15))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_61": {
                "tensors": {
                    "value": "[x_rgb, x_depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_143": {
                "input": {
                    "value": "output.view(bs, n, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "acos_144": {
                "input": {
                    "value": "num / den",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "from_numpy_242": {
                "ndarray": {
                    "value": "np.array(self.data['depth'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_243": {
                "ndarray": {
                    "value": "np.array(self.data['rgb'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_244": {
                "ndarray": {
                    "value": "np.array(self.data['eof'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_245": {
                "ndarray": {
                    "value": "np.array(self.data['labels'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_246": {
                "ndarray": {
                    "value": "np.array(self.data['aux'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_247": {
                "ndarray": {
                    "value": "np.array(self.data['gripper'])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_69": {
                "tensors": {
                    "value": "[aux, x, eof]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_87": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_291": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/simulation/gym-imitate/imitate_gym/crnn.py": {
        "torch": {
            "Adam_302": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_43": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.aux1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.aux2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_75": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_94": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl2(output)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "variable": {
                    "value": "self.layer1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_119": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_122": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_132": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_133": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_144": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, 53)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_190": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_191": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_201": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature / self.temperature",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_202": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_x) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_203": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_y) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_204": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_220": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_221": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_222": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_59": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_77": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.layer1_rgb(rgb[:, i, :, :, :]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.layer2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.layer3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.layer4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.aux1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_88": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[aux, x, eofs[:, i, :], taus[:, i, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_126": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_148": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([x_rgb, x_depth], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_149": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_150": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_151": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_169": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_183": {
                "variable": {
                    "value": "self.temperature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(1) * temperature",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataLoader_304": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GRU_62": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_94": {
                "tensors": {
                    "value": "[output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRU_129": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_166": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_300": {
                "f": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'cuda:{}'.format(sys.argv[2])",
                            "Call"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_148": {
                "tensors": {
                    "value": "[x_rgb, x_depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_337": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_338": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_340": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_341": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_optim_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_183": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_326": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/simulation/gym-imitate/imitate_gym/gym_eval.py": {
        "torch": {
            "from_numpy_11": {
                "variable": {
                    "value": "tau",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(tau)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_12": {
                "variable": {
                    "value": "tau",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tau",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[[int(sys.argv[2]), int(sys.argv[3])] for _ in range(seq_len)]",
                            "ListComp"
                        ],
                        [
                            "torch.from_numpy(np.array(tau)).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(tau, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_16": {
                "f": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "sys.argv[1]",
                            "Subscript"
                        ]
                    ]
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_37": {
                "variable": {
                    "value": "input_rgb",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(rgbs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_38": {
                "variable": {
                    "value": "input_rgb",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_rgb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(np.array(rgbs)).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(input_rgb, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_39": {
                "variable": {
                    "value": "input_eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(eof)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_40": {
                "variable": {
                    "value": "input_eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_eof",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(np.array(eof)).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(input_eof, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/util/old/crnn.py": {
        "torch": {
            "Adam_297": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.layer1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_43": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.aux1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.aux2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_75": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_94": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl2(output)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "variable": {
                    "value": "self.layer1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_119": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_122": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_132": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_133": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_142": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, 53)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_188": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_189": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_199": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature / self.temperature",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_200": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_x) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_201": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_y) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_202": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_218": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_219": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_220": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_59": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_79": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(torch.cat([x_rgb, x_depth], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.layer2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.layer3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.layer4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.aux1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_88": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[aux, x, eofs[:, i, :], taus[:, i, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_126": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_146": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([x_rgb, x_depth], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_147": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_148": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_149": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_167": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_181": {
                "variable": {
                    "value": "self.temperature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(1) * temperature",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataLoader_299": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GRU_62": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_94": {
                "tensors": {
                    "value": "[output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRU_129": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_164": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_295": {
                "f": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'cuda:{}'.format(sys.argv[2])",
                            "Call"
                        ],
                        [
                            "'cuda:1'",
                            "MethodArgument"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_146": {
                "tensors": {
                    "value": "[x_rgb, x_depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_332": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_333": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_335": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_336": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_optim_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_79": {
                "tensors": {
                    "value": "[x_rgb, x_depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_181": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_321": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/util/old/simulation/gym-imitate/imitate_gym/crnn.py": {
        "torch": {
            "Adam_302": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_43": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.aux1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.aux2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_75": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_94": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl2(output)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.layer1_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "variable": {
                    "value": "self.layer1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_119": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.layer4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_122": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_132": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_133": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_144": {
                "variable": {
                    "value": "seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(bs, seq_len, 53)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_190": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_191": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_201": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature / self.temperature",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_202": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_x) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_203": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Variable(self.pos_y) * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_204": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_220": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_221": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_222": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_59": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_77": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.layer1_rgb(rgb[:, i, :, :, :]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.layer2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.layer3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.layer4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.aux1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_88": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[aux, x, eofs[:, i, :], taus[:, i, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_126": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_148": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([x_rgb, x_depth], dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_149": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_150": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_151": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_169": {
                "*size": {
                    "value": "2 * self.num_layers",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_183": {
                "variable": {
                    "value": "self.temperature",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(1) * temperature",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataLoader_304": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GRU_62": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_94": {
                "tensors": {
                    "value": "[output[:, seq_len - 1, 0, :], output[:, seq_len - 1, 1, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRU_129": {
                "variable": {
                    "value": "self.r_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.num_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_166": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs[0].shape[0]",
                            "Subscript"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_300": {
                "f": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'cuda:{}'.format(sys.argv[2])",
                            "Call"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ],
                        [
                            "'cuda:0'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_148": {
                "tensors": {
                    "value": "[x_rgb, x_depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_337": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_338": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_340": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_341": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "dest + name + '_optim_' + str(epoch) + '.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_183": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_326": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "old_stack/util/old/simulation/gym-imitate/imitate_gym/gym_eval.py": {
        "torch": {
            "from_numpy_11": {
                "variable": {
                    "value": "tau",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(tau)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_12": {
                "variable": {
                    "value": "tau",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tau",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[[int(sys.argv[2]), int(sys.argv[3])] for _ in range(seq_len)]",
                            "ListComp"
                        ],
                        [
                            "torch.from_numpy(np.array(tau)).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(tau, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_16": {
                "f": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "sys.argv[1]",
                            "Subscript"
                        ]
                    ]
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_37": {
                "variable": {
                    "value": "input_rgb",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(rgbs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_38": {
                "variable": {
                    "value": "input_rgb",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_rgb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(np.array(rgbs)).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(input_rgb, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_39": {
                "variable": {
                    "value": "input_eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(eof)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_40": {
                "variable": {
                    "value": "input_eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_eof",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(np.array(eof)).type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(input_eof, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "sim_eval.py": {
        "torch": {
            "from_numpy_37": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2 * ((np_array_img - np.amin(np_array_img)) / (np.amax(np_array_img) - np.amin(np_array_img))) - 1",
                            "BinOp"
                        ],
                        [
                            "torch.from_numpy(img).type(torch.FloatTensor).squeeze()",
                            "Call"
                        ],
                        [
                            "img.permute(2, 0, 1).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "img.view(1, 1, img.shape[0], img.shape[1])",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_37": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_176": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "any_119": {
                "input": {
                    "value": "torch.isnan(rgb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_131": {
                "variable": {
                    "value": "eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.FloatTensor([norm_pos[0], norm_pos[1], 0.0]), eof[0:12]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "isnan_119": {
                "input": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "np.array(resized_rgb)[:, :, :3]",
                            "Subscript"
                        ],
                        [
                            "process_images(rgb, True)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sim_eval0.py": {
        "torch": {
            "from_numpy_38": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2 * ((np_array_img - np.amin(np_array_img)) / (np.amax(np_array_img) - np.amin(np_array_img))) - 1",
                            "BinOp"
                        ],
                        [
                            "torch.from_numpy(img).type(torch.FloatTensor).squeeze()",
                            "Call"
                        ],
                        [
                            "img.permute(2, 0, 1)",
                            "Call"
                        ],
                        [
                            "img.view(1, img.shape[0], img.shape[1])",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_38": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_270": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "any_194": {
                "input": {
                    "value": "torch.isnan(rgb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_207": {
                "variable": {
                    "value": "eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.FloatTensor(norm_pos), eof[0:16] * 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "isnan_194": {
                "input": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "np.array(resized_rgb)[:, :, :3]",
                            "Subscript"
                        ],
                        [
                            "process_images(rgb, True)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_214": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "simulation/sim.py": {
        "torch": {
            "from_numpy_198": {
                "variable": {
                    "value": "tmap",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "plan_map",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "plan_rgb[:, :, 0].astype(np.float32) * 0",
                            "BinOp"
                        ],
                        [
                            "np.transpose(plan_map)",
                            "Call"
                        ],
                        [
                            "convolve2d(plan_map, np.ones((3, 3)), 'same')",
                            "Call"
                        ],
                        [
                            "zoom(plan_map, 1 / 5)",
                            "Call"
                        ],
                        [
                            "tmap.squeeze().numpy()",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "build_map(screen, g_pos)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_198": {
                "variable": {
                    "value": "tmap",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_199": {
                "variable": {
                    "value": "pooler",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_202": {
                "variable": {
                    "value": "mmap",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_202": {
                "input": {
                    "value": "torch.cat([tmap, pmap], dim=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_202": {
                "tensors": {
                    "value": "[tmap, pmap]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/datasets.py": {
        "torch": {
            "from_numpy_41": {
                "variable": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "unpacked[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_42": {
                "variable": {
                    "value": "depth",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "unpacked[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_43": {
                "variable": {
                    "value": "eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "unpacked[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_44": {
                "variable": {
                    "value": "tau",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "unpacked[3]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_45": {
                "variable": {
                    "value": "aux",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "unpacked[4]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_46": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "unpacked[5]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "src/loss_func.py": {
        "torch": {
            "abs_11": {
                "variable": {
                    "value": "true_rot",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.remainder(goal_rot, 2) - torch.remainder(cur_rot, 2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_27": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_28": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_29": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "bmm_50": {
                "variable": {
                    "value": "num",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "target.view(bs, 1, n)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "out.view(bs, n, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_50": {
                "variable": {
                    "value": "num",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "acos_53": {
                "variable": {
                    "value": "a_cos",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.clamp(div, -1 + self.eps, 1 - self.eps)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_54": {
                "variable": {
                    "value": "c_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_cos",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.acos(torch.clamp(div, -1 + self.eps, 1 - self.eps))",
                            "Call"
                        ]
                    ]
                }
            },
            "any_34": {
                "input": {
                    "value": "torch.isnan(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "remainder_11": {
                "input": {
                    "value": "cur_rot",
                    "type": "Variable",
                    "possible_values": []
                },
                "other": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "isnan_34": {
                "input": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "clamp_53": {
                "input": {
                    "value": "div",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "num / den",
                            "BinOp"
                        ]
                    ]
                },
                "min": {
                    "value": "-1 + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1 - self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_82": {
                "input": {
                    "value": "c_loss",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mean(a_cos)",
                            "Call"
                        ]
                    ]
                }
            },
            "norm_51": {
                "input": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/model.py": {
        "torch": {
            "add_14": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.mul(alpha, x.view(original_shape[0], -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "beta",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "params[:, 1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Dropout2d_30": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "coords",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_57": {
                "variable": {
                    "value": "self.coords",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_58": {
                "variable": {
                    "value": "self.coords[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(pos_x.reshape(self.height * self.width)).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_59": {
                "variable": {
                    "value": "self.coords[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(pos_y.reshape(self.height * self.width)).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "leaky_relu_78": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.add(torch.mul(alpha, x.view(original_shape[0], -1)), beta).view(original_shape)",
                            "Call"
                        ],
                        [
                            "self.conv(data)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x)",
                            "Call"
                        ],
                        [
                            "x2",
                            "Name"
                        ],
                        [
                            "self.batch_norm(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([rgb, depth], dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x, cond[0])",
                            "Call"
                        ],
                        [
                            "self.conv2(x, cond[1])",
                            "Call"
                        ],
                        [
                            "self.conv3(x, cond[2])",
                            "Call"
                        ],
                        [
                            "self.conv4(x, cond[3])",
                            "Call"
                        ],
                        [
                            "self.conv6(x, cond[5])",
                            "Call"
                        ],
                        [
                            "self.conv7(x, cond[6])",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.conv_lin1(x.view(x.size(0), -1))))",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.conv_lin2(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x.view(x.size(0), -1), x2, tau], dim=1)",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.fl1(x)))",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.fl2(torch.cat([aux.detach(), x, eof], dim=1))))",
                            "Call"
                        ],
                        [
                            "self.output(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_99": {
                "variable": {
                    "value": "self.lin1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "k",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "variable": {
                    "value": "self.lin2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "k + conditioning",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_110": {
                "variable": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)], dim=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_112": {
                "variable": {
                    "value": "soft",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "data.permute(0, 2, 3, 1).view(temp_shape)",
                            "Call"
                        ],
                        [
                            "self.lin1(atn)",
                            "Call"
                        ],
                        [
                            "torch.tanh(torch.cat([atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)], dim=2))",
                            "Call"
                        ],
                        [
                            "self.lin2(atn)",
                            "Call"
                        ],
                        [
                            "self.lin(data.view(data.shape[0], data.shape[1], 1, -1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_127": {
                "variable": {
                    "value": "self.lin",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "img_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_131": {
                "variable": {
                    "value": "soft",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "data.permute(0, 2, 3, 1).view(temp_shape)",
                            "Call"
                        ],
                        [
                            "self.lin1(atn)",
                            "Call"
                        ],
                        [
                            "torch.tanh(torch.cat([atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)], dim=2))",
                            "Call"
                        ],
                        [
                            "self.lin2(atn)",
                            "Call"
                        ],
                        [
                            "self.lin(data.view(data.shape[0], data.shape[1], 1, -1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_149": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_150": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_164": {
                "variable": {
                    "value": "self.pos_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_165": {
                "variable": {
                    "value": "self.pos_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_182": {
                "variable": {
                    "value": "feature",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.relu(feature.view(-1, self.height * self.width)) + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_183": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.log(F.relu(feature.view(-1, self.height * self.width)) + 1e-06)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_184": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.pos_x * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_185": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.pos_y * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_186": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_215": {
                "variable": {
                    "value": "self.conv_lin1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256 * (11 * 6)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_216": {
                "variable": {
                    "value": "self.conv_lin2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_217": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_226": {
                "variable": {
                    "value": "self.film",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(tau_size, 32, bias=use_bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_233": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(512 * 2 + tau_size, 512, bias=use_bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_237": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 + tau_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_240": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 + eof_size + aux_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_243": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "7",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_254": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[rgb, depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_320": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x.view(x.size(0), -1), x2, tau]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_74": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data, torch.stack([self.coords] * data.size(0), dim=0) * data.mean() * 2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_105": {
                "variable": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "orgnl_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "self.conditioning",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_224": {
                "variable": {
                    "value": "self.augment_tau",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "9",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "tau_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "args[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_110": {
                "tensors": {
                    "value": "[atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_226": {
                "in_features": {
                    "value": "tau_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_227": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_228": {
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32 * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_233": {
                "in_features": {
                    "value": "512 * 2 + tau_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_234": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_235": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "aux_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "leaky_relu_315": {
                "input": {
                    "value": "self.conv_lin1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_316": {
                "input": {
                    "value": "self.conv_lin2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_334": {
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_335": {
                "input": {
                    "value": "self.fl2(torch.cat([aux.detach(), x, eof], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_182": {
                "input": {
                    "value": "feature.view(-1, self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mul_14": {
                "input": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "params[:, 0]",
                            "Subscript"
                        ]
                    ]
                },
                "other": {
                    "value": "x.view(original_shape[0], -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_34": {
                "tensors": {
                    "value": "[torch.arange(self.height).float()] * self.width",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_35": {
                "tensors": {
                    "value": "[torch.arange(self.width).float()] * self.height",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_335": {
                "tensors": {
                    "value": "[aux.detach(), x, eof]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_74": {
                "tensors": {
                    "value": "[self.coords] * data.size(0)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "arange_34": {
                "start": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_35": {
                "start": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/model0.py": {
        "torch": {
            "add_14": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.mul(alpha, x.view(original_shape[0], -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "beta",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "params[:, 1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Dropout2d_30": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "coords",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_57": {
                "variable": {
                    "value": "self.coords",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_58": {
                "variable": {
                    "value": "self.coords[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(pos_x.reshape(self.height * self.width)).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_59": {
                "variable": {
                    "value": "self.coords[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(pos_y.reshape(self.height * self.width)).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "leaky_relu_78": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.add(torch.mul(alpha, x.view(original_shape[0], -1)), beta).view(original_shape)",
                            "Call"
                        ],
                        [
                            "self.conv(data)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x)",
                            "Call"
                        ],
                        [
                            "x2",
                            "Name"
                        ],
                        [
                            "self.batch_norm(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([rgb, depth], dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x, cond[0])",
                            "Call"
                        ],
                        [
                            "self.conv2(x, cond[1])",
                            "Call"
                        ],
                        [
                            "self.conv3(x, cond[2])",
                            "Call"
                        ],
                        [
                            "self.conv4(x, cond[3])",
                            "Call"
                        ],
                        [
                            "self.conv5(x, cond[4])",
                            "Call"
                        ],
                        [
                            "self.conv6(x, cond[5])",
                            "Call"
                        ],
                        [
                            "self.conv7(x, cond[6])",
                            "Call"
                        ],
                        [
                            "self.conv8(x, cond[7])",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.conv_lin1(x.view(x.size(0), -1))))",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.conv_lin2(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x.view(x.size(0), -1), x2, tau], dim=1)",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.fl1(x)))",
                            "Call"
                        ],
                        [
                            "self.dropout(F.leaky_relu(self.fl2(torch.cat([aux.detach(), x, eof], dim=1))))",
                            "Call"
                        ],
                        [
                            "self.output(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_99": {
                "variable": {
                    "value": "self.lin1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "k",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "variable": {
                    "value": "self.lin2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "k + conditioning",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_110": {
                "variable": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat([atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)], dim=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_112": {
                "variable": {
                    "value": "soft",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "data.permute(0, 2, 3, 1).view(temp_shape)",
                            "Call"
                        ],
                        [
                            "self.lin1(atn)",
                            "Call"
                        ],
                        [
                            "torch.tanh(torch.cat([atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)], dim=2))",
                            "Call"
                        ],
                        [
                            "self.lin2(atn)",
                            "Call"
                        ],
                        [
                            "self.lin(data.view(data.shape[0], data.shape[1], 1, -1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_127": {
                "variable": {
                    "value": "self.lin",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "img_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_131": {
                "variable": {
                    "value": "soft",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "atn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "data.permute(0, 2, 3, 1).view(temp_shape)",
                            "Call"
                        ],
                        [
                            "self.lin1(atn)",
                            "Call"
                        ],
                        [
                            "torch.tanh(torch.cat([atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)], dim=2))",
                            "Call"
                        ],
                        [
                            "self.lin2(atn)",
                            "Call"
                        ],
                        [
                            "self.lin(data.view(data.shape[0], data.shape[1], 1, -1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_149": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_150": {
                "variable": {
                    "value": "pos_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_164": {
                "variable": {
                    "value": "self.pos_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_x.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_165": {
                "variable": {
                    "value": "self.pos_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pos_y.reshape(self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_182": {
                "variable": {
                    "value": "feature",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.relu(feature.view(-1, self.height * self.width)) + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_183": {
                "variable": {
                    "value": "softmax_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.log(F.relu(feature.view(-1, self.height * self.width)) + 1e-06)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_184": {
                "variable": {
                    "value": "expected_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.pos_x * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_185": {
                "variable": {
                    "value": "expected_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.pos_y * softmax_attention",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_186": {
                "variable": {
                    "value": "expected_xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[expected_x, expected_y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_215": {
                "variable": {
                    "value": "self.conv_lin1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256 * (11 * 6)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_216": {
                "variable": {
                    "value": "self.conv_lin2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_217": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_226": {
                "variable": {
                    "value": "self.film",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(tau_size, 32, bias=use_bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_233": {
                "variable": {
                    "value": "self.aux",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(512 * 2 + tau_size, 512, bias=use_bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_237": {
                "variable": {
                    "value": "self.fl1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 + tau_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_240": {
                "variable": {
                    "value": "self.fl2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 + eof_size + aux_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_243": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "7",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_254": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[rgb, depth]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_314": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x.view(x.size(0), -1), x2, tau]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_74": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[data, torch.stack([self.coords] * data.size(0), dim=0) * data.mean() * 2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_105": {
                "variable": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "orgnl_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "self.conditioning",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_224": {
                "variable": {
                    "value": "self.augment_tau",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "9",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "tau_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "args[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_110": {
                "tensors": {
                    "value": "[atn, cond.unsqueeze(1).expand(atn.size(0), atn.size(1), self.conditioning)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_226": {
                "in_features": {
                    "value": "tau_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_227": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_228": {
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32 * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_233": {
                "in_features": {
                    "value": "512 * 2 + tau_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_234": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_235": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "aux_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "leaky_relu_309": {
                "input": {
                    "value": "self.conv_lin1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_310": {
                "input": {
                    "value": "self.conv_lin2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_328": {
                "input": {
                    "value": "self.fl1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_329": {
                "input": {
                    "value": "self.fl2(torch.cat([aux.detach(), x, eof], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_182": {
                "input": {
                    "value": "feature.view(-1, self.height * self.width)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mul_14": {
                "input": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "params[:, 0]",
                            "Subscript"
                        ]
                    ]
                },
                "other": {
                    "value": "x.view(original_shape[0], -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_34": {
                "tensors": {
                    "value": "[torch.arange(self.height).float()] * self.width",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_35": {
                "tensors": {
                    "value": "[torch.arange(self.width).float()] * self.height",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_329": {
                "tensors": {
                    "value": "[aux.detach(), x, eof]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_74": {
                "tensors": {
                    "value": "[self.coords] * data.size(0)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "arange_34": {
                "start": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_35": {
                "start": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "superval.py": {
        "torch": {
            "load_66": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "config.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_107": {
                "variable": {
                    "value": "rates",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_230": {
                "obj": {
                    "value": "rates",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(3, 3)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "config.weights[:config.weights.rfind('/')] + '/button_eval_percentages.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_113": {
                "variable": {
                    "value": "trials",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "config.eval_traj",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_228": {
                "input": {
                    "value": "trials",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(config.eval_traj)",
                            "Call"
                        ]
                    ]
                }
            },
            "any_146": {
                "input": {
                    "value": "torch.isnan(rgb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_158": {
                "variable": {
                    "value": "eof",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[eof[3:], torch.FloatTensor([norm_pos[0], norm_pos[1], 0.0])]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "isnan_146": {
                "input": {
                    "value": "rgb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "np.array(resized_rgb)[:, :, :3]",
                            "Subscript"
                        ],
                        [
                            "process_images(rgb, True)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_227": {
                "input": {
                    "value": "trials",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(config.eval_traj)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "superval_3dval.py": {
        "torch": {}
    },
    "superval_results_compile.py": {
        "torch": {
            "mean_16": {
                "variable": {
                    "value": "train_pct",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "button_pcts[train_inds]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_17": {
                "variable": {
                    "value": "total_pct",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "button_pcts",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_124": {
                "variable": {
                    "value": "percentages",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(args.versions)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "9",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_19": {
                "tensors": {
                    "value": "[train_pct, test_pct, total_pct]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_131": {
                "variable": {
                    "value": "sample_pcts",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[get_pcts(*sample) for sample in samples]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_132": {
                "variable": {
                    "value": "sorted_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[sample_pcts[:, i].sort()[0] for i in range(sample_pcts.size(1))]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_135": {
                "variable": {
                    "value": "percentages[i_version, count - 1, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.mean(sample_pcts, dim=0), torch.max(sample_pcts, dim=0)[0], torch.std(sample_pcts, dim=0), sorted_test[int(sample_pcts.size(0) * 0)], sorted_test[int(sample_pcts.size(0) * 0.49)], sorted_test[error_low], sorted_test[error_high], sorted_test[int(sample_pcts.size(0) * 0.99)]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_130": {
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mean_135": {
                "input": {
                    "value": "sample_pcts",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.stack([get_pcts(*sample) for sample in samples], dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "std_137": {
                "input": {
                    "value": "sample_pcts",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.stack([get_pcts(*sample) for sample in samples], dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_136": {
                "input": {
                    "value": "sample_pcts",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.stack([get_pcts(*sample) for sample in samples], dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "Adam_147": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_160": {
                "variable": {
                    "value": "gradients",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(100, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "is_available_330": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_331": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_333": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_140": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "config.save_path + '/best_checkpoint.tar'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_98": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.pow(grad, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_84": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_86": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DataLoader_167": {
                "dataset": {
                    "value": "datasets[mode]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "variable": {
                    "value": "state[max_exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "pow_98": {
                "input": {
                    "value": "grad",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "p.grad.data",
                            "Attribute"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_107": {
                "input": {
                    "value": "max_exp_avg_sq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "max_exp_avg_sq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "any_216": {
                "input": {
                    "value": "torch.isnan(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "detect_anomaly_226": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_278": {
                "obj": {
                    "value": "{'epoch': epoch, 'model_state_dict': model.state_dict(), 'kwargs': kwargs, 'config': config, 'optimizer_state_dict': optimizer.state_dict(), 'loss': cost}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "config.save_path + '/best_checkpoint.tar'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_288": {
                "obj": {
                    "value": "{'epoch': epoch, 'model_state_dict': model.state_dict(), 'kwargs': kwargs, 'config': config, 'optimizer_state_dict': optimizer.state_dict(), 'loss': cost}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "config.save_path + '/' + str(epoch) + '_checkpoint.tar'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_216": {
                "input": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs",
                            "Name"
                        ]
                    ]
                }
            },
            "MSELoss_234": {
                "variable": {
                    "value": "l2_crit",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "no_grad_267": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_237": {
                "input": {
                    "value": "param",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model.parameters()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "verify_data.py": {
        "torch": {
            "DataLoader_17": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ImitationLMDB(config.data_dir, config.mode)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "config.shuffle",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_11": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "config.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    }
}