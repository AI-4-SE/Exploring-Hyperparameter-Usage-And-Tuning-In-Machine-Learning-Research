{
    "doc/documentation.py": {
        "sklearn": {
            "train_test_split_83": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.33",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "classification_report_100": {
                "y_true": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_train)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_103": {
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_127": {
                "y_true": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_train)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_130": {
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_153": {
                "y_true": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_train)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_156": {
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_190": {
                "y_true": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_train)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_193": {
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_209": {
                "y_true": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_train)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            },
            "classification_report_212": {
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "model.predict(X_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "target_names": {
                    "value": "['0', '1']",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "pyrulelearn/imli.py": {
        "sklearn": {
            "accuracy_score_230": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "yTrain",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(yTrain == target_class).astype(bool)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "yTrain[mask]",
                            "Subscript"
                        ],
                        [
                            "(yTrain == target_class).astype(int)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "np.array(yTrain, dtype=bool)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "yhat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_1023": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "yTrain",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(yTrain == target_class).astype(bool)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "yTrain[mask]",
                            "Subscript"
                        ],
                        [
                            "(yTrain == target_class).astype(int)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "np.array(yTrain, dtype=bool)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "yhat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_434": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "yTrain",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(yTrain == target_class).astype(bool)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "yTrain[mask]",
                            "Subscript"
                        ],
                        [
                            "(yTrain == target_class).astype(int)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "np.array(yTrain, dtype=bool)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "yhat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_644": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "yTrain",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(yTrain == target_class).astype(bool)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "yTrain[mask]",
                            "Subscript"
                        ],
                        [
                            "(yTrain == target_class).astype(int)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "np.array(yTrain, dtype=bool)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "yhat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_832": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "yTrain",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(yTrain == target_class).astype(bool)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "yTrain[mask]",
                            "Subscript"
                        ],
                        [
                            "(yTrain == target_class).astype(int)",
                            "Call"
                        ],
                        [
                            "yTrain_orig[mask]",
                            "Subscript"
                        ],
                        [
                            "np.array(yTrain, dtype=bool)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "yhat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ],
                        [
                            "self.predict(XTrain)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "pyrulelearn/utils.py": {
        "sklearn": {
            "StandardScaler_69": {
                "variable": {
                    "value": "sc",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MinMaxScaler_109": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_407": {
                "variable": {
                    "value": "(A_train_1, A_train_2, y_train_1, y_train_2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "Batch_list_X_train[int(math.pow(2, i)) + j - 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "Batch_list_y_train[int(math.pow(2, i)) + j - 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "22",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}