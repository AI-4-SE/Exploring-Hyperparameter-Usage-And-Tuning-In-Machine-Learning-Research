{
    "extract_features.py": {
        "torch": {
            "zeros_73": {
                "variable": {
                    "value": "input",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_60": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "LightCNN_9Layers(num_classes=args.num_classes)",
                            "Call"
                        ],
                        [
                            "LightCNN_29Layers(num_classes=args.num_classes)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model).cuda()",
                            "Call"
                        ],
                        [
                            "LightCNN_29Layers_v2(num_classes=args.num_classes)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_65": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "light_cnn.py": {
        "torch": {
            "split_23": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "mfm(1, 48, 5, 1, 2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "79077",
                            "MethodArgument"
                        ],
                        [
                            "79077",
                            "MethodArgument"
                        ],
                        [
                            "79077",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "dropout_71": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_79": {
                "variable": {
                    "value": "self.pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_82": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_85": {
                "variable": {
                    "value": "self.pool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_90": {
                "variable": {
                    "value": "self.pool4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_92": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "79077",
                            "MethodArgument"
                        ],
                        [
                            "79077",
                            "MethodArgument"
                        ],
                        [
                            "79077",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "dropout_120": {
                "variable": {
                    "value": "fc",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "fc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_137": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "8 * 8 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_138": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "79077",
                            "MethodArgument"
                        ],
                        [
                            "79077",
                            "MethodArgument"
                        ],
                        [
                            "79077",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "dropout_166": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "fc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.filter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2 * out_channels",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.filter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2 * out_channels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_24": {
                "input": {
                    "value": "out[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_98": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_144": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_55": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_57": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_59": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_62": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_148": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_148": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_152": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_152": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_156": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_156": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_162": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_162": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv_a(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc1(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(x, training=self.training)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.pool2(x)",
                            "Call"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "self.pool3(x)",
                            "Call"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "self.pool4(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.group2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.group3(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.group4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.dropout(fc, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "light_cnn_v4.py": {
        "torch": {
            "split_27": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "8 * 8 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "flatten_86": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "start_dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.filter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2 * out_channels",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_23": {
                "variable": {
                    "value": "self.filter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2 * out_channels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_28": {
                "input": {
                    "value": "out[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_66": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_pool2d_70": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_70": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_74": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_74": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_78": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_78": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_84": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool2d_84": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.filter(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block2(x)",
                            "Call"
                        ],
                        [
                            "self.conv3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "self.block3(x)",
                            "Call"
                        ],
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "self.block4(x)",
                            "Call"
                        ],
                        [
                            "self.conv5(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, 2) + F.avg_pool2d(x, 2)",
                            "BinOp"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "load_imglist.py": {
        "torch": {}
    },
    "train.py": {
        "torch": {
            "SGD_93": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "params + [{'params': value, 'lr': 1 * args.lr}]",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_112": {
                "variable": {
                    "value": "train_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageList(root=args.root_path, fileList=args.train_list, transform=transforms.Compose([transforms.RandomCrop(128), transforms.RandomHorizontalFlip(), transforms.ToTensor()]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_122": {
                "variable": {
                    "value": "val_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageList(root=args.root_path, fileList=args.val_list, transform=transforms.Compose([transforms.CenterCrop(128), transforms.ToTensor()]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_132": {
                "variable": {
                    "value": "criterion",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_75": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "LightCNN_9Layers(num_classes=args.num_classes)",
                            "Call"
                        ],
                        [
                            "LightCNN_29Layers(num_classes=args.num_classes)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model).cuda()",
                            "Call"
                        ],
                        [
                            "LightCNN_29Layers_v2(num_classes=args.num_classes)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_237": {
                "obj": {
                    "value": "state",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "load_101": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}