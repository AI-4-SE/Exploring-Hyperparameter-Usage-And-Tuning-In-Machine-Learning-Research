{
    "loader.py": {
        "tensorflow": {}
    },
    "resnet.py": {
        "tensorflow": {
            "Block_11": {
                "base_class_0": {
                    "value": "tensorflow.keras.layers.Layer",
                    "possible_values": []
                },
                "self.is_begaining": {
                    "value": "is_begaining",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                },
                "Conv2D_24": {
                    "variable": {
                        "value": "self.conv2",
                        "possible_values": []
                    },
                    "filters": {
                        "value": "filters",
                        "possible_values": [
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ]
                        ]
                    },
                    "kernel_size": {
                        "value": "(1, 1)",
                        "possible_values": []
                    },
                    "strides": {
                        "value": "strides",
                        "possible_values": [
                            [
                                "1",
                                "MethodArgument"
                            ],
                            [
                                "1",
                                "MethodArgument"
                            ]
                        ]
                    },
                    "activation": {
                        "value": "linear",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "same",
                        "possible_values": []
                    }
                }
            },
            "bottleneck_36": {
                "base_class_0": {
                    "value": "tensorflow.keras.layers.Layer",
                    "possible_values": []
                },
                "self.is_begaining": {
                    "value": "is_begaining",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                },
                "Conv2D_54": {
                    "variable": {
                        "value": "self.conv2",
                        "possible_values": []
                    },
                    "filters": {
                        "value": "f",
                        "possible_values": [
                            [
                                "filters * 4",
                                "BinOp"
                            ]
                        ]
                    },
                    "kernel_size": {
                        "value": "(1, 1)",
                        "possible_values": []
                    },
                    "strides": {
                        "value": "strides",
                        "possible_values": [
                            [
                                "1",
                                "MethodArgument"
                            ],
                            [
                                "1",
                                "MethodArgument"
                            ]
                        ]
                    },
                    "activation": {
                        "value": "linear",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "same",
                        "possible_values": []
                    }
                }
            },
            "Resnet_1_67": {
                "base_class_0": {
                    "value": "tensorflow.keras.Model",
                    "possible_values": []
                },
                "self.model_name": {
                    "value": "model_name",
                    "possible_values": [
                        [
                            "'resnet18'",
                            "MethodArgument"
                        ],
                        [
                            "'resnet50'",
                            "MethodArgument"
                        ]
                    ]
                },
                "Conv2D_72": {
                    "variable": {
                        "value": "self.conv1",
                        "possible_values": []
                    },
                    "filters": {
                        "value": "filters",
                        "possible_values": [
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ]
                        ]
                    },
                    "kernel_size": {
                        "value": "(7, 7)",
                        "possible_values": []
                    },
                    "strides": {
                        "value": "(2, 2)",
                        "possible_values": []
                    },
                    "activation": {
                        "value": "relu",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "same",
                        "possible_values": []
                    }
                },
                "MaxPool2D_73": {
                    "variable": {
                        "value": "self.pool1",
                        "possible_values": []
                    },
                    "pool_size": {
                        "value": "(3, 3)",
                        "possible_values": []
                    },
                    "strides": {
                        "value": "(2, 2)",
                        "possible_values": []
                    }
                },
                "GlobalAveragePooling2D_99": {
                    "variable": {
                        "value": "self.pool",
                        "possible_values": []
                    },
                    "params": {
                        "value": "default",
                        "possible_values": []
                    }
                },
                "Dense_100": {
                    "variable": {
                        "value": "self.fc",
                        "possible_values": []
                    },
                    "units": {
                        "value": "classes",
                        "possible_values": []
                    },
                    "activation": {
                        "value": "softmax",
                        "possible_values": []
                    }
                }
            },
            "Resnet_2_137": {
                "base_class_0": {
                    "value": "tensorflow.keras.Model",
                    "possible_values": []
                },
                "self.model_name": {
                    "value": "model_name",
                    "possible_values": [
                        [
                            "'resnet18'",
                            "MethodArgument"
                        ],
                        [
                            "'resnet50'",
                            "MethodArgument"
                        ]
                    ]
                },
                "Conv2D_142": {
                    "variable": {
                        "value": "self.conv1",
                        "possible_values": []
                    },
                    "filters": {
                        "value": "filters",
                        "possible_values": [
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ],
                            [
                                "64",
                                "MethodArgument"
                            ]
                        ]
                    },
                    "kernel_size": {
                        "value": "(7, 7)",
                        "possible_values": []
                    },
                    "strides": {
                        "value": "(2, 2)",
                        "possible_values": []
                    },
                    "activation": {
                        "value": "relu",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "same",
                        "possible_values": []
                    }
                },
                "MaxPool2D_143": {
                    "variable": {
                        "value": "self.pool1",
                        "possible_values": []
                    },
                    "pool_size": {
                        "value": "(3, 3)",
                        "possible_values": []
                    },
                    "strides": {
                        "value": "(2, 2)",
                        "possible_values": []
                    }
                },
                "GlobalAveragePooling2D_202": {
                    "variable": {
                        "value": "self.pool",
                        "possible_values": []
                    },
                    "params": {
                        "value": "default",
                        "possible_values": []
                    }
                },
                "Dense_203": {
                    "variable": {
                        "value": "self.fc",
                        "possible_values": []
                    },
                    "units": {
                        "value": "classes",
                        "possible_values": []
                    },
                    "activation": {
                        "value": "softmax",
                        "possible_values": []
                    }
                }
            },
            "relu_33": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "features": {
                    "value": "x",
                    "possible_values": [
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "conv(x)",
                            "Call"
                        ],
                        [
                            "x + inputs",
                            "BinOp"
                        ],
                        [
                            "tf.keras.activations.relu(x)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "conv(x)",
                            "Call"
                        ],
                        [
                            "x + inputs",
                            "BinOp"
                        ],
                        [
                            "tf.keras.activations.relu(x)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_2(x)",
                            "Call"
                        ],
                        [
                            "self.block1_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_1(x)",
                            "Call"
                        ],
                        [
                            "self.block2_2(x)",
                            "Call"
                        ],
                        [
                            "self.block2_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_4(x)",
                            "Call"
                        ],
                        [
                            "self.block3_1(x)",
                            "Call"
                        ],
                        [
                            "self.block3_2(x)",
                            "Call"
                        ],
                        [
                            "self.block3_3(x)",
                            "Call"
                        ],
                        [
                            "self.block3_4(x)",
                            "Call"
                        ],
                        [
                            "self.block3_5(x)",
                            "Call"
                        ],
                        [
                            "self.block3_6(x)",
                            "Call"
                        ],
                        [
                            "self.block4_1(x)",
                            "Call"
                        ],
                        [
                            "self.block4_2(x)",
                            "Call"
                        ],
                        [
                            "self.block4_3(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_2(x)",
                            "Call"
                        ],
                        [
                            "self.block1_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_1(x)",
                            "Call"
                        ],
                        [
                            "self.block2_2(x)",
                            "Call"
                        ],
                        [
                            "self.block2_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_4(x)",
                            "Call"
                        ],
                        [
                            "self.block2_5(x)",
                            "Call"
                        ],
                        [
                            "self.block2_6(x)",
                            "Call"
                        ],
                        [
                            "self.block2_7(x)",
                            "Call"
                        ],
                        [
                            "self.block2_8(x)",
                            "Call"
                        ],
                        [
                            "self.block3_1(x)",
                            "Call"
                        ],
                        [
                            "self.block3_2(x)",
                            "Call"
                        ],
                        [
                            "self.block3_3(x)",
                            "Call"
                        ],
                        [
                            "self.block3_4(x)",
                            "Call"
                        ],
                        [
                            "self.block3_5(x)",
                            "Call"
                        ],
                        [
                            "self.block3_6(x)",
                            "Call"
                        ],
                        [
                            "self.block3_7(x)",
                            "Call"
                        ],
                        [
                            "self.block3_8(x)",
                            "Call"
                        ],
                        [
                            "self.block3_9(x)",
                            "Call"
                        ],
                        [
                            "self.block3_10(x)",
                            "Call"
                        ],
                        [
                            "self.block3_11(x)",
                            "Call"
                        ],
                        [
                            "self.block3_12(x)",
                            "Call"
                        ],
                        [
                            "self.block3_13(x)",
                            "Call"
                        ],
                        [
                            "self.block3_14(x)",
                            "Call"
                        ],
                        [
                            "self.block3_15(x)",
                            "Call"
                        ],
                        [
                            "self.block3_16(x)",
                            "Call"
                        ],
                        [
                            "self.block3_17(x)",
                            "Call"
                        ],
                        [
                            "self.block3_18(x)",
                            "Call"
                        ],
                        [
                            "self.block3_19(x)",
                            "Call"
                        ],
                        [
                            "self.block3_20(x)",
                            "Call"
                        ],
                        [
                            "self.block3_21(x)",
                            "Call"
                        ],
                        [
                            "self.block3_22(x)",
                            "Call"
                        ],
                        [
                            "self.block3_23(x)",
                            "Call"
                        ],
                        [
                            "self.block4_1(x)",
                            "Call"
                        ],
                        [
                            "self.block4_2(x)",
                            "Call"
                        ],
                        [
                            "self.block4_3(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "self.block3_24(x)",
                            "Call"
                        ],
                        [
                            "self.block3_25(x)",
                            "Call"
                        ],
                        [
                            "self.block3_26(x)",
                            "Call"
                        ],
                        [
                            "self.block3_27(x)",
                            "Call"
                        ],
                        [
                            "self.block3_28(x)",
                            "Call"
                        ],
                        [
                            "self.block3_29(x)",
                            "Call"
                        ],
                        [
                            "self.block3_30(x)",
                            "Call"
                        ],
                        [
                            "self.block3_31(x)",
                            "Call"
                        ],
                        [
                            "self.block3_32(x)",
                            "Call"
                        ],
                        [
                            "self.block3_33(x)",
                            "Call"
                        ],
                        [
                            "self.block3_34(x)",
                            "Call"
                        ],
                        [
                            "self.block3_35(x)",
                            "Call"
                        ],
                        [
                            "self.block3_36(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_63": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "features": {
                    "value": "x",
                    "possible_values": [
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "conv(x)",
                            "Call"
                        ],
                        [
                            "x + inputs",
                            "BinOp"
                        ],
                        [
                            "tf.keras.activations.relu(x)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "conv(x)",
                            "Call"
                        ],
                        [
                            "x + inputs",
                            "BinOp"
                        ],
                        [
                            "tf.keras.activations.relu(x)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_2(x)",
                            "Call"
                        ],
                        [
                            "self.block1_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_1(x)",
                            "Call"
                        ],
                        [
                            "self.block2_2(x)",
                            "Call"
                        ],
                        [
                            "self.block2_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_4(x)",
                            "Call"
                        ],
                        [
                            "self.block3_1(x)",
                            "Call"
                        ],
                        [
                            "self.block3_2(x)",
                            "Call"
                        ],
                        [
                            "self.block3_3(x)",
                            "Call"
                        ],
                        [
                            "self.block3_4(x)",
                            "Call"
                        ],
                        [
                            "self.block3_5(x)",
                            "Call"
                        ],
                        [
                            "self.block3_6(x)",
                            "Call"
                        ],
                        [
                            "self.block4_1(x)",
                            "Call"
                        ],
                        [
                            "self.block4_2(x)",
                            "Call"
                        ],
                        [
                            "self.block4_3(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Name"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pool1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_1(x)",
                            "Call"
                        ],
                        [
                            "self.block1_2(x)",
                            "Call"
                        ],
                        [
                            "self.block1_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_1(x)",
                            "Call"
                        ],
                        [
                            "self.block2_2(x)",
                            "Call"
                        ],
                        [
                            "self.block2_3(x)",
                            "Call"
                        ],
                        [
                            "self.block2_4(x)",
                            "Call"
                        ],
                        [
                            "self.block2_5(x)",
                            "Call"
                        ],
                        [
                            "self.block2_6(x)",
                            "Call"
                        ],
                        [
                            "self.block2_7(x)",
                            "Call"
                        ],
                        [
                            "self.block2_8(x)",
                            "Call"
                        ],
                        [
                            "self.block3_1(x)",
                            "Call"
                        ],
                        [
                            "self.block3_2(x)",
                            "Call"
                        ],
                        [
                            "self.block3_3(x)",
                            "Call"
                        ],
                        [
                            "self.block3_4(x)",
                            "Call"
                        ],
                        [
                            "self.block3_5(x)",
                            "Call"
                        ],
                        [
                            "self.block3_6(x)",
                            "Call"
                        ],
                        [
                            "self.block3_7(x)",
                            "Call"
                        ],
                        [
                            "self.block3_8(x)",
                            "Call"
                        ],
                        [
                            "self.block3_9(x)",
                            "Call"
                        ],
                        [
                            "self.block3_10(x)",
                            "Call"
                        ],
                        [
                            "self.block3_11(x)",
                            "Call"
                        ],
                        [
                            "self.block3_12(x)",
                            "Call"
                        ],
                        [
                            "self.block3_13(x)",
                            "Call"
                        ],
                        [
                            "self.block3_14(x)",
                            "Call"
                        ],
                        [
                            "self.block3_15(x)",
                            "Call"
                        ],
                        [
                            "self.block3_16(x)",
                            "Call"
                        ],
                        [
                            "self.block3_17(x)",
                            "Call"
                        ],
                        [
                            "self.block3_18(x)",
                            "Call"
                        ],
                        [
                            "self.block3_19(x)",
                            "Call"
                        ],
                        [
                            "self.block3_20(x)",
                            "Call"
                        ],
                        [
                            "self.block3_21(x)",
                            "Call"
                        ],
                        [
                            "self.block3_22(x)",
                            "Call"
                        ],
                        [
                            "self.block3_23(x)",
                            "Call"
                        ],
                        [
                            "self.block4_1(x)",
                            "Call"
                        ],
                        [
                            "self.block4_2(x)",
                            "Call"
                        ],
                        [
                            "self.block4_3(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "self.block3_24(x)",
                            "Call"
                        ],
                        [
                            "self.block3_25(x)",
                            "Call"
                        ],
                        [
                            "self.block3_26(x)",
                            "Call"
                        ],
                        [
                            "self.block3_27(x)",
                            "Call"
                        ],
                        [
                            "self.block3_28(x)",
                            "Call"
                        ],
                        [
                            "self.block3_29(x)",
                            "Call"
                        ],
                        [
                            "self.block3_30(x)",
                            "Call"
                        ],
                        [
                            "self.block3_31(x)",
                            "Call"
                        ],
                        [
                            "self.block3_32(x)",
                            "Call"
                        ],
                        [
                            "self.block3_33(x)",
                            "Call"
                        ],
                        [
                            "self.block3_34(x)",
                            "Call"
                        ],
                        [
                            "self.block3_35(x)",
                            "Call"
                        ],
                        [
                            "self.block3_36(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2D_16": {
                "filters": {
                    "value": "filters",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "possible_values": []
                },
                "strides": {
                    "value": "strides",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "activation": {
                    "value": "relu",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "possible_values": []
                }
            },
            "Conv2D_20": {
                "filters": {
                    "value": "filters",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "possible_values": []
                }
            },
            "Conv2D_42": {
                "filters": {
                    "value": "filters",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 1)",
                    "possible_values": []
                },
                "strides": {
                    "value": "strides",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "activation": {
                    "value": "relu",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "possible_values": []
                }
            },
            "Conv2D_46": {
                "filters": {
                    "value": "filters",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "possible_values": []
                }
            },
            "Conv2D_50": {
                "filters": {
                    "value": "f",
                    "possible_values": [
                        [
                            "filters * 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 1)",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "tensorflow": {
            "set_seed_19": {
                "seed": {
                    "value": "7",
                    "possible_values": []
                }
            },
            "Adam_56": {
                "variable": {
                    "value": "optimizer",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "lr_rate",
                    "possible_values": [
                        [
                            "0.0001",
                            "Constant"
                        ]
                    ]
                }
            },
            "SparseCategoricalCrossentropy_59": {
                "variable": {
                    "value": "my_loss",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_62": {
                "variable": {
                    "value": "tr_loss",
                    "possible_values": []
                },
                "name": {
                    "value": "train_loss",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_63": {
                "variable": {
                    "value": "tr_accu",
                    "possible_values": []
                },
                "name": {
                    "value": "train_accu",
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_65": {
                "variable": {
                    "value": "va_loss",
                    "possible_values": []
                },
                "name": {
                    "value": "valid_loss",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_66": {
                "variable": {
                    "value": "va_accu",
                    "possible_values": []
                },
                "name": {
                    "value": "valid_accu",
                    "possible_values": []
                }
            },
            "Sequential_121": {
                "variable": {
                    "value": "my_model",
                    "possible_values": []
                },
                "layers": {
                    "value": "[model]",
                    "possible_values": []
                }
            },
            "GradientTape_71": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            }
        }
    }
}