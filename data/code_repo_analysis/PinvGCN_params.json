{
    "experiments/run-graph.py": {
        "torch": {
            "Adam_107": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.split_parameters(args.weight_decay)",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_79": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_81": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "experiments/run-hypergraph.py": {
        "torch": {
            "Adam_118": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.split_parameters(args.weight_decay)",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_81": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_83": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "experiments/run-pointcloud.py": {
        "torch": {
            "Adam_101": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.split_parameters(args.weight_decay)",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_74": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_76": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "experiments/run-sbm.py": {
        "torch": {
            "Adam_100": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.split_parameters(args.weight_decay)",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_74": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_76": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinvgcn/data.py": {
        "torch": {
            "as_tensor_9": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.as_tensor(w, dtype=torch.float).flatten()",
                            "Call"
                        ],
                        [
                            "w",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "flatten_9": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_10": {
                "variable": {
                    "value": "U",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "U",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.as_tensor(U, dtype=torch.float)",
                            "Call"
                        ],
                        [
                            "U",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sort_23": {
                "variable": {
                    "value": "(data.nonzero_w, ind)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "data.nonzero_w",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_38": {
                "variable": {
                    "value": "data.train_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "bool",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.y.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "load_88": {
                "variable": {
                    "value": "(self.data, self.slices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "self.processed_paths[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_57": {
                "variable": {
                    "value": "data.val_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "bool",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "save_100": {
                "obj": {
                    "value": "self.collate([data])",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.processed_paths[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_73": {
                "variable": {
                    "value": "data.val_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "bool",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "pinvgcn/external.py": {
        "torch": {
            "tensor_54": {
                "data": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "matdata['x']",
                            "Subscript"
                        ],
                        [
                            "load_from_matlab(dataset, filename, max_num_ev)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_55": {
                "data": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "matdata['y'].flatten() - 1",
                            "BinOp"
                        ],
                        [
                            "load_from_matlab(dataset, filename, max_num_ev)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "pinvgcn/graphs.py": {
        "torch": {
            "tensor_129": {
                "variable": {
                    "value": "self.edge_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "np.array(edges).T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.y.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_103": {
                "data": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.hstack([i * np.ones(b, dtype=int) for i in range(c)])",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_104": {
                "data": {
                    "value": "train_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros(c * b, dtype=bool)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_105": {
                "data": {
                    "value": "~train_mask",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_158": {
                "variable": {
                    "value": "val",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "edge_index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.edge_index.cpu().numpy()",
                            "Call"
                        ],
                        [
                            "node_indices[edge_index[:, edge_mask]]",
                            "Subscript"
                        ],
                        [
                            "edge_index[:, np.argsort(edge_index[0])]",
                            "Subscript"
                        ],
                        [
                            "edge_index",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "pinvgcn/hypergraphs.py": {
        "torch": {
            "tensor_240": {
                "variable": {
                    "value": "train_index_sets",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[load('split{}'.format(i))['train'] for i in range(1, 11)]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_254": {
                "variable": {
                    "value": "data.hyperedge_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_hyperedges",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.hyperedge_index[0].max().item() + 1",
                            "BinOp"
                        ],
                        [
                            "num_hyperedges + 1",
                            "BinOp"
                        ],
                        [
                            "len(hyperedge_dict)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_264": {
                "variable": {
                    "value": "data.hyperedge_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "parts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[data.hyperedge_index]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_267": {
                "variable": {
                    "value": "data.hyperedge_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(data.hyperedge_weight, weight * torch.ones(num_hyperedges - len(data.hyperedge_weight), dtype=torch.float))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "nonzero_257": {
                "input": {
                    "value": "data.x[:, i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "as_tuple": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "as_tensor_78": {
                "data": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_79": {
                "data": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_259": {
                "tensors": {
                    "value": "(torch.tensor([[num_hyperedges] * len(node_indices)], dtype=torch.long), node_indices.reshape(1, -1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_81": {
                "data": {
                    "value": "hyperedge_index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.hstack([np.vstack(([e] * len(nodes), list(nodes))) for (e, nodes) in enumerate(hyperedge_dict.values())])",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_83": {
                "data": {
                    "value": "hyperedge_weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.ones(num_hyperedges)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_84": {
                "data": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "values",
                            "variable"
                        ]
                    ]
                }
            },
            "tensor_259": {
                "data": {
                    "value": "[[num_hyperedges] * len(node_indices)]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_268": {
                "*size": {
                    "value": "num_hyperedges - len(data.hyperedge_weight)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "pinvgcn/model.py": {
        "torch": {
            "ReLU_187": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ModuleList_199": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Parameter_88": {
                "variable": {
                    "value": "W",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(in_channels, out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_93": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_tensor_146": {
                "obj": {
                    "value": "zero_part",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "zero_part + (alpha - data.eigengap * gamma) * (data.zero_U.T @ Y)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "is_tensor_148": {
                "obj": {
                    "value": "nonzero_part",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "nonzero_part + (beta / data.nonzero_w[:, np.newaxis] - gamma) * data.eigengap * (data.nonzero_U.T @ Y)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "cross_entropy_283": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self(data, input)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.y[data.train_mask]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Dropout_186": {
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "eye_59": {
                "n": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "data.num_nodes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "data.nonzero_w.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "pinvgcn/pointclouds.py": {
        "torch": {
            "tensor_123": {
                "data": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "table[:, :3]",
                            "Subscript"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_124": {
                "data": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.unique(table[:, 3], return_inverse=True)[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "pinvgcn/seeds.py": {
        "torch": {
            "manual_seed_38": {
                "seed": {
                    "value": "seeds[index]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}