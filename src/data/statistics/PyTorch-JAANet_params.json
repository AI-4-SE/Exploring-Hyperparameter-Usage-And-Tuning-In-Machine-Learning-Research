{
    "util.py": {
        "sklearn": {
            "f1_score_79": {
                "variable": {
                    "value": "f1score_arr[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "new_curr_actual",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "new_curr_pred",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "accuracy_score_80": {
                "variable": {
                    "value": "acc_arr[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "new_curr_actual",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "new_curr_pred",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "f1_score_178": {
                "variable": {
                    "value": "f1score_arr[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "new_curr_actual",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "new_curr_pred",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "accuracy_score_179": {
                "variable": {
                    "value": "acc_arr[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "new_curr_actual",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "new_curr_pred",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "f1_score_180": {
                "variable": {
                    "value": "local_f1score_arr[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "new_curr_actual",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "local_new_curr_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "local_curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "accuracy_score_181": {
                "variable": {
                    "value": "local_acc_arr[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "new_curr_actual",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ],
                        [
                            "curr_actual[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "local_new_curr_pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "local_curr_pred[curr_actual != missing_label]",
                            "Subscript"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "sum_273": {
                "variable": {
                    "value": "A_sum",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "iflat * iflat",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_274": {
                "variable": {
                    "value": "B_sum",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tflat * tflat",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "NLLLoss_280": {
                "variable": {
                    "value": "classify_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "size_average",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "reduce": {
                    "value": "reduce",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BCELoss_343": {
                "variable": {
                    "value": "classify_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "size_average",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "reduce": {
                    "value": "reduce",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_42": {
                "variable": {
                    "value": "concat_au_feat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(align_feat, global_au_out_feat, local_au_out_feat)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_128": {
                "variable": {
                    "value": "concat_au_feat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(align_feat, global_au_out_feat, local_au_out_feat.detach())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_288": {
                "variable": {
                    "value": "t_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t_loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "dice_loss(t_input, t_target, smooth)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "torch.sum((t_input - t_target) ** 2) / (2.0 * biocular[i])",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_310": {
                "variable": {
                    "value": "t_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t_loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "dice_loss(t_input, t_target, smooth)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "torch.sum((t_input - t_target) ** 2) / (2.0 * biocular[i])",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_327": {
                "variable": {
                    "value": "t_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t_loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "dice_loss(t_input, t_target, smooth)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "torch.sum((t_input - t_target) ** 2) / (2.0 * biocular[i])",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_351": {
                "variable": {
                    "value": "t_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t_loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "dice_loss(t_input, t_target, smooth)",
                            "Call"
                        ],
                        [
                            "t_loss * weight[i]",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "torch.sum((t_input - t_target) ** 2) / (2.0 * biocular[i])",
                            "BinOp"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ],
                        [
                            "classify_loss(t_input, t_target)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(t_loss, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_52": {
                "variable": {
                    "value": "all_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_output, aus_output.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_53": {
                "variable": {
                    "value": "all_au",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_au, au.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "all_pred_land",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_pred_land, align_output.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_55": {
                "variable": {
                    "value": "all_land",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_land, land.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_139": {
                "variable": {
                    "value": "all_local_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_local_output, local_aus_output.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_140": {
                "variable": {
                    "value": "all_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_output, aus_output.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_141": {
                "variable": {
                    "value": "all_au",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_au, au.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_142": {
                "variable": {
                    "value": "all_pred_land",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_pred_land, align_output.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_143": {
                "variable": {
                    "value": "all_land",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_land, land.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_232": {
                "variable": {
                    "value": "all_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_input, input.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_233": {
                "variable": {
                    "value": "all_spatial_attention",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_spatial_attention, spatial_attention.data.cpu().float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_292": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(loss, t_loss)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_314": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(loss, t_loss)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_331": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(loss, t_loss)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_355": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(loss, t_loss)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_326": {
                "input": {
                    "value": "(t_input - t_target) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "network.py": {
        "torch": {
            "ModuleList_15": {
                "variable": {
                    "value": "self.bns",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.BatchNorm2d(in_channels) for i in range(local_h_num * local_w_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_22": {
                "variable": {
                    "value": "self.convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Conv2d(in_channels, out_channels, kernel_size, stride, padding, dilation, groups, bias) for i in range(local_h_num * local_w_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "split_26": {
                "variable": {
                    "value": "h_splits",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "int(x.size(2) / self.local_h_num)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_77": {
                "variable": {
                    "value": "local_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(local_branch1, local_branch2, local_branch3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_90": {
                "variable": {
                    "value": "self.feat_extract",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(input_dim, unit_dim * 12, kernel_size=3, stride=1, padding=1, bias=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_125": {
                "variable": {
                    "value": "self.multiscale_feat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "HierarchicalMultiScaleRegionLayer([[8, 8], [4, 4], [2, 2]], input_dim, unit_dim * 4, kernel_size=3, stride=1, padding=1, activation_type='ReLU')",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_178": {
                "variable": {
                    "value": "self.align_output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(4000, unit_dim * 64)",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_194": {
                "variable": {
                    "value": "aus_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(align_output.size(0), self.au_num, self.map_size + 8, self.map_size + 8)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ModuleList_278": {
                "variable": {
                    "value": "self.local_aus_attention",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Sequential(nn.Conv2d(1, unit_dim * 8, kernel_size=3, stride=1, bias=True), nn.BatchNorm2d(unit_dim * 8), nn.ReLU(inplace=True), nn.Conv2d(unit_dim * 8, unit_dim * 8, kernel_size=3, stride=1, bias=True), nn.BatchNorm2d(unit_dim * 8), nn.ReLU(inplace=True), nn.Conv2d(unit_dim * 8, unit_dim * 8, kernel_size=3, stride=1, bias=True), nn.BatchNorm2d(unit_dim * 8), nn.ReLU(inplace=True), nn.Conv2d(unit_dim * 8, 1, kernel_size=3, stride=1, bias=True), nn.Sigmoid()) for i in range(au_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_313": {
                "variable": {
                    "value": "self.local_aus_branch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[HLFeatExtractor(input_dim=input_dim, unit_dim=unit_dim) for i in range(au_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_335": {
                "variable": {
                    "value": "self.local_aus_branch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[HLFeatExtractor(input_dim=input_dim, unit_dim=unit_dim) for i in range(au_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_337": {
                "variable": {
                    "value": "self.local_aus_output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Sequential(nn.Linear(4000, unit_dim * 8), nn.Linear(unit_dim * 8, 2)) for i in range(au_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Sequential_369": {
                "variable": {
                    "value": "self.au_output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(input_dim, unit_dim * 64)",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_softmax_378": {
                "variable": {
                    "value": "au_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "au_output",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.local_aus_output[i](reshape_output_au_feat)",
                            "Call"
                        ],
                        [
                            "au_output.view(au_output.size(0), 2, int(au_output.size(1) / 2))",
                            "Call"
                        ],
                        [
                            "F.log_softmax(au_output, dim=1)",
                            "Call"
                        ],
                        [
                            "self.au_output(x)",
                            "Call"
                        ],
                        [
                            "au_output.view(au_output.size(0), 2, int(au_output.size(1) / 2))",
                            "Call"
                        ],
                        [
                            "F.log_softmax(au_output, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_18": {
                "variable": {
                    "value": "self.relus",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.ReLU(inplace=True) for i in range(local_h_num * local_w_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "split_31": {
                "variable": {
                    "value": "w_splits",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "h_splits[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "int(h_splits[i].size(3) / self.local_w_num)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_68": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_softmax_352": {
                "variable": {
                    "value": "au_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "au_output",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.local_aus_output[i](reshape_output_au_feat)",
                            "Call"
                        ],
                        [
                            "au_output.view(au_output.size(0), 2, int(au_output.size(1) / 2))",
                            "Call"
                        ],
                        [
                            "F.log_softmax(au_output, dim=1)",
                            "Call"
                        ],
                        [
                            "self.au_output(x)",
                            "Call"
                        ],
                        [
                            "au_output.view(au_output.size(0), 2, int(au_output.size(1) / 2))",
                            "Call"
                        ],
                        [
                            "F.log_softmax(au_output, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_20": {
                "variable": {
                    "value": "self.relus",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.PReLU() for i in range(local_h_num * local_w_num)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_44": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out, h_out[i])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_70": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_91": {
                "in_channels": {
                    "value": "input_dim",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "12000",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "unit_dim * 12",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_92": {
                "num_features": {
                    "value": "unit_dim * 12",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_93": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_94": {
                "in_channels": {
                    "value": "unit_dim * 12",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 12",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_95": {
                "num_features": {
                    "value": "unit_dim * 12",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_96": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_97": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_99": {
                "in_channels": {
                    "value": "unit_dim * 12",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_100": {
                "num_features": {
                    "value": "unit_dim * 16",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_101": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_102": {
                "in_channels": {
                    "value": "unit_dim * 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_103": {
                "num_features": {
                    "value": "unit_dim * 16",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_104": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_105": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "in_channels": {
                    "value": "unit_dim * 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 20",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_108": {
                "num_features": {
                    "value": "unit_dim * 20",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_109": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_110": {
                "in_channels": {
                    "value": "unit_dim * 20",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 20",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_111": {
                "num_features": {
                    "value": "unit_dim * 20",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_112": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_113": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_129": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_134": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_179": {
                "in_features": {
                    "value": "4000",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "unit_dim * 64",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_180": {
                "in_features": {
                    "value": "unit_dim * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "land_num * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_304": {
                "variable": {
                    "value": "aus_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aus_map, au_map)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_359": {
                "variable": {
                    "value": "aus_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(aus_output, au_output)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_370": {
                "in_features": {
                    "value": "input_dim",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "12000",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "unit_dim * 64",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_371": {
                "in_features": {
                    "value": "unit_dim * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "au_num * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_15": {
                "num_features": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_40": {
                "variable": {
                    "value": "h_out[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(h_out[i], conv_out)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_279": {
                "*args": {
                    "value": "nn.Conv2d(1, unit_dim * 8, kernel_size=3, stride=1, bias=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_338": {
                "*args": {
                    "value": "nn.Linear(4000, unit_dim * 8)",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_280": {
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_281": {
                "num_features": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_282": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_284": {
                "in_channels": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_285": {
                "num_features": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_286": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_288": {
                "in_channels": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_289": {
                "num_features": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_290": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_292": {
                "in_channels": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sigmoid_293": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_339": {
                "in_features": {
                    "value": "4000",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_340": {
                "in_features": {
                    "value": "unit_dim * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "test_JAAv1.py": {
        "torch": {
            "DataLoader_28": {
                "variable": {
                    "value": "dset_loaders[test]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['test']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "test_JAAv2.py": {
        "torch": {
            "DataLoader_28": {
                "variable": {
                    "value": "dset_loaders[test]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['test']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "train_JAAv1.py": {
        "torch": {
            "DataLoader_36": {
                "variable": {
                    "value": "dset_loaders[train]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['train']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.train_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_46": {
                "variable": {
                    "value": "dset_loaders[test]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['test']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "interpolate_211": {
                "variable": {
                    "value": "resize_aus_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "aus_map",
                    "type": "Name",
                    "possible_values": [
                        [
                            "aus_map.cuda()",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "output_aus_map.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "train_JAAv1_disfa.py": {
        "torch": {
            "DataLoader_36": {
                "variable": {
                    "value": "dset_loaders[train]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['train']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.train_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_46": {
                "variable": {
                    "value": "dset_loaders[test]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['test']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "interpolate_243": {
                "variable": {
                    "value": "resize_aus_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "aus_map",
                    "type": "Name",
                    "possible_values": [
                        [
                            "aus_map.cuda()",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "output_aus_map.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "train_JAAv2.py": {
        "torch": {
            "DataLoader_35": {
                "variable": {
                    "value": "dset_loaders[train]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['train']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.train_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_45": {
                "variable": {
                    "value": "dset_loaders[test]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['test']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "train_JAAv2_disfa.py": {
        "torch": {
            "DataLoader_35": {
                "variable": {
                    "value": "dset_loaders[train]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['train']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.train_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_45": {
                "variable": {
                    "value": "dset_loaders[test]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dsets['test']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}