{
    "nn_speech_models.py": {
        "sklearn": {},
        "torch": {
            "DataLoader_247": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "drop_last",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_120": {
                "variable": {
                    "value": "feature_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "feature_seq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feature_repr[start_idx:end_idx, :num_frames]",
                            "Subscript"
                        ],
                        [
                            "feature_repr[start_idx:end_idx, sample_beg:sample_end]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_123": {
                "variable": {
                    "value": "padded_feature_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "feature_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.feature_dim",
                            "Attribute"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "14",
                            "Method Argument"
                        ],
                        [
                            "14",
                            "Method Argument"
                        ],
                        [
                            "14",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "max_num_frames",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.max_num_frames",
                            "Attribute"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_418": {
                "variable": {
                    "value": "self.ConvLayer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=self.feature_dim, out_channels=num_channels[0], kernel_size=filter_sizes[0], stride=stride_steps[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_428": {
                "variable": {
                    "value": "self.ConvLayer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=num_channels[0], out_channels=num_channels[1], kernel_size=filter_sizes[1], stride=stride_steps[1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_438": {
                "variable": {
                    "value": "self.ConvLayer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=num_channels[1], out_channels=num_channels[2], kernel_size=filter_sizes[2], stride=stride_steps[2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_456": {
                "variable": {
                    "value": "self.language_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_635": {
                "variable": {
                    "value": "self.ConvLayer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=self.feature_dim, out_channels=num_channels[0], kernel_size=filter_sizes[0], stride=stride_steps[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_645": {
                "variable": {
                    "value": "self.ConvLayer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=num_channels[0], out_channels=num_channels[1], kernel_size=filter_sizes[1], stride=stride_steps[1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_655": {
                "variable": {
                    "value": "self.ConvLayer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=num_channels[1], out_channels=num_channels[2], kernel_size=filter_sizes[2], stride=stride_steps[2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_673": {
                "variable": {
                    "value": "self.language_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_688": {
                "variable": {
                    "value": "self.domain_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(num_channels[2], 1024)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_835": {
                "variable": {
                    "value": "self.ConvLayer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=self.feature_dim, out_channels=num_channels[0], kernel_size=filter_sizes[0], stride=stride_steps[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_845": {
                "variable": {
                    "value": "self.ConvLayer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=num_channels[0], out_channels=num_channels[1], kernel_size=filter_sizes[1], stride=stride_steps[1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_855": {
                "variable": {
                    "value": "self.ConvLayer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv1d(in_channels=num_channels[1], out_channels=num_channels[2], kernel_size=filter_sizes[2], stride=stride_steps[2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_873": {
                "variable": {
                    "value": "self.fc_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_881": {
                "variable": {
                    "value": "self.language_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_892": {
                "variable": {
                    "value": "self.domain_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(num_channels[2], 1024)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MaxPool1d_451": {
                "variable": {
                    "value": "self.PoolLayer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "362",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_542": {
                "variable": {
                    "value": "y_hat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_hat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ],
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ],
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool1d_668": {
                "variable": {
                    "value": "self.PoolLayer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "362",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_760": {
                "variable": {
                    "value": "y_hat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_hat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ],
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ],
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool1d_868": {
                "variable": {
                    "value": "self.PoolLayer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "362",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_972": {
                "variable": {
                    "value": "y_hat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_hat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ],
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ],
                        [
                            "self.language_classifier(f)",
                            "Call"
                        ],
                        [
                            "torch.softmax(y_hat, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1d_419": {
                "in_channels": {
                    "value": "self.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_423": {
                "num_features": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_424": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_429": {
                "in_channels": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_433": {
                "num_features": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_434": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_439": {
                "in_channels": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_443": {
                "num_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_444": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_480": {
                "in_features": {
                    "value": "self.output_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "Method Argument"
                        ],
                        [
                            "6",
                            "Method Argument"
                        ],
                        [
                            "6",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv1d_636": {
                "in_channels": {
                    "value": "self.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_640": {
                "num_features": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_641": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_646": {
                "in_channels": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_650": {
                "num_features": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_651": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_656": {
                "in_channels": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_660": {
                "num_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_661": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_676": {
                "in_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.bottleneck_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_677": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_681": {
                "in_features": {
                    "value": "self.bottleneck_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.output_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_682": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_686": {
                "in_features": {
                    "value": "self.output_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "Method Argument"
                        ],
                        [
                            "6",
                            "Method Argument"
                        ],
                        [
                            "6",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_689": {
                "in_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_690": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_691": {
                "in_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_692": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_693": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1d_836": {
                "in_channels": {
                    "value": "self.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_840": {
                "num_features": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_841": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_846": {
                "in_channels": {
                    "value": "num_channels[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_850": {
                "num_features": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_851": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_856": {
                "in_channels": {
                    "value": "num_channels[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ],
                        [
                            "[128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_sizes[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ],
                        [
                            "[5",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride_steps[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ],
                        [
                            "[1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_860": {
                "num_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_861": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_876": {
                "in_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.bottleneck_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_877": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_884": {
                "in_features": {
                    "value": "self.bottleneck_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.output_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_885": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_890": {
                "in_features": {
                    "value": "self.output_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "Method Argument"
                        ],
                        [
                            "6",
                            "Method Argument"
                        ],
                        [
                            "6",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_893": {
                "in_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_894": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_896": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_897": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_899": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_461": {
                "in_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.bottleneck_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_462": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_466": {
                "in_features": {
                    "value": "self.bottleneck_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.output_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_467": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_475": {
                "in_features": {
                    "value": "num_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.output_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_476": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_276": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_299": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "nn_train.py": {
        "sklearn": {
            "balanced_accuracy_score_494": {
                "y_true": {
                    "value": "y_src_true",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_src_pred",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "balanced_accuracy_score_495": {
                "y_true": {
                    "value": "y_tgt_true",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_tgt_pred",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "device_163": {
                "variable": {
                    "value": "config_args[device]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if config_args[cuda] else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_262": {
                "variable": {
                    "value": "loss_func_cls",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_263": {
                "variable": {
                    "value": "loss_func_dmn",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_265": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "nn_LID_model_DA.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config_args['training_hyperparams']['learning_rate']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "yaml.safe_load(open(config_file_pah))",
                            "Call"
                        ]
                    ]
                }
            },
            "ReduceLROnPlateau_267": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.Adam(nn_LID_model_DA.parameters(), lr=config_args['training_hyperparams']['learning_rate'])",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eq_94": {
                "variable": {
                    "value": "n_correct",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_pred_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(torch.sigmoid(y_pred) > 0.5).cpu().long()",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "y_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_target.cpu().long()",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_94": {
                "variable": {
                    "value": "n_correct",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "eq_101": {
                "variable": {
                    "value": "n_correct",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_pred_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(torch.sigmoid(y_pred) > 0.5).cpu().long()",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "y_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_target.cpu().long()",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_101": {
                "variable": {
                    "value": "n_correct",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_59": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "train_state['model_filename'] + str(train_state['epoch_index'] + 1) + '.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "manual_seed_118": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_available_160": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_120": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_339": {
                "variable": {
                    "value": "src_dmn_trues",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config_args['training_hyperparams']['batch_size']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "config_args['device']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "yaml.safe_load(open(config_file_pah))",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_349": {
                "variable": {
                    "value": "tgt_dmn_trues",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config_args['training_hyperparams']['batch_size']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "config_args['device']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "yaml.safe_load(open(config_file_pah))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_438": {
                "variable": {
                    "value": "src_dmn_trues",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config_args['training_hyperparams']['batch_size']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "config_args['device']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "yaml.safe_load(open(config_file_pah))",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_446": {
                "variable": {
                    "value": "tgt_dmn_trues",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config_args['training_hyperparams']['batch_size']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "config_args['device']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "yaml.safe_load(open(config_file_pah))",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_100": {
                "input": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "transform_wav_to_features.py": {
        "sklearn": {
            "scale_64": {
                "variable": {
                    "value": "feat_norm",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "feat_seq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "librosa.feature.mfcc(raw_signal, sampling_rate, n_fft=400, hop_length=160, n_mfcc=13, fmin=75, fmax=5999)",
                            "Call"
                        ],
                        [
                            "librosa.feature.melspectrogram(raw_signal, sampling_rate, n_fft=400, hop_length=160, n_mels=13, fmin=75, fmax=5999)",
                            "Call"
                        ],
                        [
                            "np.where(feat_seq == 0, np.finfo(float).eps, feat_seq)",
                            "Call"
                        ],
                        [
                            "20 * np.log10(feat_seq)",
                            "BinOp"
                        ],
                        [
                            "extract_features(args.path_to_raw_dir + uttr.file, args.feature_type)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}