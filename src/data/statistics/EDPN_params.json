{
    "deblur_SR/datasets/REDS4DeblurSR.py": {
        "torch": {}
    },
    "deblur_SR/inference.py": {
        "torch": {
            "load_86": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.SRcheckpoint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "map_location",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lambda storage, loc: storage",
                            "Lambda"
                        ]
                    ]
                }
            },
            "unsqueeze_113": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(lrfilepath).convert('RGB')",
                            "Call"
                        ],
                        [
                            "transform()(inputs)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(inputs, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1)), 1)",
                            "Call"
                        ],
                        [
                            "inputs.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_114": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clamp_121": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "modelDeSR(inputs)",
                            "Call"
                        ],
                        [
                            "torch.clamp(out, 0.0, 1.0).cpu()",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "empty_cache_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_114": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(lrfilepath).convert('RGB')",
                            "Call"
                        ],
                        [
                            "transform()(inputs)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(inputs, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1)), 1)",
                            "Call"
                        ],
                        [
                            "inputs.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_SR/inferenceTools.py": {
        "torch": {
            "cat_66": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(inputs[0], 0), torch.unsqueeze(inputs[1], 0), torch.unsqueeze(inputs[2], 0), torch.unsqueeze(inputs[3], 0), torch.unsqueeze(inputs[4], 0), torch.unsqueeze(inputs[5], 0), torch.unsqueeze(inputs[6], 0))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(targets[0], 0), torch.unsqueeze(targets[1], 0), torch.unsqueeze(targets[2], 0), torch.unsqueeze(targets[3], 0), torch.unsqueeze(targets[4], 0), torch.unsqueeze(targets[5], 0), torch.unsqueeze(targets[6], 0))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "unsqueeze_75": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[get_image(os.path.join(LrDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ],
                        [
                            "[transform()(j) for j in inputs]",
                            "ListComp"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(inputs[0], 0), torch.unsqueeze(inputs[1], 0), torch.unsqueeze(inputs[2], 0), torch.unsqueeze(inputs[3], 0), torch.unsqueeze(inputs[4], 0), torch.unsqueeze(inputs[5], 0), torch.unsqueeze(inputs[6], 0)))",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(inputs, 0)",
                            "Call"
                        ],
                        [
                            "[get_image(os.path.join(LrDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ],
                        [
                            "images[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_76": {
                "variable": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[get_image(os.path.join(GtDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ],
                        [
                            "[transform()(i) for i in targets]",
                            "ListComp"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(targets[0], 0), torch.unsqueeze(targets[1], 0), torch.unsqueeze(targets[2], 0), torch.unsqueeze(targets[3], 0), torch.unsqueeze(targets[4], 0), torch.unsqueeze(targets[5], 0), torch.unsqueeze(targets[6], 0)))",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(targets, 0)",
                            "Call"
                        ],
                        [
                            "[get_image(os.path.join(GtDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_148": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_157": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_166": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_175": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_184": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_202": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_66": {
                "input": {
                    "value": "inputs[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_67": {
                "input": {
                    "value": "inputs[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_68": {
                "input": {
                    "value": "inputs[5]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_69": {
                "input": {
                    "value": "inputs[6]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_71": {
                "input": {
                    "value": "targets[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_72": {
                "input": {
                    "value": "targets[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_73": {
                "input": {
                    "value": "targets[5]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_74": {
                "input": {
                    "value": "targets[6]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_148": {
                "input": {
                    "value": "LR1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 0, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_149": {
                "input": {
                    "value": "LR3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 2, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_150": {
                "input": {
                    "value": "LR4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 3, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_157": {
                "input": {
                    "value": "LR1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 0, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_158": {
                "input": {
                    "value": "LR4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 3, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_159": {
                "input": {
                    "value": "LR5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 4, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_166": {
                "input": {
                    "value": "LR2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 1, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_167": {
                "input": {
                    "value": "LR5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 4, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_168": {
                "input": {
                    "value": "LR6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 5, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_175": {
                "input": {
                    "value": "LR3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 2, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_176": {
                "input": {
                    "value": "LR6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 5, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_177": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_184": {
                "input": {
                    "value": "LR4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 3, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_185": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_186": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_193": {
                "input": {
                    "value": "LR5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 4, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_194": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_195": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_202": {
                "input": {
                    "value": "LR6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 5, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_203": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_204": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_SR/models/EDPN.py": {
        "torch": {
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv_base",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv_ref",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.offset_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "variable": {
                    "value": "self.offset_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "variable": {
                    "value": "self.dcn_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Softmax_39": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "variable": {
                    "value": "self.out_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.out_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_44": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_51": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[feat_base, feat_ref]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_62": {
                "variable": {
                    "value": "feat_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[feat_base, feat_add]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.SPA_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*SPA_blocks",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_81": {
                "variable": {
                    "value": "self.out_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "variable": {
                    "value": "self.out_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_84": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_92": {
                "variable": {
                    "value": "feat_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_base, feat_enhance]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_106": {
                "variable": {
                    "value": "self.L3_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_109": {
                "variable": {
                    "value": "self.L2_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_112": {
                "variable": {
                    "value": "self.L1_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_114": {
                "variable": {
                    "value": "self.L2_conv_up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_115": {
                "variable": {
                    "value": "self.L2_conv_up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "variable": {
                    "value": "self.L1_conv_up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.L1_conv_up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.out_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_121": {
                "variable": {
                    "value": "self.out_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_123": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_139": {
                "variable": {
                    "value": "L3_fea_up",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "L3_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.L3_conv(self.L3_spa(L3_feat_base, L3_feat_ref)))",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_143": {
                "variable": {
                    "value": "L2_fea_up",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "L2_cat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.L2_conv_up1(torch.cat([L2_feat, L3_fea_up], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.L2_conv_up2(L2_cat))",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_162": {
                "variable": {
                    "value": "self.tAtt_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_163": {
                "variable": {
                    "value": "self.tAtt_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_166": {
                "variable": {
                    "value": "self.fea_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nframes * nf",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_169": {
                "variable": {
                    "value": "self.sAtt_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nframes * nf",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_170": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_171": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_172": {
                "variable": {
                    "value": "self.sAtt_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_173": {
                "variable": {
                    "value": "self.sAtt_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_174": {
                "variable": {
                    "value": "self.sAtt_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_175": {
                "variable": {
                    "value": "self.sAtt_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_176": {
                "variable": {
                    "value": "self.sAtt_L1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_177": {
                "variable": {
                    "value": "self.sAtt_L2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_178": {
                "variable": {
                    "value": "self.sAtt_L3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_179": {
                "variable": {
                    "value": "self.sAtt_add_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_180": {
                "variable": {
                    "value": "self.sAtt_add_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_182": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_195": {
                "variable": {
                    "value": "cor_prob",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat(cor_l, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "interpolate_214": {
                "variable": {
                    "value": "att_L",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_L",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.sAtt_L1(att))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_L2(torch.cat([att_max, att_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_L3(att_L))",
                            "Call"
                        ],
                        [
                            "F.interpolate(att_L, scale_factor=2, mode='bilinear', align_corners=False)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_219": {
                "variable": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.sAtt_1(aligned_fea))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_2(torch.cat([att_max, att_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_3(att))",
                            "Call"
                        ],
                        [
                            "att + att_L",
                            "BinOp"
                        ],
                        [
                            "self.lrelu(self.sAtt_4(att))",
                            "Call"
                        ],
                        [
                            "F.interpolate(att, scale_factor=2, mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "self.sAtt_5(att)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(att)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_222": {
                "variable": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.sAtt_1(aligned_fea))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_2(torch.cat([att_max, att_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_3(att))",
                            "Call"
                        ],
                        [
                            "att + att_L",
                            "BinOp"
                        ],
                        [
                            "self.lrelu(self.sAtt_4(att))",
                            "Call"
                        ],
                        [
                            "F.interpolate(att, scale_factor=2, mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "self.sAtt_5(att)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(att)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_234": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_257": {
                "variable": {
                    "value": "self.temporal_attn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_258": {
                "variable": {
                    "value": "self.temporal_attn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_259": {
                "variable": {
                    "value": "self.feat_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame * num_feat",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_262": {
                "variable": {
                    "value": "self.conv3D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_frame",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_263": {
                "variable": {
                    "value": "self.conv3D_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame * num_feat",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_266": {
                "variable": {
                    "value": "self.max_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_267": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_268": {
                "variable": {
                    "value": "self.spatial_attn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame * num_feat",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_269": {
                "variable": {
                    "value": "self.spatial_attn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_270": {
                "variable": {
                    "value": "self.spatial_attn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_271": {
                "variable": {
                    "value": "self.spatial_attn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_272": {
                "variable": {
                    "value": "self.spatial_attn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_273": {
                "variable": {
                    "value": "self.spatial_attn_l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_274": {
                "variable": {
                    "value": "self.spatial_attn_l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_275": {
                "variable": {
                    "value": "self.spatial_attn_l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_276": {
                "variable": {
                    "value": "self.spatial_attn_add1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_277": {
                "variable": {
                    "value": "self.spatial_attn_add2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_279": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_280": {
                "variable": {
                    "value": "self.upsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_302": {
                "variable": {
                    "value": "corr_prob",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat(corr_l, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_336": {
                "variable": {
                    "value": "attn",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.spatial_attn1(aligned_feat))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.spatial_attn2(torch.cat([attn_max, attn_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.spatial_attn3(attn)) + attn_level",
                            "BinOp"
                        ],
                        [
                            "self.lrelu(self.spatial_attn4(attn))",
                            "Call"
                        ],
                        [
                            "self.upsample(attn)",
                            "Call"
                        ],
                        [
                            "self.spatial_attn5(attn)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(attn)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_358": {
                "variable": {
                    "value": "self.conv_first",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_364": {
                "variable": {
                    "value": "self.fea_L2_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_365": {
                "variable": {
                    "value": "self.fea_L2_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_366": {
                "variable": {
                    "value": "self.fea_L3_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_367": {
                "variable": {
                    "value": "self.fea_L3_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_392": {
                "variable": {
                    "value": "self.HRconv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_393": {
                "variable": {
                    "value": "self.upscale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 64 * upscale_factor ** 2, 1, 1, 0, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LeakyReLU_398": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "stack_437": {
                "variable": {
                    "value": "aligned_fea",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "aligned_fea",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aligned_fea.view(B, -1, H, W) * cor_prob",
                            "BinOp"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(aligned_fea, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_462": {
                "variable": {
                    "value": "x_center",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_center",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x[:, self.center, :, :, :].contiguous()",
                            "Call"
                        ],
                        [
                            "F.interpolate(x_center, scale_factor=4, mode='bicubic', align_corners=False)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bicubic",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_193": {
                "variable": {
                    "value": "cor_tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "emb_nbr * emb_ref",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_193": {
                "variable": {
                    "value": "cor_tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_300": {
                "variable": {
                    "value": "corr",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "emb_neighbor * embedding_ref",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_195": {
                "tensors": {
                    "value": "cor_l",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_302": {
                "tensors": {
                    "value": "corr_l",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_394": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * upscale_factor ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "PixelShuffle_395": {
                "upscale_factor": {
                    "value": "upscale_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "int"
                        ]
                    ]
                }
            },
            "Conv2d_396": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_140": {
                "tensors": {
                    "value": "[L2_feat, L3_fea_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_144": {
                "tensors": {
                    "value": "[L1_feat, L2_fea_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_147": {
                "tensors": {
                    "value": "[L1_feat_base, L1_cat]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_207": {
                "tensors": {
                    "value": "[att_max, att_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_212": {
                "tensors": {
                    "value": "[att_max, att_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_320": {
                "tensors": {
                    "value": "[attn_max, attn_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_326": {
                "tensors": {
                    "value": "[attn_max, attn_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_SR/models/LossNet.py": {
        "torch": {
            "sum_45": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sqrt(diff * diff + self.eps)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_55": {
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "vgg(images)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_45": {
                "input": {
                    "value": "diff * diff + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_49": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_SR/models/Losses.py": {
        "torch": {
            "l1_loss_26": {
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mse_loss_31": {
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sqrt_36": {
                "input": {
                    "value": "(pred - target) ** 2 + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_SR/models/arch_util.py": {
        "torch": {
            "Conv2d_44": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_53": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_57": {
                "*args": {
                    "value": "nn.Conv2d(in_channels, out_channels, kernel_size=kernel_size, stride=stride, dilation=dilation, padding=(kernel_size - 1) // 2 * dilation, bias=bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_64": {
                "*args": {
                    "value": "nn.ConvTranspose2d(in_channels, out_channels, kernel_size=4, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(embed_ch, embed_ch, kernel_size=3, stride=1, padding=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_105": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "chunk_123": {
                "variable": {
                    "value": "(o1, o2, mask)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv2(out)",
                            "Call"
                        ],
                        [
                            "self.conv_offset(feat)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_124": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(o1, o2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_125": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_127": {
                "variable": {
                    "value": "offset_absmean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(offset)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_142": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_144": {
                "variable": {
                    "value": "self.conv_du",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(channel, channel // reduction, 1, padding=0, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_169": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_188": {
                "variable": {
                    "value": "self.local_att",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(channels, inter_channels, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_196": {
                "variable": {
                    "value": "self.global_att",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AdaptiveAvgPool2d(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sigmoid_205": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_227": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_243": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chl",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chl",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_244": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(kernel_size - 1) // 2 * dilation",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_59": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_65": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_66": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_160": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_218": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_81": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "abs_127": {
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_145": {
                "in_channels": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_146": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_147": {
                "in_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_189": {
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_191": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_192": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_197": {
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_198": {
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_200": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_201": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_165": {
                "in_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_223": {
                "in_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_166": {
                "num_features": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_224": {
                "num_features": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "deblur_SR/models/dcn/deform_conv.py": {
        "torch": {
            "zeros_like_128": {
                "variable": {
                    "value": "grad_input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_129": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_130": {
                "variable": {
                    "value": "grad_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_131": {
                "variable": {
                    "value": "grad_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_132": {
                "variable": {
                    "value": "grad_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input.new_empty(1)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "False",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Parameter_183": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels, in_channels // self.groups, *self.kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_204": {
                "variable": {
                    "value": "self.conv_offset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.in_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.deformable_groups * 2 * self.kernel_size[0] * self.kernel_size[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "_pair(self.stride)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "_pair(self.padding)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_235": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels, in_channels // groups, *self.kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_263": {
                "variable": {
                    "value": "self.conv_offset_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.in_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.deformable_groups * 3 * self.kernel_size[0] * self.kernel_size[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "_pair(self.stride)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "_pair(self.padding)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "chunk_281": {
                "variable": {
                    "value": "(o1, o2, mask)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset_mask(x[1])",
                            "Call"
                        ],
                        [
                            "self.conv_offset_mask(x)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_282": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(o1, o2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_283": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_285": {
                "variable": {
                    "value": "offset_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(offset)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_238": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_63": {
                "variable": {
                    "value": "grad_input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_64": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_72": {
                "variable": {
                    "value": "grad_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_285": {
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "deblur_SR/models/dcn/setup.py": {
        "torch": {}
    },
    "deblur_SR/models/loss_utils.py": {
        "torch": {}
    },
    "deblur_SR/train.py": {
        "torch": {
            "device_55": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:7",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_58": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DatasetFromFolder(opt)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.train_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_83": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "opt.lr",
                            "Attribute"
                        ],
                        [
                            "lr * opt.lr_decay",
                            "BinOp"
                        ]
                    ]
                },
                "betas": {
                    "value": "(opt.beta1, opt.beta2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clamp_109": {
                "variable": {
                    "value": "prediction",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(inputs)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "save_145": {
                "obj": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': epoch, 'iteration': iteration, 'optimizer': optimizer.state_dict(), 'model': model.state_dict(), 'lr': lr}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "file_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "time.strftime(prefix + '%m%d_%H_%M_%S.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_99": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1)), 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_SR/utils/myutils.py": {
        "torch": {
            "load_29": {
                "variable": {
                    "value": "state_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "variable": {
                    "value": "conv1",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_80": {
                "variable": {
                    "value": "conv1.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[1, 0], [0, 0]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_83": {
                "variable": {
                    "value": "conv2",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_85": {
                "variable": {
                    "value": "conv2.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[0, 1], [0, 0]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "variable": {
                    "value": "conv3",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_89": {
                "variable": {
                    "value": "conv3.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[0, 0], [1, 0]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_91": {
                "variable": {
                    "value": "conv4",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_93": {
                "variable": {
                    "value": "conv4.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[0, 0], [0, 1]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_95": {
                "variable": {
                    "value": "Unshuffle",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, 4, height // 2, width // 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "device_72": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(first_channel, second_channel, third_channel, fourth_channel)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_104": {
                "variable": {
                    "value": "Unshuffle",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(Unshuffle, result)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/datasets/REDS4DeblurDeblocking.py": {
        "torch": {
            "DataLoader_140": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DatasetFromFolder(4, True, 'dataset/groups.txt', 64, True, True, True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/inference.py": {
        "torch": {
            "load_86": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.SRcheckpoint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "map_location",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lambda storage, loc: storage",
                            "Lambda"
                        ]
                    ]
                }
            },
            "unsqueeze_113": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(lrfilepath).convert('RGB')",
                            "Call"
                        ],
                        [
                            "transform()(inputs)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(inputs, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1)), 1)",
                            "Call"
                        ],
                        [
                            "inputs.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_114": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clamp_121": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "modelDeSR(inputs)",
                            "Call"
                        ],
                        [
                            "torch.clamp(out, 0.0, 1.0).cpu()",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "empty_cache_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_114": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(lrfilepath).convert('RGB')",
                            "Call"
                        ],
                        [
                            "transform()(inputs)",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(inputs, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1)), 1)",
                            "Call"
                        ],
                        [
                            "inputs.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/inferenceTools.py": {
        "torch": {
            "cat_65": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(inputs[0], 0), torch.unsqueeze(inputs[1], 0), torch.unsqueeze(inputs[2], 0), torch.unsqueeze(inputs[3], 0), torch.unsqueeze(inputs[4], 0), torch.unsqueeze(inputs[5], 0), torch.unsqueeze(inputs[6], 0))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_70": {
                "variable": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(targets[0], 0), torch.unsqueeze(targets[1], 0), torch.unsqueeze(targets[2], 0), torch.unsqueeze(targets[3], 0), torch.unsqueeze(targets[4], 0), torch.unsqueeze(targets[5], 0), torch.unsqueeze(targets[6], 0))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "unsqueeze_74": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[get_image(os.path.join(LrDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ],
                        [
                            "[transform()(j) for j in inputs]",
                            "ListComp"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(inputs[0], 0), torch.unsqueeze(inputs[1], 0), torch.unsqueeze(inputs[2], 0), torch.unsqueeze(inputs[3], 0), torch.unsqueeze(inputs[4], 0), torch.unsqueeze(inputs[5], 0), torch.unsqueeze(inputs[6], 0)))",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(inputs, 0)",
                            "Call"
                        ],
                        [
                            "[get_image(os.path.join(LrDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ],
                        [
                            "images[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_75": {
                "variable": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[get_image(os.path.join(GtDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ],
                        [
                            "[transform()(i) for i in targets]",
                            "ListComp"
                        ],
                        [
                            "torch.cat((torch.unsqueeze(targets[0], 0), torch.unsqueeze(targets[1], 0), torch.unsqueeze(targets[2], 0), torch.unsqueeze(targets[3], 0), torch.unsqueeze(targets[4], 0), torch.unsqueeze(targets[5], 0), torch.unsqueeze(targets[6], 0)))",
                            "Call"
                        ],
                        [
                            "torch.unsqueeze(targets, 0)",
                            "Call"
                        ],
                        [
                            "[get_image(os.path.join(GtDir, 'im' + str(i + 1) + '.png')) for i in range(7)]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_147": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_156": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_165": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_174": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR1, 1), torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_183": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR2, 1), torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_192": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR3, 1), torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_201": {
                "variable": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(LR4, 1), torch.unsqueeze(LR5, 1), torch.unsqueeze(LR6, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1), torch.unsqueeze(LR7, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_65": {
                "input": {
                    "value": "inputs[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_66": {
                "input": {
                    "value": "inputs[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_67": {
                "input": {
                    "value": "inputs[5]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_68": {
                "input": {
                    "value": "inputs[6]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_70": {
                "input": {
                    "value": "targets[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_71": {
                "input": {
                    "value": "targets[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_72": {
                "input": {
                    "value": "targets[5]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_73": {
                "input": {
                    "value": "targets[6]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_147": {
                "input": {
                    "value": "LR1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 0, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_148": {
                "input": {
                    "value": "LR3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 2, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_149": {
                "input": {
                    "value": "LR4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 3, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_156": {
                "input": {
                    "value": "LR1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 0, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_157": {
                "input": {
                    "value": "LR4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 3, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_158": {
                "input": {
                    "value": "LR5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 4, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_165": {
                "input": {
                    "value": "LR2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 1, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_166": {
                "input": {
                    "value": "LR5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 4, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_167": {
                "input": {
                    "value": "LR6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 5, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_174": {
                "input": {
                    "value": "LR3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 2, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_175": {
                "input": {
                    "value": "LR6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 5, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_176": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_183": {
                "input": {
                    "value": "LR4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 3, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_184": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_185": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_192": {
                "input": {
                    "value": "LR5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 4, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_193": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_194": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_201": {
                "input": {
                    "value": "LR6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 5, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_202": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_203": {
                "input": {
                    "value": "LR7",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_LR[:, 6, :, :, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/models/EDPN.py": {
        "torch": {
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv_base",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv_ref",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.offset_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "variable": {
                    "value": "self.offset_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "variable": {
                    "value": "self.dcn_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Softmax_39": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "variable": {
                    "value": "self.out_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.out_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_44": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_51": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[feat_base, feat_ref]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_62": {
                "variable": {
                    "value": "feat_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[feat_base, feat_add]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.SPA_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*SPA_blocks",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_81": {
                "variable": {
                    "value": "self.out_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "variable": {
                    "value": "self.out_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_84": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_92": {
                "variable": {
                    "value": "feat_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_base, feat_enhance]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_106": {
                "variable": {
                    "value": "self.L3_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_109": {
                "variable": {
                    "value": "self.L2_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_112": {
                "variable": {
                    "value": "self.L1_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_114": {
                "variable": {
                    "value": "self.L2_conv_up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_115": {
                "variable": {
                    "value": "self.L2_conv_up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "variable": {
                    "value": "self.L1_conv_up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.L1_conv_up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.out_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_121": {
                "variable": {
                    "value": "self.out_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ],
                        [
                            "arg.embed_ch",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_123": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_139": {
                "variable": {
                    "value": "L3_fea_up",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "L3_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.L3_conv(self.L3_spa(L3_feat_base, L3_feat_ref)))",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_143": {
                "variable": {
                    "value": "L2_fea_up",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "L2_cat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.L2_conv_up1(torch.cat([L2_feat, L3_fea_up], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.L2_conv_up2(L2_cat))",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_162": {
                "variable": {
                    "value": "self.tAtt_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_163": {
                "variable": {
                    "value": "self.tAtt_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_166": {
                "variable": {
                    "value": "self.fea_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nframes * nf",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_169": {
                "variable": {
                    "value": "self.sAtt_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nframes * nf",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_170": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_171": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_172": {
                "variable": {
                    "value": "self.sAtt_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_173": {
                "variable": {
                    "value": "self.sAtt_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_174": {
                "variable": {
                    "value": "self.sAtt_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_175": {
                "variable": {
                    "value": "self.sAtt_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_176": {
                "variable": {
                    "value": "self.sAtt_L1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_177": {
                "variable": {
                    "value": "self.sAtt_L2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_178": {
                "variable": {
                    "value": "self.sAtt_L3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_179": {
                "variable": {
                    "value": "self.sAtt_add_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_180": {
                "variable": {
                    "value": "self.sAtt_add_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_182": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_195": {
                "variable": {
                    "value": "cor_prob",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat(cor_l, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "interpolate_214": {
                "variable": {
                    "value": "att_L",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_L",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.sAtt_L1(att))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_L2(torch.cat([att_max, att_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_L3(att_L))",
                            "Call"
                        ],
                        [
                            "F.interpolate(att_L, scale_factor=2, mode='bilinear', align_corners=False)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_219": {
                "variable": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.sAtt_1(aligned_fea))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_2(torch.cat([att_max, att_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_3(att))",
                            "Call"
                        ],
                        [
                            "att + att_L",
                            "BinOp"
                        ],
                        [
                            "self.lrelu(self.sAtt_4(att))",
                            "Call"
                        ],
                        [
                            "F.interpolate(att, scale_factor=2, mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "self.sAtt_5(att)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(att)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_222": {
                "variable": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.sAtt_1(aligned_fea))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_2(torch.cat([att_max, att_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.sAtt_3(att))",
                            "Call"
                        ],
                        [
                            "att + att_L",
                            "BinOp"
                        ],
                        [
                            "self.lrelu(self.sAtt_4(att))",
                            "Call"
                        ],
                        [
                            "F.interpolate(att, scale_factor=2, mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "self.sAtt_5(att)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(att)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_234": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_257": {
                "variable": {
                    "value": "self.temporal_attn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_258": {
                "variable": {
                    "value": "self.temporal_attn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_259": {
                "variable": {
                    "value": "self.feat_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame * num_feat",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_262": {
                "variable": {
                    "value": "self.conv3D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_frame",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_263": {
                "variable": {
                    "value": "self.conv3D_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame * num_feat",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_266": {
                "variable": {
                    "value": "self.max_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_267": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_268": {
                "variable": {
                    "value": "self.spatial_attn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_frame * num_feat",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_269": {
                "variable": {
                    "value": "self.spatial_attn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_270": {
                "variable": {
                    "value": "self.spatial_attn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_271": {
                "variable": {
                    "value": "self.spatial_attn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_272": {
                "variable": {
                    "value": "self.spatial_attn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_273": {
                "variable": {
                    "value": "self.spatial_attn_l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_274": {
                "variable": {
                    "value": "self.spatial_attn_l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_275": {
                "variable": {
                    "value": "self.spatial_attn_l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_276": {
                "variable": {
                    "value": "self.spatial_attn_add1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_277": {
                "variable": {
                    "value": "self.spatial_attn_add2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_279": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_280": {
                "variable": {
                    "value": "self.upsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_302": {
                "variable": {
                    "value": "corr_prob",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat(corr_l, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_336": {
                "variable": {
                    "value": "attn",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.lrelu(self.spatial_attn1(aligned_feat))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.spatial_attn2(torch.cat([attn_max, attn_avg], dim=1)))",
                            "Call"
                        ],
                        [
                            "self.lrelu(self.spatial_attn3(attn)) + attn_level",
                            "BinOp"
                        ],
                        [
                            "self.lrelu(self.spatial_attn4(attn))",
                            "Call"
                        ],
                        [
                            "self.upsample(attn)",
                            "Call"
                        ],
                        [
                            "self.spatial_attn5(attn)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(attn)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_358": {
                "variable": {
                    "value": "self.conv_first",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_364": {
                "variable": {
                    "value": "self.fea_L2_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_365": {
                "variable": {
                    "value": "self.fea_L2_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_366": {
                "variable": {
                    "value": "self.fea_L3_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_367": {
                "variable": {
                    "value": "self.fea_L3_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_392": {
                "variable": {
                    "value": "self.HRconv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_393": {
                "variable": {
                    "value": "self.upscale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 3, 3, 1, 1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LeakyReLU_396": {
                "variable": {
                    "value": "self.lrelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "stack_435": {
                "variable": {
                    "value": "aligned_fea",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "aligned_fea",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aligned_fea.view(B, -1, H, W) * cor_prob",
                            "BinOp"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(aligned_fea, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_193": {
                "variable": {
                    "value": "cor_tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "emb_nbr * emb_ref",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_193": {
                "variable": {
                    "value": "cor_tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_300": {
                "variable": {
                    "value": "corr",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "emb_neighbor * embedding_ref",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_195": {
                "tensors": {
                    "value": "cor_l",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_302": {
                "tensors": {
                    "value": "corr_l",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_394": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_140": {
                "tensors": {
                    "value": "[L2_feat, L3_fea_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_144": {
                "tensors": {
                    "value": "[L1_feat, L2_fea_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_147": {
                "tensors": {
                    "value": "[L1_feat_base, L1_cat]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_207": {
                "tensors": {
                    "value": "[att_max, att_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_212": {
                "tensors": {
                    "value": "[att_max, att_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_320": {
                "tensors": {
                    "value": "[attn_max, attn_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_326": {
                "tensors": {
                    "value": "[attn_max, attn_avg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/models/LossNet.py": {
        "torch": {
            "sum_45": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sqrt(diff * diff + self.eps)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_55": {
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "vgg(images)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_45": {
                "input": {
                    "value": "diff * diff + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_49": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/models/Losses.py": {
        "torch": {
            "l1_loss_26": {
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mse_loss_31": {
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sqrt_36": {
                "input": {
                    "value": "(pred - target) ** 2 + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/models/arch_util.py": {
        "torch": {
            "Conv2d_44": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_53": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_57": {
                "*args": {
                    "value": "nn.Conv2d(in_channels, out_channels, kernel_size=kernel_size, stride=stride, dilation=dilation, padding=(kernel_size - 1) // 2 * dilation, bias=bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_64": {
                "*args": {
                    "value": "nn.ConvTranspose2d(in_channels, out_channels, kernel_size=4, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(embed_ch, embed_ch, kernel_size=3, stride=1, padding=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_105": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "chunk_123": {
                "variable": {
                    "value": "(o1, o2, mask)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv2(out)",
                            "Call"
                        ],
                        [
                            "self.conv_offset(feat)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_124": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(o1, o2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_125": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_127": {
                "variable": {
                    "value": "offset_absmean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(offset)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_142": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_144": {
                "variable": {
                    "value": "self.conv_du",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(channel, channel // reduction, 1, padding=0, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_169": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_188": {
                "variable": {
                    "value": "self.local_att",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(channels, inter_channels, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_196": {
                "variable": {
                    "value": "self.global_att",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AdaptiveAvgPool2d(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sigmoid_205": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_227": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_243": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chl",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chl",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_244": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(kernel_size - 1) // 2 * dilation",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_59": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_65": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_66": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_160": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_218": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_81": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "in_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "embed_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "abs_127": {
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_145": {
                "in_channels": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_146": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_147": {
                "in_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_189": {
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_191": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_192": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_197": {
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_198": {
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_200": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_201": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(channels // r)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_165": {
                "in_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_223": {
                "in_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_166": {
                "num_features": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_224": {
                "num_features": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "deblur_deblocking/models/dcn/deform_conv.py": {
        "torch": {
            "zeros_like_128": {
                "variable": {
                    "value": "grad_input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_129": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_130": {
                "variable": {
                    "value": "grad_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_131": {
                "variable": {
                    "value": "grad_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_132": {
                "variable": {
                    "value": "grad_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input.new_empty(1)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "False",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Parameter_183": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels, in_channels // self.groups, *self.kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_204": {
                "variable": {
                    "value": "self.conv_offset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.in_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.deformable_groups * 2 * self.kernel_size[0] * self.kernel_size[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "_pair(self.stride)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "_pair(self.padding)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_235": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels, in_channels // groups, *self.kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_263": {
                "variable": {
                    "value": "self.conv_offset_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.in_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.deformable_groups * 3 * self.kernel_size[0] * self.kernel_size[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "_pair(self.stride)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "_pair(self.padding)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "chunk_281": {
                "variable": {
                    "value": "(o1, o2, mask)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset_mask(x[1])",
                            "Call"
                        ],
                        [
                            "self.conv_offset_mask(x)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_282": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(o1, o2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_283": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_285": {
                "variable": {
                    "value": "offset_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(offset)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_238": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_63": {
                "variable": {
                    "value": "grad_input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_64": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_72": {
                "variable": {
                    "value": "grad_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_285": {
                "input": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_offset(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((o1, o2), dim=1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "deblur_deblocking/models/dcn/setup.py": {
        "torch": {}
    },
    "deblur_deblocking/models/loss_utils.py": {
        "torch": {}
    },
    "deblur_deblocking/train.py": {
        "torch": {
            "device_55": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:7",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_58": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DatasetFromFolder(opt)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.train_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_83": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "opt.lr",
                            "Attribute"
                        ],
                        [
                            "lr * opt.lr_decay",
                            "BinOp"
                        ]
                    ]
                },
                "betas": {
                    "value": "(opt.beta1, opt.beta2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clamp_109": {
                "variable": {
                    "value": "prediction",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(inputs)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "save_145": {
                "obj": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': epoch, 'iteration': iteration, 'optimizer': optimizer.state_dict(), 'model': model.state_dict(), 'lr': lr}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "file_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "time.strftime(prefix + '%m%d_%H_%M_%S.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_99": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1), torch.unsqueeze(inputs, 1)), 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deblur_deblocking/utils/myutils.py": {
        "torch": {
            "load_15": {
                "variable": {
                    "value": "state_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "conv1",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_66": {
                "variable": {
                    "value": "conv1.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[1, 0], [0, 0]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "variable": {
                    "value": "conv2",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_71": {
                "variable": {
                    "value": "conv2.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[0, 1], [0, 0]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "variable": {
                    "value": "conv3",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_75": {
                "variable": {
                    "value": "conv3.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[0, 0], [1, 0]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_77": {
                "variable": {
                    "value": "conv4",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_79": {
                "variable": {
                    "value": "conv4.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([[0, 0], [0, 1]], dtype='float32').reshape((1, 1, 2, 2))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_81": {
                "variable": {
                    "value": "Unshuffle",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, 4, height // 2, width // 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "device_58": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(first_channel, second_channel, third_channel, fourth_channel)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_90": {
                "variable": {
                    "value": "Unshuffle",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(Unshuffle, result)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}