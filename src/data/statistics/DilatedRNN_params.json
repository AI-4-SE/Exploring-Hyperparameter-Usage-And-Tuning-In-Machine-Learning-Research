{
    "models/classification_models.py": {
        "tensorflow": {
            "transpose_36": {
                "variable": {
                    "value": "x_",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_38": {
                "variable": {
                    "value": "x_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.transpose(x, [1, 0, 2])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x_, [-1, input_dims])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, input_dims]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "split_40": {
                "variable": {
                    "value": "x_reformat",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "x_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.transpose(x, [1, 0, 2])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x_, [-1, input_dims])",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "n_steps",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_82": {
                "variable": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_normal(shape=[hidden_structs[-1], n_classes])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_84": {
                "variable": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_normal(shape=[n_classes])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_86": {
                "variable": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(layer_outputs[-1], weights)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "bias",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.random_normal(shape=[n_classes]))",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.random_normal(shape=[n_classes]))",
                            "Call"
                        ]
                    ]
                }
            },
            "Variable_91": {
                "variable": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_normal(shape=[hidden_structs[-1] * dilations[0], n_classes])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_93": {
                "variable": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_normal(shape=[n_classes])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_104": {
                "variable": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(hidden_outputs_, weights)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "bias",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.random_normal(shape=[n_classes]))",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.random_normal(shape=[n_classes]))",
                            "Call"
                        ]
                    ]
                }
            },
            "BasicRNNCell_16": {
                "variable": {
                    "value": "cell",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_units": {
                    "value": "hidden_dims",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "hidden_structs",
                            "Name"
                        ]
                    ]
                }
            },
            "BasicLSTMCell_18": {
                "variable": {
                    "value": "cell",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_units": {
                    "value": "hidden_dims",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "hidden_structs",
                            "Name"
                        ]
                    ]
                }
            },
            "matmul_86": {
                "a": {
                    "value": "layer_outputs[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "weights",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.random_normal(shape=[hidden_structs[-1], n_classes]))",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.random_normal(shape=[hidden_structs[-1] * dilations[0], n_classes]))",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_100": {
                "variable": {
                    "value": "hidden_outputs_",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[hidden_outputs_, layer_outputs[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_104": {
                "a": {
                    "value": "hidden_outputs_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "layer_outputs[i]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([hidden_outputs_, layer_outputs[i]], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "weights",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.random_normal(shape=[hidden_structs[-1], n_classes]))",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.random_normal(shape=[hidden_structs[-1] * dilations[0], n_classes]))",
                            "Call"
                        ]
                    ]
                }
            },
            "GRUCell_20": {
                "variable": {
                    "value": "cell",
                    "type": "Variable",
                    "possible_values": []
                },
                "units": {
                    "value": "hidden_dims",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "hidden_structs",
                            "Name"
                        ]
                    ]
                }
            }
        }
    },
    "models/drnn.py": {
        "tensorflow": {}
    }
}