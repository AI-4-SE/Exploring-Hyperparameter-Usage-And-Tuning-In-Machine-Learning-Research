{
    "model.py": {
        "tensorflow": {
            "placeholder_32": {
                "variable": {
                    "value": "self.word_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "word_ids",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_36": {
                "variable": {
                    "value": "self.pref_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "pref_ids",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_38": {
                "variable": {
                    "value": "self.suff_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "suff_ids",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_41": {
                "variable": {
                    "value": "self.pref_ids_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "pref_ids_2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_43": {
                "variable": {
                    "value": "self.suff_ids_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "suff_ids_2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_46": {
                "variable": {
                    "value": "self.pref_ids_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "pref_ids_4",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_48": {
                "variable": {
                    "value": "self.suff_ids_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "suff_ids_4",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_54": {
                "variable": {
                    "value": "self.sequence_lengths",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "sequence_lengths",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_58": {
                "variable": {
                    "value": "self.char_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "char_ids",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_62": {
                "variable": {
                    "value": "self.word_lengths",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "word_lengths",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_66": {
                "variable": {
                    "value": "self.labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "labels",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_70": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "dropout",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_72": {
                "variable": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "lr",
                    "type": "str",
                    "possible_values": []
                }
            },
            "shape_156": {
                "variable": {
                    "value": "word_embeddings_shape",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "word_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(_word_embeddings, self.word_ids, name='word_embeddings')",
                            "Call"
                        ],
                        [
                            "tf.concat([word_embeddings, pref_embeddings, suff_embeddings, output], axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "dropout_244": {
                "variable": {
                    "value": "self.word_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "word_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(_word_embeddings, self.word_ids, name='word_embeddings')",
                            "Call"
                        ],
                        [
                            "tf.concat([word_embeddings, pref_embeddings, suff_embeddings, output], axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "rate": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_initializer_327": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "merge_all_332": {
                "variable": {
                    "value": "self.merged",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FileWriter_333": {
                "variable": {
                    "value": "self.file_writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "self.config.output_path",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "sess.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_463": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_501": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_511": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_152": {
                "variable": {
                    "value": "_word_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "self.embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "_word_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_154": {
                "variable": {
                    "value": "word_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_word_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(self.embeddings, name='_word_embeddings', dtype=tf.float32, trainable=self.config.train_embeddings)",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.word_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "word_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_variable_161": {
                "variable": {
                    "value": "_pref_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "_pref_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[9000, self.config.dim_pref]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "shape_163": {
                "variable": {
                    "value": "_pref_embeddings_shape",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "_pref_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_pref_embeddings', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[9000, self.config.dim_pref])",
                            "Call"
                        ]
                    ]
                }
            },
            "embedding_lookup_166": {
                "variable": {
                    "value": "pref_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_pref_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_pref_embeddings', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[9000, self.config.dim_pref])",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.pref_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "pref_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_variable_170": {
                "variable": {
                    "value": "_pref_embeddings_2",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "_pref_embeddings_2",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1800, self.config.dim_pref_2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_172": {
                "variable": {
                    "value": "pref_embeddings_2",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_pref_embeddings_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_pref_embeddings_2', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[1800, self.config.dim_pref_2])",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.pref_ids_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "pref_embeddings_2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_variable_176": {
                "variable": {
                    "value": "_pref_embeddings_4",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "_pref_embeddings_4",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[18200, self.config.dim_pref_4]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_178": {
                "variable": {
                    "value": "pref_embeddings_4",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_pref_embeddings_4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_pref_embeddings_4', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[18200, self.config.dim_pref_4])",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.pref_ids_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "pref_embeddings_4",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_variable_190": {
                "variable": {
                    "value": "_suff_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "_suff_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[9000, self.config.dim_suff]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_193": {
                "variable": {
                    "value": "suff_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_suff_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_suff_embeddings', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[9000, self.config.dim_suff])",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.suff_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "suff_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_variable_198": {
                "variable": {
                    "value": "_suff_embeddings_2",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "_suff_embeddings_2",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1800, self.config.dim_suff_2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_201": {
                "variable": {
                    "value": "suff_embeddings_2",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_suff_embeddings_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_suff_embeddings_2', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[1800, self.config.dim_suff_2])",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.suff_ids_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "suff_embeddings_2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_variable_205": {
                "variable": {
                    "value": "_suff_embeddings_4",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "_suff_embeddings_4",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[18200, self.config.dim_suff_4]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_208": {
                "variable": {
                    "value": "suff_embeddings_4",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_suff_embeddings_4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_suff_embeddings_4', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[18200, self.config.dim_suff_4])",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.suff_ids_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "suff_embeddings_4",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LSTMCell_252": {
                "variable": {
                    "value": "cell_fw",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "self.config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTMCell_253": {
                "variable": {
                    "value": "cell_bw",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "self.config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bidirectional_dynamic_rnn_254": {
                "variable": {
                    "value": "((output_fw, output_bw), _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell_fw": {
                    "value": "cell_fw",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.char_hidden_size, state_is_tuple=True)",
                            "Call"
                        ],
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.hidden_size)",
                            "Call"
                        ]
                    ]
                },
                "cell_bw": {
                    "value": "cell_bw",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.char_hidden_size, state_is_tuple=True)",
                            "Call"
                        ],
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.hidden_size)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "self.word_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sequence_length": {
                    "value": "self.sequence_lengths",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_257": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_fw, output_bw]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "dropout_258": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, shape=[-1, s[1], 2 * self.config.char_hidden_size])",
                            "Call"
                        ],
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.nn.dropout(output, self.dropout)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, [-1, 2 * self.config.hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "rate": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_261": {
                "variable": {
                    "value": "W",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2 * self.config.hidden_size, self.ntags]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_264": {
                "variable": {
                    "value": "b",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.ntags]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_268": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, shape=[-1, s[1], 2 * self.config.char_hidden_size])",
                            "Call"
                        ],
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.nn.dropout(output, self.dropout)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, [-1, 2 * self.config.hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 2 * self.config.hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_270": {
                "variable": {
                    "value": "self.logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(output, W) + b",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, ntime_steps, self.ntags]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cast_278": {
                "variable": {
                    "value": "self.labels_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(self.logits, axis=-1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_288": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "-log_likelihood",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sparse_softmax_cross_entropy_with_logits_290": {
                "variable": {
                    "value": "losses",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sequence_mask_291": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "lengths": {
                    "value": "self.sequence_lengths",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "boolean_mask_292": {
                "variable": {
                    "value": "losses",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "losses",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.sparse_softmax_cross_entropy_with_logits(logits=self.logits, labels=self.labels)",
                            "Call"
                        ],
                        [
                            "tf.boolean_mask(losses, mask)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sequence_mask(self.sequence_lengths)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_293": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "losses",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.sparse_softmax_cross_entropy_with_logits(logits=self.logits, labels=self.labels)",
                            "Call"
                        ],
                        [
                            "tf.boolean_mask(losses, mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "scalar_296": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_151": {
                "name_or_scope": {
                    "value": "words",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_160": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_160": {
                "name_or_scope": {
                    "value": "pref",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_169": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_169": {
                "name_or_scope": {
                    "value": "pref_2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_175": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_175": {
                "name_or_scope": {
                    "value": "pref_4",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_189": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_189": {
                "name_or_scope": {
                    "value": "suff",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_197": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_197": {
                "name_or_scope": {
                    "value": "suff_2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_204": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_204": {
                "name_or_scope": {
                    "value": "suff_4",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_212": {
                "name_or_scope": {
                    "value": "chars",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_variable_215": {
                "variable": {
                    "value": "_char_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "_char_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.config.train_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.nchars, self.config.dim_char]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_217": {
                "variable": {
                    "value": "char_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_char_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='_char_embeddings', dtype=tf.float32, trainable=self.config.train_embeddings, shape=[self.nchars, self.config.dim_char])",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.char_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "char_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "shape_220": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "char_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(_char_embeddings, self.char_ids, name='char_embeddings')",
                            "Call"
                        ],
                        [
                            "tf.reshape(char_embeddings, shape=[-1, s[-2], self.config.dim_char])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_223": {
                "variable": {
                    "value": "char_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "char_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(_char_embeddings, self.char_ids, name='char_embeddings')",
                            "Call"
                        ],
                        [
                            "tf.reshape(char_embeddings, shape=[-1, s[-2], self.config.dim_char])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, s[-2], self.config.dim_char]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_224": {
                "variable": {
                    "value": "word_lengths",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.word_lengths",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "LSTMCell_227": {
                "variable": {
                    "value": "cell_fw",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "self.config.char_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "state_is_tuple": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTMCell_229": {
                "variable": {
                    "value": "cell_bw",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "self.config.char_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "state_is_tuple": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "bidirectional_dynamic_rnn_232": {
                "variable": {
                    "value": "(_, ((_, output_fw), (_, output_bw)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell_fw": {
                    "value": "cell_fw",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.char_hidden_size, state_is_tuple=True)",
                            "Call"
                        ],
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.hidden_size)",
                            "Call"
                        ]
                    ]
                },
                "cell_bw": {
                    "value": "cell_bw",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.char_hidden_size, state_is_tuple=True)",
                            "Call"
                        ],
                        [
                            "tf.contrib.rnn.LSTMCell(self.config.hidden_size)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "char_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(_char_embeddings, self.char_ids, name='char_embeddings')",
                            "Call"
                        ],
                        [
                            "tf.reshape(char_embeddings, shape=[-1, s[-2], self.config.dim_char])",
                            "Call"
                        ]
                    ]
                },
                "sequence_length": {
                    "value": "word_lengths",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pad_sequences(char_ids, pad_tok=0, nlevels=2)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.word_lengths, shape=[-1])",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_236": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_fw, output_bw]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_238": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, shape=[-1, s[1], 2 * self.config.char_hidden_size])",
                            "Call"
                        ],
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.nn.dropout(output, self.dropout)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, [-1, 2 * self.config.hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, s[1], 2 * self.config.char_hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_240": {
                "variable": {
                    "value": "word_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[word_embeddings, pref_embeddings, suff_embeddings, output]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "variable_scope_251": {
                "name_or_scope": {
                    "value": "bi-lstm",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_260": {
                "name_or_scope": {
                    "value": "proj",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_303": {
                "name_or_scope": {
                    "value": "train_step",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AdamOptimizer_306": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clip_by_global_norm_320": {
                "variable": {
                    "value": "(gradients, global_norm)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "t_list": {
                    "value": "gradients",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(*optimizer.compute_gradients(self.loss))",
                            "Call"
                        ],
                        [
                            "tf.clip_by_global_norm(gradients, self.config.clip)",
                            "Call"
                        ]
                    ]
                },
                "clip_norm": {
                    "value": "self.config.clip",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_466": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_502": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_512": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "shape_267": {
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, shape=[-1, s[1], 2 * self.config.char_hidden_size])",
                            "Call"
                        ],
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.nn.dropout(output, self.dropout)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, [-1, 2 * self.config.hidden_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_269": {
                "a": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, shape=[-1, s[1], 2 * self.config.char_hidden_size])",
                            "Call"
                        ],
                        [
                            "tf.concat([output_fw, output_bw], axis=-1)",
                            "Call"
                        ],
                        [
                            "tf.nn.dropout(output, self.dropout)",
                            "Call"
                        ],
                        [
                            "tf.reshape(output, [-1, 2 * self.config.hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable('W', shape=[2 * self.config.hidden_size, self.ntags], dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_278": {
                "input": {
                    "value": "self.logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "AdagradOptimizer_308": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_initializer_265": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_310": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "RMSPropOptimizer_312": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}