{
    "measuring_emergent_comm/eval.py": {
        "torch": {
            "softmax_130": {
                "variable": {
                    "value": "probs_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_163": {
                "f": {
                    "value": "model_file_ag1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "load_164": {
                "f": {
                    "value": "model_file_ag2",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_182": {
                "input": {
                    "value": "logits_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "measuring_emergent_comm/main.py": {
        "torch": {
            "is_available_22": {
                "variable": {
                    "value": "use_cuda",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_66": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_112": {
                "params": {
                    "value": "ag.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_115": {
                "params": {
                    "value": "U.get_named_params(ag, 'out_apred')",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr * 5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_116": {
                "params": {
                    "value": "U.get_named_params(ag, 'apred_noinps')",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr * 5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_117": {
                "params": {
                    "value": "U.get_named_params(ag, 'apred_nocomm')",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr * 5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_118": {
                "params": {
                    "value": "U.get_named_params(ag, 'sep')",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr * 5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_119": {
                "params": {
                    "value": "U.get_named_params(ag, 'nocommsep')",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr * 5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_138": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "measuring_emergent_comm/models.py": {
        "torch": {
            "Linear_22": {
                "variable": {
                    "value": "self.hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_inp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_23": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_30": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hid(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_35": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(x)",
                            "Call"
                        ],
                        [
                            "self.forward(obs)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_47": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(x)",
                            "Call"
                        ],
                        [
                            "self.forward(obs)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Categorical_50": {
                "variable": {
                    "value": "logprobs",
                    "type": "Variable",
                    "possible_values": []
                },
                "probs": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits, dim=0)",
                            "Call"
                        ],
                        [
                            "F.softmax(logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_91": {
                "variable": {
                    "value": "self.h1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_inp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_92": {
                "variable": {
                    "value": "self.h2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_93": {
                "variable": {
                    "value": "self.out_a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_94": {
                "variable": {
                    "value": "self.out_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_comm",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_95": {
                "variable": {
                    "value": "self.v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_104": {
                "variable": {
                    "value": "self.h1_apred_sep",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_inp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_105": {
                "variable": {
                    "value": "self.h2_apred_sep",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_106": {
                "variable": {
                    "value": "self.h1_apred_nocommsep",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_inp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_107": {
                "variable": {
                    "value": "self.h2_apred_nocommsep",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_108": {
                "variable": {
                    "value": "self.out_apred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.out_apred_nocomm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Parameter_110": {
                "variable": {
                    "value": "self.apred_noinps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(n_out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.out_apred_sep",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self.out_apred_nocommsep",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_167": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hid(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_169": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hid(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Tensor_208": {
                "variable": {
                    "value": "acts",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_217": {
                "variable": {
                    "value": "loss_fn",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_235": {
                "variable": {
                    "value": "rews_disc_a",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_236": {
                "variable": {
                    "value": "rews_disc_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_244": {
                "variable": {
                    "value": "probs_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_245": {
                "variable": {
                    "value": "probs_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Categorical_248": {
                "variable": {
                    "value": "logprobs_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "probs": {
                    "value": "probs_a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits_a, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.clamp(probs_a, 1e-06, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Categorical_249": {
                "variable": {
                    "value": "logprobs_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "probs": {
                    "value": "probs_c",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits_c, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.clamp(probs_c, 1e-06, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_252": {
                "variable": {
                    "value": "probs_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs_a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits_a, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.clamp(probs_a, 1e-06, 1)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clamp_253": {
                "variable": {
                    "value": "probs_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs_c",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits_c, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.clamp(probs_c, 1e-06, 1)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "variable": {
                    "value": "self.h1_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_inp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_101": {
                "variable": {
                    "value": "self.h2_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "12",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_140": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hid(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_142": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hid(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_151": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hid(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_153": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hid(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_sep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h1_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.h2_apred_nocommsep(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_160": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.h1_c(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.h2_c(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_162": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.h1_c(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.h2_c(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_214": {
                "variable": {
                    "value": "logits_apred",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "tuple([logits_apred] * obs_a.shape[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Categorical_37": {
                "probs": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits, dim=0)",
                            "Call"
                        ],
                        [
                            "F.softmax(logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_110": {
                "*size": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Categorical_197": {
                "logits": {
                    "value": "logits_apred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(x, apred)",
                            "Call"
                        ],
                        [
                            "self.forward(obs_a, apred=apred, input_is_batch=True)",
                            "Call"
                        ],
                        [
                            "torch.stack(tuple([logits_apred] * obs_a.shape[0]))",
                            "Call"
                        ]
                    ]
                }
            },
            "Categorical_201": {
                "logits": {
                    "value": "logits_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Categorical_203": {
                "logits": {
                    "value": "logits_a",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_239": {},
            "Tensor_240": {},
            "max_39": {
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(x)",
                            "Call"
                        ],
                        [
                            "self.forward(obs)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_53": {
                "input": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits, dim=0)",
                            "Call"
                        ],
                        [
                            "F.softmax(logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_259": {
                "input": {
                    "value": "probs_a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits_a, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.clamp(probs_a, 1e-06, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_260": {
                "input": {
                    "value": "probs_c",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.softmax(logits_c, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.clamp(probs_c, 1e-06, 1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "measuring_emergent_comm/utils.py": {
        "torch": {
            "save_91": {
                "obj": {
                    "value": "ag.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "f_m",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}