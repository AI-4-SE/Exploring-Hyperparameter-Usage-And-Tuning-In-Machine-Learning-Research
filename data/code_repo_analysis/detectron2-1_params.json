{
    "detectron2_1/adv.py": {
        "torch": {
            "no_grad_304": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_337": {
                "variable": {
                    "value": "adv_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "no_grad_347": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cross_entropy_233": {
                "variable": {
                    "value": "target_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._get_roi_heads_predictions(features, target_boxes)",
                            "Call"
                        ],
                        [
                            "logits[active_cond]",
                            "Subscript"
                        ],
                        [
                            "roi_heads.box_predictor(box_features)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._get_targets(batched_inputs)",
                            "Call"
                        ],
                        [
                            "target_labels[active_cond]",
                            "Subscript"
                        ]
                    ]
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cross_entropy_234": {
                "variable": {
                    "value": "adv_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._get_roi_heads_predictions(features, target_boxes)",
                            "Call"
                        ],
                        [
                            "logits[active_cond]",
                            "Subscript"
                        ],
                        [
                            "roi_heads.box_predictor(box_features)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "adv_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._get_adv_labels(target_labels)",
                            "Call"
                        ],
                        [
                            "adv_labels[active_cond]",
                            "Subscript"
                        ],
                        [
                            "torch.zeros_like(labels)",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "clamp_321": {
                "input": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image.detach()",
                            "Call"
                        ],
                        [
                            "image * self.model.pixel_std + self.model.pixel_mean",
                            "BinOp"
                        ],
                        [
                            "self.aug.get_transform(original_image).apply_image(original_image)",
                            "Call"
                        ],
                        [
                            "torch.as_tensor(image.astype('float32').transpose(2, 0, 1))",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max": {
                    "value": "255",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_466": {
                "variable": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "image.astype('float32').transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_459": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_243": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "arange_439": {
                "start": {
                    "value": "n_proposals",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(proposal_boxes)",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_441": {
                "start": {
                    "value": "n_proposals",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(proposal_boxes)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "detectron2_1/datasets.py": {
        "torch": {
            "as_tensor_144": {
                "variable": {
                    "value": "dataset_dict[image]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "np.ascontiguousarray(image.transpose(2, 0, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}