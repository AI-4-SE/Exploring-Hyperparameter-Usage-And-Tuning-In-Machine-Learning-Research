{
    "CausalBert.py": {
        "sklearn": {
            "LogisticRegression_41": {
                "variable": {
                    "value": "log_reg",
                    "type": "variable",
                    "possible_values": []
                },
                "penalty": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                },
                "warm_start": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "solver": {
                    "value": "lbfgs",
                    "type": "str",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "zeros_60": {
                "variable": {
                    "value": "vec",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "ids.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "vocab_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_like_61": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "ids",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ids.cuda()",
                            "Call"
                        ],
                        [
                            "ids",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_85": {
                "variable": {
                    "value": "self.vocab_transform",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LayerNorm_86": {
                "variable": {
                    "value": "self.vocab_layer_norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "config.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-12",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_87": {
                "variable": {
                    "value": "self.vocab_projector",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleDict_89": {
                "variable": {
                    "value": "self.Q_cls",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_98": {
                "variable": {
                    "value": "self.g_cls",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size + self.num_labels",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.config.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_132": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(pooled_output, C_bow)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_164": {
                "variable": {
                    "value": "sm",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_294": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "*data",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "DataLoader_296": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(torch.tensor(out[x]) for x in ['W_ids', 'W_len', 'W_mask', 'C', 'T', 'Y'])",
                            "GeneratorExp"
                        ],
                        [
                            "TensorDataset(*data)",
                            "Call"
                        ],
                        [
                            "data",
                            "Method Argument"
                        ]
                    ]
                },
                "sampler": {
                    "value": "sampler",
                    "type": "variable",
                    "possible_values": [
                        [
                            "RandomSampler(data) if sampler == 'random' else SequentialSampler(data)",
                            "IfExp"
                        ],
                        [
                            "'random'",
                            "Method Argument"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_93": {
                "variable": {
                    "value": "self.Q_cls[%d % T]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(config.hidden_size + self.num_labels, 200)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gather_108": {
                "variable": {
                    "value": "target_words",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "W_ids",
                    "type": "variable",
                    "possible_values": [
                        [
                            "W_ids",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(mask_class(W_len.shape).uniform_() * W_len.float()).long() + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "erf_47": {
                "input": {
                    "value": "x / math.sqrt(2.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tensor_293": {
                "data": {
                    "value": "out[x]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "RandomSampler_295": {
                "data_source": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(torch.tensor(out[x]) for x in ['W_ids', 'W_len', 'W_mask', 'C', 'T', 'Y'])",
                            "GeneratorExp"
                        ],
                        [
                            "TensorDataset(*data)",
                            "Call"
                        ],
                        [
                            "data",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "SequentialSampler_295": {
                "data_source": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(torch.tensor(out[x]) for x in ['W_ids', 'W_len', 'W_mask', 'C', 'T', 'Y'])",
                            "GeneratorExp"
                        ],
                        [
                            "TensorDataset(*data)",
                            "Call"
                        ],
                        [
                            "data",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_94": {
                "in_features": {
                    "value": "config.hidden_size + self.num_labels",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_96": {
                "in_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.num_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_109": {
                "*size": {
                    "value": "W_ids.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_126": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_137": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_157": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}