{
    "model.py": {
        "sklearn": {
            "normalize_56": {
                "variable": {
                    "value": "self.Xs",
                    "possible_values": []
                },
                "X": {
                    "value": "self.Xs",
                    "possible_values": []
                }
            },
            "normalize_57": {
                "variable": {
                    "value": "self.Xt",
                    "possible_values": []
                },
                "X": {
                    "value": "self.Xt",
                    "possible_values": []
                }
            },
            "roc_auc_score_106": {
                "y_true": {
                    "value": "gts",
                    "possible_values": [
                        [
                            "self.Yte",
                            "Attribute"
                        ]
                    ]
                },
                "y_score": {
                    "value": "preds",
                    "possible_values": [
                        [
                            "self.prediction(self.Xte, self.W.numpy())",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "softmax_20": {
                "logits": {
                    "value": "tf.matmul(x, theta)",
                    "possible_values": []
                }
            },
            "SGD_59": {
                "variable": {
                    "value": "self.optimizer",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.options.learning_rate",
                    "possible_values": []
                }
            },
            "matmul_20": {
                "a": {
                    "value": "x",
                    "possible_values": []
                },
                "b": {
                    "value": "theta",
                    "possible_values": []
                }
            },
            "Variable_45": {
                "variable": {
                    "value": "self.W",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.loadtxt(self.options.load_model_from)",
                    "possible_values": []
                },
                "name": {
                    "value": "weight",
                    "possible_values": []
                }
            },
            "Variable_49": {
                "variable": {
                    "value": "self.W",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.ones((self.num_features, self.num_classes))",
                    "possible_values": []
                },
                "name": {
                    "value": "weight",
                    "possible_values": []
                }
            },
            "GradientTape_76": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "device_103": {
                "device_name": {
                    "value": "/CPU:0",
                    "possible_values": []
                }
            },
            "norm_77": {
                "tensor": {
                    "value": "self.W",
                    "possible_values": []
                }
            }
        }
    },
    "rot4c.py": {
        "tensorflow": {
            "set_seed_57": {
                "seed": {
                    "value": "1",
                    "possible_values": []
                }
            }
        }
    }
}