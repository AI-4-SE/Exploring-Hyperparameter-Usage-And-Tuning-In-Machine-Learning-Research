{
    "main.py": {
        "torch": {
            "DataParallel_515": {
                "variable": {
                    "value": "model_ft",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_ft",
                    "type": "Call",
                    "possible_values": [
                        [
                            "resnet152(num_classes=args.num_classes, sample_size=224, sample_duration=duration)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_ft).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "load_517": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.model_weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "{'cuda:1': 'cuda:0'}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "from_numpy_473": {
                "variable": {
                    "value": "torch_imgs",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "images.transpose(3, 0, 1, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool3d_92": {
                "variable": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "k_l[kernel_indx][tmp]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(dk, hk, wk)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "squeeze_92": {
                "variable": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "avg_pool3d_93": {
                "variable": {
                    "value": "act_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_l1[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(da, ha, wa)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "squeeze_93": {
                "variable": {
                    "value": "act_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "mul_113": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "kernel",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.avg_pool3d(k_l[kernel_indx][tmp], (dk, hk, wk)).squeeze(-1).squeeze(-1).squeeze(-1)",
                            "Call"
                        ],
                        [
                            "torch.cat([k.repeat(groups) for k in kernel], 0)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "act_map",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.avg_pool3d(a_l1[0], (da, ha, wa)).squeeze(-1).squeeze(-1).squeeze(-1)",
                            "Call"
                        ],
                        [
                            "act_map[lower_lim:upper_lim]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "min_117": {
                "variable": {
                    "value": "base",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pooled",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.mul(kernel, act_map)",
                            "Call"
                        ],
                        [
                            "pooled / pooled.sum(0).expand_as(pooled)",
                            "BinOp"
                        ],
                        [
                            "torch.FloatTensor([(x - base) / pooled_range for x in pooled])",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_526": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_102": {
                "variable": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[k.repeat(groups) for k in kernel]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_250": {
                "variable": {
                    "value": "layerout",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "activations[-index - 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_252": {
                "variable": {
                    "value": "cam",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[activations[-index - 1].shape[0], 1, activations[-index - 1].shape[2], activations[-index - 1].shape[3], activations[-index - 1].shape[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_527": {
                "data": {
                    "value": "vid",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "max_118": {
                "input": {
                    "value": "pooled",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.mul(kernel, act_map)",
                            "Call"
                        ],
                        [
                            "pooled / pooled.sum(0).expand_as(pooled)",
                            "BinOp"
                        ],
                        [
                            "torch.FloatTensor([(x - base) / pooled_range for x in pooled])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/densenet.py": {
        "torch": {
            "Sequential_164": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv3d(3, num_init_features, kernel_size=7, stride=(1, 2, 2), padding=(3, 3, 3), bias=False)), ('norm0', nn.BatchNorm3d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool3d(kernel_size=3, stride=2, padding=1))])",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_208": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_212": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.features(x)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "avg_pool3d_215": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(features, inplace=True)",
                            "Call"
                        ],
                        [
                            "F.avg_pool3d(out, kernel_size=(last_duration, last_size, last_size)).view(features.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.classifier(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(last_duration, last_size, last_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "dropout_104": {
                "variable": {
                    "value": "new_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "new_features",
                    "type": "Call",
                    "possible_values": [
                        [
                            "super(_DenseLayer, self).forward(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(new_features, p=self.drop_rate, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "self.drop_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_106": {
                "tensors": {
                    "value": "[x, new_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_75": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_78": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_84": {
                "num_features": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_85": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_87": {
                "in_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "growth_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_124": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_125": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_127": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_output_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool3d_133": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_198": {
                "num_features": {
                    "value": "num_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv3d_167": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_174": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_175": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_176": {
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/i3d.py": {
        "torch": {
            "from_numpy_495": {
                "variable": {
                    "value": "state_dict[name_pt + .conv3d.weight]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "conv_weights_rs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.transpose(conv_weights, (4, 3, 0, 1, 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "MaxPool3d_121": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_141": {
                "variable": {
                    "value": "self.branch_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "branch_1_conv1",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_148": {
                "variable": {
                    "value": "self.branch_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "branch_2_conv1",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_155": {
                "variable": {
                    "value": "self.branch_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "branch_3_pool",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_196": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out_0, out_1, out_2, out_3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_201": {
                "variable": {
                    "value": "placeholder_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[w_0[0].shape[0], w_0[0].shape[0], 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_202": {
                "variable": {
                    "value": "placeholder_3",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[w_3[0].shape[0], w_3[0].shape[0], 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AvgPool3d_274": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_275": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Softmax_283": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_497": {
                "variable": {
                    "value": "state_dict[name_pt + .conv3d.bias]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "conv_bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "sess.run(conv_bias_tensor)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_505": {
                "variable": {
                    "value": "state_dict[name_pt + .batch3d.weight]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_weights_rs.shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_507": {
                "variable": {
                    "value": "state_dict[name_pt + .batch3d.bias]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "beta.squeeze()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_509": {
                "variable": {
                    "value": "state_dict[name_pt + .batch3d.running_mean]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "moving_mean.squeeze()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_511": {
                "variable": {
                    "value": "state_dict[name_pt + .batch3d.running_var]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "moving_var.squeeze()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm3d_93": {
                "variable": {
                    "value": "self.batch3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_shape[4]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "relu_106": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv3d(inp)",
                            "Call"
                        ],
                        [
                            "self.batch3d(out)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.relu(out)",
                            "Call"
                        ],
                        [
                            "self.pool(inp)",
                            "Call"
                        ],
                        [
                            "torch.cat((out_0, out_1, out_2, out_3), 1)",
                            "Call"
                        ],
                        [
                            "layer(out_3)",
                            "Call"
                        ],
                        [
                            "self.maxPool3d_2a_3x3(out)",
                            "Call"
                        ],
                        [
                            "self.maxPool3d_3a_3x3(out)",
                            "Call"
                        ],
                        [
                            "self.maxPool3d_4a_3x3(out)",
                            "Call"
                        ],
                        [
                            "self.maxPool3d_5a_2x2(out)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(out)",
                            "Call"
                        ],
                        [
                            "self.dropout(out)",
                            "Call"
                        ],
                        [
                            "out.squeeze(3)",
                            "Call"
                        ],
                        [
                            "out.squeeze(3)",
                            "Call"
                        ],
                        [
                            "out.mean(2)",
                            "Call"
                        ],
                        [
                            "self.softmax(out_logits)",
                            "Call"
                        ]
                    ]
                }
            },
            "ConstantPad3d_120": {
                "variable": {
                    "value": "self.pad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding_shape",
                    "type": "Call",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "get_padding_shape(kernel_size, stride)",
                            "Call"
                        ],
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "get_padding_shape(kernel_size, stride)",
                            "Call"
                        ]
                    ]
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConstantPad3d_65": {
                "variable": {
                    "value": "self.pad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding_shape",
                    "type": "Call",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "get_padding_shape(kernel_size, stride)",
                            "Call"
                        ],
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "get_padding_shape(kernel_size, stride)",
                            "Call"
                        ]
                    ]
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_66": {
                "variable": {
                    "value": "self.conv3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "conv_shape[3]",
                            "Subscript"
                        ],
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_shape[4]",
                            "Subscript"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv3d_73": {
                "variable": {
                    "value": "self.conv3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "conv_shape[3]",
                            "Subscript"
                        ],
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_shape[4]",
                            "Subscript"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv3d_81": {
                "variable": {
                    "value": "self.conv3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "conv_shape[3]",
                            "Subscript"
                        ],
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_shape[4]",
                            "Subscript"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding_shape",
                    "type": "Call",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "get_padding_shape(kernel_size, stride)",
                            "Call"
                        ],
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "get_padding_shape(kernel_size, stride)",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_198": {
                "tensors": {
                    "value": "(a_0[0], a_1[0], a_2[0], a_3[0])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/mfnet_3d.py": {
        "torch": {
            "tensor_241": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.randn(1, 3, 16, 224, 224)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm3d_45": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_in",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_46": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_47": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_in",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filter",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(0",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "(1",
                            "MethodArgument"
                        ],
                        [
                            "(1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "g",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv', nn.Conv3d(3, conv1_num_out, kernel_size=(3, 5, 5), padding=(1, 2, 2), stride=(1, 2, 2), bias=False)), ('bn', nn.BatchNorm3d(conv1_num_out)), ('relu', nn.ReLU(inplace=True))])",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool3d_125": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_130": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('B%02d' % i, MF_UNIT(num_in=conv1_num_out if i == 1 else conv2_num_out, num_mid=num_mid, num_out=conv2_num_out, stride=(2, 1, 1) if i == 1 else (1, 1, 1), g=groups, first_block=i == 1)) for i in range(1, k_sec[2] + 1)])",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_142": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('B%02d' % i, MF_UNIT(num_in=conv2_num_out if i == 1 else conv3_num_out, num_mid=num_mid, num_out=conv3_num_out, stride=(1, 2, 2) if i == 1 else (1, 1, 1), g=groups, first_block=i == 1)) for i in range(1, k_sec[3] + 1)])",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_154": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('B%02d' % i, MF_UNIT(num_in=conv3_num_out if i == 1 else conv4_num_out, num_mid=num_mid, num_out=conv4_num_out, stride=(1, 2, 2) if i == 1 else (1, 1, 1), g=groups, first_block=i == 1)) for i in range(1, k_sec[4] + 1)])",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_166": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('B%02d' % i, MF_UNIT(num_in=conv4_num_out if i == 1 else conv5_num_out, num_mid=num_mid, num_out=conv5_num_out, stride=(1, 2, 2) if i == 1 else (1, 1, 1), g=groups, first_block=i == 1)) for i in range(1, k_sec[5] + 1)])",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_176": {
                "variable": {
                    "value": "self.tail",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('bn', nn.BatchNorm3d(conv5_num_out)), ('relu', nn.ReLU(inplace=True))])",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_191": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "conv5_num_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2 * conv4_num_out",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_182": {
                "variable": {
                    "value": "self.globalpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('avg', nn.AvgPool3d(kernel_size=(8, 7, 7), stride=(1, 1, 1))), ('dropout', nn.Dropout(p=dropout))])",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_187": {
                "variable": {
                    "value": "self.globalpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('avg', nn.AvgPool3d(kernel_size=(8, 7, 7), stride=(1, 1, 1)))])",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_241": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_121": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "conv1_num_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "16",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 5, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_122": {
                "num_features": {
                    "value": "conv1_num_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "16",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_123": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_177": {
                "num_features": {
                    "value": "conv5_num_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2 * conv4_num_out",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ReLU_178": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool3d_183": {
                "kernel_size": {
                    "value": "(8, 7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_184": {
                "p": {
                    "value": "dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "AvgPool3d_188": {
                "kernel_size": {
                    "value": "(8, 7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "models/resnet.py": {
        "torch": {
            "avg_pool3d_26": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Tensor_27": {
                "variable": {
                    "value": "zero_pads",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_16": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_44": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_47": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_87": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_88": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_89": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_91": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_92": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_93": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_94": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_149": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_156": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_157": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_158": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool3d_168": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(last_duration, last_size, last_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_170": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "400",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_33": {
                "tensors": {
                    "value": "[out.data, zero_pads]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_202": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_188": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_189": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_194": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/resnext.py": {
        "torch": {
            "avg_pool3d_23": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Tensor_24": {
                "variable": {
                    "value": "zero_pads",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_13": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_42": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_43": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv3d_44": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "cardinality",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_52": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv3d_53": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_55": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_112": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_119": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_120": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_121": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool3d_132": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(last_duration, last_size, last_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_134": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "cardinality * 32 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "400",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_30": {
                "tensors": {
                    "value": "[out.data, zero_pads]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_173": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_158": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_159": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_164": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "saliency_tubes.py": {
        "torch": {
            "no_grad_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/calc_utils.py": {
        "torch": {
            "avg_pool3d_80": {
                "variable": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "k_l[kernel_indx][tmp]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(dk, hk, wk)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "squeeze_80": {
                "variable": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "avg_pool3d_81": {
                "variable": {
                    "value": "act_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a_l1[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(da, ha, wa)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "squeeze_81": {
                "variable": {
                    "value": "act_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "mul_101": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "kernel",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.avg_pool3d(k_l[kernel_indx][tmp], (dk, hk, wk)).squeeze(-1).squeeze(-1).squeeze(-1)",
                            "Call"
                        ],
                        [
                            "torch.cat([k.repeat(groups) for k in kernel], 0)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "act_map",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.avg_pool3d(a_l1[0], (da, ha, wa)).squeeze(-1).squeeze(-1).squeeze(-1)",
                            "Call"
                        ],
                        [
                            "act_map[lower_lim:upper_lim]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "min_105": {
                "variable": {
                    "value": "base",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pooled",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.mul(kernel, act_map)",
                            "Call"
                        ],
                        [
                            "pooled / pooled.sum(0).expand_as(pooled)",
                            "BinOp"
                        ],
                        [
                            "torch.FloatTensor([(x - base) / pooled_range for x in pooled])",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_90": {
                "variable": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[k.repeat(groups) for k in kernel]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_106": {
                "input": {
                    "value": "pooled",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.mul(kernel, act_map)",
                            "Call"
                        ],
                        [
                            "pooled / pooled.sum(0).expand_as(pooled)",
                            "BinOp"
                        ],
                        [
                            "torch.FloatTensor([(x - base) / pooled_range for x in pooled])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "utils/load_utils.py": {
        "torch": {
            "from_numpy_13": {
                "variable": {
                    "value": "torch_images",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "images.transpose(3, 0, 1, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_103": {
                "variable": {
                    "value": "torch_imgs",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "images.transpose(3, 0, 1, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_174": {
                "variable": {
                    "value": "model_ft",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_ft",
                    "type": "Call",
                    "possible_values": [
                        [
                            "resnext50(sample_size=sample_size, sample_duration=duration, num_classes=num_classes)",
                            "Call"
                        ],
                        [
                            "resnext101(sample_size=sample_size, sample_duration=duration, num_classes=num_classes)",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "resnet50(sample_size=sample_size, sample_duration=duration, num_classes=num_classes)",
                            "Call"
                        ],
                        [
                            "resnet101(sample_size=sample_size, sample_duration=duration, num_classes=num_classes)",
                            "Call"
                        ],
                        [
                            "resnet152(sample_size=sample_size, sample_duration=duration, num_classes=num_classes)",
                            "Call"
                        ],
                        [
                            "resnet200(sample_size=sample_size, sample_duration=duration, num_classes=num_classes)",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "MFNET_3D(num_classes)",
                            "Call"
                        ],
                        [
                            "I3D(num_classes)",
                            "Call"
                        ],
                        [
                            "_load_resnet(model_name, num_classes, sample_duration, sample_size)",
                            "Call"
                        ],
                        [
                            "_load_resnext(model_name, num_classes, sample_duration, sample_size)",
                            "Call"
                        ],
                        [
                            "_load_mfnet(num_classes)",
                            "Call"
                        ],
                        [
                            "_load_i3d(num_classes)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_ft).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "load_176": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_path",
                    "type": "Variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "{'cuda:1': 'cuda:0'}",
                    "type": "Dict",
                    "possible_values": []
                }
            }
        }
    },
    "utils/vis_utils.py": {
        "torch": {
            "tensor_56": {
                "variable": {
                    "value": "layerout",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "activations[-index - 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_58": {
                "variable": {
                    "value": "cam",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[activations[-index - 1].shape[0], 1, activations[-index - 1].shape[2], activations[-index - 1].shape[3], activations[-index - 1].shape[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_248": {
                "variable": {
                    "value": "layerout",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "activations[-index - 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_252": {
                "variable": {
                    "value": "cam",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "cam_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[activations[-index - 1].shape[0], 1, activations[-index - 1].shape[2], activations[-index - 1].shape[3], activations[-index - 1].shape[4]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}