{
    "net2d.py": {
        "torch": {
            "GCN_6": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "Conv2d_13": {
                    "variable": {
                        "value": "self.conv_l1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "inplanes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(ks, 1)",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(ks // 2, 0)",
                        "possible_values": []
                    }
                },
                "Conv2d_16": {
                    "variable": {
                        "value": "self.conv_l2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, ks)",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(0, ks // 2)",
                        "possible_values": []
                    }
                },
                "Conv2d_18": {
                    "variable": {
                        "value": "self.conv_r1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "inplanes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, ks)",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(0, ks // 2)",
                        "possible_values": []
                    }
                },
                "Conv2d_20": {
                    "variable": {
                        "value": "self.conv_r2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(ks, 1)",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(ks // 2, 0)",
                        "possible_values": []
                    }
                }
            },
            "Refine_35": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "BatchNorm2d_41": {
                    "variable": {
                        "value": "self.bn",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes",
                        "possible_values": []
                    }
                },
                "ReLU_42": {
                    "variable": {
                        "value": "self.relu",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "Conv2d_43": {
                    "variable": {
                        "value": "self.conv1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                },
                "Conv2d_44": {
                    "variable": {
                        "value": "self.conv2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "3",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                }
            },
            "FCN_59": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "self.nout": {
                    "value": "nout",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "Conv2d_97": {
                    "variable": {
                        "value": "self.transformer",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "256",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "64",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    }
                }
            },
            "Sequential_145": {
                "variable": {
                    "value": "self.init_proj",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(nin, 3, 1, padding=0, bias=False)",
                    "possible_values": []
                }
            },
            "Sequential_100": {
                "*args": {
                    "value": "nn.Conv2d(inplanes, inplanes, 3, padding=1, bias=False)",
                    "possible_values": []
                }
            },
            "Conv2d_101": {
                "in_channels": {
                    "value": "inplanes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm2d_102": {
                "num_features": {
                    "value": "inplanes // 2",
                    "possible_values": []
                }
            },
            "ReLU_103": {
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "Dropout_104": {
                "p": {
                    "value": "0.1",
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "in_channels": {
                    "value": "inplanes // 2",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.nout",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "upsample_bilinear_132": {
                "input": {
                    "value": "fs4",
                    "possible_values": [
                        [
                            "self.refine9(F.upsample_bilinear(fs3, conv_x.size()[2:]) + gcfm5)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "input.size()[2:]",
                    "possible_values": []
                }
            },
            "Conv2d_146": {
                "in_channels": {
                    "value": "nin",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "3",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm2d_147": {
                "num_features": {
                    "value": "3",
                    "possible_values": []
                }
            },
            "ReLU_148": {
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "upsample_bilinear_128": {
                "input": {
                    "value": "gcfm1",
                    "possible_values": [
                        [
                            "self.refine1(self.gcn1(fm4))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "fm3.size()[2:]",
                    "possible_values": []
                }
            },
            "upsample_bilinear_129": {
                "input": {
                    "value": "fs1",
                    "possible_values": [
                        [
                            "self.refine6(F.upsample_bilinear(gcfm1, fm3.size()[2:]) + gcfm2)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "fm2.size()[2:]",
                    "possible_values": []
                }
            },
            "upsample_bilinear_130": {
                "input": {
                    "value": "fs2",
                    "possible_values": [
                        [
                            "self.refine7(F.upsample_bilinear(fs1, fm2.size()[2:]) + gcfm3)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "pool_x.size()[2:]",
                    "possible_values": []
                }
            },
            "upsample_bilinear_131": {
                "input": {
                    "value": "fs3",
                    "possible_values": [
                        [
                            "self.refine8(F.upsample_bilinear(fs2, pool_x.size()[2:]) + gcfm4)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "conv_x.size()[2:]",
                    "possible_values": []
                }
            }
        }
    },
    "net3d.py": {
        "torch": {
            "BasicBlock3x3x1_29": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "BatchNorm3d_35": {
                    "variable": {
                        "value": "self.bn1",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes",
                        "possible_values": []
                    }
                },
                "ReLU_36": {
                    "variable": {
                        "value": "self.relu",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_38": {
                    "variable": {
                        "value": "self.bn2",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes",
                        "possible_values": []
                    }
                },
                "self.downsample": {
                    "value": "downsample",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "nn.Sequential(nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=(stride, stride, 1), bias=False), nn.MaxPool3d(kernel_size=(1, 1, stride), stride=(1, 1, stride)), nn.BatchNorm3d(planes * block.expansion))",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "self.stride": {
                    "value": "stride",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BasicBlock3x3x3_61": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "BatchNorm3d_67": {
                    "variable": {
                        "value": "self.bn1",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes",
                        "possible_values": []
                    }
                },
                "ReLU_68": {
                    "variable": {
                        "value": "self.relu",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_70": {
                    "variable": {
                        "value": "self.bn2",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes",
                        "possible_values": []
                    }
                },
                "self.downsample": {
                    "value": "downsample",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "nn.Sequential(nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=(stride, stride, 1), bias=False), nn.MaxPool3d(kernel_size=(1, 1, stride), stride=(1, 1, stride)), nn.BatchNorm3d(planes * block.expansion))",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "self.stride": {
                    "value": "stride",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Bottleneck3x3x1_93": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "Conv3d_98": {
                    "variable": {
                        "value": "self.conv1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "inplanes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_99": {
                    "variable": {
                        "value": "self.bn1",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes",
                        "possible_values": []
                    }
                },
                "Conv3d_100": {
                    "variable": {
                        "value": "self.conv2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(3, 3, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "stride",
                        "possible_values": [
                            [
                                "1",
                                "MethodArgument"
                            ],
                            [
                                "1",
                                "MethodArgument"
                            ],
                            [
                                "1",
                                "MethodArgument"
                            ],
                            [
                                "1",
                                "MethodArgument"
                            ],
                            [
                                "1",
                                "MethodArgument"
                            ],
                            [
                                "1",
                                "MethodArgument"
                            ]
                        ]
                    },
                    "padding": {
                        "value": "(1, 1, 0)",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_107": {
                    "variable": {
                        "value": "self.bn2",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes",
                        "possible_values": []
                    }
                },
                "Conv3d_108": {
                    "variable": {
                        "value": "self.conv3",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "planes",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "planes * 4",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_109": {
                    "variable": {
                        "value": "self.bn3",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "planes * 4",
                        "possible_values": []
                    }
                },
                "ReLU_110": {
                    "variable": {
                        "value": "self.relu",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "self.downsample": {
                    "value": "downsample",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "nn.Sequential(nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=(stride, stride, 1), bias=False), nn.MaxPool3d(kernel_size=(1, 1, stride), stride=(1, 1, stride)), nn.BatchNorm3d(planes * block.expansion))",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "self.stride": {
                    "value": "stride",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "MaxPool3d_113": {
                    "variable": {
                        "value": "self.pool",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, 1, 2)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "(1, 1, 2)",
                        "possible_values": []
                    }
                }
            },
            "Projection_140": {
                "base_class_0": {
                    "value": "torch.nn.Sequential",
                    "possible_values": []
                }
            },
            "DenseBlock_155": {
                "base_class_0": {
                    "value": "torch.nn.Sequential",
                    "possible_values": []
                }
            },
            "UpTransition_165": {
                "base_class_0": {
                    "value": "torch.nn.Sequential",
                    "possible_values": []
                }
            },
            "Final_181": {
                "base_class_0": {
                    "value": "torch.nn.Sequential",
                    "possible_values": []
                }
            },
            "Pseudo3DLayer_198": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "BatchNorm3d_202": {
                    "variable": {
                        "value": "self.bn1",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "num_input_features",
                        "possible_values": []
                    }
                },
                "ReLU_203": {
                    "variable": {
                        "value": "self.relu1",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "Conv3d_204": {
                    "variable": {
                        "value": "self.conv1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "num_input_features",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "bn_size * growth_rate",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_212": {
                    "variable": {
                        "value": "self.bn2",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "bn_size * growth_rate",
                        "possible_values": []
                    }
                },
                "ReLU_213": {
                    "variable": {
                        "value": "self.relu2",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "Conv3d_214": {
                    "variable": {
                        "value": "self.conv2",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "bn_size * growth_rate",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "growth_rate",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(3, 3, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(1, 1, 0)",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_223": {
                    "variable": {
                        "value": "self.bn3",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "growth_rate",
                        "possible_values": []
                    }
                },
                "ReLU_224": {
                    "variable": {
                        "value": "self.relu3",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "Conv3d_225": {
                    "variable": {
                        "value": "self.conv3",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "growth_rate",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "growth_rate",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, 1, 3)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(0, 0, 1)",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_234": {
                    "variable": {
                        "value": "self.bn4",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "growth_rate",
                        "possible_values": []
                    }
                },
                "ReLU_235": {
                    "variable": {
                        "value": "self.relu4",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "Conv3d_236": {
                    "variable": {
                        "value": "self.conv4",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "growth_rate",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "growth_rate",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "1",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "self.drop_rate": {
                    "value": "drop_rate",
                    "possible_values": []
                }
            },
            "PVP_267": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "MaxPool3d_270": {
                    "variable": {
                        "value": "self.pool64",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(64, 64, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "(64, 64, 1)",
                        "possible_values": []
                    }
                },
                "MaxPool3d_271": {
                    "variable": {
                        "value": "self.pool32",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(32, 32, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "(32, 32, 1)",
                        "possible_values": []
                    }
                },
                "MaxPool3d_272": {
                    "variable": {
                        "value": "self.pool16",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(16, 16, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "(16, 16, 1)",
                        "possible_values": []
                    }
                },
                "MaxPool3d_273": {
                    "variable": {
                        "value": "self.pool8",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(8, 8, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "(8, 8, 1)",
                        "possible_values": []
                    }
                },
                "Conv3d_275": {
                    "variable": {
                        "value": "self.proj64",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "in_ch",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "1",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, 1, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(1, 1, 0)",
                        "possible_values": []
                    }
                },
                "Conv3d_277": {
                    "variable": {
                        "value": "self.proj32",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "in_ch",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "1",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, 1, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(1, 1, 0)",
                        "possible_values": []
                    }
                },
                "Conv3d_279": {
                    "variable": {
                        "value": "self.proj16",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "in_ch",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "1",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, 1, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(1, 1, 0)",
                        "possible_values": []
                    }
                },
                "Conv3d_281": {
                    "variable": {
                        "value": "self.proj8",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "in_ch",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "1",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, 1, 1)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "1",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(1, 1, 0)",
                        "possible_values": []
                    }
                }
            },
            "AHNet_305": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "Conv3d_311": {
                    "variable": {
                        "value": "self.conv1",
                        "possible_values": []
                    },
                    "in_channels": {
                        "value": "1",
                        "possible_values": []
                    },
                    "out_channels": {
                        "value": "64",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(7, 7, 3)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "(2, 2, 1)",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "(3, 3, 1)",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                },
                "MaxPool3d_318": {
                    "variable": {
                        "value": "self.pool1",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(1, 1, 2)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "(1, 1, 2)",
                        "possible_values": []
                    }
                },
                "BatchNorm3d_319": {
                    "variable": {
                        "value": "self.bn0",
                        "possible_values": []
                    },
                    "num_features": {
                        "value": "64",
                        "possible_values": []
                    }
                },
                "ReLU_320": {
                    "variable": {
                        "value": "self.relu",
                        "possible_values": []
                    },
                    "inplace": {
                        "value": "True",
                        "possible_values": []
                    }
                },
                "MaxPool3d_321": {
                    "variable": {
                        "value": "self.maxpool",
                        "possible_values": []
                    },
                    "kernel_size": {
                        "value": "(3, 3, 3)",
                        "possible_values": []
                    },
                    "stride": {
                        "value": "2",
                        "possible_values": []
                    },
                    "padding": {
                        "value": "1",
                        "possible_values": []
                    }
                }
            },
            "Conv3d_9": {
                "in_channels": {
                    "value": "in_planes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Conv3d_20": {
                "in_channels": {
                    "value": "in_planes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 1)",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(1, 1, 0)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "upsample_285": {
                "variable": {
                    "value": "x64",
                    "possible_values": []
                },
                "input": {
                    "value": "self.proj64(self.pool64(x))",
                    "possible_values": []
                },
                "size": {
                    "value": "(x.size(2), x.size(3), x.size(4))",
                    "possible_values": []
                },
                "mode": {
                    "value": "trilinear",
                    "possible_values": []
                }
            },
            "upsample_289": {
                "variable": {
                    "value": "x32",
                    "possible_values": []
                },
                "input": {
                    "value": "self.proj32(self.pool32(x))",
                    "possible_values": []
                },
                "size": {
                    "value": "(x.size(2), x.size(3), x.size(4))",
                    "possible_values": []
                },
                "mode": {
                    "value": "trilinear",
                    "possible_values": []
                }
            },
            "upsample_293": {
                "variable": {
                    "value": "x16",
                    "possible_values": []
                },
                "input": {
                    "value": "self.proj16(self.pool16(x))",
                    "possible_values": []
                },
                "size": {
                    "value": "(x.size(2), x.size(3), x.size(4))",
                    "possible_values": []
                },
                "mode": {
                    "value": "trilinear",
                    "possible_values": []
                }
            },
            "upsample_297": {
                "variable": {
                    "value": "x8",
                    "possible_values": []
                },
                "input": {
                    "value": "self.proj8(self.pool8(x))",
                    "possible_values": []
                },
                "size": {
                    "value": "(x.size(2), x.size(3), x.size(4))",
                    "possible_values": []
                },
                "mode": {
                    "value": "trilinear",
                    "possible_values": []
                }
            },
            "cat_301": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x64, x32, x16, x8)",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "cat_452": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(psp, d4)",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "dropout_262": {
                "variable": {
                    "value": "new_features",
                    "possible_values": []
                },
                "input": {
                    "value": "new_features",
                    "possible_values": [
                        [
                            "self.conv4(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(new_features, p=self.drop_rate, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "self.drop_rate",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "possible_values": []
                }
            },
            "cat_264": {
                "tensors": {
                    "value": "[inx, new_features]",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "Sequential_403": {
                "variable": {
                    "value": "downsample",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=(stride, stride, 1), bias=False)",
                    "possible_values": []
                }
            },
            "Sequential_420": {
                "*args": {
                    "value": "*layers",
                    "possible_values": []
                }
            },
            "BatchNorm3d_143": {
                "num_features": {
                    "value": "num_input_features",
                    "possible_values": []
                }
            },
            "ReLU_144": {
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "Conv3d_147": {
                "in_channels": {
                    "value": "num_input_features",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_output_features",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "BatchNorm3d_168": {
                "num_features": {
                    "value": "num_input_features",
                    "possible_values": []
                }
            },
            "ReLU_169": {
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "Conv3d_172": {
                "in_channels": {
                    "value": "num_input_features",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_output_features",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Upsample_178": {
                "scale_factor": {
                    "value": "2",
                    "possible_values": []
                },
                "mode": {
                    "value": "trilinear",
                    "possible_values": []
                }
            },
            "BatchNorm3d_184": {
                "num_features": {
                    "value": "num_input_features",
                    "possible_values": []
                }
            },
            "ReLU_185": {
                "inplace": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "Conv3d_188": {
                "in_channels": {
                    "value": "num_input_features",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_output_features",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 1)",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 0)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "Upsample_195": {
                "scale_factor": {
                    "value": "2",
                    "possible_values": []
                },
                "mode": {
                    "value": "trilinear",
                    "possible_values": []
                }
            },
            "Conv3d_404": {
                "in_channels": {
                    "value": "self.inplanes",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "possible_values": []
                },
                "stride": {
                    "value": "(stride, stride, 1)",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "MaxPool3d_410": {
                "kernel_size": {
                    "value": "(1, 1, stride)",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1, stride)",
                    "possible_values": []
                }
            },
            "BatchNorm3d_412": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "possible_values": []
                }
            }
        }
    }
}