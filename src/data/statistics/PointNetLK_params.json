{
    "data.py": {
        "torch": {
            "max_33": {
                "variable": {
                    "value": "nmax",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "nn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "v.norm(p=2, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_43": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "v.abs()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_49": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(tensor, dim=0)[0] - torch.min(tensor, dim=0)[0]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_65": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "dim_p",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "randn_86": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_89": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_105": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_135": {
                "variable": {
                    "value": "noise",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "randn_159": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_237": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_247": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_249": {
                "variable": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_250": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w, v)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_286": {
                "variable": {
                    "value": "twist",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "numpy.array(self.perturbation[index])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_20": {
                "ndarray": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mesh.vertex_array",
                            "Attribute"
                        ],
                        [
                            "tensor - m",
                            "BinOp"
                        ],
                        [
                            "tensor",
                            "Name"
                        ],
                        [
                            "tensor - m",
                            "BinOp"
                        ],
                        [
                            "v / s * 0.5",
                            "BinOp"
                        ],
                        [
                            "tensor / s",
                            "BinOp"
                        ],
                        [
                            "torch.zeros(batch_size, 3)",
                            "Call"
                        ]
                    ]
                }
            },
            "randperm_70": {
                "variable": {
                    "value": "idx",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "num_points",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_274": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_85": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_104": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_48": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "min_48": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_120": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_158": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_234": {
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_244": {
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "DataLoader_220": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_221": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.test_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_225": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_57": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_60": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "result['r']",
                            "Subscript"
                        ],
                        [
                            "result['r']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "mse_loss_61": {
                "variable": {
                    "value": "loss_r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "result['r']",
                            "Subscript"
                        ],
                        [
                            "result['r']",
                            "Subscript"
                        ]
                    ]
                },
                "target": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(r)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(r)",
                            "Call"
                        ]
                    ]
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "eye_90": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_93": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "result['r']",
                            "Subscript"
                        ],
                        [
                            "result['r']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "mse_loss_94": {
                "variable": {
                    "value": "loss_r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "result['r']",
                            "Subscript"
                        ],
                        [
                            "result['r']",
                            "Subscript"
                        ]
                    ]
                },
                "target": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(r)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(r)",
                            "Call"
                        ]
                    ]
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_112": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "learnable_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "filter(lambda p: p.requires_grad, model.parameters())",
                            "Call"
                        ]
                    ]
                }
            },
            "SGD_114": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "learnable_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "filter(lambda p: p.requires_grad, model.parameters())",
                            "Call"
                        ]
                    ]
                },
                "lr": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_208": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_209": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_243": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_135": {
                "obj": {
                    "value": "snap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': epoch + 1, 'model': model.state_dict(), 'min_loss': best_test_loss, 'optimizer': optimizer.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "'checkpoints/%s/models/model_snap.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_136": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'checkpoints/%s/models/model.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_223": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mse_loss_58": {
                "input": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": [
                        [
                            "est_T.matmul(igt)",
                            "Call"
                        ],
                        [
                            "est_T.matmul(igt)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.eye(4).to(error).view(1, 4, 4).expand(error.size(0), 4, 4)",
                            "Call"
                        ],
                        [
                            "torch.eye(4).to(error).view(1, 4, 4).expand(error.size(0), 4, 4)",
                            "Call"
                        ]
                    ]
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mse_loss_91": {
                "input": {
                    "value": "error",
                    "type": "variable",
                    "possible_values": [
                        [
                            "est_T.matmul(igt)",
                            "Call"
                        ],
                        [
                            "est_T.matmul(igt)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.eye(4).to(error).view(1, 4, 4).expand(error.size(0), 4, 4)",
                            "Call"
                        ],
                        [
                            "torch.eye(4).to(error).view(1, 4, 4).expand(error.size(0), 4, 4)",
                            "Call"
                        ]
                    ]
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "save_132": {
                "obj": {
                    "value": "snap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': epoch + 1, 'model': model.state_dict(), 'min_loss': best_test_loss, 'optimizer': optimizer.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "'checkpoints/%s/models/best_model_snap.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_133": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'checkpoints/%s/models/best_model.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_230": {
                "f": {
                    "value": "args.transfer_ptnet_weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_249": {
                "f": {
                    "value": "args.pretrained",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "max_pool1d_11": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "points.transpose(1, 2)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "flatten(self.sy(x))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "x.size(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "avg_pool1d_15": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "points.transpose(1, 2)",
                            "Call"
                        ],
                        [
                            "self.h1(x)",
                            "Call"
                        ],
                        [
                            "self.h2(x)",
                            "Call"
                        ],
                        [
                            "flatten(self.sy(x))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "x.size(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "rand_218": {
                "variable": {
                    "value": "template",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_26": {
                "variable": {
                    "value": "self.h1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*self.h1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_34": {
                "variable": {
                    "value": "self.h2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*self.h2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list_layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "nll_loss_67": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.nn.functional.log_softmax(out, dim=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tensor_81": {
                "variable": {
                    "value": "twist",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Parameter_82": {
                "variable": {
                    "value": "self.dt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "twist.view(1, 6)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "learn_delta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "eye_106": {
                "variable": {
                    "value": "est_T0",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_108": {
                "variable": {
                    "value": "self.est_T_series",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "maxiter + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "*est_T0.size()",
                    "type": "Starred",
                    "possible_values": []
                },
                "dtype": {
                    "value": "est_T0.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_173": {
                "variable": {
                    "value": "transf",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "template.size(0)",
                            "Call"
                        ],
                        [
                            "template.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "diag_175": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dt[b, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Conv1d_22": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_22": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_24": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_24": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_28": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_28": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_30": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_30": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_32": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "emb_dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ],
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_32": {
                "num_features": {
                    "value": "emb_dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ],
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "emb_dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ],
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_54": {
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_56": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_56": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_58": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "40",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "log_softmax_68": {
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier(feat)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_201": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {
            "device_97": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_105": {
                "f": {
                    "value": "args.pretrained",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "test_sample.py": {
        "torch": {
            "device_125": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_58": {
                "data": {
                    "value": "template",
                    "type": "variable",
                    "possible_values": [
                        [
                            "loadData('test_data')",
                            "Call"
                        ],
                        [
                            "torch.tensor(template)[test_idx]",
                            "Subscript"
                        ],
                        [
                            "template.view(1, -1, 3)",
                            "Call"
                        ],
                        [
                            "template.to(args.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_123": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_133": {
                "f": {
                    "value": "args.pretrained",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "train_classifier.py": {
        "torch": {
            "DataLoader_205": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_206": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_210": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_105": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "learnable_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "filter(lambda p: p.requires_grad, model.parameters())",
                            "Call"
                        ]
                    ]
                }
            },
            "SGD_107": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "learnable_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "filter(lambda p: p.requires_grad, model.parameters())",
                            "Call"
                        ]
                    ]
                },
                "lr": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_193": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_194": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_219": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_129": {
                "obj": {
                    "value": "snap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': epoch + 1, 'model': model.state_dict(), 'min_loss': best_test_loss, 'optimizer': optimizer.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "'checkpoints/%s/models/model_snap.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_130": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'checkpoints/%s/models/model.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_131": {
                "obj": {
                    "value": "model.ptnet.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'checkpoints/%s/models/ptnet_model.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_208": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_125": {
                "obj": {
                    "value": "snap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': epoch + 1, 'model': model.state_dict(), 'min_loss': best_test_loss, 'optimizer': optimizer.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "'checkpoints/%s/models/best_model_snap.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_126": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'checkpoints/%s/models/best_model.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_127": {
                "obj": {
                    "value": "model.ptnet.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'checkpoints/%s/models/best_ptnet_model.t7' % args.exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_225": {
                "f": {
                    "value": "args.pretrained",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "utils/data_utils.py": {
        "torch": {
            "eye_5": {
                "variable": {
                    "value": "template_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_6": {
                "variable": {
                    "value": "source_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_10": {
                "variable": {
                    "value": "template_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[template_mean, p0_m.unsqueeze(-1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_11": {
                "variable": {
                    "value": "one_",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0.0, 0.0, 1.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_12": {
                "variable": {
                    "value": "template_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[template_mean, one_]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_20": {
                "variable": {
                    "value": "source_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[source_mean, -p1_m.unsqueeze(-1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_21": {
                "variable": {
                    "value": "one_",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0.0, 0.0, 1.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_22": {
                "variable": {
                    "value": "source_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[source_mean, one_]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils/globset.py": {
        "torch": {}
    },
    "utils/invmat.py": {
        "torch": {
            "zeros_like_10": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randn(2, 3, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_62": {
                "variable": {
                    "value": "ex",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "h * w",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unsqueeze_62": {
                "variable": {
                    "value": "ex",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_116": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils/partial_data.py": {
        "torch": {
            "norm_25": {
                "variable": {
                    "value": "p_mag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_trans",
                    "type": "variable",
                    "possible_values": [
                        [
                            "p + 2",
                            "BinOp"
                        ]
                    ]
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_26": {
                "variable": {
                    "value": "p_COM",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_trans",
                    "type": "variable",
                    "possible_values": [
                        [
                            "p + 2",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "stack_32": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "file.get('templates')",
                            "Call"
                        ],
                        [
                            "np.matmul(R, data_original[0].T).T + np.array([0.2, 0.3, 0.1])",
                            "BinOp"
                        ],
                        [
                            "data.reshape(1, -1, 3)",
                            "Call"
                        ],
                        [
                            "torch.tensor(data).float()",
                            "Call"
                        ],
                        [
                            "[d[mask[idx]].view(-1, 3) for (idx, d) in enumerate(p)]",
                            "ListComp"
                        ],
                        [
                            "[d[:size] for d in data]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(data)",
                            "Call"
                        ],
                        [
                            "[d[mask[idx]] for (idx, d) in enumerate(data)]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "tensor_57": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "file.get('templates')",
                            "Call"
                        ],
                        [
                            "np.matmul(R, data_original[0].T).T + np.array([0.2, 0.3, 0.1])",
                            "BinOp"
                        ],
                        [
                            "data.reshape(1, -1, 3)",
                            "Call"
                        ],
                        [
                            "torch.tensor(data).float()",
                            "Call"
                        ],
                        [
                            "[d[mask[idx]].view(-1, 3) for (idx, d) in enumerate(p)]",
                            "ListComp"
                        ],
                        [
                            "[d[:size] for d in data]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(data)",
                            "Call"
                        ],
                        [
                            "[d[mask[idx]] for (idx, d) in enumerate(data)]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "norm_27": {
                "input": {
                    "value": "p_COM",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.mean(p_trans, 1, keepdim=True)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils/se3.py": {
        "torch": {
            "cat_16": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(zw, zv)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_29": {
                "variable": {
                    "value": "O",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "w1",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_31": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.stack((O, -w3, w2, v1), dim=1), torch.stack((w3, O, -w1, v2), dim=1), torch.stack((-w2, w1, O, v3), dim=1), torch.stack((O, O, O, O), dim=1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_42": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w1, w2, w3, v1, v2, v3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_57": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tensor_70": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "Rp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(R, p)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_72": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(Rp, z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tensor_83": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_84": {
                "variable": {
                    "value": "Qq",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(Q, q)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_85": {
                "variable": {
                    "value": "ig",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(Qq, z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w, v)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_46": {
                "n": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_32": {
                "tensors": {
                    "value": "(O, -w3, w2, v1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_33": {
                "tensors": {
                    "value": "(w3, O, -w1, v2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_34": {
                "tensors": {
                    "value": "(-w2, w1, O, v3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_35": {
                "tensors": {
                    "value": "(O, O, O, O)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils/sinc.py": {
        "torch": {
            "zeros_like_8": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_9": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_22": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_23": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_36": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_37": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_51": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_52": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_65": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_66": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_79": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_80": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_94": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_95": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_108": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_109": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_123": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_124": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_137": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_138": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_154": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_155": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sin_15": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_58": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_86": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_29": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_29": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_72": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_101": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_115": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_130": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_43": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_43": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_72": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_144": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_86": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_115": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_144": {
                "input": {
                    "value": "t[c]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_161": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "utils/so3.py": {
        "torch": {
            "cross_8": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x.view(-1, 3)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "y.view(-1, 3)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_18": {
                "variable": {
                    "value": "O",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_20": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.stack((O, -x3, x2), dim=1), torch.stack((x3, O, -x1), dim=1), torch.stack((-x2, x1, O), dim=1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_29": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2, x3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_44": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_59": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_78": {
                "variable": {
                    "value": "tr",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "X_.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "acos_89": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(tr - 1) / 2",
                            "BinOp"
                        ],
                        [
                            "s == 0",
                            "Compare"
                        ]
                    ]
                }
            },
            "zeros_like_95": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "R",
                    "type": "variable",
                    "possible_values": [
                        [
                            "I + sinc.Sinc1(t) * W + sinc.Sinc2(t) * S",
                            "BinOp"
                        ],
                        [
                            "I + sinc1(t) * W + sinc2(t) * S",
                            "BinOp"
                        ],
                        [
                            "g.view(-1, 3, 3)",
                            "Call"
                        ],
                        [
                            "g.view(-1, 3, 3)",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_145": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_159": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_162": {
                "variable": {
                    "value": "eta",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "w.norm(p=2, dim=1).view(-1, 1, 1)",
                            "Call"
                        ],
                        [
                            "w.norm(p=2, dim=1).view(-1, 1, 1)",
                            "Call"
                        ],
                        [
                            "torch.acos(c)",
                            "Call"
                        ],
                        [
                            "x.view(-1, 3).norm(p=2, dim=1).view(-1, 1, 1)",
                            "Call"
                        ],
                        [
                            "x.view(-1, 3).norm(p=2, dim=1).view(-1, 1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_33": {
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "trace_81": {
                "variable": {
                    "value": "tr[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X_[i, :, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "sqrt_103": {
                "variable": {
                    "value": "aw1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A[:, 0, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sqrt_104": {
                "variable": {
                    "value": "aw2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A[:, 1, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sqrt_105": {
                "variable": {
                    "value": "aw3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A[:, 2, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sign_106": {
                "variable": {
                    "value": "sgn_3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A[:, 0, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sign_108": {
                "variable": {
                    "value": "sgn_23",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A[:, 1, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "stack_114": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w1, w2, w3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "abs_91": {
                "input": {
                    "value": "sc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sinc1(t)",
                            "Call"
                        ],
                        [
                            "sc.view(-1, 1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_92": {
                "input": {
                    "value": "sc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sinc1(t)",
                            "Call"
                        ],
                        [
                            "sc.view(-1, 1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_21": {
                "tensors": {
                    "value": "(O, -x3, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_22": {
                "tensors": {
                    "value": "(x3, O, -x1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_23": {
                "tensors": {
                    "value": "(-x2, x1, O)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tan_167": {
                "input": {
                    "value": "t[c] / 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "eye_102": {
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_102": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}