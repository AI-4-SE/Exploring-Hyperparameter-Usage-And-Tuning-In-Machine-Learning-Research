{
    "Utils.py": {
        "sklearn": {
            "accuracy_score_88": {
                "variable": {
                    "value": "acc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "real_all",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.empty(shape=0, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "np.concatenate((real_all, y), axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_all",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.empty(shape=0, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "np.concatenate((pred_all, pred.cpu()), axis=-1)",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "max_77": {
                "variable": {
                    "value": "(_, pred)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "F.softmax(logit, -1).data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_56": {
                "input": {
                    "value": "torch.tensor(2.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softplus_56": {
                "input": {
                    "value": "-joint",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_57": {
                "input": {
                    "value": "torch.tensor(2.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_56": {
                "data": {
                    "value": "2.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softplus_57": {
                "input": {
                    "value": "-marginal",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_57": {
                "data": {
                    "value": "2.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_77": {
                "input": {
                    "value": "logit",
                    "type": "Name",
                    "possible_values": [
                        [
                            "classifier(globalf)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "Module.py": {
        "torch": {
            "Conv2d_14": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "renorm_50": {
                "variable": {
                    "value": "self.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "maxnorm": {
                    "value": "self.max_norm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_62": {
                "variable": {
                    "value": "self.c1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "F1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "8",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, int(fs / 2))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, int(fs / 2) // 2 - 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNorm2d_64": {
                "variable": {
                    "value": "self.b1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "F1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "8",
                            "Constant"
                        ]
                    ]
                }
            },
            "BatchNorm2d_67": {
                "variable": {
                    "value": "self.b2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "F1 * D",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "AvgPool2d_68": {
                "variable": {
                    "value": "self.p2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 4)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_69": {
                "variable": {
                    "value": "self.d2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "drop_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_80": {
                "variable": {
                    "value": "self.c3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nfeatl",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "F1 * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 16)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "nfeatl",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 16 // 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNorm2d_82": {
                "variable": {
                    "value": "self.b3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "F1 * D",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "AvgPool2d_83": {
                "variable": {
                    "value": "self.p3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 8)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 8)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_84": {
                "variable": {
                    "value": "self.d3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "drop_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "Constant"
                        ]
                    ]
                }
            },
            "flatten_88": {
                "variable": {
                    "value": "h3_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.d3(self.p3(F.elu(self.b3(self.c3(x)))))",
                            "Call"
                        ]
                    ]
                },
                "start_dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.local_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=nfeatl, out_channels=F1 * D, kernel_size=(1, 16), stride=1, bias=False, groups=nfeatl, padding=(0, 16 // 2))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_102": {
                "variable": {
                    "value": "self.dense1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(nfeatg * 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_103": {
                "variable": {
                    "value": "self.drop1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_109": {
                "variable": {
                    "value": "concat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(localff, globalf)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Dropout_122": {
                "variable": {
                    "value": "self.drop1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_123": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "int(self.nfeatg + self.nfeatl)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_129": {
                "variable": {
                    "value": "concat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(localf, globalff)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_138": {
                "variable": {
                    "value": "self.dense1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nfeatr",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "st.num_cl",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_149": {
                "variable": {
                    "value": "self.fc1_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nfeatr",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int(nfeatr / 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm1d_150": {
                "variable": {
                    "value": "self.bn1_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "int(nfeatr / 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_151": {
                "variable": {
                    "value": "self.fc1_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nfeati",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int(nfeati / 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm1d_152": {
                "variable": {
                    "value": "self.bn1_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "int(nfeati / 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_154": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(nfeati / 16) + int(nfeatr / 16)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int(nfeati / 16) + int(nfeatr / 16)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm1d_155": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "int(nfeati / 16) + int(nfeatr / 16)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_157": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(nfeati / 16) + int(nfeatr / 16)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "dropout_164": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1_x(self.fc1_x(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dropout_165": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1_y(self.fc1_y(y))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_167": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat((x, y), dim=-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_168": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.fc2(h))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_178": {
                "variable": {
                    "value": "self.embed_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(nfeat, nfeat * 2, kernel_size=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "split_183": {
                "variable": {
                    "value": "(rele, irre)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "embedded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.embed_layer(x)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "[int(self.nfeat), int(self.nfeat)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "variable": {
                    "value": "self.act_func",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "InstanceNorm2d_18": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tanh_26": {
                "variable": {
                    "value": "self.act_func",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "in_channels": {
                    "value": "nfeatl",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "F1 * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 16)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "nfeatl",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 16 // 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNorm2d_98": {
                "num_features": {
                    "value": "F1 * D",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "AvgPool2d_99": {
                "kernel_size": {
                    "value": "(1, 8)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 8)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_100": {
                "p": {
                    "value": "drop_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "Constant"
                        ]
                    ]
                }
            },
            "cat_167": {
                "tensors": {
                    "value": "(x, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2d_178": {
                "in_channels": {
                    "value": "nfeat",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nfeat * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_179": {
                "num_features": {
                    "value": "nfeat * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ELU_179": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_179": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_28": {
                "variable": {
                    "value": "self.act_func",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "elu_73": {
                "input": {
                    "value": "self.b2(self.c2(h1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_87": {
                "input": {
                    "value": "self.b3(self.c3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ELU_30": {
                "variable": {
                    "value": "self.act_func",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_32": {
                "variable": {
                    "value": "self.act_func",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Run_EEGNet_1.py": {
        "torch": {
            "device_24": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "ExponentialLR_48": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "opt",
                    "type": "Name",
                    "possible_values": [
                        [
                            "radam.RAdam(parameters, lr=st.lr, weight_decay=st.w_decay)",
                            "Call"
                        ]
                    ]
                },
                "gamma": {
                    "value": "0.99",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_103": {
                "variable": {
                    "value": "train",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "train",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.transpose(train, [-1, 0, 1])",
                            "Call"
                        ],
                        [
                            "np.expand_dims(train, axis=1)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(train).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_104": {
                "variable": {
                    "value": "trlbl",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "all_trlbl",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.empty(shape=0, dtype=np.int32)",
                            "Call"
                        ],
                        [
                            "np.concatenate((all_trlbl, trlbl), axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_105": {
                "variable": {
                    "value": "valid",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "valid",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.transpose(valid, [-1, 0, 1])",
                            "Call"
                        ],
                        [
                            "np.expand_dims(valid, axis=1)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(valid).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_106": {
                "variable": {
                    "value": "vllbl",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "all_vllbl",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.empty(shape=0, dtype=np.int32)",
                            "Call"
                        ],
                        [
                            "np.concatenate((all_vllbl, vllbl), axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorDataset_109": {
                "variable": {
                    "value": "tr_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "train",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_110": {
                "variable": {
                    "value": "vl_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "valid",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_117": {
                "variable": {
                    "value": "tr_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "tr_tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TensorDataset(train, trlbl)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "st.bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_118": {
                "variable": {
                    "value": "vl_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "vl_tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TensorDataset(valid, vllbl)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "st.bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_123": {
                "variable": {
                    "value": "cls_criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_79": {
                "variable": {
                    "value": "all_tslbl[Sub{0}.format(ia)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "tslbl",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.concatenate((np.zeros(shape=int(tsdat.shape[-1] / 2), dtype=np.int32), np.ones(shape=int(tsdat.shape[-1] / 2), dtype=np.int32)), axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_89": {
                "variable": {
                    "value": "test[Sub{0}.format(ia)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(temp, axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_115": {
                "variable": {
                    "value": "ts_loader[Sub{0}.format(ia)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TensorDataset(test['Sub{0}'.format(ia)], all_tslbl['Sub{0}'.format(ia)])",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "st.bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_147": {
                "variable": {
                    "value": "rele_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "rele",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(rele.shape[0], -1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_148": {
                "variable": {
                    "value": "irre_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "irre",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(irre.shape[0], -1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "index_select_149": {
                "variable": {
                    "value": "ishuffle",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "irre_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.reshape(irre, (irre.shape[0], -1))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "torch.randperm(irre_.shape[0]).to(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "index_select_155": {
                "variable": {
                    "value": "gshuffle",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "globalf",
                    "type": "Name",
                    "possible_values": [
                        [
                            "global_enc(rele)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "torch.randperm(globalf.shape[0]).to(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_115": {
                "*tensors": {
                    "value": "test['Sub{0}'.format(ia)]",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_186": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randperm_149": {
                "n": {
                    "value": "irre_.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "randperm_155": {
                "n": {
                    "value": "globalf.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}