{
    "src/arcnn.py": {
        "tensorflow": {
            "placeholder_160": {
                "variable": {
                    "value": "self.X",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shapes['in']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "placeholder_161": {
                "variable": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shapes['in']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "strided_slice_190": {
                "variable": {
                    "value": "mid_Y",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, offset_height, offset_width, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[-1, offset_height + config.valid_size, offset_width + config.valid_size, config.block_channel]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "strided_slice_192": {
                "variable": {
                    "value": "mid_X",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "self.X",
                    "type": "Attribute",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, offset_height, offset_width, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[-1, offset_height + config.valid_size, offset_width + config.valid_size, config.block_channel]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "strided_slice_194": {
                "variable": {
                    "value": "mid_recon",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "self.recon",
                    "type": "Attribute",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, offset_height, offset_width, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[-1, offset_height + config.valid_size, offset_width + config.valid_size, config.block_channel]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "RMSPropOptimizer_203": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "truncated_normal_212": {
                "variable": {
                    "value": "initial",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "shape",
                            "Method Argument"
                        ],
                        [
                            "shape",
                            "Method Argument"
                        ]
                    ]
                },
                "stddev": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.01",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "truncated_normal_216": {
                "variable": {
                    "value": "initial",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "shape",
                            "Method Argument"
                        ],
                        [
                            "shape",
                            "Method Argument"
                        ]
                    ]
                },
                "stddev": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ],
                        [
                            "0.01",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "conv2d_165": {
                "variable": {
                    "value": "conv1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.X",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "self.W1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_167": {
                "variable": {
                    "value": "conv1",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(conv1, self.b1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_171": {
                "variable": {
                    "value": "conv2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "conv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(self.X, self.W1, strides=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv1, self.b1))",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self.W2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_173": {
                "variable": {
                    "value": "conv2",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(conv2, self.b2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_177": {
                "variable": {
                    "value": "conv3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "conv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(conv1, self.W2, strides=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv2, self.b2))",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self.W3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_179": {
                "variable": {
                    "value": "conv3",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(conv3, self.b3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_183": {
                "variable": {
                    "value": "conv4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "conv3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(conv2, self.W3, strides=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv3, self.b3))",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "self.W4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "bias_add_185": {
                "variable": {
                    "value": "self.recon",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "conv4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(conv3, self.W4, strides=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self.b4",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_198": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(mid_recon - mid_Y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_201": {
                "variable": {
                    "value": "self.origin_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(mid_X - mid_Y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_213": {
                "initial_value": {
                    "value": "initial",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.truncated_normal(shape, stddev=stddev, dtype=tf.float32)",
                            "Call"
                        ],
                        [
                            "tf.truncated_normal(shape, stddev=stddev, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_217": {
                "initial_value": {
                    "value": "initial",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.truncated_normal(shape, stddev=stddev, dtype=tf.float32)",
                            "Call"
                        ],
                        [
                            "tf.truncated_normal(shape, stddev=stddev, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_163": {
                "name": {
                    "value": "feature_extraction",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_169": {
                "name": {
                    "value": "featue_enhancement",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_175": {
                "name": {
                    "value": "restore",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_181": {
                "name": {
                    "value": "reconstruction",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_197": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_200": {
                "name": {
                    "value": "origin_loss",
                    "type": "str",
                    "possible_values": []
                }
            },
            "global_variables_initializer_131": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "bias_add_167": {
                "value": {
                    "value": "conv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(self.X, self.W1, strides=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv1, self.b1))",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self.b1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_173": {
                "value": {
                    "value": "conv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(conv1, self.W2, strides=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv2, self.b2))",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self.b2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bias_add_179": {
                "value": {
                    "value": "conv3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(conv2, self.W3, strides=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ],
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv3, self.b3))",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self.b3",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_198": {
                "x": {
                    "value": "mid_recon - mid_Y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_201": {
                "x": {
                    "value": "mid_X - mid_Y",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_207": {
                "t": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-config.gradient_clip",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "config.gradient_clip",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}