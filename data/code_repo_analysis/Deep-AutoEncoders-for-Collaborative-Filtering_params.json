{
    "preprocess.py": {
        "tensorflow": {
            "TFRecordWriter_86": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self._save_dir, self._mode + '.tfrecords')",
                            "Call"
                        ]
                    ]
                }
            },
            "Example_93": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature=feature_dict)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Features_94": {
                "feature": {
                    "value": "feature_dict",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'indices': utils.int64_feature(i), 'values': utils.floats_feature(vals)}",
                            "Dict"
                        ]
                    ]
                }
            }
        }
    },
    "preprocess_old.py": {
        "tensorflow": {
            "Feature_13": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=value)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_17": {
                "float_list": {
                    "value": "tf.train.FloatList(value=value)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Int64List_13": {
                "value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._ad_id_map[parts[1]]",
                            "Subscript"
                        ],
                        [
                            "value",
                            "Method Argument"
                        ],
                        [
                            "value",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "FloatList_17": {
                "value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._ad_id_map[parts[1]]",
                            "Subscript"
                        ],
                        [
                            "value",
                            "Method Argument"
                        ],
                        [
                            "value",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "train.py": {
        "tensorflow": {
            "set_verbosity_7": {
                "level": {
                    "value": "tf.logging.INFO",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ConfigProto_13": {
                "variable": {
                    "value": "sess_config",
                    "type": "variable",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "log_device_placement": {
                    "value": "args.log_device_placement",
                    "type": "Attribute",
                    "possible_values": []
                },
                "intra_op_parallelism_threads": {
                    "value": "args.num_intra_threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gpu_options": {
                    "value": "tf.GPUOptions(force_gpu_compatible=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "RunConfig_19": {
                "variable": {
                    "value": "run_config",
                    "type": "variable",
                    "possible_values": []
                },
                "session_config": {
                    "value": "sess_config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto(allow_soft_placement=True, log_device_placement=args.log_device_placement, intra_op_parallelism_threads=args.num_intra_threads, gpu_options=tf.GPUOptions(force_gpu_compatible=True))",
                            "Call"
                        ]
                    ]
                },
                "save_checkpoints_steps": {
                    "value": "args.save_checkpoints_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model_dir": {
                    "value": "args.output_dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Estimator_36": {
                "variable": {
                    "value": "autoencoder_estimator",
                    "type": "variable",
                    "possible_values": []
                },
                "model_fn": {
                    "value": "autoencoder.model_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "model_dir": {
                    "value": "args.output_dir",
                    "type": "Attribute",
                    "possible_values": []
                },
                "config": {
                    "value": "run_config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.contrib.learn.RunConfig(session_config=sess_config, save_checkpoints_steps=args.save_checkpoints_steps, model_dir=args.output_dir)",
                            "Call"
                        ]
                    ]
                },
                "params": {
                    "value": "{}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "TrainSpec_49": {
                "variable": {
                    "value": "train_spec",
                    "type": "variable",
                    "possible_values": []
                },
                "input_fn": {
                    "value": "train_dataset.input_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "max_steps": {
                    "value": "args.steps",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "EvalSpec_58": {
                "variable": {
                    "value": "eval_spec",
                    "type": "variable",
                    "possible_values": []
                },
                "input_fn": {
                    "value": "eval_dataset.input_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "steps": {
                    "value": "args.eval_steps",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "train_and_evaluate_62": {
                "estimator": {
                    "value": "autoencoder_estimator",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.estimator.Estimator(model_fn=autoencoder.model_fn, model_dir=args.output_dir, config=run_config, params={})",
                            "Call"
                        ]
                    ]
                },
                "train_spec": {
                    "value": "train_spec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.estimator.TrainSpec(input_fn=train_dataset.input_fn, max_steps=args.steps)",
                            "Call"
                        ]
                    ]
                },
                "eval_spec": {
                    "value": "eval_spec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.estimator.EvalSpec(input_fn=eval_dataset.input_fn, steps=args.eval_steps)",
                            "Call"
                        ]
                    ]
                }
            },
            "GPUOptions_17": {
                "force_gpu_compatible": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "tensorflow": {
            "Feature_19": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=value)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_23": {
                "float_list": {
                    "value": "tf.train.FloatList(value=value)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "identity_64": {
                "variable": {
                    "value": "res",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor",
                            "Method Argument"
                        ],
                        [
                            "tensor",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "identity_71": {
                "variable": {
                    "value": "res",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor_values",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor.values",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Int64List_19": {
                "value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "value",
                            "Method Argument"
                        ],
                        [
                            "value",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "FloatList_23": {
                "value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "value",
                            "Method Argument"
                        ],
                        [
                            "value",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "py_func_62": {
                "func": {
                    "value": "_print_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_print_tensor",
                            "Call"
                        ]
                    ]
                },
                "inp": {
                    "value": "[tensor]",
                    "type": "List",
                    "possible_values": []
                },
                "Tout": {
                    "value": "[tensor.dtype]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_63": {
                "control_inputs": {
                    "value": "[log_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "py_func_69": {
                "func": {
                    "value": "_print_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_print_tensor",
                            "Call"
                        ]
                    ]
                },
                "inp": {
                    "value": "[tensor_values]",
                    "type": "List",
                    "possible_values": []
                },
                "Tout": {
                    "value": "[tensor_values.dtype]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_70": {
                "control_inputs": {
                    "value": "[log_op]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    }
}