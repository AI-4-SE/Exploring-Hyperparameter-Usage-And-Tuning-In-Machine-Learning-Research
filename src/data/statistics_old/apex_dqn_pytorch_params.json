{
    "actor.py": {
        "torch": {
            "manual_seed_41": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_141": {
                "variable": {
                    "value": "history",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, self.history_size, self.height, self.width]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_145": {
                "variable": {
                    "value": "history",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[state, history[:, :self.history_size - 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_152": {
                "variable": {
                    "value": "(self.maxv, action)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "qval",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.mainDQN(history)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_207": {
                "variable": {
                    "value": "maxv",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_208": {
                "variable": {
                    "value": "actions",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_48": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "'cuda:{}'.format(int(args.device))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_50": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_89": {
                "obj": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'simnum': self.simnum, 'epoch': idx + 1}",
                            "Dict"
                        ],
                        [
                            "torch.load(self.log + 'checkpoint{}.pt'.format(self.simnum))",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "self.log + 'checkpoint{}.pt'.format(self.simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_94": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'checkpoint{}.pt'.format(self.simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "set_device_47": {
                "device": {
                    "value": "int(args.device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_105": {
                "variable": {
                    "value": "memory",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(self.simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_122": {
                "obj": {
                    "value": "memory",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'replay_memory': self.replay_memory, 'priority': self.priority}",
                            "Dict"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(self.simnum))",
                            "Call"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(self.simnum))",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(self.simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_131": {
                "variable": {
                    "value": "model_dict",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'model.pt'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_133": {
                "variable": {
                    "value": "model_dict",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'model.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_108": {
                "obj": {
                    "value": "memory",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'replay_memory': self.replay_memory, 'priority': self.priority}",
                            "Dict"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(self.simnum))",
                            "Call"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(self.simnum))",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(self.simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_113": {
                "variable": {
                    "value": "memory",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(self.simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_231": {
                "variable": {
                    "value": "maxv",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[maxv, self.maxv]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_232": {
                "variable": {
                    "value": "actions",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[actions, torch.FloatTensor([action]).to(self.device)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "save_116": {
                "obj": {
                    "value": "memory",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'replay_memory': self.replay_memory, 'priority': self.priority}",
                            "Dict"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(self.simnum))",
                            "Call"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(self.simnum))",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(self.simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "environment.py": {
        "torch": {
            "unsqueeze_52": {
                "variable": {
                    "value": "state",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "learner.py": {
        "torch": {
            "device_52": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:{}.format(args.gpu) if not args.no_cuda and torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_device_51": {
                "device": {
                    "value": "args.gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_53": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_89": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.mainDQN.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_148": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "weight",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(len(priority) * priority) ** (-self.beta)",
                            "BinOp"
                        ],
                        [
                            "weight / weight.max()",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_149": {
                "variable": {
                    "value": "priority",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "priority",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(np.array(self.priority) + self.e) ** self.alpha",
                            "BinOp"
                        ],
                        [
                            "torch.tensor(priority, dtype=torch.float)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_107": {
                "obj": {
                    "value": "model_dict",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'state_dict': self.mainDQN.state_dict(), 'optimizer_dict': self.optimizer.state_dict(), 'train_epoch': train_epoch}",
                            "Dict"
                        ],
                        [
                            "torch.load(self.log + 'model.pt')",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "self.log + 'model.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_112": {
                "variable": {
                    "value": "model_dict",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'model.pt'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "WeightedRandomSampler_150": {
                "weights": {
                    "value": "priority",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(np.array(self.priority) + self.e) ** self.alpha",
                            "BinOp"
                        ],
                        [
                            "torch.tensor(priority, dtype=torch.float)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "replacement": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_167": {
                "variable": {
                    "value": "x_stack",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "self.history_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_168": {
                "variable": {
                    "value": "y_stack",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "self.action_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_189": {
                "variable": {
                    "value": "w",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "w",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(w, dtype=torch.float, device=self.device)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dot_190": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "F.smooth_l1_loss(pred, y_stack.detach(), reduce=False).sum(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "w.detach()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_124": {
                "variable": {
                    "value": "memory_dict",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_184": {
                "variable": {
                    "value": "x_stack",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_stack, history.data]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_185": {
                "variable": {
                    "value": "y_stack",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y_stack, Q.data]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_130": {
                "obj": {
                    "value": "memory_dict",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(simnum))",
                            "Call"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(simnum))",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_133": {
                "variable": {
                    "value": "memory_dict",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "smooth_l1_loss_190": {
                "input": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.mainDQN(x_stack)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "y_stack.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "reduce": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_190": {
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_139": {
                "obj": {
                    "value": "memory_dict",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(simnum))",
                            "Call"
                        ],
                        [
                            "torch.load(self.log + 'memory{}.pt'.format(simnum))",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "self.log + 'memory{}.pt'.format(simnum)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_183": {
                "input": {
                    "value": "qval",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.mainDQN(next_history)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_182": {
                "input": {
                    "value": "qval",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.mainDQN(next_history)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Conv2d_12": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.history_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_16": {
                "variable": {
                    "value": "self.vfc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_17": {
                "variable": {
                    "value": "self.vfc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "variable": {
                    "value": "self.afc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.afc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.action_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_30": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_31": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_32": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_34": {
                "variable": {
                    "value": "a",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.afc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_36": {
                "variable": {
                    "value": "av",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "a",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.afc1(x))",
                            "Call"
                        ],
                        [
                            "self.afc2(a)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_38": {
                "variable": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.vfc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}