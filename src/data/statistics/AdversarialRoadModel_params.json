{
    "LearningSafeSets/DataLoader/DataLoader.py": {
        "torch": {
            "zeros_38": {
                "variable": {
                    "value": "self.middle",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_state",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "self.half_range",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_state",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "self.state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(0, self.n_state)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "self.safe",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_66": {
                "variable": {
                    "value": "self.state_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(0, self.n_state)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_67": {
                "variable": {
                    "value": "self.safe_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_79": {
                "variable": {
                    "value": "value_fun_cm",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.fromfile(name, dtype=np.bool, count=-1, sep='')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linspace_82": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-0.3415",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "0.3415",
                    "type": "float",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.n_d",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_83": {
                "variable": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-0.2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.n_mu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_84": {
                "variable": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "min(np.sqrt(radius * 1.6), 35)",
                    "type": "Call",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.n_v",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_90": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_points_wo_kappa, self.n_state)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_91": {
                "variable": {
                    "value": "safe",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_points_wo_kappa",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.n_d * self.n_mu * (self.n_v + 1)",
                            "BinOp"
                        ],
                        [
                            "self.n_d_test * self.n_mu_test * self.n_v_test",
                            "BinOp"
                        ]
                    ]
                }
            },
            "from_numpy_114": {
                "variable": {
                    "value": "value_fun_cm",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.fromfile(name, dtype=np.bool, count=-1, sep='')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linspace_117": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-0.3415",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "0.3415",
                    "type": "float",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.n_d_test",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_118": {
                "variable": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-0.2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.n_mu_test",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_119": {
                "variable": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "min(np.sqrt(radius * 1.6), 35)",
                    "type": "Call",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.n_v_test",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_122": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(n_points_wo_kappa, self.n_state)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_123": {
                "variable": {
                    "value": "safe",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_points_wo_kappa",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.n_d * self.n_mu * (self.n_v + 1)",
                            "BinOp"
                        ],
                        [
                            "self.n_d_test * self.n_mu_test * self.n_v_test",
                            "BinOp"
                        ]
                    ]
                }
            },
            "from_numpy_141": {
                "variable": {
                    "value": "self.middle",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "min_state + (max_state - min_state) / 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "from_numpy_142": {
                "variable": {
                    "value": "self.half_range",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "(max_state - min_state) / 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_53": {
                "variable": {
                    "value": "self.state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.state, state_r)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "self.safe",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.safe, safe_r)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_72": {
                "variable": {
                    "value": "self.state_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.state_test, state_r)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_73": {
                "variable": {
                    "value": "self.safe_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.safe_test, safe_r)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "tensor_105": {
                "variable": {
                    "value": "state[o, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[d[i], mu[j], v[k], kappa]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_132": {
                "variable": {
                    "value": "state[o, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[d[i], mu[j], v[k], kappa]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "LearningSafeSets/Model/SafeSet.py": {
        "torch": {
            "Sequential_33": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.n_inputs, self.n_neurons)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_45": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.n_inputs, self.n_neurons)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "self.n_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Softplus_35": {
                "beta": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_36": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Softplus_37": {
                "beta": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Softplus_39": {
                "beta": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_56": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.n_inputs, self.n_neurons)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "in_features": {
                    "value": "self.n_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_50": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.n_inputs, self.n_neurons)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "in_features": {
                    "value": "self.n_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_59": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_61": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_63": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.n_inputs, self.n_neurons)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_68": {
                "in_features": {
                    "value": "self.n_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_70": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_72": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_73": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ELU_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_75": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.n_inputs, self.n_neurons)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_105": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.n_inputs, self.n_neurons)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_80": {
                "in_features": {
                    "value": "self.n_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_81": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_82": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_84": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_89": {
                "in_features": {
                    "value": "self.n_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_90": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_91": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_93": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_95": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_97": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_99": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ELU_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_101": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_106": {
                "in_features": {
                    "value": "self.n_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_107": {
                "in_features": {
                    "value": "self.n_neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_108": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "LearningSafeSets/Trainer/Trainer.py": {
        "torch": {
            "BCELoss_36": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_38": {
                "variable": {
                    "value": "metric_mse",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_39": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "StepLR_40": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.Adam(model.parameters(), self.learning_rate)",
                            "Call"
                        ]
                    ]
                },
                "step_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "LearningSafeSets/Validation/Validation.py": {
        "torch": {
            "BCELoss_33": {
                "variable": {
                    "value": "criterion_bce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_35": {
                "variable": {
                    "value": "criterion_mse",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCELoss_77": {
                "variable": {
                    "value": "criterion_bce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_78": {
                "variable": {
                    "value": "criterion_mse",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCELoss_119": {
                "variable": {
                    "value": "criterion_bce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_120": {
                "variable": {
                    "value": "criterion_mse",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "LearningSafeSets/train.py": {
        "torch": {
            "manual_seed_34": {
                "seed": {
                    "value": "config['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "load_39": {
                "variable": {
                    "value": "data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['path'] + '/safe_set_data.pth'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "load_57": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path_model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['path'] + '/safe_set_model.pth'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "save_43": {
                "obj": {
                    "value": "data_loader",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.load(path_data)",
                            "Call"
                        ],
                        [
                            "DataLoader.DataLoader(config)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "path_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['path'] + '/safe_set_data.pth'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "save_54": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SafeSet.SafeSet(config)",
                            "Call"
                        ],
                        [
                            "torch.load(path_model)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "path_model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['path'] + '/safe_set_model.pth'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "save_55": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SafeSet.SafeSet(config)",
                            "Call"
                        ],
                        [
                            "torch.load(path_model)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "path_model_results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['result_dir'] + '/safe_set_model.pth'",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    }
}