{
    "benchmarks/logistic_regression/run.py": {
        "PyTorchLogReg_17": {},
        "PyTorchModel_29": {},
        "PyTorchBinaryClassifier_56": {},
        "VW2RiverBase_69": {},
        "VW2RiverClassifier_78": {},
        "SGDClassifier_104": {
            "loss": {
                "value": "log",
                "possible_values": []
            },
            "learning_rate": {
                "value": "constant",
                "possible_values": []
            },
            "eta0": {
                "value": "LEARNING_RATE",
                "possible_values": [
                    "0.005"
                ]
            },
            "penalty": {
                "value": "none",
                "possible_values": []
            }
        }
    },
    "river/anomaly/test_svm.py": {
        "SGDOneClassSVM_29": {
            "variable": {
                "value": "sk",
                "possible_values": []
            }
        }
    },
    "river/checks/__init__.py": {
        "_DummyDataset_40": {},
        "SolarFlare_79": {}
    },
    "river/compat/river_to_sklearn.py": {
        "River2SKLBase_85": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        },
        "River2SKLRegressor_95": {
            "base_class_0": {
                "value": "sklearn.base.RegressorMixin",
                "possible_values": []
            }
        },
        "River2SKLClassifier_210": {
            "base_class_0": {
                "value": "sklearn.base.ClassifierMixin",
                "possible_values": []
            }
        },
        "River2SKLTransformer_401": {
            "base_class_0": {
                "value": "sklearn.base.TransformerMixin",
                "possible_values": []
            }
        },
        "River2SKLClusterer_525": {
            "base_class_0": {
                "value": "sklearn.base.ClusterMixin",
                "possible_values": []
            }
        },
        "Pipeline_62": {
            "steps": {
                "value": "[(name, convert_river_to_sklearn(step)) for (name, step) in estimator.steps.items()]",
                "possible_values": []
            }
        },
        "LabelEncoder_271": {
            "variable": {
                "value": "self.label_encoder_",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "river/compat/sklearn_to_river.py": {
        "SKL2RiverBase_47": {},
        "SKL2RiverRegressor_52": {},
        "SKL2RiverClassifier_106": {}
    },
    "river/compat/test_sklearn.py": {
        "SGDRegressor_28": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_13": {
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_14": {
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "river/conftest.py": {},
    "river/feature_selection/k_best.py": {
        "SelectKBest_8": {}
    },
    "river/linear_model/pa.py": {
        "BasePA_10": {},
        "PARegressor_38": {},
        "PAClassifier_106": {}
    },
    "river/linear_model/test_glm.py": {
        "ScikitLearnSquaredLoss_170": {},
        "LinearRegression_126": {
            "variable": {
                "value": "one",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_130": {
            "variable": {
                "value": "many",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_144": {
            "variable": {
                "value": "normal",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_148": {
            "variable": {
                "value": "shuffled",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_163": {
            "variable": {
                "value": "lin_reg",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_219": {
            "variable": {
                "value": "rv",
                "possible_values": []
            }
        },
        "SGDRegressor_220": {
            "variable": {
                "value": "sk",
                "possible_values": []
            }
        },
        "LinearRegression_243": {
            "variable": {
                "value": "rv",
                "possible_values": []
            }
        },
        "SGDRegressor_244": {
            "variable": {
                "value": "sk",
                "possible_values": []
            }
        },
        "LogisticRegression_329": {
            "variable": {
                "value": "rv",
                "possible_values": []
            }
        },
        "SGDClassifier_330": {
            "variable": {
                "value": "sk",
                "possible_values": []
            }
        },
        "Perceptron_369": {
            "variable": {
                "value": "rv",
                "possible_values": []
            }
        },
        "Perceptron_370": {
            "variable": {
                "value": "sk",
                "possible_values": []
            }
        },
        "LinearRegression_398": {
            "variable": {
                "value": "rv",
                "possible_values": []
            }
        },
        "SGDRegressor_406": {
            "variable": {
                "value": "sk",
                "possible_values": []
            }
        },
        "LogisticRegression_446": {
            "variable": {
                "value": "rv",
                "possible_values": []
            }
        },
        "SGDClassifier_453": {
            "variable": {
                "value": "sk",
                "possible_values": []
            }
        }
    },
    "river/metrics/test_cross_entropy.py": {},
    "river/metrics/test_fbeta.py": {},
    "river/metrics/test_log_loss.py": {},
    "river/metrics/test_metrics.py": {},
    "river/metrics/test_r2.py": {},
    "river/multioutput/chain.py": {
        "BaseChain_16": {},
        "ClassifierChain_34": {},
        "RegressorChain_162": {},
        "ProbabilisticClassifierChain_262": {},
        "MonteCarloClassifierChain_358": {}
    },
    "river/naive_bayes/test_naive_bayes.py": {},
    "river/stream/iter_sklearn.py": {}
}