{
    "code/inference.py": {
        "tensorflow": {}
    },
    "code/metrics.py": {
        "tensorflow": {}
    },
    "code/model.py": {
        "tensorflow": {
            "extract_image_patches_16": {
                "variable": {
                    "value": "patches",
                    "type": "variable",
                    "possible_values": []
                },
                "images": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x5",
                            "variable"
                        ],
                        [
                            "Conv2D(n_init_features, (3, 3), padding='same', kernel_initializer='he_normal')(x)",
                            "Call"
                        ],
                        [
                            "PReLU(shared_axes=[1, 2])(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(n_init_features, (3, 3), kernel_initializer='Orthogonal', padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=3, momentum=0.99, epsilon=0.0001)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "_residual_block(x, feature_dim=n_init_features)",
                            "Call"
                        ],
                        [
                            "Conv2D(3, (3, 3), kernel_initializer='Orthogonal', padding='same')(x)",
                            "Call"
                        ],
                        [
                            "Lambda(median_pool2d, arguments={'k': 5}, output_shape=min_pool2d_output_shape)(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(feature_dim, (3, 3), padding='same', kernel_initializer='he_normal')(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "PReLU(shared_axes=[1, 2])(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(feature_dim, (3, 3), padding='same', kernel_initializer='he_normal')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "ksizes": {
                    "value": "[1, k, k, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "rates": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "top_k_23": {
                "variable": {
                    "value": "(top, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "patches",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.extract_image_patches(x, ksizes=[1, k, k, 1], strides=[1, 1, 1, 1], rates=[1, 1, 1, 1], padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "k": {
                    "value": "m_idx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(k * k / 2 + 1)",
                            "Call"
                        ]
                    ]
                },
                "sorted": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "slice_24": {
                "variable": {
                    "value": "median",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "top",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.top_k(patches, m_idx, sorted=True)",
                            "Call"
                        ]
                    ]
                },
                "begin": {
                    "value": "[0, 0, 0, m_idx - 1]",
                    "type": "List",
                    "possible_values": []
                },
                "size": {
                    "value": "[-1, -1, -1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "split_29": {
                "variable": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x5",
                            "variable"
                        ],
                        [
                            "Conv2D(n_init_features, (3, 3), padding='same', kernel_initializer='he_normal')(x)",
                            "Call"
                        ],
                        [
                            "PReLU(shared_axes=[1, 2])(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(n_init_features, (3, 3), kernel_initializer='Orthogonal', padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=3, momentum=0.99, epsilon=0.0001)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "_residual_block(x, feature_dim=n_init_features)",
                            "Call"
                        ],
                        [
                            "Conv2D(3, (3, 3), kernel_initializer='Orthogonal', padding='same')(x)",
                            "Call"
                        ],
                        [
                            "Lambda(median_pool2d, arguments={'k': 5}, output_shape=min_pool2d_output_shape)(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(feature_dim, (3, 3), padding='same', kernel_initializer='he_normal')(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "PReLU(shared_axes=[1, 2])(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(feature_dim, (3, 3), padding='same', kernel_initializer='he_normal')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "x.shape[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "code/train.py": {
        "tensorflow": {
            "set_random_seed_15": {
                "seed": {
                    "value": "1234",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}