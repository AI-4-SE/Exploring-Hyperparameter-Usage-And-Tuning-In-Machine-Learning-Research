{
    "experiments/runner.py": {
        "tensorflow": {
            "ModelCheckpoint_146": {
                "variable": {
                    "value": "cp_callback",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "self.checkpoint_path",
                    "type": "Attribute",
                    "possible_values": []
                },
                "save_weights_only": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CSVLogger_150": {
                "variable": {
                    "value": "csv_logger",
                    "type": "Name",
                    "possible_values": []
                },
                "filename": {
                    "value": "self.history_path",
                    "type": "Attribute",
                    "possible_values": []
                },
                "append": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/test_hvae.py": {
        "tensorflow": {
            "gpu_device_name_24": {
                "variable": {
                    "value": "device_name",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "EarlyStopping_64": {
                "variable": {
                    "value": "es_callback",
                    "type": "Name",
                    "possible_values": []
                },
                "monitor": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "patience": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_65": {
                "variable": {
                    "value": "cp_callback",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "checkpoint_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'../checkpoints/hvae/test.h5'",
                            "Constant"
                        ]
                    ]
                },
                "save_weights_only": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_99": {
                "variable": {
                    "value": "ll",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "reconst_test_dist.log_prob(x_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_109": {
                "variable": {
                    "value": "ll",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "posterior_dists_dependent.log_prob(tf.reshape(x_test, (10000, 1, 28, 28)))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_68": {
                "device_name": {
                    "value": "/device:GPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_109": {
                "tensor": {
                    "value": "x_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x_test.astype(np.float32) / 255",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(10000, 1, 28, 28)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/test_vanilla_vae.py": {
        "tensorflow": {
            "gpu_device_name_22": {
                "variable": {
                    "value": "device_name",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "EarlyStopping_58": {
                "variable": {
                    "value": "es_callback",
                    "type": "Name",
                    "possible_values": []
                },
                "monitor": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "patience": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_59": {
                "variable": {
                    "value": "cp_callback",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "checkpoint_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'../checkpoints/vanilla_vae/test.h5'",
                            "Constant"
                        ]
                    ]
                },
                "save_weights_only": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TensorBoard_64": {
                "variable": {
                    "value": "tensorboard_callback",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "log_dir",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'logs/fit/' + datetime.datetime.now().strftime('%Y%m%d-%H%M%S')",
                            "BinOp"
                        ]
                    ]
                },
                "histogram_freq": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_88": {
                "variable": {
                    "value": "ll",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "reconst_test_dist.log_prob(x_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_99": {
                "variable": {
                    "value": "ll",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "posterior_dists_dependent.log_prob(tf.reshape(x_test, (10000, 1, 28, 28)))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_66": {
                "device_name": {
                    "value": "/device:GPU:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_100": {
                "tensor": {
                    "value": "x_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x_test.astype(np.float32) / 255",
                            "BinOp"
                        ],
                        [
                            "tfds.load('omniglot', split='test')",
                            "Call"
                        ],
                        [
                            "np.array([x['image'][:, :, 0] for x in tfds.as_numpy(x_test)]).astype(np.float32) / 255",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(10000, 1, 28, 28)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "models/hvae.py": {
        "tensorflow": {
            "expand_dims_280": {
                "variable": {
                    "value": "one_x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "one_x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x_test",
                            "Name"
                        ],
                        [
                            "tf.expand_dims(one_x, axis=0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_258": {
                "input_tensor": {
                    "value": "kl_loss_prior1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tfd.kl_divergence(z1, self.prior1)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_logsumexp_303": {
                "input_tensor": {
                    "value": "full_error",
                    "type": "Name",
                    "possible_values": [
                        [
                            "reconst_error - kl",
                            "BinOp"
                        ]
                    ]
                }
            },
            "log_303": {
                "x": {
                    "value": "float(n_samples)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_224": {
                "shape": {
                    "value": "self.latent_dim1",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/vae.py": {
        "tensorflow": {
            "reduce_mean_111": {
                "input_tensor": {
                    "value": "self.kl_weight * kl_loss",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Adam_134": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.001",
                            "MethodArgument"
                        ]
                    ]
                },
                "clipnorm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_68": {
                "shape": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_88": {
                "shape": {
                    "value": "self.pseudo_inputs.get_n()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "models/vanilla_vae.py": {
        "tensorflow": {
            "expand_dims_225": {
                "variable": {
                    "value": "one_x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "one_x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x_test",
                            "Name"
                        ],
                        [
                            "tf.expand_dims(one_x, axis=0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_logsumexp_218": {
                "input_tensor": {
                    "value": "full_error",
                    "type": "Name",
                    "possible_values": [
                        [
                            "reconst_error - kl_loss_weighted",
                            "BinOp"
                        ]
                    ]
                }
            },
            "log_218": {
                "x": {
                    "value": "float(n_samples)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utils/datasets.py": {
        "tensorflow": {}
    },
    "utils/layers.py": {
        "tensorflow": {
            "sigmoid_25": {
                "variable": {
                    "value": "x2",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "x2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.linear_2(inputs)",
                            "Call"
                        ],
                        [
                            "tf.nn.sigmoid(x2)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "utils/pseudo_inputs.py": {
        "tensorflow": {
            "eye_29": {
                "variable": {
                    "value": "self.pre_pseudo_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_rows": {
                    "value": "n_pseudo_inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "500",
                            "MethodArgument"
                        ],
                        [
                            "500",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    }
}