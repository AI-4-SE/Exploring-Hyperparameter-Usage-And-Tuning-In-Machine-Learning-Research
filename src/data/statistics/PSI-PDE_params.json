{
    "NN_Preprocess_Burgers2D.py": {
        "torch": {
            "MSELoss_194": {
                "variable": {
                    "value": "loss_fn",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_195": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_35": {
                "ndarray": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['x']",
                            "Subscript"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_36": {
                "ndarray": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['y']",
                            "Subscript"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_37": {
                "ndarray": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['t']",
                            "Subscript"
                        ],
                        [
                            "t",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_38": {
                "ndarray": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['u']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_39": {
                "ndarray": {
                    "value": "xTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['xTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_40": {
                "ndarray": {
                    "value": "yTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['yTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_41": {
                "ndarray": {
                    "value": "tTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['tTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_42": {
                "ndarray": {
                    "value": "uTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['uTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_43": {
                "ndarray": {
                    "value": "xVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['xVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_44": {
                "ndarray": {
                    "value": "yVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['yVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_45": {
                "ndarray": {
                    "value": "tVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['tVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_46": {
                "ndarray": {
                    "value": "uVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['uVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_69": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "D_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "D_in",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "H[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_70": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "H[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_71": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "H[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "D_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "D_out",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_74": {
                "variable": {
                    "value": "xyt",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y, t]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randperm_127": {
                "variable": {
                    "value": "permutation",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "XTrn.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "randperm_152": {
                "variable": {
                    "value": "permutation",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "XVal.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Tanh_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_181": {
                "f": {
                    "value": "checkpoint.pt",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "NN_Preprocess_BurgersKdV.py": {
        "torch": {
            "MSELoss_227": {
                "variable": {
                    "value": "loss_fn",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_228": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_216": {
                "variable": {
                    "value": "THETA",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.ones_like(Y), Y, Y2, Y3, Y_x, YY_x, Y2Y_x, Y3Y_x, Y_xx, YY_xx, Y2Y_xx, Y3Y_xx, Y_xxx, YY_xxx, Y2Y_xxx, Y3Y_xxx)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_33": {
                "ndarray": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['x']",
                            "Subscript"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_34": {
                "ndarray": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['t']",
                            "Subscript"
                        ],
                        [
                            "t",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_35": {
                "ndarray": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['u']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_36": {
                "ndarray": {
                    "value": "xTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['xTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_37": {
                "ndarray": {
                    "value": "tTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['tTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_38": {
                "ndarray": {
                    "value": "uTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['uTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_39": {
                "ndarray": {
                    "value": "xVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['xVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_40": {
                "ndarray": {
                    "value": "tVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['tVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_41": {
                "ndarray": {
                    "value": "uVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['uVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "D_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "D_in",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "H[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "H[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "H[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "D_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "D_out",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_69": {
                "variable": {
                    "value": "xt",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, t]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_100": {
                "variable": {
                    "value": "val_PDE",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "PDE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Y_t - c_pred[0, 0] * torch.ones_like(Y_t) - c_pred[0, 1] * Y - c_pred[0, 2] * Y2 - c_pred[0, 3] * Y3 - c_pred[0, 4] * Y_x - c_pred[0, 5] * YY_x - c_pred[0, 6] * Y2Y_x - c_pred[0, 7] * Y3Y_x - c_pred[0, 8] * Y_xx - c_pred[0, 9] * YY_xx - c_pred[0, 10] * Y2Y_xx - c_pred[0, 11] * Y3Y_xx - c_pred[0, 12] * Y_xxx - c_pred[0, 13] * YY_xxx - c_pred[0, 14] * Y2Y_xxx - c_pred[0, 15] * Y3Y_xxx",
                            "BinOp"
                        ]
                    ]
                }
            },
            "randperm_148": {
                "variable": {
                    "value": "permutation",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "XTrn.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "randperm_173": {
                "variable": {
                    "value": "permutation",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "XVal.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "grad_208": {
                "outputs": {
                    "value": "output.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_209": {
                "outputs": {
                    "value": "output.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datat",
                            "Method Argument"
                        ],
                        [
                            "datat",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_210": {
                "outputs": {
                    "value": "Y_x.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_211": {
                "outputs": {
                    "value": "Y_xx.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_70": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_87": {
                "outputs": {
                    "value": "output.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_88": {
                "outputs": {
                    "value": "output.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datat",
                            "Method Argument"
                        ],
                        [
                            "datat",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_89": {
                "outputs": {
                    "value": "Y_x.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_90": {
                "outputs": {
                    "value": "Y_xx.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_103": {
                "input": {
                    "value": "datat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datat",
                            "Method Argument"
                        ],
                        [
                            "datat",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_like_104": {
                "input": {
                    "value": "Y0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(datax, torch.zeros_like(datat))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_107": {
                "input": {
                    "value": "Y_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(-torch.ones_like(datax), datat)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_109": {
                "input": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_like_110": {
                "input": {
                    "value": "Y1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(torch.ones_like(datax), datat)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_202": {
                "f": {
                    "value": "checkpoint.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ones_like_216": {
                "input": {
                    "value": "Y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output",
                            "variable"
                        ],
                        [
                            "output",
                            "variable"
                        ]
                    ]
                }
            },
            "sin_104": {
                "input": {
                    "value": "np.pi * datax",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_106": {
                "input": {
                    "value": "datax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datax",
                            "Method Argument"
                        ],
                        [
                            "datax",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_like_96": {
                "input": {
                    "value": "Y_t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.autograd.grad(outputs=output.sum(), inputs=datat, create_graph=True)[0]",
                            "Subscript"
                        ],
                        [
                            "torch.autograd.grad(outputs=output.sum(), inputs=datat, create_graph=True)[0]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "NN_Preprocess_NS.py": {
        "torch": {
            "MSELoss_194": {
                "variable": {
                    "value": "loss_fn",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_195": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_35": {
                "ndarray": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['x']",
                            "Subscript"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_36": {
                "ndarray": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['y']",
                            "Subscript"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_37": {
                "ndarray": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['t']",
                            "Subscript"
                        ],
                        [
                            "t",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_38": {
                "ndarray": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['p']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_39": {
                "ndarray": {
                    "value": "xTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['xTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_40": {
                "ndarray": {
                    "value": "yTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['yTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_41": {
                "ndarray": {
                    "value": "tTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['tTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_42": {
                "ndarray": {
                    "value": "uTrn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['pTrn']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_43": {
                "ndarray": {
                    "value": "xVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['xVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_44": {
                "ndarray": {
                    "value": "yVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['yVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_45": {
                "ndarray": {
                    "value": "tVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['tVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_46": {
                "ndarray": {
                    "value": "uVal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Data['pVal']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_69": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "D_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "D_in",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "H[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_70": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "H[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_71": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "H[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "H[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "D_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "D_out",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_74": {
                "variable": {
                    "value": "xyt",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y, t]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randperm_127": {
                "variable": {
                    "value": "permutation",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "XTrn.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "randperm_152": {
                "variable": {
                    "value": "permutation",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "XVal.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Tanh_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_181": {
                "f": {
                    "value": "checkpoint.pt",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    }
}