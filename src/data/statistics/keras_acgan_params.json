{
    "tf_keras_acgan.py": {
        "tensorflow": {
            "Input_32": {
                "variable": {
                    "value": "latent",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_size,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_35": {
                "variable": {
                    "value": "image_class",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "multiply_41": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "[latent, cls_vec]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_65": {
                "variable": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(28, 28, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_87": {
                "variable": {
                    "value": "trainable",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(28, 28, 1))",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[is_real, image_class]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Model_88": {
                "variable": {
                    "value": "non_trainable",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(28, 28, 1))",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[is_real, image_class]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_117": {
                "variable": {
                    "value": "latent",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_size,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_118": {
                "variable": {
                    "value": "image_class",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_123": {
                "variable": {
                    "value": "combined",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[latent, image_class]",
                    "type": "List",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "[is_real, aux]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "load_data_131": {
                "variable": {
                    "value": "((x_train, y_train), (x_test, y_test))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Model_57": {
                "*args": {
                    "value": "[latent, image_class]",
                    "type": "List",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "fake_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2DTranspose(1, 5, strides=2, padding='same', activation='tanh', kernel_initializer='glorot_normal')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Progbar_152": {
                "variable": {
                    "value": "progress_bar",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "num_batches",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(x_train.shape[0] / batch_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "Embedding_37": {
                "input_dim": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "latent_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100",
                            "int"
                        ]
                    ]
                },
                "embeddings_initializer": {
                    "value": "glorot_normal",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_43": {
                "units": {
                    "value": "3 * 3 * 384",
                    "type": "BinOp",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Reshape_44": {
                "target_shape": {
                    "value": "(3, 3, 384)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2DTranspose_47": {
                "filters": {
                    "value": "192",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "glorot_normal",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2DTranspose_51": {
                "filters": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "glorot_normal",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2DTranspose_55": {
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "glorot_normal",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_67": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_68": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_69": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_71": {
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_72": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_73": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_75": {
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_76": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_77": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_79": {
                "filters": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_80": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_81": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Flatten_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_84": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_85": {
                "units": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_109": {
                "lr": {
                    "value": "adam_lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0002",
                            "float"
                        ]
                    ]
                },
                "beta_1": {
                    "value": "adam_beta_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "float"
                        ]
                    ]
                }
            },
            "Adam_126": {
                "lr": {
                    "value": "adam_lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0002",
                            "float"
                        ]
                    ]
                },
                "beta_1": {
                    "value": "adam_beta_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5",
                            "float"
                        ]
                    ]
                }
            }
        }
    }
}