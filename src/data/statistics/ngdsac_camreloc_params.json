{
    "dataset.py": {
        "torch": {
            "from_numpy_73": {
                "variable": {
                    "value": "pose",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pose",
                    "type": "Call",
                    "possible_values": [
                        [
                            "numpy.loadtxt(self.pose_files[idx])",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(pose).float().inverse()",
                            "Call"
                        ]
                    ]
                }
            },
            "inverse_73": {
                "variable": {
                    "value": "pose",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_76": {
                "variable": {
                    "value": "coords",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "self.coord_files[idx]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "network.py": {
        "torch": {
            "Conv2d_22": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "variable": {
                    "value": "self.res1_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "variable": {
                    "value": "self.res1_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "variable": {
                    "value": "self.res1_conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.res2_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.res2_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "variable": {
                    "value": "self.res2_conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "variable": {
                    "value": "self.res2_skip",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.res3_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "variable": {
                    "value": "self.res3_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.res3_conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.fc1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.fc2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "variable": {
                    "value": "self.fc3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_65": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_67": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_68": {
                "variable": {
                    "value": "res",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res1_conv1(res)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_71": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res1_conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_72": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res1_conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_76": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res2_conv1(res)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_77": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res2_conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_78": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res2_conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res3_conv1(res)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_83": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res3_conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_84": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res3_conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_89": {
                "variable": {
                    "value": "sc",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(res)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_90": {
                "variable": {
                    "value": "sc",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(sc)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_98": {
                "variable": {
                    "value": "log_ng",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1_1(res.detach())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_99": {
                "variable": {
                    "value": "log_ng",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2_1(log_ng)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "logsigmoid_103": {
                "variable": {
                    "value": "log_ng",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_ng",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.fc1_1(res.detach()))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2_1(log_ng))",
                            "Call"
                        ],
                        [
                            "self.fc3_1(log_ng)",
                            "Call"
                        ],
                        [
                            "F.logsigmoid(log_ng)",
                            "Call"
                        ],
                        [
                            "log_ng.view(-1)",
                            "Call"
                        ],
                        [
                            "log_ng - normalizer",
                            "BinOp"
                        ],
                        [
                            "log_ng.view(batch_size, 1, sc.shape[2], sc.shape[3])",
                            "Call"
                        ]
                    ]
                }
            },
            "logsumexp_106": {
                "variable": {
                    "value": "normalizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_ng",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.relu(self.fc1_1(res.detach()))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2_1(log_ng))",
                            "Call"
                        ],
                        [
                            "self.fc3_1(log_ng)",
                            "Call"
                        ],
                        [
                            "F.logsigmoid(log_ng)",
                            "Call"
                        ],
                        [
                            "log_ng.view(-1)",
                            "Call"
                        ],
                        [
                            "log_ng - normalizer",
                            "BinOp"
                        ],
                        [
                            "log_ng.view(batch_size, 1, sc.shape[2], sc.shape[3])",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_52": {
                "data": {
                    "value": "mean.size()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "ngdsac/setup.py": {
        "torch": {}
    },
    "setup_cambridge.py": {
        "torch": {
            "tensor_137": {
                "variable": {
                    "value": "cam_pose",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "cam_pose",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.concatenate((cam_rot, cam_trans), axis=1)",
                            "Call"
                        ],
                        [
                            "np.concatenate((cam_pose, [[0, 0, 0, 1]]), axis=0)",
                            "Call"
                        ],
                        [
                            "torch.tensor(cam_pose).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_146": {
                "variable": {
                    "value": "pts_3D",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "pts_dict[cam_idx]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_165": {
                "variable": {
                    "value": "out_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(3, out_h, out_w)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_166": {
                "variable": {
                    "value": "out_zbuffer",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(out_h, out_w)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "mm_191": {
                "variable": {
                    "value": "cam_pt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cam_pose",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.concatenate((cam_rot, cam_trans), axis=1)",
                            "Call"
                        ],
                        [
                            "np.concatenate((cam_pose, [[0, 0, 0, 1]]), axis=0)",
                            "Call"
                        ],
                        [
                            "torch.tensor(cam_pose).float()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "scene_pt",
                    "type": "Call",
                    "possible_values": [
                        [
                            "pts_3D[pt_idx]",
                            "Subscript"
                        ],
                        [
                            "scene_pt.unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "scene_pt.transpose(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_208": {
                "obj": {
                    "value": "out_tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros((3, out_h, out_w))",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "target_output_folder + image_file[:-4] + '.dat'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_198": {
                "input": {
                    "value": "x",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "cam_rot[1] / math.sqrt(1 - cam_rot[0] ** 2)",
                            "BinOp"
                        ],
                        [
                            "img_pt[0] + out_w / 2",
                            "BinOp"
                        ],
                        [
                            "int(torch.clamp(x, min=0, max=out_tensor.size(2) - 1))",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "max": {
                    "value": "out_tensor.size(2) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_199": {
                "input": {
                    "value": "y",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "cam_rot[2] / math.sqrt(1 - cam_rot[0] ** 2)",
                            "BinOp"
                        ],
                        [
                            "img_pt[1] + out_h / 2",
                            "BinOp"
                        ],
                        [
                            "int(torch.clamp(y, min=0, max=out_tensor.size(1) - 1))",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "max": {
                    "value": "out_tensor.size(1) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {
            "DataLoader_48": {
                "variable": {
                    "value": "testset_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CamLocDataset('./dataset/' + opt.scene + '/test', training=False)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_51": {
                "*size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_52": {
                "f": {
                    "value": "opt.network",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "exp_81": {
                "variable": {
                    "value": "neural_guidance",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_ng",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_87": {
                "variable": {
                    "value": "out_pose",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "norm_106": {
                "input": {
                    "value": "gt_pose[0:3, 3] - out_pose[0:3, 3]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "train_e2e.py": {
        "torch": {
            "DataLoader_63": {
                "variable": {
                    "value": "trainset_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CamLocDataset('./dataset/' + opt.scene + '/train')",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_75": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.learningrate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_68": {
                "*size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_69": {
                "f": {
                    "value": "opt.network_in",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_100": {
                "variable": {
                    "value": "neural_guidance",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_ng",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_106": {
                "variable": {
                    "value": "scene_coordinate_gradients",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "scene_coordinates.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_107": {
                "variable": {
                    "value": "log_ng_gradients",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "log_ng.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_178": {
                "obj": {
                    "value": "network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.network_out",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_117": {
                "variable": {
                    "value": "local_scene_coordinate_gradients",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "scene_coordinate_gradients.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_118": {
                "variable": {
                    "value": "local_log_ng_gradients",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "log_ng_gradients.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "backward_162": {
                "tensors": {
                    "value": "scene_coordinates",
                    "type": "Variable",
                    "possible_values": []
                },
                "grad_tensors": {
                    "value": "scene_coordinate_gradients.cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "backward_165": {
                "tensors": {
                    "value": "(scene_coordinates, log_ng)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "grad_tensors": {
                    "value": "(scene_coordinate_gradients.cuda(), log_ng_gradients.cuda())",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "train_init.py": {
        "torch": {
            "DataLoader_37": {
                "variable": {
                    "value": "trainset_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CamLocDataset('./dataset/' + opt.scene + '/train')",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_43": {
                "variable": {
                    "value": "mean",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_66": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.learningrate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_104": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction - gt_coords",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_112": {
                "variable": {
                    "value": "loss_sqrt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "opt.softclamp * loss_sqrt",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_126": {
                "obj": {
                    "value": "network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.network",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "train_repro.py": {
        "torch": {
            "DataLoader_40": {
                "variable": {
                    "value": "trainset_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CamLocDataset('./dataset/' + opt.scene + '/train')",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_52": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.learningrate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_61": {
                "variable": {
                    "value": "prediction_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, math.ceil(5000 / network.OUTPUT_SUBSAMPLE), math.ceil(5000 / network.OUTPUT_SUBSAMPLE))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_45": {
                "*size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_46": {
                "f": {
                    "value": "opt.network_in",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_95": {
                "variable": {
                    "value": "cam_mat",
                    "type": "Variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_103": {
                "variable": {
                    "value": "ones",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(prediction.size(0), 1, prediction.size(2), prediction.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_105": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(prediction, ones)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mm_112": {
                "variable": {
                    "value": "eye",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_pose",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gt_pose[0].inverse()[0:3, :]",
                            "Subscript"
                        ],
                        [
                            "gt_pose.cuda()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "prediction",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((prediction, ones), 1)",
                            "Call"
                        ],
                        [
                            "prediction[0].view(4, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_115": {
                "variable": {
                    "value": "px",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cam_mat",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.eye(3)",
                            "Call"
                        ],
                        [
                            "cam_mat.cuda()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "eye",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.mm(gt_pose, prediction)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_126": {
                "variable": {
                    "value": "loss_sqrt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "opt.softclamp * loss_sqrt",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_140": {
                "obj": {
                    "value": "network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.network_out",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "util.py": {
        "torch": {
            "ZeroPad2d_9": {
                "variable": {
                    "value": "pad",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "(padX, -padX, padY, -padY)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    }
}