{
    "corpus.py": {
        "torch": {}
    },
    "main.py": {
        "torch": {
            "CrossEntropyLoss_58": {
                "variable": {
                    "value": "criterion",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "SGD_132": {
                "variable": {
                    "value": "opt",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "possible_values": [
                        [
                            "args.lr",
                            "Attribute"
                        ],
                        [
                            "0.001",
                            "Constant"
                        ],
                        [
                            "0.001",
                            "Constant"
                        ],
                        [
                            "lr / 4.0",
                            "BinOp"
                        ]
                    ]
                }
            },
            "manual_seed_27": {
                "seed": {
                    "value": "1111",
                    "possible_values": []
                }
            },
            "load_55": {
                "variable": {
                    "value": "model",
                    "possible_values": []
                },
                "f": {
                    "value": "args.checkpoint",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "possible_values": []
                }
            },
            "Adam_134": {
                "variable": {
                    "value": "opt",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.99)",
                    "possible_values": []
                }
            },
            "SGD_137": {
                "variable": {
                    "value": "opt",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "possible_values": [
                        [
                            "args.lr",
                            "Attribute"
                        ],
                        [
                            "0.001",
                            "Constant"
                        ],
                        [
                            "0.001",
                            "Constant"
                        ],
                        [
                            "lr / 4.0",
                            "BinOp"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.8",
                    "possible_values": []
                }
            },
            "RMSprop_139": {
                "variable": {
                    "value": "opt",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "possible_values": []
                },
                "alpha": {
                    "value": "0.9",
                    "possible_values": []
                }
            },
            "load_170": {
                "variable": {
                    "value": "model",
                    "possible_values": []
                },
                "f": {
                    "value": "f",
                    "possible_values": []
                }
            },
            "no_grad_79": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "clip_grad_norm__114": {
                "parameters": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "args.clip",
                    "possible_values": []
                }
            },
            "save_155": {
                "obj": {
                    "value": "model",
                    "possible_values": [
                        [
                            "model.RNNModel(ntokens, args.emsize, args.nhid, args.nlayers, args.dropout)",
                            "Call"
                        ],
                        [
                            "torch.load(args.checkpoint, map_location=lambda storage, loc: storage)",
                            "Call"
                        ],
                        [
                            "torch.load(f)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "f",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "RNNModel_4": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "Dropout_8": {
                    "variable": {
                        "value": "self.drop",
                        "possible_values": []
                    },
                    "p": {
                        "value": "dropout",
                        "possible_values": [
                            [
                                "0.5",
                                "MethodArgument"
                            ]
                        ]
                    }
                },
                "Embedding_9": {
                    "variable": {
                        "value": "self.encoder",
                        "possible_values": []
                    },
                    "num_embeddings": {
                        "value": "ntoken",
                        "possible_values": []
                    },
                    "embedding_dim": {
                        "value": "ninp",
                        "possible_values": []
                    }
                },
                "LSTM_10": {
                    "variable": {
                        "value": "self.rnn",
                        "possible_values": []
                    },
                    "*args": {
                        "value": "ninp",
                        "possible_values": []
                    },
                    "dropout": {
                        "value": "dropout",
                        "possible_values": [
                            [
                                "0.5",
                                "MethodArgument"
                            ]
                        ]
                    }
                },
                "Linear_11": {
                    "variable": {
                        "value": "self.decoder",
                        "possible_values": []
                    },
                    "in_features": {
                        "value": "nhid",
                        "possible_values": []
                    },
                    "out_features": {
                        "value": "ntoken",
                        "possible_values": []
                    }
                },
                "self.nhid": {
                    "value": "nhid",
                    "possible_values": []
                },
                "self.nlayers": {
                    "value": "nlayers",
                    "possible_values": []
                }
            }
        }
    }
}