{
    "optbinning/binning/base.py": {
        "Base_15": {},
        "BaseOptimalBinning_23": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/binning.py": {
        "OptimalBinning_245": {}
    },
    "optbinning/binning/binning_process.py": {
        "BaseBinningProcess_315": {},
        "BinningProcess_433": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/binning_statistics.py": {
        "BinningTable_399": {},
        "MulticlassBinningTable_1024": {},
        "ContinuousBinningTable_1391": {}
    },
    "optbinning/binning/continuous_binning.py": {
        "ContinuousOptimalBinning_178": {}
    },
    "optbinning/binning/distributed/binning_process_sketch.py": {
        "BinningProcessSketch_123": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/distributed/binning_sketch.py": {
        "OptimalBinningSketch_218": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/mdlp.py": {
        "MDLP_34": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/metrics.py": {},
    "optbinning/binning/multiclass_binning.py": {
        "MulticlassOptimalBinning_179": {}
    },
    "optbinning/binning/multidimensional/binning_2d.py": {
        "OptimalBinning2D_210": {},
        "DecisionTreeClassifier_645": {
            "variable": {
                "value": "clf",
                "possible_values": []
            },
            "min_samples_leaf": {
                "value": "min_prebin_size",
                "possible_values": []
            },
            "max_leaf_nodes": {
                "value": "clf_nodes",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/multidimensional/continuous_binning_2d.py": {
        "ContinuousOptimalBinning2D_164": {},
        "DecisionTreeRegressor_571": {
            "variable": {
                "value": "clf",
                "possible_values": []
            },
            "min_samples_leaf": {
                "value": "min_prebin_size",
                "possible_values": []
            },
            "max_leaf_nodes": {
                "value": "clf_nodes",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/multidimensional/preprocessing_2d.py": {},
    "optbinning/binning/multidimensional/transformations_2d.py": {},
    "optbinning/binning/outlier.py": {
        "OutlierDetector_16": {},
        "RangeDetector_67": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        },
        "ModifiedZScoreDetector_128": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/piecewise/base.py": {
        "BasePWBinning_207": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/piecewise/binning.py": {
        "OptimalPWBinning_24": {},
        "LogisticRegression_347": {
            "variable": {
                "value": "self.estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/piecewise/metrics.py": {},
    "optbinning/binning/piecewise/transformations.py": {},
    "optbinning/binning/prebinning.py": {
        "PreBinning_18": {},
        "KBinsDiscretizer_99": {
            "variable": {
                "value": "est",
                "possible_values": []
            }
        },
        "DecisionTreeClassifier_112": {
            "variable": {
                "value": "est",
                "possible_values": []
            }
        },
        "DecisionTreeRegressor_115": {
            "variable": {
                "value": "est",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/preprocessing.py": {
        "LabelEncoder_180": {
            "variable": {
                "value": "le",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "optbinning/binning/transformations.py": {},
    "optbinning/binning/uncertainty/binning_scenarios.py": {
        "SBOptimalBinning_174": {}
    },
    "optbinning/information.py": {},
    "optbinning/metrics/classification.py": {},
    "optbinning/metrics/regression.py": {},
    "optbinning/scorecard/counterfactual/base.py": {
        "BaseCounterfactual_18": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/scorecard/monitoring.py": {
        "ScorecardMonitoring_166": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "optbinning/scorecard/plots.py": {},
    "optbinning/scorecard/scorecard.py": {
        "Scorecard_162": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "tests/test_binning.py": {},
    "tests/test_binning_2d.py": {},
    "tests/test_binning_process.py": {},
    "tests/test_binning_process_sketch.py": {},
    "tests/test_binning_scenarios.py": {},
    "tests/test_binning_sketch.py": {},
    "tests/test_continuous_binning.py": {},
    "tests/test_continuous_binning_2d.py": {},
    "tests/test_counterfactual.py": {
        "LogisticRegression_54": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_32": {
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_43": {
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "tests/test_mdlp.py": {},
    "tests/test_multiclass_binning.py": {},
    "tests/test_scorecard.py": {
        "LogisticRegression_31": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_106": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_142": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_157": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_180": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_201": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_225": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_249": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_273": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_297": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_322": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "RandomForestClassifier_348": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_363": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_401": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LogisticRegression_426": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_89": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "tests/test_scorecard_monitoring.py": {
        "LogisticRegression_44": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "LinearRegression_46": {
            "variable": {
                "value": "estimator",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    }
}