{
    "loader.py": {
        "torch": {
            "zeros_132": {
                "variable": {
                    "value": "target_im",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(mask.shape[0], mask.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_143": {
                "variable": {
                    "value": "target_im",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(3, mask.shape[0], mask.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_156": {
                "variable": {
                    "value": "target_im",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(3, mask.shape[0], mask.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_177": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(mask, dtype=np.uint8)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "octave_unet.py": {
        "torch": {
            "Conv2d_30": {
                "variable": {
                    "value": "self.htoh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chn - int(self.alpha_in * in_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chn - int(self.alpha_out * out_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ConvTranspose2d_100": {
                "variable": {
                    "value": "self.htoh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_chn - int(self.alpha_in * in_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chn - int(self.alpha_out * out_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_158": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_chn - int(alphas[1] * out_chn)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_161": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_265": {
                "variable": {
                    "value": "high",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x[0], encoder_feat[0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleDict_289": {
                "variable": {
                    "value": "self.blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_336": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_55": {
                "variable": {
                    "value": "ltoh",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ltoh(low)",
                    "type": "Call",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "str",
                    "possible_values": []
                }
            },
            "interpolate_124": {
                "variable": {
                    "value": "ltoh",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ltoh(low)",
                    "type": "Call",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPool2d_206": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_236": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cat_272": {
                "variable": {
                    "value": "low",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x[1], encoder_feat[1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "in_chn - int(self.alpha_in * in_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "int(self.alpha_out * out_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_36": {
                "in_channels": {
                    "value": "int(self.alpha_in * in_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "int(self.alpha_out * out_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_40": {
                "in_channels": {
                    "value": "int(self.alpha_in * in_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chn - int(self.alpha_out * out_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ConvTranspose2d_103": {
                "in_channels": {
                    "value": "in_chn - int(self.alpha_in * in_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "int(self.alpha_out * out_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_106": {
                "in_channels": {
                    "value": "int(self.alpha_in * in_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "int(self.alpha_out * out_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_110": {
                "in_channels": {
                    "value": "int(self.alpha_in * in_chn)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_chn - int(self.alpha_out * out_chn)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_160": {
                "num_features": {
                    "value": "int(alphas[1] * out_chn)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_259": {
                "input": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "avg_pool2d_51": {
                "input": {
                    "value": "high",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.relu(self.bn1(high))",
                            "Call"
                        ],
                        [
                            "torch.cat([x[0], encoder_feat[0]], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_120": {
                "input": {
                    "value": "high",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.relu(self.bn1(high))",
                            "Call"
                        ],
                        [
                            "torch.cat([x[0], encoder_feat[0]], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "unet.py": {
        "torch": {
            "Sequential_17": {
                "variable": {
                    "value": "self.op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(layers_chn[0], layers_chn[1], kernel_size=kernel, padding=padding)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_46": {
                "variable": {
                    "value": "self.conv_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(input_chn, output_chn, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_55": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.up(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_58": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, feat_encoder]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleDict_71": {
                "variable": {
                    "value": "self.blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_90": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_26": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_41": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_43": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_chn",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_chn",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "layers_chn[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "layers_chn[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_18": {
                "num_features": {
                    "value": "layers_chn[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "layers_chn[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "layers_chn[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_22": {
                "num_features": {
                    "value": "layers_chn[3]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "in_channels": {
                    "value": "input_chn",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_chn",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "num_features": {
                    "value": "output_chn",
                    "type": "Variable",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "output_chn",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_chn",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_51": {
                "num_features": {
                    "value": "output_chn",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_52": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "load_167": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path + 'epoch_' + str(epoch_number) + '.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_56": {
                "variable": {
                    "value": "tp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "tuple((x_i * mask[:, 0] for x_i in torch.unbind(tp, dim=1)))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_57": {
                "variable": {
                    "value": "fp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "tuple((x_i * mask[:, 0] for x_i in torch.unbind(fp, dim=1)))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_58": {
                "variable": {
                    "value": "fn",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "tuple((x_i * mask[:, 0] for x_i in torch.unbind(fn, dim=1)))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_162": {
                "obj": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "{'model': model, 'state_dict': model.state_dict(), 'optimizer': optimizer.state_dict(), 'loss': loss}",
                            "Dict"
                        ],
                        [
                            "torch.load(path + 'epoch_' + str(epoch_number) + '.pth')",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "path + ('epoch_' + str(suffix) + '.pth')",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_46": {
                "variable": {
                    "value": "y_onehot",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "shp_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "net_output.shape",
                            "Attribute"
                        ],
                        [
                            "x.shape",
                            "Attribute"
                        ],
                        [
                            "x.shape",
                            "Attribute"
                        ]
                    ]
                }
            },
            "unbind_56": {
                "input": {
                    "value": "tp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "net_output * y_onehot",
                            "BinOp"
                        ],
                        [
                            "torch.stack(tuple((x_i * mask[:, 0] for x_i in torch.unbind(tp, dim=1))), dim=1)",
                            "Call"
                        ],
                        [
                            "tp ** 2",
                            "BinOp"
                        ],
                        [
                            "sum_tensor(tp, axes, keepdim=False)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unbind_57": {
                "input": {
                    "value": "fp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "net_output * (1 - y_onehot)",
                            "BinOp"
                        ],
                        [
                            "torch.stack(tuple((x_i * mask[:, 0] for x_i in torch.unbind(fp, dim=1))), dim=1)",
                            "Call"
                        ],
                        [
                            "fp ** 2",
                            "BinOp"
                        ],
                        [
                            "sum_tensor(fp, axes, keepdim=False)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unbind_58": {
                "input": {
                    "value": "fn",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(1 - net_output) * y_onehot",
                            "BinOp"
                        ],
                        [
                            "torch.stack(tuple((x_i * mask[:, 0] for x_i in torch.unbind(fn, dim=1))), dim=1)",
                            "Call"
                        ],
                        [
                            "fn ** 2",
                            "BinOp"
                        ],
                        [
                            "sum_tensor(fn, axes, keepdim=False)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}