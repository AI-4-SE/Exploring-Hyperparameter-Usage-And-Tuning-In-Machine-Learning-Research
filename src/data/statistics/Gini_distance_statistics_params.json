{
    "demo.py": {
        "sklearn": {
            "load_iris_3": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "giniStatistics.py": {
        "sklearn": {
            "LabelEncoder_51": {
                "variable": {
                    "value": "le",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "scale_57": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X[sample]",
                            "Subscript"
                        ],
                        [
                            "X[sample]",
                            "Subscript"
                        ],
                        [
                            "preprocessing.scale(X)",
                            "Call"
                        ],
                        [
                            "np.nan_to_num(X)",
                            "Call"
                        ],
                        [
                            "X[keep, :]",
                            "Subscript"
                        ],
                        [
                            "X.reshape((-1, 1))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}